{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var container;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n            container = diagram.selectedItems.wrapper.children[0];\n        }\n        else {\n            object = obj;\n            container = diagram.selectedItems.wrapper;\n        }\n        diagram.selectedObject.actualObject = object;\n        if (checkParentAsContainer(diagram, object) ||\n            ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.connectors.length === 0)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className) {\n    var elements = document.getElementsByClassName(className);\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    if (node instanceof Node) {\n        sentNode = node;\n        var blazor = 'Blazor';\n        if (window[blazor]) {\n            sentNode = {};\n            var id = 'id';\n            var height = 'height';\n            var width = 'width';\n            var offsetX = 'offsetX';\n            var offsetY = 'offsetY';\n            var text = 'content';\n            var annotations = 'annotations';\n            var addInfo = 'addInfo';\n            content = element.diagramId + 'content_diagram';\n            sentNode[id] = node[id];\n            sentNode[height] = node[height];\n            sentNode[width] = node[width];\n            sentNode[offsetX] = node[offsetX];\n            sentNode[offsetY] = node[offsetY];\n            sentNode[addInfo] = node[addInfo];\n            if (node.annotations && node.annotations.length > 0) {\n                sentNode[annotations] = [];\n                for (var i = 0; i < node.annotations.length; i++) {\n                    sentNode[annotations][i] = { content: node.annotations[i][text] };\n                }\n            }\n        }\n    }\n    else {\n        sentNode = node;\n        content = element.diagramId + 'template_diagram';\n    }\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        options.textWrapping === 'Wrap') {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (actualObject.shape.shape === 'Activity' &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (actualObject.shape.shape === 'Gateway' ||\n                        actualObject.shape.shape === 'Event') {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (obj.content === '' && obj.source === '') {\n                var data = obj.pathData ? obj.pathData : obj.content;\n                var option = this.getBaseAttributes(wrapper);\n                option.id = obj.name + '_userhandle';\n                option.fill = obj.backgroundColor;\n                option.stroke = obj.borderColor;\n                option.strokeWidth = obj.borderWidth;\n                option.centerX = newPoint.x;\n                option.centerY = newPoint.y;\n                option.radius = obj.size * 0.5;\n                option.class = 'e-diagram-userhandle-circle';\n                option.angle = 0;\n                option.visible = obj.visible;\n                option.opacity = 1;\n                this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                var pathPading = 5;\n                var arrayCollection = [];\n                arrayCollection = processPathData(data);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                var pathSize = measurePath(data);\n                //requiredSize/contentSize\n                var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                pathSize = measurePath(newData);\n                var options = {\n                    x: newPoint.x - pathSize.width / 2,\n                    y: newPoint.y - pathSize.height / 2,\n                    angle: 0, id: '',\n                    class: 'e-diagram-userhandle-path',\n                    fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                    width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                };\n                this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n            }\n            else if (obj.content !== '') {\n                var handleContent = void 0;\n                handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                handleContent.content = obj.content;\n                handleContent.offsetX = newPoint.x;\n                handleContent.offsetY = newPoint.y;\n                handleContent.height = obj.size;\n                handleContent.width = obj.size;\n                handleContent.id = obj.name + '_shape';\n                handleContent.horizontalAlignment = 'Center';\n                handleContent.verticalAlignment = 'Center';\n                handleContent.visible = obj.visible;\n                handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                handleContent.relativeMode = 'Object';\n                handleContent.description = obj.name || 'User handle';\n                handleContent.measure(new Size(obj.size, obj.size));\n                handleContent.arrange(handleContent.desiredSize);\n                this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n            }\n            else {\n                var element_1 = new ImageElement();\n                var options = this.getBaseAttributes(element_1, transform);\n                options.width = obj.size;\n                options.height = obj.size;\n                options.x = newPoint.x - (obj.size / 2);\n                options.y = newPoint.y - (obj.size / 2);\n                options.sourceWidth = obj.size;\n                options.sourceHeight = obj.size;\n                options.alignment = element_1.imageAlign;\n                options.source = obj.source;\n                options.scale = element_1.imageScale;\n                options.description = obj.name || 'User handle';\n                options.id = obj.name + '_';\n                this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if (element.style.textWrapping === 'Wrap' && this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.checkPropertyValue();\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.checkPropertyValue();\n        this.commandHandler.removeSnap();\n        var object;\n        this.commandHandler.updateSelectedNodeProperties(args.source);\n        this.commandHandler.updateSelector();\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        obj.offsetX = helperObject.offsetX;\n                        obj.offsetY = helperObject.offsetY;\n                        if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                            obj.width = helperObject.width;\n                            obj.height = helperObject.height;\n                        }\n                        obj.rotateAngle = helperObject.rotateAngle;\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, oldValues, { rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                if (actualObject instanceof Node) {\n                    actualObject.offsetX += offsetX;\n                    actualObject.offsetY += offsetY;\n                    actualObject.width += width;\n                    actualObject.height += height;\n                    actualObject.rotateAngle += rotateAngle;\n                    this.diagram.nodePropertyChange(actualObject, {}, {\n                        offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                        width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                    });\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        node.offsetX += offsetX;\n                        node.offsetY += offsetY;\n                        node.width += width;\n                        node.height += height;\n                        node.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(node, {}, {\n                            offsetX: node.offsetX, offsetY: node.offsetY,\n                            width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                        });\n                        objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.nodes[index],\n                                newValue: newProp.nodes[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                            var args = {\n                                element: actualObject, cause: this.diagramActions,\n                                oldValue: oldProp.connectors[index],\n                                newValue: newProp.connectors[index]\n                            };\n                            this.triggerEvent(DiagramEvent.propertyChange, args);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                            if (isPropertyChanged) {\n                                isPropertyChanged = false;\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        if (isPropertyChanged) {\n            var args = { element: this, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n        if (!refereshColelction) {\n            for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                var temp = _l[_k];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n        this.resetTemplate();\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        if (this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        if (isBlazor()) {\n            this.tool = DiagramTools.ZoomPan;\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate(this.element.id + 'content_diagram', 'Content', this.nodes[i].shape);\n            }\n            else if (annotation && annotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', annotation);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.template instanceof HTMLElement) {\n                updateBlazorTemplate(this.element.id + 'template_diagram', 'Template', pathAnnotation);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'content', 'Content');\n            }\n            else if (templateAnnotation && templateAnnotation.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.template instanceof HTMLElement) {\n                resetBlazorTemplate(this.element.id + 'template', 'Template');\n            }\n        }\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            this.historyManager.startGroupAction();\n            if (!this.nameTable[node.id]) {\n                var getDefaults = getFunction(this.getNodeDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(node, this);\n                    node.offsetX = (defaults && defaults.width) || node.offsetX / 2;\n                    node.offsetY = (defaults && defaults.height) || node.offsetY / 2;\n                }\n                node.offsetX = (node.width || 50) / 2;\n                node.offsetY = (node.height || 50) / 2;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                var laneId = swimLane + lane + i;\n                if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                    var laneNode = this.nameTable[laneId].wrapper.bounds;\n                    var focusPoint = {\n                        x: laneNode.x + (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                        y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                    };\n                    if (swimlaneNode.shape.orientation === 'Horizontal') {\n                        focusPoint.y = laneNode.y;\n                    }\n                    else {\n                        focusPoint.x = laneNode.x;\n                        var laneHeaderId = this.nameTable[laneId].parentId +\n                            swimlaneNode.shape.lanes[0].id + '_0_header';\n                        focusPoint.y = laneNode.y +\n                            (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                node.margin.top + (node.wrapper.bounds.height / 2));\n                    }\n                    if (laneNode.containsPoint(focusPoint) ||\n                        (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                        addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                        updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                        break;\n                    }\n                }\n            }\n            this.historyManager.endGroupAction();\n            this.protectPropertyChange(false);\n        }\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param obj Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            var nodes = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n            if (nodes.length > 0) {\n                this.complexHierarchicalTreeModule.doLayout(nodes, this.nameTable, this.layout, viewPort);\n            }\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connector);\n                }\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== '' && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== '' && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: this.activeLabel.text, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text || text !== this.activeLabel.text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && (element.textContent !== text || text !== this.activeLabel.text)) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_2 = 0; i_2 < objects_2.length; i_2++) {\n                            var object = objects_2[i_2];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_2], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldObject, newValue: node };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ?\n                        this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = { element: element, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n                contextItems.contextMenu.showItems([item.id], true);\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var right = diagram.spatialSearch['pageRight'] + this.size;\n        var bottom = diagram.spatialSearch['pageBottom'] + this.size;\n        var left = diagram.spatialSearch['pageLeft'];\n        var top = diagram.spatialSearch['pageTop'];\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        this.updateNodesInVirtualRegion(diagram.nodes);\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.outerBounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (portDirection === 'Top') {\n                endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n            }\n            else if (portDirection === 'Left') {\n                endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n            }\n            else if (portDirection === 'Right') {\n                endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n            }\n            else {\n                endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.offsetX, y: this.startNode.offsetY } :\n                    { x: this.targetNode.offsetX, y: this.targetNode.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.outerBounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            if (!sourcePortID && this.startNode) {\n                for (var i = sourceLeft.gridX; i <= sourceRight.gridX; i++) {\n                    grid = this.gridCollection[i][sourceLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n                for (var i = sourceTop.gridY; i <= sourceBottom.gridY; i++) {\n                    grid = this.gridCollection[sourceTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.sourceGridCollection.indexOf(grid) === -1) {\n                        this.sourceGridCollection.push(grid);\n                    }\n                }\n            }\n            else {\n                this.sourceGridCollection.push(this.startGrid);\n            }\n            if (!targetPortID && this.targetNode) {\n                for (var i = targetLeft.gridX; i <= targetRight.gridX; i++) {\n                    grid = this.gridCollection[i][targetLeft.gridY];\n                    if (grid.nodeId.length === 1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                for (var i = targetTop.gridY; i <= targetBottom.gridY; i++) {\n                    grid = this.gridCollection[targetTop.gridX][i];\n                    if (grid.nodeId.length === 1 && this.targetGridCollection.indexOf(grid) === -1) {\n                        this.targetGridCollection.push(grid);\n                    }\n                }\n                if (this.targetGridCollection.indexOf(this.targetGrid) === -1) {\n                    if (this.targetGrid.nodeId.length > 1 && this.targetGridCollection.length === 1) {\n                        this.targetGrid = this.targetGridCollection[0];\n                    }\n                }\n            }\n            else {\n                this.targetGridCollection.push(this.targetGrid);\n            }\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours);\n            this.neigbour(startGrid, 'right', neigbours);\n            this.neigbour(startGrid, 'bottom', neigbours);\n            this.neigbour(startGrid, 'left', neigbours);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && this.sourceGridCollection.indexOf(nearGrid) === -1) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.inEdges.length + node.outEdges.length > 0) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isCollapsed = false;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            this.isExpand = true;\n                            this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                            if (index === 0) {\n                                this.isCollapsed = true;\n                            }\n                            else {\n                                this.isCollapsed = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh && this.isCollapsed) {\n            this.refresh();\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette');\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","nodes","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","isLane","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","currentSymbol","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","phases","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevChild","laneHeader","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","property","Array","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","sentNode","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","template","templatePosition","getAvailableSize","Port","Complex","Connect","defaultValue","isArray","Hyperlink","Annotation","parentObj","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","getWrapper","All","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","pathseqData","pathElement","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","annotationcontent","initIconContainer","iconContent","iconContentBounds","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","innerHtmlTextElement","innerHTML","svgLabelAlign","setText","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelectedNodeProperties","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","content_1","openOn","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","selectedNodes","selectedConnectors","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","_k","_l","refreshCanvasDiagramLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","Render","updateTemplate","isBlazor","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","callback","Ajax","onSuccess","dataManager","dataSource","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","addNodeToLane","getDefaults","defaults","laneId","hideTooltip","propertyChangeValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","moveNode","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","isUpdate","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","sourceId","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","startGridNode","getIntermediatePoints","updateConnectorSegments","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","neigbours","findNearestNeigbours","findIntermediatePoints","octile","manhattan","sorting","done","tmp","SQRT2","dx","isWalkable","nearGrid","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","nodesCollection","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isCollapsed","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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te,EAAQyc,UAAW,sBAAmB,IACzCU,IACImB,cACDte,EAAQyc,UAAW,2BAAwB,IAC9CU,IACImB,cACDte,EAAQyc,UAAW,sBAAmB,IACzCU,IACImB,cACDte,EAAQyc,UAAW,qBAAkB,IACxCU,IACImB,cACDte,EAAQyc,UAAW,wBAAqB,IAC3CU,IACImB,cACDte,EAAQyc,UAAW,oBAAiB,IACvCU,IACImB,cACDte,EAAQyc,UAAW,sBAAmB,IACzCU,IACImB,cACDte,EAAQyc,UAAW,sBAAmB,IACzCU,IACIyH,aAAYhlC,KACbogB,EAAQyc,UAAW,oBAAiB,IACvCU,IACIyH,aAAY0lB,KACbtqC,EAAQyc,UAAW,qBAAkB,IACxCU,IACIyH,aAAYsmB,KACblrC,EAAQyc,UAAW,aAAU,IAChCU,IACIyH,aAAYgN,KACb5xB,EAAQyc,UAAW,qBAAkB,IACxCU,IACI++D,WACDl8E,EAAQyc,UAAW,iBAAc,IACpCU,IACI++D,WACDl8E,EAAQyc,UAAW,gBAAa,IACnCU,IACI++D,WACDl8E,EAAQyc,UAAW,gBAAa,IACnCU,IACI++D,WACDl8E,EAAQyc,UAAW,eAAY,IAClCU,IACI++D,WACDl8E,EAAQyc,UAAW,YAAS,IAC/BU,IACI++D,WACDl8E,EAAQyc,UAAW,oBAAiB,IACvCU,IACI++D,WACDl8E,EAAQyc,UAAW,kBAAe,IACrCU,IACI++D,WACDl8E,EAAQyc,UAAW,eAAY,IAClCU,IACI++D,WACDl8E,EAAQyc,UAAW,mBAAgB,IACtCU,IACI++D,WACDl8E,EAAQyc,UAAW,sBAAmB,IACzCU,IACI++D,WACDl8E,EAAQyc,UAAW,iBAAc,IACpCU,IACI++D,WACDl8E,EAAQyc,UAAW,uBAAoB,IAC1CU,IACI++D,WACDl8E,EAAQyc,UAAW,wBAAqB,IAC3CU,IACI++D,WACDl8E,EAAQyc,UAAW,wBAAqB,IAC3CU,IACI++D,WACDl8E,EAAQyc,UAAW,qBAAkB,IACxCU,IACI++D,WACDl8E,EAAQyc,UAAW,qBAAkB,IACxCU,IACI++D,WACDl8E,EAAQyc,UAAW,wBAAqB,IA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KxS,QAASq+F,EAAY7rF,KAAKqzD,WACnDk5B,eAAanuE,OAAOpe,KAAKxS,QAASy+F,EAAWjsF,KAAK2zD,WAClD44B,eAAanuE,OAAOpe,KAAKxS,QAASu+F,EAAW/rF,KAAK4zD,SAClD24B,eAAanuE,OAAOpe,KAAKxS,QALV,QAK6BwS,KAAK8tI,OACjDvhD,eAAanuE,OAAOhc,SALD,UAKyBpC,KAAKunE,UAErD/jC,IACImB,WAAS,MACVykG,EAActmG,UAAW,gBAAa,IACzCU,IACImB,WAAS,SACVykG,EAActmG,UAAW,YAAS,IACrCU,IACImB,WAAS,SACVykG,EAActmG,UAAW,aAAU,IACtCU,IACIqC,gBAAeqjG,KAChBE,EAActmG,UAAW,eAAY,IACxCU,IACImB,cACDykG,EAActmG,UAAW,oBAAiB,IAC7CU,IACImB,cACDykG,EAActmG,UAAW,oBAAiB,IAC7CU,IACImB,cACDykG,EAActmG,UAAW,wBAAqB,IACjDU,IACImB,cACDykG,EAActmG,UAAW,kBAAe,IAC3CU,IACImB,cACDykG,EAActmG,UAAW,mBAAgB,IAC5CU,IACIyH,WAAUp7C,KAAM,GAAIC,MAAO,GAAIE,IAAK,GAAID,OAAQ,IAAM41C,KACvDyjG,EAActmG,UAAW,mBAAgB,IAC5CU,IACImB,YAAS,IACVykG,EAActmG,UAAW,gBAAa,IACzCU,IACIyH,aAAYk+F,KACbC,EAActmG,UAAW,oBAAiB,IAC7CU,IACImB,YAAS,IACVykG,EAActmG,UAAW,mBAAgB,IAC5CU,IACImB,YAAS,IACVykG,EAActmG,UAAW,sBAAmB,IAC/CU,IACImB,WAAS,aACVykG,EAActmG,UAAW,iBAAc,IAC1CU,IACI++D,WACD6mC,EAActmG,UAAW,6BAA0B,IACtDU,IACImB,cACDykG,EAActmG,UAAW,sBAAmB,IAC/CU,IACImB,cACDykG,EAActmG,UAAW,2BAAwB,IAC7CsmG,GACTlyF,aC32CEjU,GAAwC,WACxC,GAAIC,GAAgB,SAAU/gB,EAAGzmB,GAI7B,OAHAwnC,EAAgBj0B,OAAOk0B,iBAChBC,uBAA2Br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"}