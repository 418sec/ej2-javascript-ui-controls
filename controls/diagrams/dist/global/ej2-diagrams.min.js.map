{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/tooltip.js","../../src/diagram/objects/connector.js","../../src/diagram/ruler/ruler.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/core/appearance.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/objects/preview.js","../../src/ruler/ruler.js","../../src/diagram/interaction/selector.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/icon.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/diagram/layoutinfo.js","../../src/diagram/objects/node.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-mapping.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/utility/diff-map.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram/custom-cursor.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/interaction/line-routing.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js","../../src/global.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param {IconShapeModel} icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                if (point) {\n                    checkPreviousSegment(point, element, source);\n                    seg_1.points = [];\n                    if (point.length >= 2) {\n                        for (j = 0; j < point.length; j++) {\n                            seg_1.points.push(point[j]);\n                        }\n                    }\n                    else {\n                        removeSegment = i;\n                    }\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property('Auto')\n    ], DiagramTooltip.prototype, \"openOn\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param {Diagram} diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param {Diagram} diagram\n * @param {NodeModel | ConnectorModel} node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { findDistance, findPath, updatePathElement, setConnectorDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getTemplateContent } from '../utility/dom-util';\nimport { SymbolSize } from './preview';\nvar getConnectorType = function (obj) {\n    if (isBlazor()) {\n        return DiagramConnectorShape;\n    }\n    else {\n        if (obj) {\n            switch (obj.type) {\n                case 'Bpmn':\n                    return BpmnFlow;\n                case 'UmlActivity':\n                    return ActivityFlow;\n                case 'UmlClassifier':\n                    return RelationShip;\n                default:\n                    return ConnectorShape;\n            }\n        }\n        return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramConnectorSegment;\n        }\n        else {\n            switch (obj.type) {\n                case 'Straight':\n                    return StraightSegment;\n                case 'Bezier':\n                    return BezierSegment;\n                case 'Orthogonal':\n                    return OrthogonalSegment;\n                default:\n                    return StraightSegment;\n            }\n        }\n    }\n    return undefined;\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], ConnectorSegment.prototype, \"allowDrag\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar DiagramConnectorSegment = /** @class */ (function (_super) {\n    __extends(DiagramConnectorSegment, _super);\n    function DiagramConnectorSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    DiagramConnectorSegment.prototype.getClassName = function () {\n        return 'DiagramConnectorSegment';\n    };\n    __decorate([\n        Property('Straight')\n    ], DiagramConnectorSegment.prototype, \"type\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramConnectorSegment.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], DiagramConnectorSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], DiagramConnectorSegment.prototype, \"vector2\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramConnectorSegment.prototype, \"direction\", void 0);\n    return DiagramConnectorSegment;\n}(ChildProperty));\nexport { DiagramConnectorSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('OneToOne')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connector shape for blazor\n */\nvar DiagramConnectorShape = /** @class */ (function (_super) {\n    __extends(DiagramConnectorShape, _super);\n    function DiagramConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], DiagramConnectorShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Directional')\n    ], DiagramConnectorShape.prototype, \"associationType\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], DiagramConnectorShape.prototype, \"relationship\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], DiagramConnectorShape.prototype, \"multiplicity\", void 0);\n    __decorate([\n        Property('Sequence')\n    ], DiagramConnectorShape.prototype, \"bpmnFlow\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"message\", void 0);\n    __decorate([\n        Property('Normal')\n    ], DiagramConnectorShape.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], DiagramConnectorShape.prototype, \"association\", void 0);\n    __decorate([\n        Property('Object')\n    ], DiagramConnectorShape.prototype, \"umlActivityFlow\", void 0);\n    __decorate([\n        Property(30)\n    ], DiagramConnectorShape.prototype, \"exceptionFlowHeight\", void 0);\n    return DiagramConnectorShape;\n}(ChildProperty));\nexport { DiagramConnectorShape };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (defaultValue && defaultValue.shape && defaultValue.shape.type !== 'None') {\n            setConnectorDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                var flow = (isBlazor() ? this.shape.bpmnFlow : this.shape.flow);\n                switch (flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                var activityFlow = (isBlazor() ? this.shape.umlActivityFlow :\n                    this.shape.flow);\n                switch (activityFlow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id, diagram.annotationTemplate));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            pathseq = updatePathElement(anglePoints, this);\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            pathseq.id = this.id + this.shape.type;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Arrow';\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return findDistance(pt1, pt2);\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        return findPath(sourcePt, targetPt);\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId, annotationTemplate) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            textele = getTemplateContent(textele, annotation, annotationTemplate);\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        var width = strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement, layoutOrientation) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type, undefined, layoutOrientation);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message' ||\n                    (isBlazor() && connector.shape.bpmnFlow === 'Message')) {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception' || (isBlazor() &&\n                    connector.shape.umlActivityFlow === 'Exception')) {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Connector.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../objects/node';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canEnableRouting(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.LineRouting) {\n        state = connector.constraints & ConnectorConstraints.LineRouting;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritLineRouting) {\n        state = diagram.constraints & DiagramConstraints.LineRouting;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { Diagram } from '../diagram';\nimport { Selector } from '../objects/node';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset, canLaneInterchange } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction, DiagramConstraints, NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        var isProtectedOnChange = 'isProtectedOnChange';\n        var propertyChangeValue = diagram[isProtectedOnChange];\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                if (!(obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                    var undoObj = cloneObject(obj);\n                    diagram.clearSelection();\n                    removeChildrenInLane(diagram, obj);\n                    obj.parentId = '';\n                    var entry = {\n                        type: 'ChildCollectionChanged', category: 'Internal',\n                        undoObject: undoObj, redoObject: cloneObject(obj)\n                    };\n                    diagram.addHistoryEntry(entry);\n                    if (diagram.commandHandler.isContainer) {\n                        diagram.commandHandler.isContainer = false;\n                        diagram.endGroupAction();\n                    }\n                }\n            }\n        }\n        diagram.protectPropertyChange(propertyChangeValue);\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    diagram.enableServerDataBinding(false);\n    var object;\n    var container;\n    var nodes;\n    if ((!isBlazor()) || (isBlazor() && (diagram.diagramActions & DiagramAction.ToolAction))) {\n        if (diagram.selectedObject.helperObject) {\n            nodes = diagram.selectedObject.helperObject;\n        }\n        else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n            if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n                object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n                container = diagram.selectedItems.wrapper.children[0];\n            }\n            else {\n                object = obj;\n                if (isBlazor()) {\n                    if (obj === diagram.selectedItems.nodes[0]) {\n                        container = diagram.selectedItems.wrapper;\n                    }\n                    else {\n                        container = obj.wrapper;\n                    }\n                }\n                else {\n                    container = diagram.selectedItems.wrapper;\n                }\n            }\n            diagram.selectedObject.actualObject = object;\n            if ((!diagram.currentSymbol) && (((object.isLane && canLaneInterchange(object, diagram) &&\n                checkParentAsContainer(diagram, object))\n                || ((!object.isLane) && checkParentAsContainer(diagram, object))) ||\n                ((diagram.constraints & DiagramConstraints.LineRouting) && diagram.selectedItems.nodes.length > 0))) {\n                var node = {\n                    id: 'helper',\n                    rotateAngle: container.rotateAngle,\n                    offsetX: container.offsetX, offsetY: container.offsetY,\n                    minWidth: container.minWidth, minHeight: container.minHeight,\n                    maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                    width: container.actualSize.width,\n                    height: container.actualSize.height,\n                    style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n                };\n                nodes = createHelper(diagram, node);\n                diagram.selectedObject.helperObject = nodes;\n            }\n        }\n    }\n    diagram.enableServerDataBinding(true);\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId && node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo, historyAction) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = diagram.nameTable[parent.parentId];\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas' && !historyAction) {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        else if (swimlane) {\n            var swimLaneBounds = swimlane.wrapper.bounds;\n            var parentBounds = parent.wrapper.bounds;\n            if (swimlane.shape.orientation === 'Horizontal') {\n                node.margin.left -= parentBounds.x - swimLaneBounds.x;\n            }\n            else {\n                var laneHeaderId = parent.parentId + swimlane.shape.lanes[0].id + '_0_header';\n                node.margin.top -= parentBounds.y - swimLaneBounds.y - diagram.nameTable[laneHeaderId].wrapper.bounds.height;\n            }\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        // tslint:disable-next-line:no-any\n                        if (!(node.parentObj instanceof Diagram)) {\n                            // tslint:disable-next-line:no-any\n                            node.parentObj = lanes[i];\n                        }\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node), historyAction: historyAction ? 'AddNodeToLane' : undefined\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    diagram.updateDiagramElementQuad();\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints, DiagramConstraints, DiagramEvent } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\nimport { canSelect } from './constraints-util';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    if (!node.width && node.shape.phases.length === 0) {\n        node.width = 100;\n    }\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    shape.header.id = shape.header.id || randomId();\n    var node = {\n        id: object.id + shape.header.id,\n        annotations: [cloneObject(shape.header.annotation)],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    if (!canSelect(object)) {\n        node.constraints &= ~NodeConstraints.Select;\n    }\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [cloneObject(shape.phases[phaseIndex].header.annotation)],\n        maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    phaseObject.annotations[0].rotateAngle = orientation ? 0 : 270;\n    if (!canSelect(object)) {\n        phaseObject.constraints &= ~NodeConstraints.Select;\n    }\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        if (!canSelect(object)) {\n            canvas.constraints &= ~NodeConstraints.Select;\n        }\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [cloneObject(shape.lanes[laneIndex].header.annotation)],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            laneNode.annotations[0].rotateAngle = orientation ? 270 : 0;\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            if (!canSelect(object)) {\n                laneNode.constraints &= ~NodeConstraints.Select;\n            }\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n        if ((shape.phases.length === 0 && shape.lanes.length === 0)) {\n            cols = createColumn(object.width);\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n            diagram.lineRoutingModule.renderVirtualRegion(diagram, true);\n        }\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            if (diagram.lineRoutingModule && (diagram.constraints & DiagramConstraints.LineRouting)) {\n                diagram.lineRoutingModule.refreshConnectorSegments(diagram, edges, true);\n            }\n            else {\n                diagram.connectorPropertyChange(edges, {}, {\n                    sourceID: edges.sourceID, targetID: edges.targetID\n                });\n            }\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetY > position.y) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetY < position.y) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    grid.updateRowIndex(sourceIndex, targetIndex);\n                }\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (lanes[sourceLaneIndex].canMove) {\n                if (sourceLaneIndex < targetLaneIndex) {\n                    if (position && target.wrapper.offsetX > position.x) {\n                        targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                        targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    }\n                }\n                else {\n                    if (position && target.wrapper.offsetX < position.x) {\n                        targetIndex += 1;\n                        targetLaneIndex += 1;\n                    }\n                }\n                if (sourceIndex !== targetIndex) {\n                    if ((shape.phaseSize === 0 || shape.phases.length === 0) && (targetIndex === 0 || sourceIndex === 0)) {\n                        if (shape.header && shape.hasHeader) {\n                            var changeHeaderIndex = (targetIndex === 0) ? sourceIndex : targetIndex;\n                            grid.rows[0].cells[changeHeaderIndex].children = grid.rows[0].cells[0].children;\n                            grid.rows[0].cells[changeHeaderIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                            grid.rows[0].cells[0].children = [];\n                        }\n                    }\n                    grid.updateColumnIndex(0, sourceIndex, targetIndex);\n                }\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            temp = lanes[sourceLaneIndex];\n            if (temp.canMove) {\n                undoElement = {\n                    target: cloneObject(target), source: cloneObject(obj)\n                };\n                temp = lanes[sourceLaneIndex];\n                lanes.splice(sourceLaneIndex, 1);\n                lanes.splice(targetLaneIndex, 0, temp);\n                redoElement = {\n                    target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n                };\n                entry = {\n                    type: 'LanePositionChanged', redoObject: redoElement,\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    diagram.commandHandler.addHistoryEntry(entry);\n                }\n                ChangeLaneIndex(diagram, swimLane, 0);\n                updateConnectorsProperties(connectors, diagram);\n                updateSwimLaneChildPosition(lanes, diagram);\n                swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n                swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n    diagram.updateDiagramElementQuad();\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var args;\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        args = {\n            element: laneObj, cause: diagram.diagramActions, state: 'Changing', type: 'Addition', cancel: false, laneIndex: laneIndex\n        };\n        diagram.triggerEvent(DiagramEvent.collectionChange, args);\n        if (!args.cancel) {\n            if (orientation_1) {\n                var rowDef = new RowDefinition();\n                rowDef.height = lane.height;\n                grid.addRow(index, rowDef, false);\n                swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n                swimLane.wrapper.height = grid.height = swimLane.height;\n            }\n            else {\n                var colDef = new ColumnDefinition();\n                colDef.width = lane.width;\n                grid.addColumn(laneIndex + 1, colDef, false);\n                if (swimLane.width) {\n                    swimLane.width += lane.width;\n                    swimLane.wrapper.width = grid.width = swimLane.width;\n                }\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    grid.rows[0].cells[0].columnSpan += 1;\n                }\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                laneObj.id += randomId();\n            }\n            if (count !== undefined) {\n                shape.lanes.splice(count, 0, laneObj);\n            }\n            else {\n                shape.lanes.push(laneObj);\n            }\n            args = {\n                element: laneObj, cause: diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n            redoObj = (shape.orientation === 'Horizontal') ?\n                diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n                ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                    diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                entry = {\n                    type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                    redoObject: cloneObject(redoObj), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            var startRowIndex = (shape.orientation === 'Horizontal') ?\n                index : ((shape.header && shape.hasHeader) ? 1 : 0);\n            ChangeLaneIndex(diagram, swimLane, startRowIndex);\n            swimLaneMeasureAndArrange(swimLane);\n            updateHeaderMaxWidth(diagram, swimLane);\n            children = lane.children;\n            if (children && children.length > 0) {\n                for (j = 0; j < children.length; j++) {\n                    child = children[j];\n                    point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                    if (shape.orientation === 'Horizontal') {\n                        cell = grid.rows[index].cells[i];\n                        for (i = 0; i < grid.rows[index].cells.length; i++) {\n                            addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                        }\n                    }\n                    else {\n                        for (k = 0; k < grid.rows.length; k++) {\n                            cell = grid.rows[k].cells[index];\n                            addChildNodeToNewLane(diagram, cell, point, child);\n                        }\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, diagram);\n            diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode, laneIndex) {\n    laneIndex = (laneIndex !== undefined) ? laneIndex : findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane, lanes) {\n    var args;\n    if (swimLane.shape.type === 'SwimLane') {\n        var shape = swimLane.shape;\n        var laneIndex = void 0;\n        if (shape.lanes.length === 1) {\n            diagram.remove(swimLane);\n        }\n        else {\n            var x = swimLane.wrapper.bounds.x;\n            var y = swimLane.wrapper.bounds.y;\n            var row = void 0;\n            var i = void 0;\n            var cell = void 0;\n            var j = void 0;\n            var child = void 0;\n            var grid = swimLane.wrapper.children[0];\n            laneIndex = (lanes) ? (shape.lanes.indexOf(lanes)) : findLaneIndex(swimLane, lane);\n            args = {\n                element: lane, cause: diagram.diagramActions, state: 'Changing', type: 'Removal', cancel: false, laneIndex: laneIndex\n            };\n            diagram.triggerEvent(DiagramEvent.collectionChange, args);\n            if (!args.cancel) {\n                var undoObj = cloneObject(shape.lanes[laneIndex]);\n                removeLaneChildNode(diagram, swimLane, lane, undefined, laneIndex);\n                if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    var entry = {\n                        type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                        redoObject: cloneObject(lane), category: 'Internal'\n                    };\n                    diagram.addHistoryEntry(entry);\n                }\n                shape.lanes.splice(laneIndex, 1);\n                var index = (lane) ? (shape.orientation === 'Horizontal' ? lane.rowIndex : lane.columnIndex) :\n                    (findStartLaneIndex(swimLane) + laneIndex);\n                if (shape.orientation === 'Horizontal') {\n                    row = grid.rows[index];\n                    for (i = 0; i < row.cells.length; i++) {\n                        cell = row.cells[i];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeRow(index);\n                }\n                else {\n                    swimLane.width = (swimLane.width !== undefined) ?\n                        swimLane.width - grid.rows[0].cells[index].actualSize.width : swimLane.width;\n                    for (i = 0; i < grid.rows.length; i++) {\n                        cell = grid.rows[i].cells[index];\n                        if (cell && cell.children.length > 0) {\n                            for (j = 0; j < cell.children.length; j++) {\n                                child = cell.children[j];\n                                removeChildren(diagram, child);\n                            }\n                        }\n                    }\n                    grid.removeColumn(index);\n                }\n                args = {\n                    element: lane, cause: diagram.diagramActions, state: 'Changed', type: 'Removal', cancel: false, laneIndex: laneIndex\n                };\n                diagram.triggerEvent(DiagramEvent.collectionChange, args);\n                swimLane.width = swimLane.wrapper.width = grid.width;\n                swimLane.height = swimLane.wrapper.height = grid.height;\n                swimLaneMeasureAndArrange(swimLane);\n                ChangeLaneIndex(diagram, swimLane, index);\n                diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n                diagram.updateDiagramObject(swimLane);\n            }\n        }\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane, swimLanePhases) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = swimLanePhases ? shape.phases.indexOf(swimLanePhases) : findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase, phaseIndex);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase, phaseIndex) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    phaseIndex = (phaseIndex !== undefined) ? phaseIndex : phase.columnIndex;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phaseIndex];\n            prevCell = (row.cells.length - 1 === phaseIndex) ? row.cells[phaseIndex - 1] :\n                row.cells[phaseIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phaseIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phaseIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    var prevWidth = grid.columnDefinitions()[phaseIndex].width;\n    grid.removeColumn(phaseIndex);\n    if ((phaseIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phaseIndex].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phaseIndex - 1].width;\n        width += prevWidth;\n        grid.updateColumnWidth(phaseIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var phaseRowIndex = (phaseIndex !== undefined) ? ((shape.header) ? phaseIndex + 1 : phaseIndex) : phase.rowIndex;\n    row = grid.rows[phaseRowIndex];\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phaseRowIndex - 1] : grid.rows[phaseRowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    var prevHeight = grid.rowDefinitions()[phaseRowIndex].height;\n    grid.removeRow(phaseRowIndex);\n    if ((phaseRowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phaseRowIndex].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phaseRowIndex - 1].height;\n        height += prevHeight;\n        grid.updateRowHeight(phaseRowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\nexport function findLane(laneNode, diagram) {\n    var lane;\n    if (laneNode.isLane) {\n        var swimLane = diagram.getObject(laneNode.parentId);\n        if (swimLane && swimLane.shape.type === 'SwimLane' && laneNode.isLane) {\n            var laneIndex = findLaneIndex(swimLane, laneNode);\n            lane = swimLane.shape.lanes[laneIndex];\n        }\n    }\n    return lane;\n}\nexport function canLaneInterchange(laneNode, diagram) {\n    if (laneNode.isLane) {\n        var lane = findLane(laneNode, diagram);\n        if (lane.canMove) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function updateSwimLaneChildPosition(lanes, diagram) {\n    var lane;\n    var node;\n    for (var i = 0; i < lanes.length; i++) {\n        lane = lanes[i];\n        for (var j = 0; j < lane.children.length; j++) {\n            node = diagram.nameTable[lane.children[j].id];\n            node.offsetX = node.wrapper.offsetX;\n            node.offsetY = node.wrapper.offsetY;\n        }\n    }\n}\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools, Transform } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { findAngle } from './connector';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\nimport { isBlazor, Browser } from '@syncfusion/ej2-base';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function getSpaceValue(intervals, isLine, i, space) {\n    space = !isLine ? ((intervals[i - 1] !== undefined) ? intervals[i - 1] + space : 0) : space;\n    return space;\n}\n/**\n * @private\n */\nexport function getInterval(intervals, isLine) {\n    var newInterval = [];\n    if (!isLine) {\n        for (var k = 0; k < intervals.length; k++) {\n            newInterval.push(intervals[k]);\n        }\n        newInterval.push(intervals[newInterval.length - 2]);\n        newInterval.push(intervals[newInterval.length - 2]);\n    }\n    else {\n        newInterval = intervals;\n    }\n    return newInterval;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        var shape = (isBlazor() ? child.shape.umlActivityShape :\n            child.shape.shape);\n        switch (shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        var flow = (isBlazor() ?\n            child.shape.umlActivityFlow : child.shape.flow);\n        switch (flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/* tslint:disable */\n/**\n * @private\n */\nexport function setConnectorDefaults(child, node) {\n    switch ((child.shape).type) {\n        case 'Bpmn':\n            var bpmnFlow = (isBlazor() ? child.shape.bpmnFlow : child.shape.flow);\n            switch (bpmnFlow) {\n                case 'Sequence':\n                    if ((((child.shape.sequence) === 'Normal' && child.type !== 'Bezier')) ||\n                        ((child.shape.sequence) === 'Default') || ((child.shape.sequence) === 'Conditional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style\n                                && child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.sequence) === 'Conditional' && node.sourceDecorator) {\n                            if (node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                            }\n                            node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 20;\n                            node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.width) || 10;\n                        }\n                    }\n                    break;\n                case 'Association':\n                    if (((child.shape.association) === 'Default') ||\n                        ((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        if (node.targetDecorator && node.targetDecorator.style) {\n                            node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                                child.targetDecorator.style.fill) || 'black';\n                        }\n                        if ((child.shape.association) === 'BiDirectional') {\n                            if (node.sourceDecorator && node.sourceDecorator.style) {\n                                node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                                    child.sourceDecorator.style.fill) || 'white';\n                                node.sourceDecorator.width = (child.sourceDecorator && child.sourceDecorator.width) || 5;\n                                node.sourceDecorator.height = (child.sourceDecorator && child.sourceDecorator.height) || 10;\n                            }\n                        }\n                    }\n                    break;\n                case 'Message':\n                    if (node.style && !node.style.strokeDashArray) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlActivity':\n            var flow = (isBlazor() ?\n                child.shape.umlActivityFlow : child.shape.flow);\n            switch (flow) {\n                case 'Exception':\n                    if (((child.shape.association) === 'Directional') ||\n                        ((child.shape.association) === 'BiDirectional')) {\n                        node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '2 2';\n                    }\n                    break;\n            }\n            break;\n        case 'UmlClassifier':\n            var hasRelation = false;\n            if (child.shape.relationship === 'Association') {\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Inheritance') {\n                if (node.targetDecorator && node.targetDecorator.style) {\n                    node.targetDecorator.style.fill = (child.targetDecorator && child.targetDecorator.style &&\n                        child.targetDecorator.style.fill) || 'white';\n                }\n                if (node.style) {\n                    hasRelation = true;\n                    node.style.strokeDashArray = (child.style && child.style.strokeDashArray) || '4 4';\n                }\n            }\n            else if (child.shape.relationship === 'Composition') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'black';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Aggregation' ||\n                child.shape.relationship === undefined) {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            else if (child.shape.relationship === 'Dependency') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n                node.style.strokeDashArray = '4 4';\n            }\n            else if (child.shape.relationship === 'Realization') {\n                if (node.sourceDecorator && node.sourceDecorator.style) {\n                    node.sourceDecorator.style.fill = (child.sourceDecorator && child.sourceDecorator.style &&\n                        child.sourceDecorator.style.fill) || 'white';\n                }\n                hasRelation = true;\n            }\n            if (hasRelation) {\n                node.style.strokeWidth = (child.style && child.style.strokeWidth) || 2;\n            }\n            break;\n    }\n}\n/* tslint:enable */\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function updateDefaultValues(actualNode, plainValue, defaultValue, property, oldKey) {\n    if (defaultValue && ((actualNode instanceof Connector) || actualNode\n        && ((actualNode.shape && actualNode.shape.type !== 'SwimLane') || actualNode.shape === undefined))) {\n        var keyObj = void 0;\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'shape' && keyObj.type) {\n                actualNode.shape = { type: keyObj.type };\n            }\n            if (keyObj) {\n                if (Array.isArray(keyObj) && keyObj.length && keyObj.length > 0 && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    if (actualNode[key].length > 0) {\n                        for (var i = 0; i <= actualNode[key].length; i++) {\n                            updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                        }\n                    }\n                    else {\n                        updateDefaultValues(actualNode[key], plainValue ? plainValue[key] : undefined, defaultValue[key], (key === 'annotations' || key === 'ports') ? actualNode : undefined, key);\n                    }\n                }\n                else if (keyObj instanceof Object && plainValue && (oldKey !== 'annotations' && oldKey !== 'ports')) {\n                    updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                }\n                else if ((oldKey !== 'annotations' && oldKey !== 'ports')\n                    && (plainValue && !plainValue[key]) || (!plainValue && actualNode\n                    && (actualNode[key] || actualNode[key] !== undefined))) {\n                    actualNode[key] = defaultValue[key];\n                }\n                else {\n                    var createObject = void 0;\n                    if (oldKey === 'annotations' || oldKey === 'ports') {\n                        if (oldKey === 'annotations') {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            if (!actualNode[key]) {\n                                if (getObjectType(property) === Connector) {\n                                    createObject = new PathAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                                else {\n                                    createObject = new ShapeAnnotation(property, 'annotations', defaultValue[key]);\n                                    property.annotations.push(createObject);\n                                }\n                            }\n                        }\n                        else {\n                            if (actualNode[key]) {\n                                updateDefaultValues(actualNode[key], plainValue[key], defaultValue[key]);\n                            }\n                            else {\n                                createObject = new PointPort(property, 'ports', defaultValue[key]);\n                                property.ports.push(createObject);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable:no-string-literal */\n/** @private */\nexport function updateLayoutValue(actualNode, defaultValue, nodes, node) {\n    var keyObj;\n    if (defaultValue) {\n        for (var _i = 0, _a = Object.keys(defaultValue); _i < _a.length; _i++) {\n            var key = _a[_i];\n            keyObj = defaultValue[key];\n            if (key === 'getAssistantDetails') {\n                if (node.data['Role'] === defaultValue[key]['root']) {\n                    var assitants = defaultValue[key]['assistants'];\n                    for (var i = 0; i < assitants.length; i++) {\n                        for (var j = 0; j < nodes.length; j++) {\n                            if (nodes[j].data['Role'] === assitants[i]) {\n                                actualNode.assistants.push(nodes[j].id);\n                                actualNode.children.splice(0, 1);\n                            }\n                        }\n                    }\n                }\n            }\n            else if (keyObj) {\n                actualNode[key] = defaultValue[key];\n            }\n        }\n    }\n    if (!actualNode.hasSubTree && defaultValue.canEnableSubTree) {\n        actualNode.orientation = node.layoutInfo.orientation;\n        actualNode.type = node.layoutInfo.type;\n        if (node.layoutInfo.offset !== actualNode.offset && (node.layoutInfo.offset) !== undefined) {\n            actualNode.offset = node.layoutInfo.offset;\n        }\n    }\n    node.layoutInfo.hasSubTree = actualNode.hasSubTree;\n}\n/* tslint:enable:no-string-literal */\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param {Diagram} diagram\n * @param {PointModel} mousePosition\n * @param {NodeModel | ConnectorModel} node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.enableServerDataBinding(false);\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    diagram.enableServerDataBinding(true);\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                if (style.gradient) {\n                    updateGradient(changedObject.gradient, style.gradient);\n                    break;\n                }\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = ((isBlazor() ? actualObject.shape.basicShape === 'Rectangle' :\n                actualObject.shape.shape === 'Rectangle')) ? new DiagramElement() : new PathElement();\n            if ((!isBlazor() && actualObject.shape.shape === 'Polygon') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Polygon')) {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape((isBlazor() ? actualObject.shape.basicShape :\n                    actualObject.shape.shape));\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if ((!isBlazor() && actualObject.shape.shape === 'Rectangle') ||\n                (isBlazor() && actualObject.shape.basicShape === 'Rectangle')) {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            var shape = (isBlazor()) ? actualObject.shape.flowShape : actualObject.shape.shape;\n            flowShapeElement.data = getFlowShape(shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(actualObject.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && ((isBlazor() && newValues.shape.flowShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.flowShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' &&\n            ((isBlazor() && newValues.shape.umlActivityShape !== undefined) ||\n                (!isBlazor() && newValues.shape.shape !== undefined))) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (((isBlazor() && newValues.shape.basicShape !== undefined) ||\n            newValues.shape.shape !== undefined)) {\n            actualObject.shape.shape = isBlazor() ? newValues.shape.basicShape :\n                newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n    actualObject.wrapper.children[0].canMeasurePath = true;\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    if (!isBlazor()) {\n        actualObject.shape.shape = newValues.shape.shape;\n    }\n    else {\n        actualObject.shape.umlActivityShape = newValues.shape.umlActivityShape;\n    }\n    var shapes = !isBlazor() ? actualObject.shape.shape :\n        actualObject.shape.umlActivityShape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if ((isBlazor() && actualObject.shape.umlActivityShape === 'InitialNode') ||\n        (!isBlazor() && actualObject.shape.shape === 'InitialNode')) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode')) ||\n        ((isBlazor() && (actualObject.shape.umlActivityShape === 'ForkNode' ||\n            actualObject.shape.umlActivityShape === 'JoinNode')))) {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n        (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode')) {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var shape = (isBlazor() ? node.shape.umlActivityShape : node.shape.shape);\n    var umlActivityShapeData = getUMLActivityShape(shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += ((margin.left - margin.right) / transform.scale) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += ((margin.top - margin.bottom) / transform.scale) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    if (node) {\n        node = node;\n        for (var i = 0; i < node.ports.length; i++) {\n            if (id === node.ports[i].id) {\n                return node.ports[i];\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getCollectionChangeEventArguements(args1, obj, state, type) {\n    if (isBlazor()) {\n        args1 = {\n            cause: args1.cause, state: state, type: type, cancel: false,\n            element: getObjectType(obj) === Connector ?\n                { connector: cloneBlazorObject(obj) } : { node: cloneBlazorObject(obj) }\n        };\n    }\n    return args1;\n}\n/** @private */\nexport function getDropEventArguements(args, arg) {\n    if (isBlazor()) {\n        var connector = (getObjectType(args.source) === Connector);\n        var object = cloneBlazorObject(args.source);\n        var target = cloneBlazorObject(args.target);\n        arg = {\n            element: connector ? { connector: object } : { node: object },\n            target: connector ? { connector: target } : { node: target },\n            position: arg.position, cancel: arg.cancel\n        };\n    }\n    return arg;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param {Object} obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n/** @private */\nexport var cloneSelectedObjects = function (diagram) {\n    var nodes = diagram.selectedItems.nodes;\n    var connectors = diagram.selectedItems.connectors;\n    diagram.selectedItems.nodes = [];\n    diagram.selectedItems.connectors = [];\n    var clonedSelectedItems = cloneObject(diagram.selectedItems);\n    for (var i = 0; i < nodes.length; i++) {\n        diagram.selectedItems.nodes.push(diagram.nameTable[nodes[i].id]);\n    }\n    for (var i = 0; i < connectors.length; i++) {\n        diagram.selectedItems.connectors.push(diagram.nameTable[connectors[i].id]);\n    }\n    return clonedSelectedItems;\n};\n/** @private */\nexport var updatePathElement = function (anglePoints, connector) {\n    var pathElement = new PathElement();\n    var pathseqData;\n    for (var j = 0; j < anglePoints.length - 1; j++) {\n        pathseqData = findPath(anglePoints[j], anglePoints[j + 1]);\n        pathElement.data = pathseqData[0];\n        pathElement.id = connector.id + '_' + (connector.shape.sequence);\n        pathElement.offsetX = pathseqData[1].x;\n        pathElement.offsetY = pathseqData[1].y;\n        pathElement.rotateAngle = 45;\n        pathElement.transform = Transform.Self;\n    }\n    return pathElement;\n};\n/** @private */\nexport var checkPort = function (node, element) {\n    for (var i = 0; i < node.ports.length; i++) {\n        if (node.ports[i].id === element.id.split('_')[1]) {\n            return true;\n        }\n    }\n    return false;\n};\n/** @private */\nexport var findPath = function (sourcePoint, targetPoint) {\n    var beginningpoint = { x: sourcePoint.x, y: sourcePoint.y };\n    var distance = findDistance(sourcePoint, targetPoint);\n    distance = Math.min(30, distance / 2);\n    var angle = findAngle(sourcePoint, targetPoint);\n    var transferpt = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n    var startpoint = Point.transform({ x: transferpt.x, y: transferpt.y }, angle, -12);\n    var endpoint = Point.transform({ x: startpoint.x, y: startpoint.y }, angle, 12 * 2);\n    var path = 'M' + startpoint.x + ' ' + startpoint.y + ' L' + endpoint.x + ' ' + endpoint.y;\n    return [path, transferpt];\n};\n/** @private */\nexport var findDistance = function (point1, point2) {\n    return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));\n};\n/** @private */\nexport function cloneBlazorObject(args) {\n    if (isBlazor()) {\n        args = cloneObject(args);\n    }\n    return args;\n}\n/** @private */\nexport function checkBrowserInfo() {\n    if ((navigator.platform.indexOf('Mac') >= 0 || navigator.platform.indexOf('iPad') >= 0\n        || navigator.platform.indexOf('iPhone') >= 0 || navigator.platform.indexOf('MacIntel') >= 0)\n        && (Browser.info.name === 'safari' || Browser.info.name === 'webkit')) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canMeasureDecoratorPath(objects) {\n    if (objects.indexOf('shape') !== -1 || objects.indexOf('pathData') !== -1 ||\n        objects.indexOf('width') !== -1 || objects.indexOf('height') !== -1) {\n        return true;\n    }\n    return false;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.classShape;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumerationShape;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interfaceShape;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText, cloneObject } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser, isBlazor } from '@syncfusion/ej2-base';\nimport { Node } from '../objects/node';\nimport { getElement, cloneBlazorObject } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function removeElementsByClass(className, id) {\n    var elements;\n    if (id) {\n        elements = document.getElementById(id).getElementsByClassName(className);\n    }\n    else {\n        elements = document.getElementsByClassName(className);\n    }\n    while (elements.length > 0) {\n        elements[0].parentNode.removeChild(elements[0]);\n    }\n}\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bBoxText(txtValue, text) };\n                        txtValue = '';\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + ' ' + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize, id, callback) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    var element = document.createElement('img');\n    element.setAttribute('src', source);\n    setAttributeHtml(element, { id: id + 'sf-imageNode', style: 'display: none;' });\n    document.body.appendChild(element);\n    // tslint:disable-next-line:no-any\n    element.onload = function (event) {\n        var loadedImage = event.currentTarget;\n        if (callback) {\n            callback(id, { width: loadedImage.width, height: loadedImage.height });\n        }\n    };\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    }\n    else {\n        diagramElement = (element) ? element.querySelector('#' + CSS.escape(elementId)) : document.getElementById(elementId);\n    }\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var domTable = 'domTable';\n    var expandCollapse = null;\n    if (!window[domTable][diagramId + '_gridline']) {\n        var diagramGridSvg = getGridLayerSvg(diagramId);\n        expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n        window[domTable][diagramId + '_gridline'] = expandCollapse;\n    }\n    else {\n        expandCollapse = window[domTable][diagramId + '_gridline'];\n    }\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var domTable = 'domTable';\n    if (!window[domTable][diagramId + 'html_layer']) {\n        var element = getDiagramElement(diagramId);\n        var elementcoll = void 0;\n        elementcoll = element.getElementsByClassName('e-html-layer');\n        htmlLayer = elementcoll[0];\n        window[domTable][diagramId + 'html_layer'] = htmlLayer;\n    }\n    else {\n        htmlLayer = window[domTable][diagramId + 'html_layer'];\n    }\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param {string} elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml, nodeObject) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var content = '';\n    var sentNode = {};\n    var isSvg = false;\n    if (node instanceof Node) {\n        sentNode = node;\n        if (node.shape.type === 'Native') {\n            isSvg = true;\n        }\n        var blazor = 'Blazor';\n        if (isBlazor()) {\n            content = 'diagramsf_node_template';\n            sentNode = cloneBlazorObject(node);\n        }\n    }\n    else {\n        sentNode = node;\n        //new\n        if (isBlazor()) {\n            sentNode = cloneBlazorObject(node);\n            content = 'diagramsf_annotation_template';\n        }\n    }\n    var item;\n    if (typeof element.content === 'string' && (!element.isTemplate || isBlazor())) {\n        var template = document.getElementById(element.content);\n        if (template) {\n            div.appendChild(template);\n        }\n        else {\n            var compiledString = void 0;\n            compiledString = compile(element.content);\n            for (var _i = 0, _a = compiledString(sentNode, null, null, content); _i < _a.length; _i++) {\n                item = _a[_i];\n                div.appendChild(item);\n            }\n            //new\n            // for (item of compiledString(sentNode, null, null, content, undefined, undefined, isSvg)) {\n            //     div.appendChild(item);\n            // }\n        }\n    }\n    else if (element.isTemplate) {\n        var compiledString = void 0;\n        compiledString = element.getNodeTemplate()(cloneObject(nodeObject), undefined, 'template', undefined, undefined, false);\n        for (var i = 0; i < compiledString.length; i++) {\n            div.appendChild(compiledString[i]);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return element.isTemplate ?\n        div : (isHtml ? div.cloneNode(true) : div.cloneNode(true));\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            svg.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(svg, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function applyStyleAgainstCsp(svg, attributes) {\n    var keys = attributes.split(';');\n    for (var i = 0; i < keys.length; i++) {\n        var attribute = keys[i].split(':');\n        if (attribute.length === 2) {\n            svg.style[attribute[0].trim()] = attribute[1].trim();\n        }\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        if (keys[i] !== 'style') {\n            element.setAttribute(keys[i], attributes[keys[i]]);\n        }\n        else {\n            applyStyleAgainstCsp(element, attributes[keys[i]]);\n        }\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n        var measureElementCount = 'measureElementCount';\n        if (!window[measureElementCount]) {\n            window[measureElementCount] = 1;\n        }\n        else {\n            window[measureElementCount]++;\n        }\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n/** @private */\nexport function setChildPosition(temp, childNodes, i, options) {\n    if (childNodes.length > 1 && temp.x === 0 &&\n        (options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n        (options.textWrapping === 'Wrap' || options.textWrapping === 'WrapWithOverflow')) {\n        temp.x = childNodes[i - 1] ? childNodes[i - 1].x : -(temp.width / 2);\n        return temp.x;\n    }\n    return temp.x;\n}\n/** @private */\nexport function getTemplateContent(annotationcontent, annotation, annotationTemplate) {\n    if (annotationTemplate && !annotation.template) {\n        annotationcontent.isTemplate = true;\n        annotationcontent.template = annotationcontent.content = getContent(annotationcontent, true, annotation);\n    }\n    else {\n        annotationcontent.content = annotation.template;\n    }\n    return annotationcontent;\n}\n","import { compile as baseTemplateComplier } from '@syncfusion/ej2-base';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode, applyStyleAgainstCsp } from './dom-util';\nimport { Node, BasicShape, Shape, Native, BpmnShape, BpmnActivity, BpmnTask, BpmnSubProcess } from '../objects/node';\nimport { IconShape } from '../objects/icon';\nimport { TextStyle, ShapeStyle, Margin } from '../core/appearance';\nimport { Port } from '../objects/port';\nimport { Annotation } from '../objects/annotation';\nimport { Connector, Decorator } from '../objects/connector';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\nexport function getIndex(comp, id) {\n    if (comp.nodes && comp.nodes.length > 0) {\n        for (var i = 0; i < comp.nodes.length; i++) {\n            if (comp.nodes[i].id === id) {\n                return i;\n            }\n        }\n    }\n    if (comp.connectors && comp.connectors.length > 0) {\n        for (var i = 0; i < comp.connectors.length; i++) {\n            if (comp.connectors[i].id === id) {\n                return i;\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function templateCompiler(template) {\n    if (template) {\n        var e = void 0;\n        try {\n            if (document.querySelectorAll(template).length) {\n                return baseTemplateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n        catch (e) {\n            return baseTemplateComplier(template);\n        }\n    }\n    return undefined;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\nfunction updateCloneProp(properties, obj) {\n    var prop = [];\n    if (obj instanceof Node) {\n        prop = ['width', 'height', 'offsetX', 'offsetY', 'container', 'visible', 'horizontalAlignment', 'verticalAlignment',\n            'backgroundColor', 'borderColor', 'borderWidth', 'rotateAngle', 'minHeight', 'minWidth', 'maxHeight',\n            'maxWidth', 'pivot', 'margin', 'flip', 'wrapper', 'constraints', 'style', 'annotations', 'ports', 'isExpanded', 'expandIcon'];\n    }\n    else if (obj instanceof Connector) {\n        prop = ['constraints', 'sourcePadding', 'targetPadding', 'cornerRadius', 'flip', 'type', 'targetDecorator', 'sourceDecorator',\n            'sourceID', 'shape', 'bridgeSpace', 'annotations', 'segments', 'hitPadding', 'tooltip', 'previewSize', 'dragSize', 'style',\n            'sourcePortID', 'targetID', 'targetPortID', 'visible'];\n    }\n    else if (obj instanceof Decorator) {\n        prop = ['height', 'width', 'shape', 'style', 'pivot', 'pathData'];\n    }\n    else if (obj instanceof Shape || obj instanceof IconShape) {\n        prop.push('shape');\n        if (obj instanceof BasicShape) {\n            prop.push('cornerRadius');\n        }\n        else if (obj instanceof Text) {\n            prop.push('margin');\n        }\n        else if (obj instanceof Image) {\n            prop.push('align');\n            prop.push('scale');\n        }\n        else if (obj instanceof Native) {\n            prop.push('scale');\n        }\n        else if (obj instanceof BpmnShape) {\n            prop.push('activity');\n            prop.push('annotations');\n        }\n        else if (obj instanceof IconShape) {\n            prop.push('borderColor');\n            prop.push('borderWidth');\n            prop.push('cornerRadius');\n            prop.push('fill');\n        }\n    }\n    else if (obj instanceof BpmnActivity) {\n        prop.push('subProcess');\n    }\n    else if (obj instanceof BpmnTask) {\n        prop.push('call');\n        prop.push('compensation');\n        prop.push('loop');\n    }\n    else if (obj instanceof BpmnSubProcess) {\n        prop.push('adhoc');\n        prop.push('boundary');\n        prop.push('compensation');\n        prop.push('loop');\n        prop.push('processes');\n    }\n    else if (obj instanceof Port) {\n        prop.push('height');\n        prop.push('width');\n        prop.push('visibility');\n        prop.push('horizontalAlignment');\n        prop.push('verticalAlignment');\n        prop.push('shape');\n    }\n    else if (obj instanceof Annotation) {\n        prop.push('constraints');\n        prop.push('height');\n        prop.push('horizontalAlignment');\n        prop.push('rotateAngle');\n        prop.push('template');\n        prop.push('verticalAlignment');\n        prop.push('visibility');\n        prop.push('width');\n        prop.push('margin');\n    }\n    else if (obj instanceof Margin) {\n        prop.push('left');\n        prop.push('right');\n        prop.push('top');\n        prop.push('bottom');\n    }\n    else if (obj instanceof TextStyle) {\n        prop = ['strokeWidth', 'strokeDashArray', 'opacity', 'gradient', 'fontSize', 'fontFamily', 'textOverflow',\n            'textDecoration', 'whiteSpace', 'textWrapping', 'textAlign', 'italic', 'bold'];\n    }\n    if (obj instanceof ShapeStyle) {\n        prop.push('strokeColor');\n        prop.push('color');\n    }\n    properties = properties.concat(prop);\n    return properties;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key, cloneBlazorProp) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        if (cloneBlazorProp) {\n            properties = updateCloneProp(properties, obj);\n        }\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property, cloneBlazorProp);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], undefined, undefined, cloneBlazorProp);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key, cloneBlazorProp) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key, cloneBlazorProp));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    applyStyleAgainstCsp(text, 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from '../objects/node';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/* tslint:disable */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / (2 * diagram.scroller.transform.scale))) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action !== 'OrthoThumb') {\n                    if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                        && canDragSourceEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                    if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                        && canDragTargetEnd(conn_1)) {\n                        if (action) {\n                            return action;\n                        }\n                    }\n                }\n                else {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\n/* tslint:enable */\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                if (segment.allowDrag) {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                        if (length_1 >= 50) {\n                            segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                            segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                            if (contains(position, segPoint, 30)) {\n                                return 'OrthoThumb';\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'grab',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = (isBlazor() ? node.shape : node.shape);\n        var bpmnShape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n        if (bpmnShape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (bpmnShape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (bpmnShape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (bpmnShape === 'Message' || bpmnShape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (bpmnShape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (bpmnShape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData((isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape));\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + (isBlazor() ? node.shape.bpmnShape :\n            node.shape.shape);\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.style.strokeColor = node.style.strokeColor;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if ((!isBlazor() && node.shape.shape === 'Event') ||\n            (isBlazor() && node.shape.bpmnShape === 'Event')) {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if ((!isBlazor() && node.shape.shape === 'Activity') ||\n            (isBlazor() && node.shape.bpmnShape === 'Activity')) {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.strokeColor;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.style.strokeColor = node.style.strokeColor;\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        subprocessLoop.style.strokeColor = node.style.strokeColor;\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && source.shape.shape !== 'TextAnnotation') ||\n                (isBlazor() && source.shape.bpmnShape !== 'TextAnnotation'))) {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.style.strokeColor = node.style.strokeColor;\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        content.id = task + node.id;\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.style.strokeColor = node.style.strokeColor;\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = (isBlazor() ? node.shape.bpmnShape : node.shape.shape);\n            if (shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape ||\n            (actualObject.shape.bpmnShape);\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (((isBlazor() && newShape.bpmnShape === 'Gateway') || newShape.shape === 'Gateway') &&\n            newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'DataObject') || newShape.shape === 'DataObject') &&\n            newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Activity') || newShape.shape === 'Activity') &&\n            newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Event') || newShape.shape === 'Event') &&\n            newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (((isBlazor() && newShape.bpmnShape === 'Message') || newShape.shape === 'Message') ||\n            ((isBlazor() && newShape.bpmnShape === 'DataSource') || newShape.shape === 'DataSource')) {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? ((!isBlazor() && actualObject.shape.shape === 'Activity' ||\n                (isBlazor() && actualObject.shape.bpmnShape === 'Activity'))) ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n            if (changedProp.style && changedProp.style.strokeColor) {\n                if (elementWrapper.children.length > 0) {\n                    if (((!isBlazor() && actualObject.shape.shape === 'Activity') ||\n                        (isBlazor() && actualObject.shape.bpmnShape === 'Activity')) &&\n                        actualObject.shape.activity.activity === 'SubProcess') {\n                        var child = elementWrapper.children[0];\n                        this.updateBPMNStyle(child, changedProp.style.strokeColor);\n                    }\n                    else if (((!isBlazor() && actualObject.shape.shape === 'Gateway')\n                        || (isBlazor() && actualObject.shape.bpmnShape === 'Gateway')) ||\n                        ((!isBlazor() && actualObject.shape.shape === 'Event')\n                            || (isBlazor() && actualObject.shape.bpmnShape === 'Event'))) {\n                        this.updateBPMNStyle(elementWrapper, changedProp.style.strokeColor);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNStyle = function (elementWrapper, changedProp) {\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            var child = elementWrapper.children[i];\n            updateStyle({ strokeColor: changedProp }, child);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var trigger;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined || trigger !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        elementWrapper.canMeasurePath = true;\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        for (var i = 0; i < elementWrapper.children.length; i++) {\n            if (elementWrapper.children[i].id === node.id + '_1_taskTypeService') {\n                elementWrapper.children.splice(i, 1);\n                var element = document.getElementById(node.id + '_1_taskTypeService');\n                element.parentNode.removeChild(element);\n            }\n        }\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n            if (task.type === 'Service') {\n                for (var i = 0; i < elementWrapper.children.length; i++) {\n                    if (elementWrapper.children[i].id === node.id + '_1_tasktType') {\n                        elementWrapper.children.splice(i, 1);\n                        var element = document.getElementById(node.id + '_1_tasktType');\n                        element.parentNode.removeChild(element);\n                    }\n                }\n                var taskTypeNode = new PathElement();\n                taskTypeNode.id = node.id + '_1_tasktType';\n                taskTypeNode.margin.left = 5;\n                taskTypeNode.margin.top = 5;\n                taskTypeNode.data = bpmnshapeTaskdata;\n                taskTypeNode.style.fill = 'transparent';\n                taskTypeNode.style.opacity = node.style.opacity;\n                taskTypeNode.width = 20;\n                taskTypeNode.height = 20;\n                elementWrapper.children.splice(1, 0, taskTypeNode);\n                var taskTypeNodeService = new PathElement();\n                taskTypeNodeService.id = node.id + '_1_taskTypeService';\n                taskTypeNodeService.data = bpmnshapeTaskdata;\n                taskTypeNodeService.margin.left = elementWrapper.children[1].margin.left + 9;\n                taskTypeNodeService.margin.top = elementWrapper.children[1].margin.top + 9;\n                taskTypeNodeService.style.fill = 'white';\n                taskTypeNodeService.style.opacity = node.style.opacity;\n                elementWrapper.children.splice(2, 0, taskTypeNodeService);\n            }\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if ((!isBlazor() && currentNode.shape.shape === 'Event') ||\n                        (isBlazor() && currentNode.shape.bpmnShape === 'Event')) {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if ((!isBlazor() && node.shape.shape === 'Event') ||\n                (isBlazor() && node.shape.bpmnShape === 'Event')) {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                ((!isBlazor() && node.shape.shape === 'Activity') ||\n                    (isBlazor() && node.shape.bpmnShape === 'Activity'))\n                && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramGradient;\n        }\n        switch (obj.type) {\n            case 'Linear':\n                return LinearGradient;\n            case 'Radial':\n                return RadialGradient;\n            default:\n                return LinearGradient;\n        }\n    }\n    return LinearGradient;\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar DiagramGradient = /** @class */ (function (_super) {\n    __extends(DiagramGradient, _super);\n    function DiagramGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"y2\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], DiagramGradient.prototype, \"r\", void 0);\n    return DiagramGradient;\n}(Gradient));\nexport { DiagramGradient };\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n/**\n * Defines the style of shape/path\n */\nvar DiagramShapeStyle = /** @class */ (function (_super) {\n    __extends(DiagramShapeStyle, _super);\n    function DiagramShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], DiagramShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], DiagramShapeStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], DiagramShapeStyle.prototype, \"gradient\", void 0);\n    __decorate([\n        Property(1)\n    ], DiagramShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property(12)\n    ], DiagramShapeStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property('Arial')\n    ], DiagramShapeStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], DiagramShapeStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('Center')\n    ], DiagramShapeStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShapeStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property(false)\n    ], DiagramShapeStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('black')\n    ], DiagramShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], DiagramShapeStyle.prototype, \"textWrapping\", void 0);\n    return DiagramShapeStyle;\n}(ChildProperty));\nexport { DiagramShapeStyle };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * @private\n */\nexport var BlazorAction;\n(function (BlazorAction) {\n    /** Return the layout value is true when doLayout is called   */\n    BlazorAction[BlazorAction[\"Default\"] = 0] = \"Default\";\n    /** Need to return the layout value when doLayout is called  */\n    BlazorAction[BlazorAction[\"expandNode\"] = 2] = \"expandNode\";\n    /** Enabled during the mouse interaction  */\n    BlazorAction[BlazorAction[\"interaction\"] = 4] = \"interaction\";\n})(BlazorAction || (BlazorAction = {}));\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n * @blazorNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"LineRouting\"] = 32768] = \"LineRouting\";\n    /** Enables or disables routing to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritLineRouting\"] = 65536] = \"InheritLineRouting\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 77374] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables child in parent for the swimLane node */\n    NodeConstraints[NodeConstraints[\"AllowMovingOutsideLane\"] = 33554432] = \"AllowMovingOutsideLane\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/ Disable the line routing */\n    DiagramConstraints[DiagramConstraints[\"LineRouting\"] = 2048] = \"LineRouting\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n    /** Use to prevent the collection change event while dragging lane from palette and over it in diagram */\n    DiagramAction[DiagramAction[\"PreventCollectionChangeOnDragOver\"] = 4096] = \"PreventCollectionChangeOnDragOver\";\n    /** Use to prevent the z order on dragging the diagram elements */\n    DiagramAction[DiagramAction[\"PreventZIndexOnDragging\"] = 8192] = \"PreventZIndexOnDragging\";\n    /** Indicates whether group dragging has been activated */\n    DiagramAction[DiagramAction[\"isGroupDragging\"] = 16384] = \"isGroupDragging\";\n    /** Indicates whether drag is initiated by mouse  */\n    DiagramAction[DiagramAction[\"DragUsingMouse\"] = 32768] = \"DragUsingMouse\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n    /** Indicates whether animation happens or not  */\n    RealAction[RealAction[\"AnimationClick\"] = 64] = \"AnimationClick\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n    DiagramEvent[DiagramEvent[\"segmentCollectionChange\"] = 24] = \"segmentCollectionChange\";\n    DiagramEvent[DiagramEvent[\"commandExecute\"] = 25] = \"commandExecute\";\n    DiagramEvent[DiagramEvent[\"historyStateChange\"] = 26] = \"historyStateChange\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseDown\"] = 27] = \"onUserHandleMouseDown\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseUp\"] = 28] = \"onUserHandleMouseUp\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseEnter\"] = 29] = \"onUserHandleMouseEnter\";\n    DiagramEvent[DiagramEvent[\"onUserHandleMouseLeave\"] = 30] = \"onUserHandleMouseLeave\";\n    DiagramEvent[DiagramEvent[\"onImageLoad\"] = 31] = \"onImageLoad\";\n    DiagramEvent[DiagramEvent[\"onDoBindingInit\"] = 32] = \"onDoBindingInit\";\n    DiagramEvent[DiagramEvent[\"keyUp\"] = 33] = \"keyUp\";\n    DiagramEvent[DiagramEvent[\"keyDown\"] = 34] = \"keyDown\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @blazorNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param {number} x\n     * @param {number} y\n     * @param {UnitMode} mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param {Size} size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize, obj, callback) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param {Size} desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param {Size} desiredSize\n     * @param {Size} availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined && this.maxWidth !== 0) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined && this.maxHeight !== 0) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param {Size} availableSize\n     */\n    Container.prototype.measure = function (availableSize, id, callback) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize, id, callback);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param {Size} desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param {Size} size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param {Size} size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param {DiagramElement} child\n     * @param {PointModel} center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param {Size} availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param {Size} desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param {Size} availableSize\n     */\n    Canvas.prototype.measure = function (availableSize, id, callback) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize, id, callback);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param {DiagramElement} child\n     * @param {Size} childSize\n     * @param {Size} parentSize\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param {DiagramElement} child\n     * @param {number} x\n     * @param {number} y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param {Size} availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param {Size} desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param {string} pathData\n     * @param {Rect} bounds\n     * @param {Size} actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param {Size} availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize, id, callback) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize, id, callback);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param {Size} desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param {Size} availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param {Size} desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    // tslint:disable-next-line:no-any\n    function Port(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.inEdges = [];\n        _this.outEdges = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"outEdges\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"inEdges\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\nimport { randomId } from '../utility/base-util';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    // tslint:disable-next-line:no-any\n    function Annotation(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        if (!defaultValue.id) {\n            if (parent.parentObj && parent.parentObj.propName && parent.parentObj.propName === 'phases') {\n                _this.id = parent.parentObj.id;\n            }\n            else {\n                _this.id = randomId();\n            }\n        }\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property('String')\n    ], Annotation.prototype, \"annotationType\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { DiagramTooltip } from './tooltip';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\nimport { templateCompiler } from '../../utility/base-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId, nodeTemplate) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        _this.templateFn = templateCompiler(nodeTemplate);\n        return _this;\n    }\n    /** @private */\n    DiagramHtmlElement.prototype.getNodeTemplate = function () {\n        return this.templateFn;\n    };\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            if (!this.isTemplate) {\n                this.template = getContent(this, true);\n            }\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * customize the size of the individual palette items.\n */\nvar SymbolSize = /** @class */ (function (_super) {\n    __extends(SymbolSize, _super);\n    function SymbolSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolSize.prototype, \"height\", void 0);\n    return SymbolSize;\n}(ChildProperty));\nexport { SymbolSize };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n        this.renderComplete();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param {number} scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param {HTMLElement} rulerObj - Defines the ruler Object\n     * @param {PointModel} currentPoint - Defines the current point for ruler Object\n     * @param {number} offset - Defines the offset ruler Object\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"source\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('Top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableNodes\", void 0);\n    __decorate([\n        Property(false)\n    ], UserHandle.prototype, \"disableConnectors\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/**\n * Defines the behavior of the RowDefinition of node\n */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        /** returns the height of node */\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/**\n * Defines the behavior of the ColumnDefinition of node\n */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        /** returns the width of node */\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param {Size} desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param {Size} availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar LayoutInfo = /** @class */ (function (_super) {\n    __extends(LayoutInfo, _super);\n    function LayoutInfo() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Horizontal')\n    ], LayoutInfo.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Center')\n    ], LayoutInfo.prototype, \"type\", void 0);\n    __decorate([\n        Property(undefined)\n    ], LayoutInfo.prototype, \"offset\", void 0);\n    __decorate([\n        Property(false)\n    ], LayoutInfo.prototype, \"enableRouting\", void 0);\n    __decorate([\n        Property([])\n    ], LayoutInfo.prototype, \"children\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"assistants\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"level\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"hasSubTree\", void 0);\n    __decorate([\n        Property('')\n    ], LayoutInfo.prototype, \"rows\", void 0);\n    return LayoutInfo;\n}(ChildProperty));\nexport { LayoutInfo };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, isBlazor } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { IconShape } from './icon';\nimport { measurePath, getContent, getTemplateContent } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nimport { Connector } from './connector';\nimport { UserHandle } from '../interaction/selector';\nimport { LayoutInfo } from '../diagram/layoutinfo';\nimport { SymbolSize } from './preview';\nvar getShapeType = function (obj) {\n    if (obj) {\n        if (isBlazor()) {\n            return DiagramShape;\n        }\n        else {\n            switch (obj.type) {\n                case 'Basic':\n                    return BasicShape;\n                case 'Flow':\n                    return FlowShape;\n                case 'Path':\n                    return Path;\n                case 'Image':\n                    return Image;\n                case 'Text':\n                    return Text;\n                case 'Bpmn':\n                    return BpmnShape;\n                case 'Native':\n                    return Native;\n                case 'HTML':\n                    return Html;\n                case 'UmlActivity':\n                    return UmlActivityShape;\n                case 'UmlClassifier':\n                    return UmlClassifierShape;\n                case 'SwimLane':\n                    return SwimLane;\n                default:\n                    return BasicShape;\n            }\n        }\n    }\n    return (isBlazor()) ? DiagramShape : BasicShape;\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\n/**\n * Defines the behavior of the BpmnTransactionSubProcess\n */\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interfaceShape\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/* tslint:disable */\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar DiagramShape = /** @class */ (function (_super) {\n    __extends(DiagramShape, _super);\n    function DiagramShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    DiagramShape.prototype.getClassName = function () {\n        return 'DiagramShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], DiagramShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], DiagramShape.prototype, \"basicShape\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], DiagramShape.prototype, \"flowShape\", void 0);\n    __decorate([\n        Property('Event')\n    ], DiagramShape.prototype, \"bpmnShape\", void 0);\n    __decorate([\n        Property('Action')\n    ], DiagramShape.prototype, \"umlActivityShape\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"data\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"textContent\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], DiagramShape.prototype, \"scale\", void 0);\n    __decorate([\n        Property('')\n    ], DiagramShape.prototype, \"source\", void 0);\n    __decorate([\n        Property('None')\n    ], DiagramShape.prototype, \"align\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], DiagramShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property(0)\n    ], DiagramShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], DiagramShape.prototype, \"points\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], DiagramShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], DiagramShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], DiagramShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], DiagramShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], DiagramShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], DiagramShape.prototype, \"enumerationShape\", void 0);\n    __decorate([\n        Property('Class')\n    ], DiagramShape.prototype, \"classifier\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], DiagramShape.prototype, \"classShape\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], DiagramShape.prototype, \"interfaceShape\", void 0);\n    return DiagramShape;\n}(ChildProperty));\nexport { DiagramShape };\n/* tslint:enable */\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = (isBlazor() ? this.shape.textContent : this.shape.content);\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if ((!isBlazor() && this.shape.shape === 'Rectangle') || (isBlazor() && this.shape.basicShape === 'Rectangle')) {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if ((!isBlazor() && this.shape.shape === 'Polygon') || (isBlazor() && this.shape.basicShape === 'Polygon')) {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape((isBlazor()) ? this.shape.basicShape : this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape((isBlazor() ? this.shape.flowShape : this.shape.shape));\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id, undefined, diagram.nodeTemplate);\n                if (this.shape.content) {\n                    htmlContent.content = this.shape.content;\n                }\n                else if (diagram.nodeTemplate) {\n                    htmlContent.isTemplate = true;\n                    htmlContent.template = htmlContent.content = getContent(htmlContent, true, this);\n                }\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if ((!isBlazor() && this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) ||\n            ((isBlazor()) && (this.shape.basicShape === 'Rectangle'\n                && this.shape.type === \"Basic\" && !this.shape.cornerRadius))) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if ((this.shape instanceof Text) || (isBlazor() && this.shape.type === \"Text\")) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || ((!isBlazor() && this.shape.shape === 'Message') || (isBlazor() && this.shape.bpmnShape === 'Message')) ||\n            ((!isBlazor() && this.shape.shape === 'DataSource') || (isBlazor() && this.shape.bpmnShape === 'DataSource'))) && ((this.shape.type !== 'UmlActivity' || ((!isBlazor() && this.shape.shape !== 'FinalNode') ||\n            (isBlazor() && this.shape.umlActivityShape !== 'FinalNode'))))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize, annotationTemplate) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i, annotationTemplate);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value, annotationTemplate) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (isBlazor() && annotation.annotationType === 'Template') {\n            annotation.template = annotation.template ? annotation.template : '';\n        }\n        if (diagramId && (annotation.template || annotation.annotationType === 'Template'\n            || (annotationTemplate && annotation.content === ''))) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id, annotationTemplate);\n            annotationcontent = getTemplateContent(annotationcontent, annotation, annotationTemplate);\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Complex({}, LayoutInfo)\n    ], Node.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], Node.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], Node.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], Node.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"previewSize\", void 0);\n    __decorate([\n        Complex({}, SymbolSize)\n    ], Node.prototype, \"dragSize\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    __decorate([\n        Property('')\n    ], Node.prototype, \"branch\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    __decorate([\n        Property(true)\n    ], Lane.prototype, \"canMove\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"setTooltipTemplate\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement, setChildPosition } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') && options.textWrapping === 'Wrap') {\n                        if (offsetY < parentNode.actualSize.height + parentNode.bounds.y) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > parentNode.actualSize.height + parentNode.bounds.y) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                }\n                            }\n                            ctx.fillText(child.text, offsetX, offsetY);\n                        }\n                    }\n                    else {\n                        ctx.fillText(child.text, offsetX, offsetY);\n                    }\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointx = 0;\n                }\n                else {\n                    pointx = text.width * 0.5;\n                }\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg, setChildPosition } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient, checkBrowserInfo } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue, parentNode) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            var childNodesHeight = 0;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                var innerHtmlTextElement = document.getElementById(options.id + '_text');\n                if (innerHtmlTextElement) {\n                    innerHtmlTextElement.innerHTML = '';\n                }\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap' && options.textWrapping === 'NoWrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    child.x = setChildPosition(child, childNodes, i, options);\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    if ((options.textOverflow === 'Clip' || options.textOverflow === 'Ellipsis') &&\n                        (options.textWrapping === 'WrapWithOverflow' || options.textWrapping === 'Wrap') && parentNode) {\n                        var size = (options.isHorizontalLane) ? parentNode.actualSize.width : parentNode.actualSize.height;\n                        if (offsetY < size) {\n                            if (options.textOverflow === 'Ellipsis' && childNodes[i + 1]) {\n                                var temp = childNodes[i + 1];\n                                var y = position.y + temp.dy * (i + 1) + ((options.fontSize) * 0.8);\n                                if (y > size) {\n                                    child.text = child.text.slice(0, child.text.length - 3);\n                                    child.text = child.text.concat('...');\n                                    textNode.data = child.text;\n                                }\n                            }\n                            this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                            childNodesHeight += child.dy;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else {\n                        this.setText(text, tspanElement, child, textNode, offsetX, offsetY);\n                    }\n                }\n            }\n            if (childNodesHeight && options.isHorizontalLane) {\n                pivotX = options.parentOffsetX + options.pivotX;\n                pivotY = options.parentOffsetY + options.pivotY;\n                options.y = options.parentOffsetY - childNodesHeight * options.pivotY + 0.5;\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    SvgRenderer.prototype.setText = function (text, tspanElement, child, textNode, offsetX, offsetY) {\n        setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n        text.setAttribute('fill', child.text);\n        tspanElement.appendChild(textNode);\n        text.appendChild(tspanElement);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        if (isBlazor() && obj.alignment === 'None' && scale === 'Stretch') {\n            scale = '';\n        }\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        var parentHtmlElement;\n        if (canvas) {\n            var i = void 0;\n            var j = void 0;\n            var parentElement = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                parentElement = canvas.childNodes[i];\n                for (j = 0; j < parentElement.childNodes.length; j++) {\n                    if (parentElement.childNodes[j].id === element.id + '_html_element') {\n                        htmlElement = parentElement.childNodes[j];\n                        break;\n                    }\n                }\n            }\n        }\n        if (!htmlElement) {\n            parentHtmlElement = canvas.querySelector(('#' + element.id + '_html_element')) ||\n                canvas.querySelector(('#' + element.nodeId + '_html_element'));\n            if (!parentHtmlElement) {\n                var attr_1 = {\n                    'id': element.nodeId + '_html_element',\n                    'class': 'foreign-object'\n                };\n                parentHtmlElement = createHtmlElement('div', attr_1);\n            }\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            element.isTemplate ? htmlElement.appendChild(element.template) : htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            parentHtmlElement.appendChild(htmlElement);\n            canvas.appendChild(parentHtmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param {DiagramNativeElement} node\n     * @param {SVGElement} group\n     * @param {number} height\n     * @param {number} width\n     * @param {SVGSVGElement} parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        if (checkBrowserInfo()) {\n            group.setAttribute('clip-path', 'url(' + location.href + '#' + node.id + '_clip)');\n        }\n        else {\n            group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        }\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                if (checkBrowserInfo()) {\n                    fill = 'url(' + location.href + '#' + grd.id + ')';\n                }\n                else {\n                    fill = 'url(#' + grd.id + ')';\n                }\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString() || 'none');\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                if (text.textWrapping === 'NoWrap') {\n                    pointX = 0;\n                }\n                else {\n                    pointX = text.width * 0.5;\n                }\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner, getInterval, getSpaceValue } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette, isPreviewNode);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg, isPreviewNode);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, canvas);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50 && segment.allowDrag) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 1.2;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        var canDraw;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            canDraw = true;\n            if (obj.disableConnectors && selectorItem.connectors.length > 0) {\n                canDraw = false;\n            }\n            if (obj.disableNodes && selectorItem.nodes.length > 0) {\n                canDraw = false;\n            }\n            var element = new PathElement();\n            var newPoint = void 0;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            if (canDraw) {\n                if (obj.content === '' && obj.source === '') {\n                    var data = obj.pathData ? obj.pathData : obj.content;\n                    var option = this.getBaseAttributes(wrapper);\n                    option.id = obj.name + '_userhandle';\n                    option.fill = obj.backgroundColor;\n                    option.stroke = obj.borderColor;\n                    option.strokeWidth = obj.borderWidth;\n                    option.centerX = newPoint.x;\n                    option.centerY = newPoint.y;\n                    option.radius = obj.size * 0.5;\n                    option.class = 'e-diagram-userhandle-circle';\n                    option.angle = 0;\n                    option.visible = obj.visible;\n                    option.opacity = 1;\n                    this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n                    var pathPading = 5;\n                    var arrayCollection = [];\n                    arrayCollection = processPathData(data);\n                    arrayCollection = splitArrayCollection(arrayCollection);\n                    var pathSize = measurePath(data);\n                    //requiredSize/contentSize\n                    var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n                    var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n                    var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n                    pathSize = measurePath(newData);\n                    var options = {\n                        x: newPoint.x - pathSize.width / 2,\n                        y: newPoint.y - pathSize.height / 2,\n                        angle: 0, id: '',\n                        class: 'e-diagram-userhandle-path',\n                        fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                        width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n                    };\n                    this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n                }\n                else if (obj.content !== '') {\n                    var handleContent = void 0;\n                    handleContent = new DiagramNativeElement(obj.name, this.diagramId);\n                    handleContent.content = obj.content;\n                    handleContent.offsetX = newPoint.x;\n                    handleContent.offsetY = newPoint.y;\n                    handleContent.height = obj.size;\n                    handleContent.width = obj.size;\n                    handleContent.id = obj.name + '_shape';\n                    handleContent.horizontalAlignment = 'Center';\n                    handleContent.verticalAlignment = 'Center';\n                    handleContent.visible = obj.visible;\n                    handleContent.setOffsetWithRespectToBounds(newPoint.x, newPoint.y, 'Fraction');\n                    handleContent.relativeMode = 'Object';\n                    handleContent.description = obj.name || 'User handle';\n                    handleContent.measure(new Size(obj.size, obj.size));\n                    handleContent.arrange(handleContent.desiredSize);\n                    this.svgRenderer.drawNativeContent(handleContent, canvas, obj.size, obj.size, this.adornerSvgLayer);\n                }\n                else {\n                    var element_1 = new ImageElement();\n                    var options = this.getBaseAttributes(element_1, transform);\n                    options.width = obj.size;\n                    options.height = obj.size;\n                    options.x = newPoint.x - (obj.size / 2);\n                    options.y = newPoint.y - (obj.size / 2);\n                    options.sourceWidth = obj.size;\n                    options.sourceHeight = obj.size;\n                    options.alignment = element_1.imageAlign;\n                    options.source = obj.source;\n                    options.scale = element_1.imageScale;\n                    options.visible = obj.visible;\n                    options.description = obj.name || 'User handle';\n                    options.id = obj.name + '_';\n                    this.renderer.drawImage(canvas, options, this.adornerSvgLayer, false);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        var isLine = snapSettings.gridType === 'Lines';\n        var verticalLineIntervals = isLine ?\n            snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n        var horizontalLineIntervals = isLine ?\n            snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var i = 0; i < verticalLineIntervals.length; i = i + 1) {\n                hWidth += verticalLineIntervals[i];\n            }\n            for (var i = 0; i < horizontalLineIntervals.length; i = i + 1) {\n                hHeight += horizontalLineIntervals[i];\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight, isLine);\n            }\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                var spaceY = 0;\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                        'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(hLine, attr);\n                    pattern.appendChild(hLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, true);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderDotGrid = function (i, pattern, snapSettings, spacey, d, scale, isHorizontal) {\n        var intervals = !isHorizontal ?\n            snapSettings.horizontalGridlines.dotIntervals : snapSettings.verticalGridlines.dotIntervals;\n        intervals = getInterval(intervals, false);\n        var r;\n        var hLine;\n        var doubleRadius;\n        var dy;\n        var attr;\n        for (var j = 1; j < intervals.length; j = j + 2) {\n            r = j === intervals.length - 1 ? intervals[0] : intervals[j - 1];\n            hLine = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            dy = spacey;\n            dy = dy * scale;\n            attr = {\n                'cx': isHorizontal ? dy : d, 'cy': isHorizontal ? d : dy, 'fill': snapSettings.horizontalGridlines.lineColor, 'r': r\n            };\n            setAttributeSvg(hLine, attr);\n            pattern.appendChild(hLine);\n            spacey += intervals[j] + intervals[j - 1];\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, intervals) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth, isLine);\n            }\n            var spaceY = 0;\n            intervals = getInterval(intervals, isLine);\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                space = getSpaceValue(intervals, isLine, i, space);\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', isLine ? 'path' : 'circle');\n                var d = isLine ? space + intervals[i] / 2 : space;\n                d = isRulerGrid ? d : d * scale;\n                var attr = void 0;\n                if (isLine) {\n                    attr = {\n                        'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                        'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                        'dashArray': dashArray.toString(),\n                        'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                    };\n                    setAttributeSvg(vLine, attr);\n                    pattern.appendChild(vLine);\n                    space += intervals[i + 1] + intervals[i];\n                }\n                else {\n                    this.renderDotGrid(i, pattern, snapSettings, spaceY, d, scale, false);\n                    space += intervals[i];\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            var isLine = snapSettings.gridType === 'Lines';\n            var verticalLineIntervals = isLine ?\n                snapSettings.verticalGridlines.lineIntervals : snapSettings.verticalGridlines.dotIntervals;\n            var horizontalLineIntervals = isLine ?\n                snapSettings.horizontalGridlines.lineIntervals : snapSettings.horizontalGridlines.dotIntervals;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (var j = 0; j < horizontalLineIntervals.length; j = j + 1) {\n                height += horizontalLineIntervals[j];\n            }\n            var width = 0;\n            for (var j = 0; j < verticalLineIntervals.length; j = j + 1) {\n                width += verticalLineIntervals[j];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid, isLine, horizontalLineIntervals);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid, isLine, verticalLineIntervals);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth, isLine) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        var interval = isLine ? ruler.interval : ruler.interval + 1;\n        for (var i = 0; i < interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = isLine ? ((i === 0) ? 1.25 : 0.25) : 0;\n            }\n            else {\n                newInterval[i] = isLine ? (tickInterval - newInterval[i - 1]) : tickInterval;\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textWrapping = element.style.textWrapping;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.isHorizontalLane = element.isLaneOrientation;\n        if (element.isLaneOrientation) {\n            options.parentOffsetX = this.groupElement.offsetX;\n            options.parentOffsetY = this.groupElement.offsetY;\n            options.parentWidth = this.groupElement.actualSize.width;\n            options.parentHeight = this.groupElement.actualSize.height;\n        }\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        if ((element.style.textWrapping === 'Wrap' || element.style.textWrapping === 'WrapWithOverflow') &&\n            this.groupElement && options.height > this.groupElement.actualSize.height &&\n            (element.style.textOverflow === 'Clip' || element.style.textOverflow === 'Ellipsis')) {\n            options.y = options.y + (options.height - this.groupElement.actualSize.height) / 2;\n        }\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)), this.groupElement);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue, isPreviewNode) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        this.groupElement = group;\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue, isPreviewNode);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            if (element && element.children &&\n                element.children.length && (element.children[0] instanceof DiagramHtmlElement)) {\n                var id = canvas.id.split('_preview');\n                var layer = document.getElementById(id[0] + '_html_div') ||\n                    (getHTMLLayer(this.diagramId).children[0]);\n                canvas = layer.querySelector(('#' + element.id + '_content_html_element'));\n                if (canvas) {\n                    canvas.style.transform =\n                        'scale(' + scaleX + ',' + scaleY + ')' + 'rotate(' + (element.rotateAngle + element.parentTransform) + 'deg)';\n                }\n            }\n            else {\n                setAttributeSvg(canvas, attr);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg, isPreviewNode) {\n        var options = this.getBaseAttributes(element, transform, isPreviewNode);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform, isPreviewNode) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (isPreviewNode) {\n            options.x = options.x - .5;\n            options.y = options.y - .5;\n        }\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        var domTable = 'domTable';\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                if (!window[domTable][this.diagramId + '_diagramLayer']) {\n                    window[domTable][this.diagramId + '_diagramLayer'] =\n                        this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                }\n                var diagramLayer = window[domTable][this.diagramId + '_diagramLayer'];\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            if (!window[domTable][this.diagramId + '_diagramPorts']) {\n                window[domTable][this.diagramId + '_diagramPorts'] = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            }\n            var portsLayer = window[domTable][this.diagramId + '_diagramPorts'];\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            if (!window[domTable][this.diagramId + '_diagramExpander']) {\n                window[domTable][this.diagramId + '_diagramExpander'] =\n                    this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            }\n            var expandLayer = window[domTable][this.diagramId + '_diagramExpander'];\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            if (!window[domTable][this.diagramId + '_nativeLayer']) {\n                window[domTable][this.diagramId + '_nativeLayer'] = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            }\n            var nativeLayer = window[domTable][this.diagramId + '_nativeLayer'];\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\nvar FitOptions = /** @class */ (function (_super) {\n    __extends(FitOptions, _super);\n    function FitOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Page')\n    ], FitOptions.prototype, \"mode\", void 0);\n    __decorate([\n        Property('PageSettings')\n    ], FitOptions.prototype, \"region\", void 0);\n    __decorate([\n        Complex({ top: 25, bottom: 25, left: 25, right: 25 }, Margin)\n    ], FitOptions.prototype, \"margin\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canZoomIn\", void 0);\n    __decorate([\n        Property(undefined)\n    ], FitOptions.prototype, \"customBounds\", void 0);\n    __decorate([\n        Property(false)\n    ], FitOptions.prototype, \"canFit\", void 0);\n    return FitOptions;\n}(ChildProperty));\nexport { FitOptions };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    __decorate([\n        Complex({}, FitOptions)\n    ], PageSettings.prototype, \"fitOptions\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([1, 19, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5, 0.5, 19.5])\n    ], Gridlines.prototype, \"dotIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property('Lines')\n    ], SnapSettings.prototype, \"gridType\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar DataMappingItems = /** @class */ (function (_super) {\n    __extends(DataMappingItems, _super);\n    function DataMappingItems() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"property\", void 0);\n    __decorate([\n        Property('')\n    ], DataMappingItems.prototype, \"field\", void 0);\n    return DataMappingItems;\n}(ChildProperty));\nexport { DataMappingItems };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex, Collection } from '@syncfusion/ej2-base';\nimport { DataMappingItems as DataMappingItems } from './data-mapping';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Collection([], DataMappingItems)\n    ], DataSource.prototype, \"dataMapSettings\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"layoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","import { TextElement } from '../core/elements/text-element';\nimport { Node } from '../objects/node';\nimport { getIndex, cloneObject } from './base-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of commands\n */\n/* tslint:disable */\nvar DeepDiffMapper = /** @class */ (function () {\n    function DeepDiffMapper() {\n        this.valueCreated = 'created';\n        this.valueUpdated = \"updated\";\n        this.valueDeleted = \"deleted\";\n        this.valueUnchanged = \"unchanged\";\n        /** @private */\n        this.newNodeObject = [];\n        /** @private */\n        this.newConnectorObject = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /* tslint:enable */\n    }\n    /** @private */\n    DeepDiffMapper.prototype.updateObjectCollection = function (layers, diagram) {\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i]['objects']) {\n                layers[i]['objects'] = (diagram.layers[i].objects);\n            }\n            else {\n                layers[i]['objects'] = [];\n                layers[i]['objects'] = diagram.layers[i].objects;\n            }\n        }\n    };\n    /**   @private  */\n    DeepDiffMapper.prototype.getOldObject = function (id, isNode, diagram) {\n        var oldObject = isNode ? diagram.oldNodeObjects : diagram.oldConnectorObjects;\n        for (var i = 0; i < oldObject.length; i++) {\n            if (oldObject[i].id === id) {\n                return oldObject[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.changeSegments = function (diff, newObject) {\n        for (var _i = 0, _a = Object.keys(diff); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop === 'segments') {\n                var seg = this.removeNullValues(newObject[prop]);\n                diff[prop] = seg;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.removeNullValues = function (segments) {\n        var newSegments = [];\n        var seg = {};\n        for (var i = 0; i < segments.length; i++) {\n            seg = this.removeNullObjectValues(segments[i]);\n            newSegments.push(seg);\n        }\n        return newSegments;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.removeNullObjectValues = function (segment) {\n        var newSegObject = {};\n        for (var _i = 0, _a = Object.keys(segment); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (segment[prop] !== undefined) {\n                newSegObject[prop] = (segment[prop] instanceof Object) ? this.removeNullObjectValues(segment[prop]) : segment[prop];\n            }\n        }\n        return newSegObject;\n    };\n    ;\n    /** @private */\n    DeepDiffMapper.prototype.getDifferenceValues = function (selectedObject, args, labelDrag, diagram) {\n        var diffValue;\n        var diff;\n        var result;\n        var isNode = selectedObject instanceof Node;\n        var oldObject;\n        if (selectedObject) {\n            oldObject = isNode ? this.getOldObject(selectedObject.id, true, diagram) : this.getOldObject(selectedObject.id, false, diagram);\n            if (oldObject) {\n                var newObject = cloneObject(selectedObject);\n                result = this.map(newObject, oldObject);\n                diffValue = this.frameObject({}, result);\n                diff = this.removeEmptyValues(diffValue);\n                diff = this.changeSegments(diff, newObject);\n                if (diff.children) {\n                    diff.children = cloneObject(selectedObject).children;\n                }\n                return this.getDiagramObjects(diff, selectedObject.id, isNode, args, labelDrag, diagram);\n            }\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getLayerObject = function (oldDiagram, temp, diagram) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers['layers'] = [];\n            var newDiagram = {};\n            newDiagram['layers'] = [];\n            for (var i = 0; i < diagram.layers.length; i++) {\n                newDiagram['layers'].push(cloneObject(diagram.layers[i]));\n            }\n            var result = void 0;\n            for (var i = 0; i < newDiagram['layers'].length; i++) {\n                if (!temp) {\n                    result = this.map(cloneObject(newDiagram['layers'][i]), oldDiagram['layers'][i]);\n                }\n                else {\n                    result = this.map(oldDiagram['layers'][i], cloneObject(newDiagram['layers'][i]));\n                }\n                var diffValue = this.frameObject({}, result);\n                var diff = this.removeEmptyValues(diffValue);\n                diffLayers['layers'][i] = diff;\n            }\n            this.updateObjectCollection(diffLayers['layers'], diagram);\n            return diffLayers;\n        }\n    };\n    /** @private */\n    DeepDiffMapper.prototype.getDiagramObjects = function (diffValue, object, isNode, args, labelDrag, diagram) {\n        var index = 0;\n        index = getIndex(diagram, object);\n        diffValue.sfIndex = index;\n        if (isNode) {\n            this.newNodeObject.push(diffValue);\n        }\n        else {\n            this.newConnectorObject.push(diffValue);\n        }\n        if (args && (((args.sourceWrapper instanceof TextElement) && labelDrag) || args.portId)) {\n            var tempObject = void 0;\n            var objectValue = void 0;\n            if (isNode) {\n                objectValue = args.portId ? this.newNodeObject[0].ports : this.newNodeObject[0].annotations;\n            }\n            else {\n                objectValue = this.newConnectorObject[0].annotations || [];\n            }\n            for (var i = 0; i < objectValue.length; i++) {\n                if (Object.keys(objectValue[i]).length > 0) {\n                    var selectedObject = diagram.nameTable[object];\n                    tempObject = objectValue[i];\n                    if (args.portId) {\n                        this.newNodeObject[0].ports = [tempObject];\n                    }\n                    else {\n                        for (var j = 0; j < selectedObject.annotations.length; j++) {\n                            if (args.sourceWrapper.id === selectedObject.id + \"_\" + selectedObject.annotations[j].id) {\n                                tempObject.sfIndex = j;\n                            }\n                        }\n                        if (isNode) {\n                            this.newNodeObject[0].annotations = [tempObject];\n                        }\n                        else {\n                            this.newConnectorObject[0].annotations = [tempObject];\n                        }\n                    }\n                }\n            }\n        }\n        this.diagramObject = { nodes: this.newNodeObject, connectors: this.newConnectorObject };\n        //return returnValue;\n    };\n    DeepDiffMapper.prototype.removeArrayValues = function (obj) {\n        var newObj = [];\n        var value = JSON.stringify(obj);\n        if (!(value === JSON.stringify({ 'data': [] }))) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj[i] instanceof Object) {\n                    var newValue = this.removeEmptyValues(obj[i]);\n                    newObj.push(newValue);\n                }\n                else {\n                    newObj.push(obj[i]);\n                }\n            }\n        }\n        return newObj;\n    };\n    /** @private */\n    DeepDiffMapper.prototype.removeEmptyValues = function (frame) {\n        var newObj = {};\n        for (var _i = 0, _a = Object.keys(frame); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if (prop !== 'wrapper' && prop !== 'data') {\n                var obj = frame[prop];\n                var value = JSON.stringify(obj);\n                if (obj instanceof Array) {\n                    var newValue = this.removeArrayValues(obj);\n                    if (JSON.stringify(newValue) !== '[]') {\n                        newObj[prop] = newValue;\n                    }\n                }\n                else {\n                    if (obj instanceof Object) {\n                        if (!(value === JSON.stringify({ 'data': [] }))) {\n                            var newValue = this.removeEmptyValues(obj);\n                            if (JSON.stringify(newValue) !== '{}') {\n                                newObj[prop] = newValue;\n                            }\n                        }\n                    }\n                    else {\n                        if (!(value === JSON.stringify(['data']) || value === JSON.stringify('data')\n                            || value === JSON.stringify({ 'data': [] }))) {\n                            if (prop !== 'version' && prop !== 'ejsAction') {\n                                newObj[prop] = frame[prop];\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return newObj;\n    };\n    DeepDiffMapper.prototype.map = function (obj1, obj2, arrayName) {\n        if (this.isFunction(obj1) || this.isFunction(obj2)) {\n            throw 'Invalid argument. Function given, object expected.';\n        }\n        if (this.isValue(obj1) || this.isValue(obj2)) {\n            return {\n                type: this.compareValues(obj1, obj2),\n                data: obj1 === undefined ? obj2 : obj1\n            };\n        }\n        var diff = {};\n        if (this.isArray(obj1)) {\n            for (var i = 0; i < obj1.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                var ss = this.map(obj1[i], obj2[i]);\n                diff[arrayName].push(ss);\n            }\n        }\n        else {\n            for (var key in obj1) {\n                if (this.isFunction(obj1[key])) {\n                    continue;\n                }\n                var value2 = undefined;\n                if (obj2[key] !== undefined) {\n                    value2 = obj2[key];\n                }\n                var kk = this.map(obj1[key], value2, this.isArray(value2) ? key : undefined);\n                if (this.isArray(value2)) {\n                    diff[key] = kk[key];\n                }\n                else {\n                    diff[key] = kk;\n                }\n            }\n        }\n        if (this.isArray(obj2)) {\n            for (var i = 0; i < obj2.length; i++) {\n                if (!diff[arrayName]) {\n                    diff[arrayName] = [];\n                }\n                if (this.isFunction(obj2[i]) || diff[arrayName][i] !== undefined) {\n                    if (diff[arrayName][i].type && diff[arrayName][i].type !== this.valueUpdated) {\n                        delete diff[arrayName];\n                    }\n                    continue;\n                }\n                var ss = this.map(undefined, obj2[i]);\n                diff[arrayName][i] = ss;\n            }\n        }\n        else {\n            for (var key in obj2) {\n                if (this.isFunction(obj2[key]) || diff[key] !== undefined) {\n                    if (diff[key].type && ((diff[key].type !== this.valueUpdated) && (diff[key].type !== this.valueDeleted))) {\n                        delete diff[key];\n                    }\n                    continue;\n                }\n                var kk = this.map(undefined, obj2[key]);\n                diff[key] = kk;\n            }\n        }\n        return diff;\n    };\n    DeepDiffMapper.prototype.compareValues = function (value1, value2) {\n        if (value1 === value2) {\n            return this.valueUnchanged;\n        }\n        if (this.isDate(value1) && this.isDate(value2) && value1.getTime() === value2.getTime()) {\n            return this.valueUnchanged;\n        }\n        if (value1 === undefined) {\n            return this.valueCreated;\n        }\n        if (value2 === undefined) {\n            return this.valueDeleted;\n        }\n        return this.valueUpdated;\n    };\n    DeepDiffMapper.prototype.isFunction = function (x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    DeepDiffMapper.prototype.isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n    };\n    DeepDiffMapper.prototype.isDate = function (x) {\n        return Object.prototype.toString.call(x) === '[object Date]';\n    };\n    DeepDiffMapper.prototype.isObject = function (x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n    DeepDiffMapper.prototype.isValue = function (x) {\n        return !this.isObject(x) && !this.isArray(x);\n    };\n    DeepDiffMapper.prototype.frameObject = function (final, obj) {\n        for (var key in obj) {\n            if (this.isArray(obj[key])) {\n                if (!final[key]) {\n                    final[key] = [];\n                }\n                for (var i = 0; i < obj[key].length; i++) {\n                    var kk = this.frameObject({}, obj[key][i]);\n                    final[key].push(kk);\n                }\n            }\n            else {\n                if ((key != 'type') || (key == 'type' && (obj[key] !== this.valueUpdated && obj[key] !== this.valueUnchanged && obj[key] !== this.valueDeleted && obj[key] !== this.valueCreated))) {\n                    if (this.isFunction(obj[key])) {\n                        continue;\n                    }\n                    if (this.isValue(obj[key])) {\n                        return obj['data'];\n                    }\n                    else {\n                        var kk = this.frameObject({}, obj[key]);\n                        if (this.isValue(kk) || Object.keys(kk).length > 0) {\n                            final[key] = kk;\n                        }\n                    }\n                }\n            }\n        }\n        return final;\n    };\n    return DeepDiffMapper;\n}());\nexport { DeepDiffMapper };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from '../objects/node';\nimport { getInOutConnectPorts, cloneBlazorObject, getDropEventArguements, getObjectType, checkPort } from '../utility/diagram-util';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param {CommandHandler} command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        this.deepDiffer = new DeepDiffMapper();\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.checkProperty = true;\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(true);\n            this.commandHandler.ismouseEvents(true);\n        }\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.checkProperty = true;\n    };\n    ToolBase.prototype.checkPropertyValue = function () {\n        if (this.checkProperty) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n        }\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        if (this.inAction) {\n            this.commandHandler.startTransaction(this.isProtectChange);\n            this.checkProperty = false;\n        }\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        if (isBlazor()) {\n            this.commandHandler.enableCloneObject(false);\n            this.commandHandler.ismouseEvents(false);\n            this.commandHandler.getBlazorOldValues(args, this instanceof LabelDragTool);\n        }\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.clearSelectedItems();\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        //rubber band selection\n        if (!this.commandHandler.isUserHandle(this.currentPosition)) {\n            if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n                var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n                this.commandHandler.doRubberBandSelection(region);\n            }\n            else {\n                //single selection\n                var arrayNodes = this.commandHandler.getSelectedObject();\n                if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                    this.commandHandler.clearSelection(args.source === null ? true : false);\n                    if (this.action === 'LabelSelect') {\n                        this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                    }\n                    else if (args.source) {\n                        this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                    }\n                }\n                else {\n                    //handling multiple selection\n                    if (args && args.source) {\n                        if (!this.commandHandler.isSelected(args.source)) {\n                            this.commandHandler.selectObjects([args.source], true);\n                        }\n                        else {\n                            if (args.clickCount === 1) {\n                                this.commandHandler.unSelect(args.source);\n                                this.commandHandler.updateBlazorSelector();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.isConnected = false;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectorModel, connector, arg, trigger, temparg, oldValue, connectors, i, segment, segmentpoint1, segmentpoint2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && args && args.source)) return [3 /*break*/, 2];\n                        selectorModel = args.source;\n                        if (!selectorModel.connectors) return [3 /*break*/, 2];\n                        connector = selectorModel.connectors[0];\n                        this.oldConnector = cloneObject(connector);\n                        arg = {\n                            connector: cloneBlazorObject(connector),\n                            oldValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            newValue: { connectorTargetValue: { portId: undefined, nodeId: undefined } },\n                            cancel: false, state: 'Changing', connectorEnd: this.endPoint\n                        };\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, arg)];\n                    case 1:\n                        temparg = (_a.sent()) || arg;\n                        this.tempArgs = temparg;\n                        if (arg.cancel || (temparg && temparg.cancel)) {\n                            this.canCancel = true;\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.inAction = true;\n                        this.undoElement = undefined;\n                        if (!(this instanceof ConnectorDrawingTool)) {\n                            this.undoElement = cloneObject(args.source);\n                        }\n                        _super.prototype.mouseDown.call(this, args);\n                        if (args.source && args.source.connectors) {\n                            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                            connectors = args.source.connectors[0];\n                            this.oldConnector = cloneObject(connectors);\n                        }\n                        // Sets the selected segment \n                        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n                            for (i = 0; i < connectors.segments.length; i++) {\n                                segment = connectors.segments[i];\n                                segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                                segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                                    this.selectedSegment = segment;\n                                }\n                            }\n                        }\n                        this.currentPosition = args.position;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var trigger, temparg, connector, nodeEndId, portEndId, connector, nodeEndId, portEndId, arg, oldValues, connector, targetPortName, targetNodeNode, target, arg, trigger, obj, entry, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        trigger = DiagramEvent.connectionChange;\n                        temparg = void 0;\n                        this.tempArgs.state = 'Changed';\n                        connector = args.source.connectors[0];\n                        nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                        portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                        this.tempArgs.oldValue = this.endPoint === 'ConnectorSourceEnd' ?\n                            { connectorSourceValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } } :\n                            { connectorTargetValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] } };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(trigger, this.tempArgs)];\n                    case 1:\n                        temparg = (_a.sent());\n                        if (temparg) {\n                            this.commandHandler.updateConnectorValue(temparg);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        if (!isBlazor() && this.isConnected && args.source.connectors) {\n                            connector = args.source.connectors[0];\n                            nodeEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                            portEndId = this.endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                            arg = {\n                                connector: cloneBlazorObject(connector),\n                                oldValue: { nodeId: this.oldConnector[nodeEndId], portId: this.oldConnector[portEndId] },\n                                newValue: { nodeId: connector[nodeEndId], portId: connector[portEndId] }, cancel: false,\n                                state: 'Changed', connectorEnd: this.endPoint\n                            };\n                            if (connector[nodeEndId] !== this.oldConnector[nodeEndId]) {\n                                this.commandHandler.triggerEvent(DiagramEvent.connectionChange, arg);\n                                this.isConnected = false;\n                            }\n                        }\n                        this.checkPropertyValue();\n                        this.commandHandler.updateSelector();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.changeAnnotationDrag(args);\n                        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n                            args.source.connectors.length &&\n                            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n                            (this.endPoint === 'ConnectorTargetEnd' &&\n                                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n                            oldValues = void 0;\n                            connector = void 0;\n                            if (args.source && args.source.connectors) {\n                                oldValues = {\n                                    x: this.prevPosition.x, y: this.prevPosition.y\n                                };\n                                connector = args.source.connectors[0];\n                            }\n                            targetPortName = void 0;\n                            targetNodeNode = void 0;\n                            if (args.target) {\n                                target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n                            }\n                            arg = {\n                                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n                            };\n                            if (isBlazor()) {\n                                arg = {\n                                    connector: cloneBlazorObject(connector), state: 'Completed', targetNode: targetNodeNode,\n                                    oldValue: cloneBlazorObject(oldValues), newValue: oldValues, cancel: arg.cancel, targetPort: targetPortName\n                                };\n                            }\n                            trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                            this.commandHandler.triggerEvent(trigger, arg);\n                            this.commandHandler.removeTerminalSegment(connector, true);\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                                    category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        else if (!(this instanceof ConnectorDrawingTool) &&\n                            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n                            if (this.undoElement && args.source) {\n                                obj = void 0;\n                                obj = cloneObject(args.source);\n                                entry = {\n                                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                                };\n                                this.commandHandler.addHistoryEntry(entry);\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:disable */\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var tempArgs;\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connectors), state: 'Start', targetNode: targetNode,\n                    oldValue: oldValue, newValue: oldValue, cancel: arg.cancel, targetPort: targetPort\n                };\n            }\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = { x: this.currentPosition.x, y: this.currentPosition.y, };\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector), state: 'Progress', targetNode: targetNodeId,\n                    oldValue: oldValue, newValue: newValue, cancel: arg.cancel, targetPort: targetPortId\n                };\n            }\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                        this.isConnected = true;\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                            this.isConnected = true;\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.isConnected = true;\n                            tempArgs = this.commandHandler.connect(this.endPoint, args, this.canCancel);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.isConnected = true;\n                    tempArgs = this.commandHandler.disConnect(args.source, this.endPoint, this.canCancel);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n            if (tempArgs) {\n                this.tempArgs = tempArgs;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.canCancel = false;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey, arrayNodes);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.initialOffset = { x: 0, y: 0 };\n            if (args.source) {\n                oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n            }\n            var arg = {\n                source: cloneObject(args.source), state: 'Start', oldValue: oldValues, newValue: {},\n                target: cloneObject(args.target), targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var oldValues, newValues, arg, blazorArgs, tx, ty, obj, historyAdded, object, redoObject, wrapper, arg, entry, entry_1, snappedPoint, arg, nodes, isEndGroup, i, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(isBlazor() && this.objectType !== 'Port')) return [3 /*break*/, 2];\n                        if (args.source) {\n                            newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                            oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        }\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed',\n                            oldValue: cloneBlazorObject(this.tempArgs.oldValue), newValue: cloneBlazorObject(newValues),\n                            target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                            allowDrop: true, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg)];\n                    case 1:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            tx = this.tempArgs.oldValue.offsetX - args.source.wrapper.offsetX;\n                            ty = this.tempArgs.oldValue.offsetY - args.source.wrapper.offsetY;\n                            this.commandHandler.dragSelectedObjects(tx, ty);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.checkPropertyValue();\n                        historyAdded = false;\n                        redoObject = { nodes: [], connectors: [] };\n                        if (!(this.objectType !== 'Port')) return [3 /*break*/, 7];\n                        if (args.source instanceof Node || args.source instanceof Connector) {\n                            if (args.source instanceof Node) {\n                                redoObject.nodes.push(cloneObject(args.source));\n                            }\n                            else {\n                                redoObject.connectors.push(cloneObject(args.source));\n                            }\n                            obj = cloneObject(redoObject);\n                            wrapper = args.source.wrapper;\n                            obj.offsetX = wrapper.offsetX;\n                            obj.offsetY = wrapper.offsetY;\n                        }\n                        else {\n                            obj = cloneObject(args.source);\n                        }\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                            || (object.id !== 'helper')) {\n                            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                                if (args.source) {\n                                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                                }\n                                arg = {\n                                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: cloneBlazorObject(oldValues), newValue: cloneBlazorObject(newValues),\n                                    target: cloneBlazorObject(this.currentTarget), targetPosition: cloneBlazorObject(this.currentPosition),\n                                    allowDrop: arg.allowDrop, cancel: arg.cancel\n                                };\n                                if (isBlazor()) {\n                                    arg = this.getBlazorPositionChangeEventArgs(arg, this.currentTarget);\n                                }\n                                if (!isBlazor()) {\n                                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                                }\n                                if (!isPreventHistory) {\n                                    this.commandHandler.startGroupAction();\n                                    historyAdded = true;\n                                    entry = {\n                                        type: 'PositionChanged',\n                                        redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                                    };\n                                    if (obj.nodes[0] && obj.nodes[0].processId) {\n                                        entry_1 = {\n                                            type: 'SizeChanged', category: 'Internal',\n                                            undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                                        };\n                                        this.commandHandler.addHistoryEntry(entry_1);\n                                    }\n                                    this.commandHandler.addHistoryEntry(entry);\n                                }\n                            }\n                        }\n                        snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.removeHighlighter();\n                        if (!(args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                            this.commandHandler.isDroppable(args.source, this.currentTarget))) return [3 /*break*/, 6];\n                        this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                        arg = {\n                            element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 4];\n                        arg = getDropEventArguements(args, arg);\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.drop, arg)];\n                    case 3:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 5];\n                    case 4:\n                        this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 5;\n                    case 5:\n                        if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                            nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                            isEndGroup = false;\n                            for (i = 0; i < nodes.length; i++) {\n                                if (!nodes[i].container) {\n                                    isEndGroup = true;\n                                    this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                                    this.commandHandler.renderContainerHelper(nodes[i]);\n                                }\n                            }\n                            if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        _a.label = 6;\n                    case 6:\n                        if (args.source && this.currentTarget) {\n                            this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n                        }\n                        this.commandHandler.updateSelector();\n                        if (historyAdded && !this.commandHandler.isContainer) {\n                            this.commandHandler.endGroupAction();\n                        }\n                        return [3 /*break*/, 8];\n                    case 7:\n                        redoObject.nodes.push(cloneObject(args.source));\n                        args.portId = this.portId;\n                        obj = cloneObject(redoObject);\n                        entry = {\n                            type: 'PortPositionChanged', objectId: this.portId,\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        this.commandHandler.addHistoryEntry(entry);\n                        _a.label = 8;\n                    case 8:\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MoveTool.prototype.getBlazorPositionChangeEventArgs = function (args, target) {\n        args = {\n            source: cloneBlazorObject(args.source), state: args.state, oldValue: args.oldValue, newValue: args.newValue,\n            target: getObjectType(target) === Connector ? { connector: cloneBlazorObject(target) }\n                : { node: cloneBlazorObject(target) },\n            targetPosition: this.currentPosition, allowDrop: true, cancel: false\n        };\n        return args;\n    };\n    /* tslint:disable */\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        arg = {\n            source: cloneBlazorObject(object), state: 'Start', oldValue: cloneBlazorObject(oldValues),\n            newValue: cloneBlazorObject(oldValues),\n            target: args.target, targetPosition: args.position, allowDrop: arg.allowDrop, cancel: arg.cancel\n        };\n        if (isSame && !isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            if (isBlazor()) {\n                arg_1 = this.getBlazorPositionChangeEventArgs(arg_1, args.target);\n            }\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            }\n            if (!arg_1.cancel && !this.canCancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        if (isBlazor()) {\n            var object = void 0;\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValue, newValue: undefined, cancel: false\n            };\n            var temparg = arg;\n            this.tempArgs = temparg;\n            if (this.tempArgs && this.tempArgs.cancel) {\n                this.canCancel = true;\n            }\n        }\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var object_2, oldValue, newValue, arg, args1, object, oldValue, arg, obj, entry;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.checkPropertyValue();\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        object_2 = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        oldValue = { rotateAngle: this.tempArgs.oldValue.rotateAngle };\n                        newValue = { rotateAngle: object_2.wrapper.rotateAngle };\n                        arg = {\n                            source: cloneBlazorObject(args.source), state: 'Completed', oldValue: oldValue, newValue: newValue, cancel: false\n                        };\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg)];\n                    case 1:\n                        args1 = _a.sent();\n                        if (args1 && args1.cancel) {\n                            this.canCancel = true;\n                        }\n                        if (this.canCancel) {\n                            this.commandHandler.rotatePropertyChnage(this.tempArgs.oldValue.rotateAngle);\n                        }\n                        _a.label = 2;\n                    case 2:\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n                            oldValue = { rotateAngle: object.wrapper.rotateAngle };\n                            arg = {\n                                source: args.source, state: 'Completed', oldValue: oldValue,\n                                newValue: oldValue, cancel: false\n                            };\n                            if (!isBlazor())\n                                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n                            obj = void 0;\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            this.commandHandler.addHistoryEntry(entry);\n                            this.commandHandler.updateSelector();\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        this.canCancel = undefined;\n                        this.tempArgs = undefined;\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n            }\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        var arg1 = {\n            source: cloneBlazorObject(args.source), state: 'Progress', oldValue: cloneBlazorObject(oldValue),\n            newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg1);\n        }\n        if ((!isBlazor() && !arg1.cancel) || (isBlazor() && !this.canCancel)) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.canCancel = false;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        var oldValues;\n        if (isBlazor()) {\n            this.startPosition = this.currentPosition = this.prevPosition = args.position;\n            this.currentElement = args.source;\n            this.initialBounds.x = args.source.wrapper.offsetX;\n            this.initialBounds.y = args.source.wrapper.offsetY;\n            this.initialBounds.height = args.source.wrapper.actualSize.height;\n            this.initialBounds.width = args.source.wrapper.actualSize.width;\n            if (args.source) {\n                oldValues = {\n                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                };\n            }\n            var arg = {\n                source: cloneBlazorObject(args.source), state: 'Start', oldValue: oldValues, newValue: cloneBlazorObject(this.currentElement), cancel: false\n            };\n            this.tempArgs = arg;\n        }\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var obj, oldValues, arg, blazarArgs, scaleWidth, scaleHeight, object, deltaValues, oldValue, arg, obj, entry, entry_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!isBlazor()) return [3 /*break*/, 3];\n                        obj = cloneObject(args.source);\n                        oldValues = {\n                            width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height,\n                            offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY\n                        };\n                        arg = {\n                            oldValue: this.tempArgs.oldValue, newValue: oldValues, cancel: false,\n                            source: cloneBlazorObject(args.source), state: 'Completed'\n                        };\n                        if (!!this.canCancel) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg)];\n                    case 1:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel) {\n                            scaleWidth = this.tempArgs.oldValue.width / obj.wrapper.actualSize.width;\n                            scaleHeight = this.tempArgs.oldValue.height / obj.wrapper.actualSize.height;\n                            this.commandHandler.scaleSelectedItems(scaleWidth, scaleHeight, this.getPivot(this.corner));\n                        }\n                        _a.label = 2;\n                    case 2:\n                        this.tempArgs = undefined;\n                        this.canCancel = undefined;\n                        _a.label = 3;\n                    case 3:\n                        this.checkPropertyValue();\n                        this.commandHandler.removeSnap();\n                        this.commandHandler.updateSelector();\n                        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n                        if ((this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY)) {\n                            if (!isBlazor()) {\n                                deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n                                this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n                                oldValue = {\n                                    offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                                    width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n                                };\n                                arg = {\n                                    source: cloneBlazorObject(args.source), state: 'Completed',\n                                    oldValue: oldValue, newValue: oldValue, cancel: false\n                                };\n                                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n                            }\n                            obj = cloneObject(args.source);\n                            entry = {\n                                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                                childTable: this.childTable\n                            };\n                            if (!isPreventHistory) {\n                                this.commandHandler.startGroupAction();\n                                this.commandHandler.addHistoryEntry(entry);\n                                if (obj.nodes[0] && obj.nodes[0].processId) {\n                                    entry_2 = {\n                                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                                        undoObject: this.undoParentElement, category: 'Internal'\n                                    };\n                                    this.commandHandler.addHistoryEntry(entry_2);\n                                }\n                                this.commandHandler.endGroupAction();\n                            }\n                        }\n                        this.commandHandler.updateBlazorSelector();\n                        _super.prototype.mouseUp.call(this, args);\n                        return [2 /*return*/, !this.blocked];\n                }\n            });\n        });\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            if (!isBlazor()) {\n                this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            }\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        var arg1;\n        arg1 = {\n            source: cloneBlazorObject(source), state: 'Progress',\n            oldValue: cloneBlazorObject(oldValue), newValue: cloneBlazorObject(newValue), cancel: arg.cancel\n        };\n        if (!isBlazor()) {\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg1);\n        }\n        if (arg1.cancel || this.canCancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.commandHandler.updateBlazorSelector();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /** @private */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                _super.prototype.mouseDown.call(this, args);\n                this.inAction = true;\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if ((args.target || (args.actualObject && checkPort(args.actualObject, args.sourceWrapper)))\n                && (this.endPoint !== 'ConnectorTargetEnd' || (canInConnect(args.target)))) {\n                this.commandHandler.diagram.allowServerDataBinding = false;\n                this.commandHandler.connect(this.endPoint, args);\n                this.commandHandler.diagram.allowServerDataBinding = true;\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.checkPropertyValue();\n                if (this.drawingObject && this.drawingObject instanceof Connector) {\n                    this.commandHandler.addObjectToDiagram(this.drawingObject);\n                    this.drawingObject = null;\n                }\n                this.commandHandler.updateBlazorSelector();\n                this.inAction = false;\n                _super.prototype.mouseUp.call(this, args);\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            if (isBlazor() && node.shape.type === 'Basic') {\n                node.shape.basicShape = 'Polygon';\n            }\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                var drawObject = this.drawingObject;\n                drawObject.segments[drawObject.segments.length - 1].point = { x: 0, y: 0 };\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.checkPropertyValue();\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3, cloneBlazorObject } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { DiagramEvent } from './../enum/enum';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        var connectors;\n        var edit = true;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        if (args.info) {\n            edit = args.info.ctrlKey && args.actualObject.type !== 'Orthogonal';\n        }\n        if (connectors && edit) {\n            this.inAction = true;\n            this.undoElement = cloneObject(args.source);\n            _super.prototype.mouseDown.call(this, args);\n            // Sets the selected segment         \n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                if (this.endPoint === 'OrthoThumb') {\n                    for (var j = 0; j < segment.points.length - 1; j++) {\n                        var segPoint = { x: 0, y: 0 };\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(this.currentPosition, segPoint, 30)) {\n                            this.selectedSegment = segment;\n                            this.segmentIndex = j;\n                        }\n                    }\n                }\n                else {\n                    if (contains(this.currentPosition, segment.point, 10)) {\n                        this.selectedSegment = segment;\n                    }\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if ((this.inAction && this.selectedSegment !== undefined && this.endPoint !== undefined) && (diffX !== 0 || diffY !== 0)) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        var oldValues;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n            oldValues = { segments: connector.segments };\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector, oldValues);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var removeSegments = connector.segments.slice(index - 1, index + 1);\n            var args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: args.cancel\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                var last = connector.segments[index + 1];\n                connector.segments.splice(index - 1, 2);\n                var segment = this.selectedSegment;\n                if (segment.direction === 'Left' || segment.direction === 'Right') {\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                    last.points[0].y = first.points[first.points.length - 1].y;\n                }\n                else {\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                    last.points[0].x = first.points[first.points.length - 1].x;\n                }\n                if (segment.length || segment.length === 0) {\n                    this.findSegmentDirection(first);\n                }\n                this.findSegmentDirection(last);\n            }\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        var removeSegments;\n        var args;\n        if (next.length || next.length === 0) {\n            removeSegments = connector.segments.slice(index, 2);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            args = {\n                element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: cloneBlazorObject(connector), removeSegments: cloneBlazorObject(removeSegments),\n                    type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index, 2);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    last.points[0].y = segment.points[0].y;\n                    first.points[first.points.length - 1].x = last.points[0].x;\n                }\n                else {\n                    last.points[0].x = segment.points[0].x;\n                    first.points[first.points.length - 1].y = last.points[0].y;\n                }\n            }\n        }\n        else {\n            removeSegments = connector.segments.slice(index + 1, 1);\n            args = {\n                element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n            };\n            if (isBlazor()) {\n                args = {\n                    element: connector, removeSegments: removeSegments, type: 'Removal', cancel: false\n                };\n            }\n            this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n            if (!args.cancel) {\n                connector.segments.splice(index + 1, 1);\n                if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                    first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n                }\n                else {\n                    first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n                }\n                this.findSegmentDirection(first);\n                segment.length = segment.direction = null;\n            }\n        }\n        if (first && last && !args.cancel) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        var oldValues = { segments: connector.segments };\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            this.commandHandler.enableServerDataBinding(false);\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n            this.commandHandler.enableServerDataBinding(true);\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        var oldValues = { segments: obj.segments };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (index) {\n                if (update) {\n                    this.selectedSegment = segment = obj.segments[index];\n                    this.segmentIndex = 0;\n                }\n                this.updateAdjacentSegments(obj, index, tx, ty);\n                this.commandHandler.updateEndPoint(obj, oldValues);\n            }\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel, element: cloneBlazorObject(obj),\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            obj.segments = segments.concat(obj.segments);\n            index = coll + 2;\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n        }\n        var args = {\n            element: obj, addSegments: segments, type: 'Addition', cancel: false\n        };\n        if (isBlazor()) {\n            args = {\n                element: cloneBlazorObject(obj), addSegments: cloneBlazorObject(segments), type: 'Addition',\n                cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args);\n        if (!args.cancel) {\n            if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n                obj.segments.splice(0, 1);\n                index = 1;\n            }\n            else {\n                var nextseg = obj.segments[1];\n                if (nextseg && nextseg.length) {\n                    nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n                }\n                index = 2;\n                segment.length = 2 * segment.length / 3;\n            }\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var oldValues = { segments: connector.segments };\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        var segments = [];\n        var removeSegment = connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        segments.push(lastseg);\n        var args = {\n            element: connector, addSegments: segments, type: 'Addition', cancel: false\n        };\n        var args1;\n        args1 = {\n            element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n            type: 'Addition', cancel: args.cancel\n        };\n        if (isBlazor()) {\n            args1 = {\n                element: cloneBlazorObject(connector), addSegments: cloneBlazorObject(segments),\n                type: 'Addition', cancel: args.cancel\n            };\n        }\n        this.commandHandler.triggerEvent(DiagramEvent.segmentCollectionChange, args1);\n        if (!args1.cancel) {\n            connector.segments = connector.segments.concat(segments);\n            index = index + segmentIndex;\n        }\n        else {\n            connector.segments.push(removeSegment);\n        }\n        this.commandHandler.updateEndPoint(connector);\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        var oldValues = { segments: connector.segments };\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector, oldValues);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from '../objects/node';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction, DiagramConstraints } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes, cloneBlazorObject } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        this.previousAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.keyArgs = {};\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x + diagramCanvas.scrollLeft, y: y + diagramCanvas.scrollTop })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.checkPreviousAction = function () {\n        if (this.action !== this.previousAction && this.diagram.selectedItems.userHandles.length) {\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if (this.previousAction && this.diagram.selectedItems.userHandles[i]) {\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseLeave);\n                    this.previousAction = 'None';\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkUserHandleEvent = function (eventName) {\n        if (this.diagram.selectedItems && this.diagram.selectedItems.userHandles.length > 0) {\n            var currentAction = (eventName === DiagramEvent.onUserHandleMouseLeave) ? this.previousAction : this.action;\n            var arg = { element: undefined };\n            for (var i = 0; i < this.diagram.selectedItems.userHandles.length; i++) {\n                if ((currentAction === this.diagram.selectedItems.userHandles[i].name) ||\n                    (eventName === DiagramEvent.onUserHandleMouseUp && currentAction === 'Select')) {\n                    arg.element = this.diagram.selectedItems.userHandles[i];\n                    if (eventName === DiagramEvent.onUserHandleMouseEnter) {\n                        this.previousAction = this.action;\n                    }\n                    if (eventName === DiagramEvent.onUserHandleMouseDown) {\n                        this.userHandleObject = this.diagram.selectedItems.userHandles[i].name;\n                    }\n                    var element = document.getElementById(this.diagram.selectedItems.userHandles[i].name + '_userhandle');\n                    if (eventName === DiagramEvent.onUserHandleMouseUp) {\n                        if (this.commandHandler.isUserHandle(this.currentPosition)\n                            && element && element.id === this.userHandleObject + '_userhandle') {\n                            this.diagram.triggerEvent(eventName, arg);\n                        }\n                    }\n                    else {\n                        this.diagram.triggerEvent(eventName, arg);\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.diagram.selectedItems);\n        }\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseDown);\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: cloneBlazorObject(this.diagram), position: cloneBlazorObject(this.currentPosition),\n                    count: evt.buttons, actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, this.currentPosition);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    DiagramEventHandler.prototype.isSwimlaneElements = function (obj) {\n        if (obj && (obj.isLane || obj.isPhase || obj.isHeader)) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            var content_1 = this.getContent();\n                            if (this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content_1 !== '') {\n                                this.elementLeave();\n                            }\n                            this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            var canResetElement = true;\n                            if (!this.isSwimlaneElements(obj)\n                                && (this.hoverElement && this.isSwimlaneElements(this.hoverElement))) {\n                                canResetElement = false;\n                            }\n                            this.hoverElement = canResetElement ? obj : this.hoverElement;\n                            if (canResetElement) {\n                                this.elementEnter(this.currentPosition, false);\n                            }\n                            else {\n                                this.hoverElement = obj;\n                            }\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseEnter);\n                    this.checkPreviousAction();\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool))\n                        && (obj instanceof Node && this.isSwimlaneElements(obj)) &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    var content = this.getContent();\n                    if (obj === null && this.hoverElement && this.hoverElement.tooltip.openOn === 'Auto' && content) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getContent = function () {\n        var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n            this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n            ((this.hoverElement instanceof Connector) &&\n                this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n        var content = isPrivateTooltip ? this.hoverElement.tooltip.content :\n            this.diagram.tooltip.content;\n        return content;\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        this.checkUserHandleEvent(DiagramEvent.onUserHandleMouseUp);\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                        if (this.diagram.checkMenu && (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.diagram.contextMenuModule.contextMenu.open(evt.pageY, evt.pageX, this.diagram.element);\n                            this.diagram.checkMenu = false;\n                        }\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                this.commandHandler.updateSelectedNodeProperties(this.eventArgs.source);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: cloneBlazorObject(this.eventArgs.source) || cloneBlazorObject(this.diagram),\n                    position: cloneBlazorObject(this.eventArgs.position), count: evt.detail,\n                    actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n                if (isBlazor() && this.diagram.click) {\n                    arg = this.getBlazorClickEventArgs(arg);\n                }\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /* tslint:enable */\n    DiagramEventHandler.prototype.getBlazorClickEventArgs = function (arg) {\n        arg = {\n            element: this.eventArgs.source ? { selector: cloneBlazorObject(this.eventArgs.source) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n            position: cloneBlazorObject(this.eventArgs.position), count: arg.count,\n            actualObject: this.eventArgs.actualObject ? { selector: cloneBlazorObject(this.eventArgs.actualObject) } :\n                { diagram: cloneBlazorObject(this.diagram) },\n        };\n        if (this.eventArgs.source instanceof Node) {\n            arg.element.selector.nodes = [];\n            arg.element.selector.nodes.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        else if (this.eventArgs.source instanceof Connector) {\n            arg.element.selector.connectors = [];\n            arg.element.selector.connectors.push(cloneBlazorObject(this.eventArgs.source));\n        }\n        return arg;\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        if (this.diagram.diagramActions & DiagramAction.Interactions || this.diagram.diagramActions & DiagramAction.ToolAction) {\n            this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.elementLeave();\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n            this.diagram.remove(this.diagram.selectedObject.helperObject);\n            this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n        }\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        this.diagram.blazorActions = BlazorAction.interaction;\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n        this.diagram.blazorActions = this.diagram.blazorActions & ~BlazorAction.interaction;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (isBlazor() || (canExecute &&\n                                canExecute({\n                                    'keyDownEventArgs': KeyboardEvent,\n                                    parameter: command.parameter\n                                }))) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    if (this.diagram.tool !== DiagramTools.ZoomPan) {\n                                        // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                        //     command.execute()\n                                        // } else {\n                                        var execute = getFunction(command.execute);\n                                        execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    }\n                                    // }\n                                }\n                                if (isBlazor()) {\n                                    var arg = { gesture: command.gesture };\n                                    this.diagram.triggerEvent(DiagramEvent.commandExecute, arg);\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems),\n            key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyDown, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.getlabel = function (args, evt) {\n        var label = this.diagram.activeLabel;\n        args.target = this.diagram.element.id + '_editBox';\n        var node = this.diagram.nameTable[label.parentId];\n        args.text = document.getElementById(this.diagram.element.id + '_editBox').value;\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (node.annotations[i].id === label.id) {\n                args.label = node.annotations[i];\n                break;\n            }\n        }\n    };\n    DiagramEventHandler.prototype.getKeyModifier = function (args, evt) {\n        args.keyModifiers = KeyModifiers.None;\n        if (evt.ctrlKey) {\n            args.keyModifiers |= KeyModifiers.Control;\n        }\n        if (evt.shiftKey) {\n            args.keyModifiers |= KeyModifiers.Shift;\n        }\n        if (evt.altKey) {\n            args.keyModifiers |= KeyModifiers.Alt;\n        }\n        if (this.isMetaKey(evt)) {\n            args.keyModifiers |= KeyModifiers.Meta;\n        }\n    };\n    DiagramEventHandler.prototype.keyUp = function (evt) {\n        this.keyArgs = {\n            element: cloneBlazorObject(this.diagram.selectedItems), key: evt.key, keyCode: evt.keyCode ? evt.keyCode : evt.which,\n        };\n        var selectedObject = (this.diagram.selectedItems.nodes.length) ?\n            this.diagram.selectedItems.nodes : this.diagram.selectedItems.connectors;\n        this.getKeyModifier(this.keyArgs, evt);\n        if ((this.diagram.diagramActions & DiagramAction.TextEdit)) {\n            this.getlabel(this.keyArgs, evt);\n        }\n        this.diagram.triggerEvent(DiagramEvent.keyUp, this.keyArgs);\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (Browser.info.name === 'mozilla') {\n            if (this.diagram.scroller.viewPortWidth === 0) {\n                var bounds = document.getElementById(this.diagram.element.id).getBoundingClientRect();\n                if (bounds.width !== this.diagram.scroller.viewPortWidth) {\n                    this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n                }\n            }\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.currentPosition = this.eventArgs.position;\n            var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n            this.eventArgs.target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: {}\n        };\n        if (!isBlazor()) {\n            arg = {\n                targets: cloneBlazorObject(target),\n                element: cloneBlazorObject((this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source),\n                actualObject: cloneBlazorObject(this.eventArgs.actualObject)\n            };\n        }\n        if (isBlazor() && (this.diagram.mouseEnter || this.diagram.mouseOver)) {\n            arg.actualObject = getObjectType(this.eventArgs.actualObject) === Connector ? {\n                connector: cloneBlazorObject(this.eventArgs.actualObject)\n            }\n                : {\n                    node: cloneBlazorObject(this.eventArgs.actualObject)\n                };\n            arg.targets.connector = [];\n            arg.targets.node = [];\n            this.getBlazorCollectionObject(target, arg);\n        }\n        if (this.lastObjectUnderMouse && this.diagram.mouseLeave\n            && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = {\n                targets: undefined, element: cloneBlazorObject(this.lastObjectUnderMouse), actualObject: undefined\n            };\n            if (isBlazor()) {\n                arg_1 = {\n                    targets: undefined,\n                    element: getObjectType(this.lastObjectUnderMouse) === Connector ? { connector: cloneBlazorObject(target) }\n                        : {\n                            node: cloneBlazorObject(this.lastObjectUnderMouse)\n                        },\n                    actualObject: undefined\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            if (this.eventArgs.actualObject !== undefined) {\n                this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n            }\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.getBlazorCollectionObject = function (obj, arg1) {\n        if (obj) {\n            for (var i = 0; i < obj.length; i++) {\n                if (getObjectType(obj[i]) === Connector) {\n                    arg1.targets.connector.push(cloneBlazorObject(obj[i]));\n                }\n                else {\n                    arg1.targets.node.push(cloneBlazorObject(obj[i]));\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            var content = this.getContent();\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            }\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            if (this.hoverElement.tooltip.openOn === 'Auto' && content !== '') {\n                this.diagram.tooltipObject.close();\n                this.diagram.tooltipObject.offsetX = offset.x;\n                this.diagram.tooltipObject.offsetY = offset.y;\n                this.diagram.tooltipObject.dataBind();\n            }\n            if (canEnableToolTip(this.hoverElement, this.diagram) && this.hoverElement.tooltip.openOn === 'Auto') {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                        position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.wrapper.children[1].id.split('_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: cloneBlazorObject(obj) || cloneBlazorObject(this.diagram),\n                position: this.currentPosition, count: evt.detail\n            };\n            if (isBlazor()) {\n                var selector = void 0;\n                if (obj instanceof Node) {\n                    selector = { nodes: [cloneBlazorObject(obj)] };\n                }\n                else if (obj instanceof Connector) {\n                    selector = { connectors: [cloneBlazorObject(obj)] };\n                }\n                else {\n                    selector = cloneBlazorObject(obj);\n                }\n                arg = {\n                    source: obj ? { selector: selector } : { diagram: cloneBlazorObject(this.diagram) },\n                    position: this.currentPosition, count: evt.detail\n                };\n            }\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var basicShape = 'basicShape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && (this.diagram.drawingObject.shape[shape] === 'Polygon' ||\n                    (isBlazor() && this.diagram.drawingObject.shape[basicShape] === 'Polygon')) &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject && this.diagram.selectedObject.actualObject instanceof Node) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.selectObjects([obj]);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    // tslint:disable-next-line:max-func-body-length\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj instanceof Node) {\n                if (obj.shape.type === 'SwimLane') {\n                    connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n                }\n                if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                    if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                        this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                        target = this.diagram.getObject(target.parentId);\n                    }\n                }\n                if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                    this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                    target.container && target.container.type === 'Canvas' && target.isLane &&\n                    obj.isLane && target.parentId === obj.parentId) {\n                    laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                    history.isPreventHistory = true;\n                }\n                else {\n                    var parentNode = this.diagram.nameTable[obj.parentId];\n                    if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                        if (parentNode && parentNode.isLane && (obj.constraints & NodeConstraints.AllowMovingOutsideLane)) {\n                            var swimlane = this.diagram.getObject(parentNode.parentId);\n                            var laneId = swimlane.id + swimlane.shape.lanes[0].id + '0';\n                            var firstlane = this.diagram.getObject(laneId);\n                            var x = firstlane.wrapper.bounds.x;\n                            var y = firstlane.wrapper.bounds.y;\n                            var width = swimlane.wrapper.bounds.bottomRight.x - x;\n                            var height = swimlane.wrapper.bounds.bottomRight.y - y;\n                            var swimlaneBounds = new Rect(x, y, width, height);\n                            if (swimlaneBounds.containsPoint(this.currentPosition)) {\n                                obj.offsetX = helperObject.offsetX;\n                                obj.offsetY = helperObject.offsetY;\n                                obj.width = helperObject.width;\n                                obj.height = helperObject.height;\n                                obj.rotateAngle = helperObject.rotateAngle;\n                            }\n                        }\n                        else {\n                            obj.offsetX = helperObject.offsetX;\n                            obj.offsetY = helperObject.offsetY;\n                            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                                if (obj.shape.type !== 'Bpmn' ||\n                                    (obj.shape.type === 'Bpmn' && obj.shape.shape !== 'TextAnnotation')) {\n                                    obj.width = helperObject.width;\n                                    obj.height = helperObject.height;\n                                }\n                            }\n                            obj.rotateAngle = helperObject.rotateAngle;\n                        }\n                    }\n                    var undoElement = void 0;\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                        this.diagram.startGroupAction();\n                        hasGroup = true;\n                    }\n                    if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                        var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                        undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                        if (index > -1) {\n                            var children = parentNode.children;\n                            children.splice(children.indexOf(obj.id), 1);\n                            this.diagram.nameTable[obj.id].parentId = '';\n                            hasStack = true;\n                            parentNode.wrapper.children.splice(index, 1);\n                        }\n                    }\n                    moveChildInStack(obj, target, this.diagram, this.action);\n                    parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                        (this.diagram.nameTable[obj.parentId] || obj);\n                    if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                        parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                        parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                        isChangeProperties = true;\n                    }\n                    if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                    }\n                    if ((this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting))\n                        && (!checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: obj.width, height: obj.height,\n                            offsetX: obj.offsetX, offsetY: obj.offsetY\n                        });\n                    }\n                    if (obj.shape.lanes) {\n                        this.updateLaneChildNode(obj);\n                    }\n                    if (isChangeProperties) {\n                        parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                        parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                    }\n                    if (hasStack) {\n                        this.diagram.nodePropertyChange(parentNode, {}, {\n                            offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                            rotateAngle: parentNode.rotateAngle\n                        });\n                        var entry = {\n                            redoObject: { sourceIndex: undefined, source: undoElement.source },\n                            type: 'StackChildPositionChanged', undoObject: undoElement, category: 'Internal'\n                        };\n                        if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                            this.diagram.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj && obj.container && (obj.container.type === 'Stack' ||\n                        (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = true;\n                        }\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                        });\n                        if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                            obj.wrapper.measureChildren = false;\n                        }\n                    }\n                }\n                updateConnectorsProperties(connectors, this.diagram);\n                history.hasStack = hasGroup;\n            }\n        }\n        if (obj && (obj.isPhase || obj.isLane ||\n            (obj.shape && obj.shape.type === 'SwimLane'))) {\n            this.diagram.updateDiagramElementQuad();\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.clearSelection();\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var endPoint = 'endPoint';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    var tool = diagram[eventHandler].tool;\n                    if (objects[i] instanceof Node && ((canOutConnect(objects[i]) || (canPortOutConnect(outPort))) ||\n                        (action === 'PortDraw' && (tool instanceof ConnectTool) && tool[endPoint] == 'ConnectorTargetEnd' &&\n                            (canInConnect(objects[i]) || (canPortInConnect(inPort)))))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if ((action === 'Select' || action === 'Pan') && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        var objj1 = objects[i - 1];\n                        if (objects[i - 1] instanceof Node && objj1.ports) {\n                            var portElement = this.findTargetElement(objj1.wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objj1;\n                            }\n                            for (var j = 0; j < objj1.ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objj1.ports[j].id + '$')) {\n                                    if (canDraw(objj1.ports[j], diagram)) {\n                                        return objj1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node || objects[i] instanceof Connector) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { Diagram } from '../../diagram/diagram';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds, getFunction, getIndex } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { updatePathElement, cloneBlazorObject, getUserHandlePosition, cloneSelectedObjects } from './../utility/diagram-util';\nimport { updateDefaultValues } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from '../objects/node';\nimport { hasSelection, isSelected, hasSingleConnection, contains } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { BlazorAction } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction, RealAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector, canShowCorner } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints, DiagramConstraints } from '../enum/enum';\nimport { remove, isBlazor } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, canLaneInterchange, findLane } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\nimport { DeepDiffMapper } from '../utility/diff-map';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        // private newNodeObject: Object[] = [];\n        // private newConnectorObject: Object[] = [];\n        /**   @private  */\n        this.diagramObject = {};\n        /**   @private  */\n        this.newSelectedObjects = {};\n        /**   @private  */\n        this.oldSelectedObjects = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /**   @private  */\n        this.deepDiffer = new DeepDiffMapper();\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        if (this.diagram.selectedItems.setTooltipTemplate) {\n            var template = void 0;\n            var setTooltipTemplate = getFunction(this.diagram.selectedItems.setTooltipTemplate);\n            if (setTooltipTemplate) {\n                template = setTooltipTemplate(node, this.diagram);\n            }\n            if (template instanceof HTMLElement) {\n                content = template.cloneNode(true);\n            }\n            else {\n                content = template ? template : content;\n            }\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorValue = function (args) {\n        if (args.cancel) {\n            var newChanges = {};\n            var oldChanges = {};\n            var connector = this.diagram.nameTable[args.connector.id];\n            var nodeEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n            var portEndId = args.connectorEnd === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n            var connectionEnd = args.connectorEnd === 'ConnectorTargetEnd';\n            var newValue = connectionEnd ? args.newValue.connectorTargetValue : args.newValue.connectorSourceValue;\n            var oldValue = connectionEnd ? args.oldValue.connectorTargetValue : args.oldValue.connectorSourceValue;\n            oldChanges[nodeEndId] = newValue.nodeId;\n            oldChanges[portEndId] = newValue.portId;\n            newChanges[nodeEndId] = oldValue.nodeId;\n            newChanges[portEndId] = oldValue.portId;\n            if (args.cancel && args.connectorEnd !== 'ConnectorTargetEnd') {\n                connector.sourceID = oldValue.nodeId;\n                if (args.connector.sourcePortID) {\n                    connector.sourcePortID = oldValue.portId;\n                }\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n            if (args.cancel && args.connectorEnd === 'ConnectorTargetEnd') {\n                if (args.connector.targetPortID) {\n                    connector.targetPortID = oldValue.portId;\n                }\n                connector.targetID = oldValue.nodeId;\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var temparg;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n                            event === DiagramEvent.connectionChange) {\n                            if (this.diagram.currentSymbol) {\n                                return [2 /*return*/];\n                            }\n                            if (event === DiagramEvent.drop) {\n                                args.source = cloneBlazorObject(this.diagram);\n                            }\n                            if (this.diagram.currentDrawingObject && event !== DiagramEvent.positionChange) {\n                                return [2 /*return*/];\n                            }\n                        }\n                        return [4 /*yield*/, this.diagram.triggerEvent(event, args)];\n                    case 1:\n                        temparg = _a.sent();\n                        return [2 /*return*/, temparg];\n                }\n            });\n        });\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: cloneBlazorObject(args.source), target: cloneBlazorObject(args.target),\n                mousePosition: cloneBlazorObject(currentPosition), diagram: cloneBlazorObject(this.diagram)\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var oldChanges = {};\n        var newChanges = {};\n        var returnargs;\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (isBlazor()) {\n                this.diagram.insertValue(cloneObject(connector), false);\n            }\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: cloneBlazorObject(connector), oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        connector: cloneBlazorObject(connector),\n                        oldValue: { connector: cloneBlazorObject(oldChanges) },\n                        newValue: { connector: cloneBlazorObject(newChanges) },\n                        cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    returnargs = arg;\n                }\n                if (!checkBlazor) {\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    if (isBlazor()) {\n                        arg = {\n                            connector: cloneBlazorObject(connector), oldValue: { connector: oldChanges },\n                            newValue: { connector: newChanges }, cancel: false, state: 'Changed', connectorEnd: endPoint\n                        };\n                        returnargs = arg;\n                    }\n                    if (!checkBlazor) {\n                        this.triggerEvent(DiagramEvent.connectionChange, arg);\n                    }\n                }\n            }\n        }\n        return returnargs;\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint, canCancel) {\n        var checkBlazor = isBlazor();\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var connectedNode;\n        if (this.enableCloneObject) {\n            connectedNode = this.diagram.nameTable[newChanges[nodeEndId]];\n            var nodeObject = cloneObject(connectedNode);\n            this.diagram.insertValue(nodeObject, true);\n        }\n        var returnargs;\n        var arg = {\n            cancel: false, state: 'Changing', connectorEnd: endPoint,\n            connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n        };\n        if (isBlazor()) {\n            arg = {\n                connector: cloneBlazorObject(connector),\n                cancel: false, state: 'Changing', connectorEnd: endPoint,\n                oldValue: undefined, newValue: undefined\n            };\n            if (endPoint === 'ConnectorSourceEnd') {\n                arg.oldValue = {\n                    connectorSourceValue: {\n                        portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId]\n                    }\n                };\n                arg.newValue = {\n                    connectorSourceValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId], }\n                };\n            }\n            else {\n                arg.oldValue = {\n                    connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] }\n                };\n                arg.newValue = {\n                    connectorTargetValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }\n                };\n            }\n            returnargs = arg;\n        }\n        if (!checkBlazor) {\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n        if (arg.cancel || (isBlazor() && canCancel)) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: {\n                    nodeId: newChanges[nodeEndId],\n                    portId: newChanges[portEndId]\n                },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.oldValue = {\n                        connectorTargetValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId], }\n                    };\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n        }\n        if (this.enableCloneObject) {\n            if (connectedNode === undefined) {\n                connectedNode = this.diagram.nameTable[oldChanges[nodeEndId]];\n                var nodeObject = cloneObject(connectedNode);\n                this.diagram.insertValue(nodeObject, true);\n            }\n        }\n        return returnargs;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && ((!isBlazor() && argsTarget.shape.shape === 'Activity') ||\n                (isBlazor() && argsTarget.shape.bpmnShape === 'Activity'))) {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                ((!isBlazor() && args.target.shape.shape !== 'TextAnnotation') ||\n                    (isBlazor() && args.target.shape.bpmnShape !== 'TextAnnotation'))) {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args, canCancel) {\n        var checkBlazor;\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        var returnargs;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget((args.targetWrapper || args.sourceWrapper), (args.target || args.actualObject), endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            returnargs = this.connectionEventChange(connector, oldChanges, newChanges, endPoint, canCancel);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = (args.target && args.target.id || args.actualObject.id);\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            if (isBlazor()) {\n                arg = {\n                    connector: cloneBlazorObject(connector),\n                    oldValue: undefined,\n                    newValue: undefined,\n                    cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                if (endPoint === 'ConnectorSourceEnd') {\n                    arg.oldValue = {\n                        connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                    arg.newValue = {\n                        connectorSourceValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                }\n                else {\n                    arg.newValue = {\n                        connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                    };\n                    arg.oldValue = {\n                        connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                    };\n                }\n                returnargs = arg;\n            }\n            if (!checkBlazor) {\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n            if (arg.cancel || (isBlazor() && canCancel)) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: cloneBlazorObject(connector), oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changing', connectorEnd: endPoint\n                };\n                if (isBlazor()) {\n                    arg = {\n                        newValue: undefined,\n                        connector: cloneBlazorObject(connector),\n                        oldValue: undefined,\n                        cancel: false, state: 'Changing', connectorEnd: endPoint,\n                    };\n                    if (endPoint === 'ConnectorSourceEnd') {\n                        arg.oldValue = {\n                            connectorSourceValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                    else {\n                        arg.oldValue = {\n                            connectorTargetValue: { portId: oldChanges[portEndId], nodeId: oldChanges[nodeEndId] }\n                        };\n                        arg.newValue = {\n                            connectorTargetValue: { portId: newChanges[portEndId], nodeId: newChanges[nodeEndId] }\n                        };\n                    }\n                }\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n        return returnargs;\n    };\n    /* tslint:enable */\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    CommandHandler.prototype.UpdateBlazorDiagramModelLayers = function (layer) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(layer);\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = { 'methodName': 'UpdateBlazorDiagramModelLayers', 'diagramobj': JSON.stringify(updatedModel) };\n            window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        this.diagram.enableServerDataBinding(false);\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        this.diagram.enableServerDataBinding(true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.UpdateBlazorDiagramModelLayers(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                if (node.wrapper && (node.offsetX !== node.wrapper.offsetX)) {\n                    node.offsetX = node.wrapper.offsetX;\n                }\n                if (node.wrapper && (node.offsetY !== node.wrapper.offsetY)) {\n                    node.offsetY = node.wrapper.offsetY;\n                }\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var lane = findLane(node, this.diagram);\n                    childTable[node.id] = cloneObject(lane);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0\n                    && (!isBlazor() || isBlazor() && node.annotations[0].content !== '')) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                var copiedObject = [];\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = true;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        copiedObject.push(newObj);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        copiedObject.push(newNode);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (multiSelect) {\n                    this.diagram.isServerUpdate = false;\n                    this.diagram.UpdateBlazorDiagramModelCollection(copiedItems[0], copiedObject);\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n            (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var oldProtectPropertyChangeValue;\n        if (isBlazor()) {\n            oldProtectPropertyChangeValue = this.diagram.getProtectPropertyChangeValue();\n            this.diagram.protectPropertyChange(true);\n        }\n        var newObj;\n        var cloneObject;\n        if (obj && obj.shape) {\n            if (obj.shape.type === 'Text') {\n                obj.width = this.diagram.drawingObject.width ? this.diagram.drawingObject.width : 50;\n                obj.height = this.diagram.drawingObject.height ? this.diagram.drawingObject.height : 20;\n            }\n        }\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n        }\n        if (isBlazor()) {\n            updateDefaultValues(newObj, cloneObject, (getObjectType(this.diagram.drawingObject) === Node) ? this.diagram.nodeDefaults : this.diagram.connectorDefaults);\n        }\n        this.diagram.initObject(newObj);\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        if (isBlazor()) {\n            this.diagram.protectPropertyChange(oldProtectPropertyChangeValue);\n        }\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.enableServerDataBinding = function (enable) {\n        this.diagram.enableServerDataBinding(enable);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    CommandHandler.prototype.updateArgsObject = function (obj, arg1, argValue) {\n        if (obj) {\n            var connector = void 0;\n            for (var i = 0; i < obj.length; i++) {\n                connector = (getObjectType(obj[i]) === Connector);\n                connector ? argValue.connectors.push(cloneBlazorObject(obj[i])) : argValue.nodes.push(cloneBlazorObject(obj[i]));\n            }\n        }\n    };\n    CommandHandler.prototype.updateSelectionChangeEventArgs = function (arg, obj, oldValue) {\n        if (isBlazor()) {\n            arg = {\n                cause: this.diagram.diagramActions, newValue: {}, oldValue: {},\n                state: arg.state, type: arg.type, cancel: false\n            };\n            var argOldValue = arg.oldValue;\n            var argNewValue = arg.newValue;\n            argOldValue.connectors = [];\n            argOldValue.nodes = [];\n            argNewValue.connectors = [];\n            argNewValue.nodes = [];\n            this.updateArgsObject(this.getSelectedObject(), arg, argNewValue);\n            this.updateArgsObject(oldValue, arg, argOldValue);\n            return arg;\n        }\n        return arg;\n    };\n    /** @private */\n    CommandHandler.prototype.isUserHandle = function (position) {\n        var handle = this.diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                if (obj.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj, this.diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj.size / (2 * this.diagram.scroller.transform.scale))) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        return __awaiter(this, void 0, void 0, function () {\n            var arg, select, canDoMultipleSelection, canDoSingleSelection, i, newObj, i_1, parentNode, blazorArgs, selectedObjects;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        arg = {\n                            oldValue: oldValue ? oldValue : this.getSelectedObject(),\n                            newValue: obj, cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Addition', cancel: false\n                        };\n                        this.diagram.enableServerDataBinding(false);\n                        select = true;\n                        if (!isBlazor()) {\n                            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        }\n                        canDoMultipleSelection = canMultiSelect(this.diagram);\n                        canDoSingleSelection = canSingleSelect(this.diagram);\n                        if (canDoSingleSelection || canDoMultipleSelection) {\n                            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                                if (obj.length === 1) {\n                                    this.clearSelection();\n                                }\n                                else {\n                                    return [2 /*return*/];\n                                }\n                            }\n                            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                                this.clearSelection();\n                                return [2 /*return*/];\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 4];\n                        for (i = 0; i < obj.length; i++) {\n                            newObj = obj[i];\n                            if (newObj) {\n                                select = true;\n                                if (!hasSelection(this.diagram)) {\n                                    this.select(newObj, i > 0 || multipleSelection, true);\n                                }\n                                else {\n                                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                                        for (i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                                            parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                                            if (parentNode) {\n                                                parentNode = this.findParent(parentNode);\n                                                if (parentNode) {\n                                                    if (newObj.id === parentNode.id) {\n                                                        this.selectGroup(newObj);\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                    this.selectProcesses(newObj);\n                                    select = this.selectBpmnSubProcesses(newObj);\n                                    if (select) {\n                                        this.select(newObj, i > 0 || multipleSelection, true);\n                                    }\n                                }\n                            }\n                        }\n                        arg = {\n                            oldValue: oldValue ? oldValue : [],\n                            newValue: this.getSelectedObject(),\n                            cause: this.diagram.diagramActions, state: 'Changed', type: 'Addition', cancel: false,\n                        };\n                        this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n                        this.updateBlazorSelectorModel(oldValue);\n                        if (isBlazor() && this.diagram.selectionChange) {\n                            arg = this.updateSelectionChangeEventArgs(arg, obj, oldValue ? oldValue : []);\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazorArgs = _a.sent();\n                        if (blazorArgs && blazorArgs.cancel) {\n                            selectedObjects = [];\n                            if (blazorArgs.oldValue.nodes.length > 0) {\n                                selectedObjects = blazorArgs.oldValue.nodes;\n                            }\n                            if (blazorArgs.oldValue.connectors.length > 0) {\n                                selectedObjects = selectedObjects.concat(blazorArgs.oldValue.connectors);\n                            }\n                            if (selectedObjects) {\n                                if (selectedObjects.length > 0) {\n                                    this.diagram.select(selectedObjects);\n                                }\n                                else {\n                                    this.clearSelection(true, true);\n                                }\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.diagram.enableServerDataBinding(true);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.updateBlazorSelector = function () {\n        if (isBlazor()) {\n            this.newSelectedObjects = cloneSelectedObjects(this.diagram);\n            var result = this.deepDiffer.map(cloneObject(this.newSelectedObjects), this.oldSelectedObjects);\n            var diffValue = this.deepDiffer.frameObject({}, result);\n            var diff = this.deepDiffer.removeEmptyValues(diffValue);\n            diff.nodes = [];\n            for (var i = 0; i < this.diagram.selectedItems.nodes.length; i++) {\n                diff.nodes.push(this.diagram.selectedItems.nodes[i].id);\n            }\n            diff.connectors = [];\n            for (var i = 0; i < this.diagram.selectedItems.connectors.length; i++) {\n                diff.connectors.push(this.diagram.selectedItems.connectors[i].id);\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': { selectedItems: diff } };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        else if (node.parentId && this.diagram.nameTable[node.parentId] &&\n            this.diagram.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.parentId])) {\n                select = false;\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        this.diagram.enableServerDataBinding(false);\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n    };\n    CommandHandler.prototype.getObjectCollectionId = function (isNode, clearSelection) {\n        var id = [];\n        var i = 0;\n        var selectedObject = isNode ? this.diagram.selectedItems.nodes\n            : this.diagram.selectedItems.connectors;\n        while (!clearSelection && i < selectedObject.length) {\n            id[i] = selectedObject[i].id;\n            i++;\n        }\n        return id;\n    };\n    CommandHandler.prototype.updateBlazorSelectorModel = function (oldItemsCollection, clearSelection) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var i = 0;\n            var nodes = [];\n            var connectors = [];\n            var oldItems = [];\n            while (oldItemsCollection && i < oldItemsCollection.length) {\n                oldItems[i] = oldItemsCollection[i].id;\n                i++;\n            }\n            i = 0;\n            nodes = this.getObjectCollectionId(true, clearSelection);\n            connectors = this.getObjectCollectionId(false, clearSelection);\n            var items = { nodes: nodes, connectors: connectors };\n            var newItems = cloneBlazorObject(items);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this.diagram, 'selectedItems', newItems, oldItems, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            if (!isBlazor()) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            this.updateBlazorSelectorModel(objArray);\n            arg = {\n                oldValue: cloneBlazorObject(objArray), newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: arg.cancel\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    if (isBlazor()) {\n                        arg = this.updateSelectionChangeEventArgs(arg, [], objArray);\n                    }\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    /** @private */\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects[0];\n                var targetLayerObjects = targetLayer.objects;\n                for (var _i = 0, targetLayerObjects_1 = targetLayerObjects; _i < targetLayerObjects_1.length; _i++) {\n                    var obj = targetLayerObjects_1[_i];\n                    if (obj) {\n                        this.moveSvgNode(obj, currentLayerObject);\n                    }\n                }\n            }\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    element.parentNode.removeChild(element);\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                    var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                    this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n                }\n                else {\n                    var target = void 0;\n                    var layer = this.getObjectLayer(objectName);\n                    for (var i = 0; i < layer.objects.length; i++) {\n                        if (layer.objects[i] !== objectName) {\n                            this.moveSvgNode(layer.objects[i], objectName);\n                            this.updateNativeNodeIndex(objectName);\n                        }\n                    }\n                }\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    if (!(node.children && node.children.length > 0)) {\n                        this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                        this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    }\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var node = this.diagram.selectedItems.nodes[0] || this.diagram.getObject(targetID);\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (node && (node.shape.type === 'HTML'\n                || node.shape.type === 'Native')) {\n                var id = node.shape.type === 'HTML' ? '_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateBlazorProperties = function (isObjectInteraction) {\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (!isObjectInteraction) {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        else {\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': this.deepDiffer.diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n            }\n        }\n        this.diagram.enableServerDataBinding(true);\n        this.deepDiffer.newNodeObject = [];\n        this.deepDiffer.newConnectorObject = [];\n        this.diagramObject = [];\n        this.diagram.oldNodeObjects = [];\n        this.diagram.oldConnectorObjects = [];\n    };\n    /**   @private  */\n    CommandHandler.prototype.enableCloneObject = function (value) {\n        this.diagram.canEnableBlazorObject = value;\n    };\n    /**   @private  */\n    CommandHandler.prototype.ismouseEvents = function (value) {\n        if (value) {\n            this.diagram.blazorActions = BlazorAction.interaction;\n        }\n        else {\n            this.diagram.blazorActions = ~BlazorAction.interaction;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateLayerObject = function (oldDiagram, temp) {\n        if (isBlazor()) {\n            var diffLayers = {};\n            diffLayers = this.deepDiffer.getLayerObject(oldDiagram, temp, this.diagram);\n            this.diagramObject = diffLayers;\n            this.updateBlazorProperties();\n        }\n    };\n    /* tslint:enable:no-string-literal */\n    /** @private */\n    CommandHandler.prototype.getDiagramOldValues = function (oldDiagram, attribute) {\n        var newDiagram = {};\n        for (var i = 0; i < attribute.length; i++) {\n            newDiagram[attribute[i]] = cloneObject(this.diagram[attribute[i]]);\n        }\n        var newObject = cloneObject(newDiagram);\n        var result = this.deepDiffer.map(newObject, oldDiagram);\n        var diffValue = this.deepDiffer.frameObject({}, result);\n        var diff = this.deepDiffer.removeEmptyValues(diffValue);\n        diff = this.deepDiffer.changeSegments(diff, newObject);\n        this.diagramObject = diff;\n        this.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    /** @private */\n    CommandHandler.prototype.getBlazorOldValues = function (args, labelDrag) {\n        if (isBlazor()) {\n            var oldNodeObject = this.diagram.oldNodeObjects;\n            for (var i = 0; i < oldNodeObject.length; i++) {\n                if (oldNodeObject[i].id) {\n                    if (this.diagram.oldNodeObjects[i] instanceof Node) {\n                        this.diagram.oldNodeObjects[i] = cloneBlazorObject(this.diagram.oldNodeObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldNodeObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            var oldConnectorObject = this.diagram.oldConnectorObjects;\n            for (var i = 0; i < oldConnectorObject.length; i++) {\n                if (oldConnectorObject[i].id) {\n                    if (this.diagram.oldConnectorObjects[i] instanceof Connector) {\n                        this.diagram.oldConnectorObjects[i] = cloneBlazorObject(this.diagram.oldConnectorObjects[i]);\n                    }\n                    this.deepDiffer.getDifferenceValues(this.diagram.nameTable[oldConnectorObject[i].id], args, labelDrag, this.diagram);\n                }\n            }\n            if (oldNodeObject.length > 0 || oldConnectorObject.length > 0) {\n                this.updateBlazorProperties(true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectChanges = function (previousObject, currentObject, changedNodes) {\n        for (var i = 0; i < previousObject.length; i++) {\n            var value = this.deepDiffer.map(currentObject[i], previousObject[i]);\n            var result = this.deepDiffer.frameObject({}, value);\n            var change = this.deepDiffer.removeEmptyValues(result);\n            if (change.children) {\n                change.children = cloneObject(currentObject[i]).children;\n            }\n            change = this.deepDiffer.changeSegments(change, currentObject[i]);\n            change.sfIndex = getIndex(this.diagram, currentObject[i].id);\n            changedNodes.push(change);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction, isTriggered) {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectormodel, arrayNodes, arg, blazarArgs, selectNodes;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.diagram.enableServerDataBinding(false);\n                        if (!hasSelection(this.diagram)) return [3 /*break*/, 4];\n                        selectormodel = this.diagram.selectedItems;\n                        arrayNodes = this.getSelectedObject();\n                        if (this.diagram.currentSymbol) {\n                            this.diagram.previousSelectedObject = arrayNodes;\n                        }\n                        arg = {\n                            oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changing', type: 'Removal', cancel: false\n                        };\n                        this.updateBlazorSelectorModel(arrayNodes, true);\n                        if (triggerAction) {\n                            if (!isBlazor()) {\n                                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                            }\n                            else {\n                                this.oldSelectedObjects = cloneObject(selectormodel);\n                            }\n                        }\n                        if (!!arg.cancel) return [3 /*break*/, 3];\n                        selectormodel.offsetX = 0;\n                        selectormodel.offsetY = 0;\n                        selectormodel.width = 0;\n                        selectormodel.height = 0;\n                        selectormodel.rotateAngle = 0;\n                        selectormodel.nodes = [];\n                        selectormodel.connectors = [];\n                        selectormodel.wrapper = null;\n                        selectormodel.annotation = undefined;\n                        this.diagram.clearSelectorLayer();\n                        if (!triggerAction) return [3 /*break*/, 3];\n                        arg = {\n                            oldValue: cloneBlazorObject(arrayNodes), newValue: [], cause: this.diagram.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (isBlazor()) {\n                            arg = this.updateSelectionChangeEventArgs(arg, [], arrayNodes);\n                        }\n                        if (!!isBlazor()) return [3 /*break*/, 1];\n                        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                        return [3 /*break*/, 3];\n                    case 1: return [4 /*yield*/, this.diagram.triggerEvent(DiagramEvent.selectionChange, arg)];\n                    case 2:\n                        blazarArgs = _a.sent();\n                        if (blazarArgs && blazarArgs.cancel && !isTriggered) {\n                            selectNodes = [];\n                            if (blazarArgs.oldValue.nodes.length > 0) {\n                                selectNodes = blazarArgs.oldValue.nodes;\n                            }\n                            if (blazarArgs.oldValue.connectors.length > 0) {\n                                selectNodes = selectNodes.concat(blazarArgs.oldValue.connectors);\n                            }\n                            if (selectNodes) {\n                                this.diagram.select(selectNodes);\n                            }\n                        }\n                        _a.label = 3;\n                    case 3:\n                        this.updateBlazorSelector();\n                        this.diagram.enableServerDataBinding(true);\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelectedItems = function () {\n        var selectedNodes = this.diagram.selectedItems.nodes ? this.diagram.selectedItems.nodes.length : 0;\n        var selectedConnectors = this.diagram.selectedItems.connectors ? this.diagram.selectedItems.connectors.length : 0;\n        this.clearSelection((selectedNodes + selectedConnectors) > 0 ? true : false);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                        this.diagram.parentObject = target;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                if ((source.isLane && canLaneInterchange(source, this.diagram)) || !source.isLane) {\n                    canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n                }\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    if (!(checkParentAsContainer(this.diagram, obj, true))) {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.isGroupDragging;\n                    }\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.isGroupDragging;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY }, undefined, undefined, false);\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, oldValues, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, (actualObject.parentId &&\n                                    (this.diagram.diagramActions & DiagramAction.isGroupDragging)) ? false : true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector, oldChanges) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        var newValue = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        if (connector.sourceID) {\n            newValue.sourceID = connector.sourceID;\n        }\n        if (connector.targetID) {\n            newValue.targetID = connector.targetID;\n        }\n        if (connector.sourcePortID) {\n            newValue.sourcePortID = connector.sourcePortID;\n        }\n        if (connector.targetPortID) {\n            newValue.targetPortID = connector.targetPortID;\n        }\n        if (connector.segments) {\n            newValue.segments = connector.segments;\n        }\n        this.diagram.connectorPropertyChange(connector, oldChanges ? oldChanges : {}, newValue);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges = {};\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { sourcePoint: connector.sourcePoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Update Path Element offset\n     */\n    CommandHandler.prototype.updatePathElementOffset = function (connector) {\n        connector.wrapper.children.splice(3, 1);\n        var pathElement = new PathElement();\n        var anglePoints = connector.intermediatePoints;\n        pathElement = updatePathElement(anglePoints, connector);\n        connector.wrapper.children.splice(3, 0, pathElement);\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var oldChanges;\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            oldChanges = { targetPoint: connector.targetPoint };\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n            if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                this.updatePathElementOffset(connector);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            oldChanges = { targetPoint: connector.targetPoint };\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector, oldChanges);\n        }\n        if (!(this.diagram.realActions & RealAction.AnimationClick)) {\n            this.diagram.refreshCanvasLayers();\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotatePropertyChnage = function (angle) {\n        var selectedItems = this.diagram.selectedItems;\n        var objects = [];\n        objects = objects.concat(selectedItems.nodes);\n        objects = objects.concat(selectedItems.connectors);\n        var pivotValue = { x: selectedItems.offsetX, y: selectedItems.offsetY };\n        this.rotateObjects(selectedItems, objects, angle - selectedItems.rotateAngle, pivotValue);\n        selectedItems.wrapper.rotateAngle = selectedItems.rotateAngle = angle;\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        var oldValues;\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        oldValues = { rotateAngle: obj.rotateAngle };\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            if (conn.shape.type === 'Bpmn' && conn.shape.sequence === 'Default') {\n                this.updatePathElementOffset(conn);\n            }\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject, isOutsideBoundary) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints && isOutsideBoundary) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot, undefined, true);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {};\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                oldValues = {\n                    width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height,\n                    offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n                    margin: { top: node.margin.top, left: node.margin.left }\n                };\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, oldValues, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                var oldValues_1 = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    this.scaleConnector(connector, matrix, oldValues_1);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    CommandHandler.prototype.scaleConnector = function (connector, matrix, oldValues) {\n        connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n        connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n        if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n            this.updatePathElementOffset(connector);\n        }\n        var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n        this.diagram.connectorPropertyChange(connector, oldValues, newProp);\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.diagramActions = this.diagram.diagramActions | (DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            var actualObject = this.diagram.selectedObject.actualObject;\n            if ((actualObject && actualObject instanceof Node && actualObject.isLane &&\n                canLaneInterchange(actualObject, this.diagram)) || (!actualObject || !actualObject.isLane)) {\n                this.diagram.drag(obj, tx, ty);\n            }\n            this.diagram.diagramActions = this.diagram.diagramActions & ~(DiagramAction.PreventZIndexOnDragging | DiagramAction.DragUsingMouse);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n        for (var _i = 0, _a = this.diagram.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            var view = this.diagram.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.diagram.refreshCanvasDiagramLayer(view);\n            }\n        }\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.blazorActions = BlazorAction.expandNode;\n        objects = this.diagram.doLayout();\n        this.diagram.blazorActions = BlazorAction.Default;\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.diagram.allowServerDataBinding = false;\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n            this.diagram.allowServerDataBinding = true;\n        }\n        else {\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.wrapper.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelectedNodeProperties = function (object) {\n        if (this.diagram.lineRoutingModule && (this.diagram.constraints & DiagramConstraints.LineRouting)) {\n            var previousNodeObject = [];\n            var previousConnectorObject = [];\n            var updateNodeObject = [];\n            var updateConnectorObject = [];\n            var changeNodes = [];\n            var changeConnectors = [];\n            this.diagram.protectPropertyChange(true);\n            var objects = [];\n            var connectors = [];\n            var actualObject = this.diagram.selectedObject.actualObject;\n            var helperObject = this.diagram.selectedObject.helperObject;\n            if (helperObject && actualObject) {\n                var offsetX = (helperObject.offsetX - actualObject.offsetX);\n                var offsetY = (helperObject.offsetY - actualObject.offsetY);\n                var width = (helperObject.width - actualObject.width);\n                var height = (helperObject.height - actualObject.height);\n                var rotateAngle = (helperObject.rotateAngle - actualObject.rotateAngle);\n                if (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length > 0) {\n                    this.diagram.selectedItems.wrapper.rotateAngle = this.diagram.selectedItems.rotateAngle = helperObject.rotateAngle;\n                }\n                if (actualObject instanceof Node &&\n                    actualObject.shape.type !== 'SwimLane' && !actualObject.isLane && !actualObject.isPhase && !actualObject.isHeader) {\n                    if (actualObject.offsetX !== actualObject.wrapper.offsetX || actualObject.offsetY !== actualObject.wrapper.offsetY ||\n                        actualObject.width !== actualObject.wrapper.width || actualObject.height !== actualObject.wrapper.height ||\n                        actualObject.rotateAngle !== actualObject.wrapper.rotateAngle) {\n                        if (isBlazor()) {\n                            previousNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                        actualObject.offsetX += offsetX;\n                        actualObject.offsetY += offsetY;\n                        actualObject.width += width;\n                        actualObject.height += height;\n                        actualObject.rotateAngle += rotateAngle;\n                        this.diagram.nodePropertyChange(actualObject, {}, {\n                            offsetX: actualObject.offsetX, offsetY: actualObject.offsetY,\n                            width: actualObject.width, height: actualObject.height, rotateAngle: actualObject.rotateAngle\n                        });\n                        if (isBlazor()) {\n                            updateNodeObject.push(cloneObject(actualObject, undefined, undefined, true));\n                        }\n                    }\n                    objects = this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                }\n                else if (actualObject instanceof Selector) {\n                    for (var i = 0; i < actualObject.nodes.length; i++) {\n                        var node = actualObject.nodes[i];\n                        if (node instanceof Node && node.shape.type !== 'SwimLane' && !node.isLane\n                            && !node.isPhase && !node.isHeader) {\n                            node.offsetX += offsetX;\n                            node.offsetY += offsetY;\n                            node.width += width;\n                            node.height += height;\n                            node.rotateAngle += rotateAngle;\n                            this.diagram.nodePropertyChange(node, {}, {\n                                offsetX: node.offsetX, offsetY: node.offsetY,\n                                width: node.width, height: node.height, rotateAngle: node.rotateAngle\n                            });\n                            objects = objects.concat(this.diagram.spatialSearch.findObjects(actualObject.wrapper.outerBounds));\n                        }\n                    }\n                }\n            }\n            else {\n                if (object instanceof Connector) {\n                    objects.push(object);\n                }\n                else if (object instanceof Selector && object.connectors.length) {\n                    objects = objects.concat(object.connectors);\n                }\n            }\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i] instanceof Connector && connectors.indexOf(objects[i].id) === -1) {\n                    connectors.push(objects[i].id);\n                }\n            }\n            this.diagram.lineRoutingModule.renderVirtualRegion(this.diagram, true);\n            for (var i = 0; i < connectors.length; i++) {\n                var connector = this.diagram.nameTable[connectors[i]];\n                if (connector instanceof Connector) {\n                    if (isBlazor()) {\n                        previousConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                    this.diagram.lineRoutingModule.refreshConnectorSegments(this.diagram, connector, true);\n                    if (isBlazor()) {\n                        updateConnectorObject.push(cloneObject(connector, undefined, undefined, true));\n                    }\n                }\n            }\n            this.updateSelector();\n            if (isBlazor()) {\n                this.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n                this.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n                if (window && window[blazor] && (changeConnectors.length + changeNodes.length)) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this.diagram);\n                }\n            }\n            this.diagram.protectPropertyChange(false);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation')) {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && ((!isBlazor() && node.shape.shape === 'TextAnnotation') ||\n                (isBlazor() && node.shape.bpmnShape === 'TextAnnotation'))) {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            for (i = 0; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[i];\n            }\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            objects[0] = this.diagram.nameTable[objects[0].id] || objects[0];\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                objects[i] = this.diagram.nameTable[objects[i].id] || objects[0];\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && (((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) || this.currentZoom > 1) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                var scrollableBounds = this.diagram.scrollSettings.scrollableArea;\n                bounds = new Rect(scrollableBounds.x, scrollableBounds.y, scrollableBounds.width, scrollableBounds.height);\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar CustomCursorAction = /** @class */ (function (_super) {\n    __extends(CustomCursorAction, _super);\n    function CustomCursorAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"action\", void 0);\n    __decorate([\n        Property('')\n    ], CustomCursorAction.prototype, \"cursor\", void 0);\n    return CustomCursorAction;\n}(ChildProperty));\nexport { CustomCursorAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax, isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { cloneBlazorObject, cloneSelectedObjects } from './utility/diagram-util';\nimport { updateDefaultValues, getCollectionChangeEventArguements, checkBrowserInfo } from './utility/diagram-util';\nimport { flipConnector, updatePortEdges, alignElement, setConnectorDefaults } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { BlazorAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './objects/node';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg, applyStyleAgainstCsp } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit, canMultiSelect } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes, canMeasureDecoratorPath } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\nimport { CustomCursorAction } from './diagram/custom-cursor';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.checkMenu = false;\n        /** @private */\n        _this.isServerUpdate = false;\n        /** @private */\n        _this.oldNodeObjects = [];\n        /** @private */\n        _this.oldDiagramObject = {};\n        /** @private */\n        _this.oldConnectorObjects = [];\n        /** @private */\n        _this.canEnableBlazorObject = false;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.callBlazorModel = true;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.changedConnectorCollection = [];\n        _this.changedNodesCollection = [];\n        _this.previousNodeCollection = [];\n        _this.previousConnectorCollection = [];\n        _this.crudDeleteNodes = [];\n        _this.diagramid = 88123;\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        var blazor = 'Blazor';\n        var canCloneObject = isBlazor() && window && window[blazor] && !_this.dataSourceSettings.dataSource;\n        _this.ignoreCollectionWatch = true;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n            if (_this.nodeDefaults) {\n                if (canCloneObject) {\n                    _this.previousNodeCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.nodeDefaults);\n            }\n            _this.updateAnnotationText(node.annotations);\n        }\n        if (options && options.connectors && _this.connectorDefaults) {\n            for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n                child = options.connectors[i];\n                node = _this.connectors[i];\n                if (canCloneObject) {\n                    _this.previousConnectorCollection.push(cloneObject(node, undefined, undefined, true));\n                }\n                updateDefaultValues(node, child, _this.connectorDefaults);\n                _this.updateAnnotationText(node.annotations);\n            }\n        }\n        for (var i = 0; options && options.connectors && i < options.connectors.length; i++) {\n            var defaultConnector = options.connectors[i];\n            var connector = _this.connectors[i];\n            if (defaultConnector.shape && defaultConnector.shape.type !== 'None') {\n                setConnectorDefaults(defaultConnector, connector);\n            }\n            if (isBlazor()) {\n                var defaultPropChanges = cloneObject(_this.bulkChanges);\n                _this.enableServerDataBinding(true);\n                _this.protectPropertyChange(true);\n                var keys = Object.keys(defaultPropChanges);\n                for (var i_1 = 0; i_1 < keys.length; i_1++) {\n                    var key = keys[i_1];\n                    var split = key.split('-');\n                    if (split && split[0]) {\n                        if (split[0] === 'nodes') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedNodesCollection.push(defaultPropChanges[key]);\n                        }\n                        if (split[0] === 'connectors') {\n                            defaultPropChanges[key].sfIndex = Number(split[1]);\n                            _this.changedConnectorCollection.push(defaultPropChanges[key]);\n                        }\n                    }\n                }\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.updateAnnotationText = function (annotations) {\n        if (isBlazor() && annotations.length > 0) {\n            for (var i = 0; annotations && i < annotations.length; i++) {\n                var label = annotations[i];\n                label.content = label.content.split('\\\\n').join('\\n');\n            }\n        }\n    };\n    Diagram.prototype.callFromServer = function (arg) {\n        var methodName = 'methodName';\n        var mId = 'id';\n        if (arg[methodName] === 'getParentID') {\n            var id = arg[mId];\n            return this.nameTable[id].parentId;\n        }\n        else if (arg[methodName] === 'getEdges') {\n            var outEdge = 'outEdge';\n            var isOutEdge = arg[outEdge];\n            var id = arg[mId];\n            if (isOutEdge) {\n                return this.nameTable[id].outEdges;\n            }\n            else {\n                return this.nameTable[id].inEdges;\n            }\n        }\n        else if (arg[methodName] === 'updateDiagramObjects') {\n            var obj = 'obj';\n            var isAdding = 'IsAdding';\n            var args = arg[obj];\n            this.isServerUpdate = true;\n            if (arg[isAdding]) {\n                var add = 'add';\n                this[add].apply(this, args);\n            }\n            else {\n                var remove_1 = 'remove';\n                this[remove_1].apply(this, args);\n            }\n            this.isServerUpdate = false;\n        }\n        else if (arg[methodName] === 'invokeLoadDiagramMethod') {\n            var data = 'data';\n            this.loadDiagram(arg[data]);\n        }\n    };\n    ;\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param {DiagramModel} newProp - Lists the new values of the changed properties\n     * @param {DiagramModel} oldProp - Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var newValue;\n        var oldValue;\n        var isPropertyChanged = true;\n        var refreshLayout = false;\n        var refereshColelction = false;\n        if (this.diagramActions & DiagramAction.Render) {\n            for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                switch (prop) {\n                    case 'width':\n                    case 'height':\n                        this.element.style.width = this.getSizeValue(this.width);\n                        this.element.style.height = this.getSizeValue(this.height);\n                        this.eventHandler.updateViewPortSize(this.element);\n                        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                            var view = _c[_b];\n                            var temp = this.views[view];\n                            if (!(temp instanceof Diagram)) {\n                                temp.updateView(temp);\n                            }\n                        }\n                        break;\n                    case 'nodes':\n                        if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                            this.clearCollection();\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                                var key = _e[_d];\n                                var index = Number(key);\n                                var actualObject = this.nodes[index];\n                                var changedProp = newProp.nodes[index];\n                                refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                                this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.nodes[index]),\n                                    newValue: cloneBlazorObject(newProp.nodes[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { node: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { node: cloneBlazorObject(oldValue) };\n                                    args.newValue = { node: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'connectors':\n                        var oldObject = void 0;\n                        if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                            this.clearCollection(true);\n                            refereshColelction = true;\n                        }\n                        else {\n                            for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                                var key = _g[_f];\n                                var index = Number(key);\n                                var actualObject = this.connectors[index];\n                                var changedProp = newProp.connectors[index];\n                                this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true, true);\n                                var args = {\n                                    element: cloneBlazorObject(actualObject), cause: this.diagramActions,\n                                    oldValue: cloneBlazorObject(oldProp.connectors[index]),\n                                    newValue: cloneBlazorObject(newProp.connectors[index])\n                                };\n                                if (isBlazor()) {\n                                    args.element = { connector: cloneBlazorObject(actualObject) };\n                                    args.oldValue = { connector: cloneBlazorObject(oldValue) };\n                                    args.newValue = { connector: cloneBlazorObject(newValue) };\n                                }\n                                this.triggerEvent(DiagramEvent.propertyChange, args);\n                                if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                    this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                                }\n                                if (isPropertyChanged) {\n                                    isPropertyChanged = false;\n                                }\n                            }\n                            this.updateBridging();\n                            if (this.mode === 'Canvas') {\n                                this.refreshDiagramLayer();\n                            }\n                        }\n                        break;\n                    case 'bridgeDirection':\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                        break;\n                    case 'backgroundColor':\n                        this.intOffPageBackground();\n                        break;\n                    case 'pageSettings':\n                        this.validatePageSize();\n                        this.updatePage();\n                        break;\n                    case 'selectedItems':\n                        if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                            if (this.selectedItems.userHandles.length > 0) {\n                                this.renderSelector(true);\n                                break;\n                            }\n                        }\n                        if (newProp.selectedItems.constraints) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                        break;\n                    case 'snapSettings':\n                        this.updateSnapSettings(newProp);\n                        break;\n                    case 'commandManager':\n                        this.initCommands();\n                        break;\n                    case 'layout':\n                        refreshLayout = true;\n                        break;\n                    case 'dataSourceSettings':\n                        this.clear();\n                        this.initObjects();\n                        if (this.layout.type === 'None') {\n                            refereshColelction = true;\n                        }\n                        else {\n                            refreshLayout = true;\n                        }\n                        break;\n                    case 'tooltip':\n                        initTooltip(this);\n                        break;\n                    case 'rulerSettings':\n                        this.updateRulerSettings(newProp);\n                        break;\n                    case 'layers':\n                        this.updateLayer(newProp);\n                        break;\n                    case 'scrollSettings':\n                        this.updateScrollSettings(newProp);\n                        break;\n                    case 'locale':\n                        this.realActions |= RealAction.PreventDataInit;\n                        _super.prototype.refresh.call(this);\n                        this.realActions &= ~RealAction.PreventDataInit;\n                        break;\n                    case 'contextMenuSettings':\n                        if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                            this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                        }\n                        if (newProp.contextMenuSettings.show !== undefined) {\n                            this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                        }\n                        if (newProp.contextMenuSettings.items) {\n                            var items = newProp.contextMenuSettings.items;\n                            for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                                var key = _j[_h];\n                                var index = Number(key);\n                                this.contextMenuSettings.items[index] = items[index];\n                            }\n                        }\n                        break;\n                    case 'serializationSettings':\n                        if (newProp.serializationSettings.preventDefaults !== undefined) {\n                            this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                        }\n                        break;\n                }\n            }\n            if (refreshLayout && !refereshColelction) {\n                this.doLayout();\n            }\n            if (isPropertyChanged && this.propertyChange) {\n                var args = {\n                    element: cloneBlazorObject(this), cause: this.diagramActions,\n                    oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n                };\n                if (isBlazor()) {\n                    args.element = { diagram: cloneBlazorObject(this) };\n                    args.oldValue = { diagram: cloneBlazorObject(oldValue) };\n                    args.newValue = { diagram: cloneBlazorObject(newValue) };\n                }\n                this.triggerEvent(DiagramEvent.propertyChange, args);\n            }\n            if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n                var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n                this.addHistoryEntry(entry);\n            }\n            this.resetDiagramActions();\n            if (refereshColelction) {\n                this.initObjects(true);\n                this.refreshDiagramLayer();\n                if (refreshLayout) {\n                    this.doLayout();\n                }\n            }\n            var scrollAlone = ((Object.keys(newProp).length === 1) && newProp.scrollSettings !== undefined);\n            if (!refereshColelction) {\n                for (var _k = 0, _l = this.views; _k < _l.length; _k++) {\n                    var temp = _l[_k];\n                    var view = this.views[temp];\n                    if (!(view instanceof Diagram)) {\n                        if (newProp.scrollSettings && newProp.scrollSettings.currentZoom != oldProp.scrollSettings.currentZoom) {\n                            view.updateHtmlLayer(view);\n                        }\n                        if (!scrollAlone) {\n                            this.refreshCanvasDiagramLayer(view);\n                        }\n                    }\n                }\n            }\n            this.resetTemplate();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines || newProp.snapSettings.gridType) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-diagram').length;\n            this.element.id = 'diagram_' + this.diagramid + '_' + collection;\n        }\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        this.ignoreCollectionWatch = true;\n        var domTable = 'domTable';\n        window[domTable] = {};\n        var collapsedNode = [];\n        if (isBlazor()) {\n            var changedNodes = [];\n            var changedConnectors = [];\n            for (var i = 0; i < this.changedNodesCollection.length; i++) {\n                changedNodes.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedNodesCollection[i]));\n            }\n            for (var i = 0; i < this.changedConnectorCollection.length; i++) {\n                changedConnectors.push(this.commandHandler.deepDiffer.removeEmptyValues(this.changedConnectorCollection[i]));\n            }\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: changedNodes, connectors: changedConnectors };\n            if (window && window[blazor] && !this.dataSourceSettings.dataSource) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        if (this.lineRoutingModule) {\n            var previousConnectorObject = [];\n            var updateConnectorObject = [];\n            var changeConnectors = [];\n            if (isBlazor()) {\n                for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n            }\n            this.lineRoutingModule.lineRouting(this);\n            if (isBlazor()) {\n                for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                    var obj = _c[_b];\n                    updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n                }\n                this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n                var blazorInterop = 'sfBlazor';\n                var blazor = 'Blazor';\n                var diagramObject = { nodes: [], connectors: changeConnectors };\n                if (window && window[blazor]) {\n                    var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                    window[blazorInterop].updateBlazorProperties(obj, this);\n                }\n            }\n        }\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.updateTemplate();\n        this.isLoading = false;\n        this.renderComplete();\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateFitToPage = function () {\n        if (this.pageSettings && this.pageSettings.fitOptions && this.pageSettings.fitOptions.canFit) {\n            this.fitToPage(this.pageSettings.fitOptions);\n        }\n    };\n    Diagram.prototype.updateTemplate = function () {\n        var node;\n        var annotation;\n        var pathAnnotation;\n        for (var i = 0; i < this.nodes.length; i++) {\n            node = this.nodes[i];\n            annotation = node.annotations[0];\n            if (node.shape.type === 'HTML' || node.shape.type === 'Native') {\n                updateBlazorTemplate('diagramsf_node_template', 'NodeTemplate', this, false);\n            }\n            else if (annotation && annotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            pathAnnotation = this.connectors[i].annotations[0];\n            if (pathAnnotation && pathAnnotation.annotationType === 'Template') {\n                updateBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate', this, false);\n            }\n        }\n    };\n    Diagram.prototype.resetTemplate = function () {\n        var htmlNode;\n        var templateAnnotation;\n        var path;\n        for (var i = 0; i < this.nodes.length; i++) {\n            htmlNode = this.nodes[i];\n            templateAnnotation = htmlNode.annotations[0];\n            if (htmlNode.shape.type === 'HTML' && htmlNode.shape.content instanceof HTMLElement) {\n                resetBlazorTemplate('diagramsf_node_template', 'NodeTemplate');\n            }\n            else if (templateAnnotation && templateAnnotation.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            path = this.connectors[i].annotations[0];\n            if (path && path.annotationType === 'Template') {\n                resetBlazorTemplate('diagramsf_annotation_template', 'AnnotationTemplate');\n            }\n        }\n    };\n    //Call back function to the node template\n    // private measureNode(node: NodeModel): void {\n    //     if (node.shape.type === 'Native' && isBlazor()) {\n    //         node.wrapper.measure(new Size(node.width, node.height));\n    //         node.wrapper.arrange(node.wrapper.desiredSize);\n    //     }\n    // }\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                if (tempObj.dataSourceSettings.dataManager) {\n                    tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                }\n                else {\n                    tempObj.dataSourceSettings.dataSource = JSON.parse(data);\n                }\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: [this]\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        if (this.constraints & DiagramConstraints.LineRouting) {\n            modules.push({\n                member: 'LineRouting',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                var measureElementCount = 'measureElementCount';\n                window[measureElementCount]--;\n                if (window[measureElementCount] === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n        var domTable = 'domTable';\n        window[domTable] = {};\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keyup', this.eventHandler.keyUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'keyup', this.eventHandler.keyUp);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param {NodeModel | ConnectorModel} objects - Defines the collection of nodes and connectors to be selected\n     * @param {boolean} multipleSelection - Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (isBlazor()) {\n            for (var i = 0; i < objects.length; i++) {\n                objects[i] = this.nameTable[objects[i].id];\n            }\n            objects = this.nameTable[objects.id] || objects;\n        }\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param {NodeModel | ConnectorModel} obj - Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (isBlazor()) {\n            this.commandHandler.oldSelectedObjects = cloneObject(this.selectedItems);\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n            this.commandHandler.updateBlazorSelector();\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.eventHandler.updateViewPortSize(this.element);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     * @blazorArgsType process|DiagramNode\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param {NodeModel[] | ConnectorModel[]} obj - Defines the objects to be added to diagram\n     * @deprecated\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.fitToPage(options);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringIntoView(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.bringToCenter(bound);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.group();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.callBlazorModel = false;\n        this.insertBlazorDiagramObjects(this.selectedItems);\n        this.commandHandler.unGroup();\n        this.callBlazorModel = true;\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendToBack();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * set the active layer\n     *  @param {string} layerName - defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param {LayerModel} layer - defines the layer model which is to be added\n     * @param {Object[]} layerObject - defines the object of the layer\n     * @blazorArgsType layer|DiagramLayer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param {string} layerId - define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param {string[]} objects - define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        var oldValues = cloneObject(this.layers);\n        this.enableServerDataBinding(false);\n        this.commandHandler.moveObjects(objects, targetLayer);\n        var result = this.commandHandler.deepDiffer.map(oldValues, cloneObject(this.layers));\n        var diffValue = this.commandHandler.deepDiffer.frameObject({}, result);\n        this.oldDiagramObject = { layers: diffValue };\n        this.commandHandler.updateBlazorProperties();\n    };\n    /* tslint:disable */\n    Diagram.prototype.layerObjectUpdate = function () {\n        if (isBlazor()) {\n            this.enableServerDataBinding(false);\n            this.oldDiagramObject['layers'] = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                var leyerObject = cloneObject(this.layers[i]);\n                leyerObject.sfIndex = this.layers[i].zIndex;\n                this.oldDiagramObject['layers'].push(leyerObject);\n            }\n        }\n    };\n    /* tslint:enable */\n    /**\n     * move the layer backward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.sendLayerBackward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject, true);\n    };\n    /**\n     * move the layer forward\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.layerObjectUpdate();\n        this.commandHandler.bringLayerForward(layerName);\n        this.commandHandler.updateLayerObject(this.oldDiagramObject);\n    };\n    /**\n     * clone a layer with its object\n     * @param {string} layerName - define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.bringToFront();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendForward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        var objectName = this.selectedItems.nodes.length ? this.selectedItems.nodes[0]\n            : this.selectedItems.connectors[0];\n        this.insertBlazorDiagramObjects(objectName);\n        this.commandHandler.sendBackward();\n        this.commandHandler.getBlazorOldValues();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the node object for the given node ID\n     */\n    Diagram.prototype.getNodeObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the connector object for the given node ID\n     */\n    Diagram.prototype.getConnectorObject = function (id) {\n        return cloneObject(this.nameTable[id]);\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param {NudgeDirection} direction -  Defines the direction by which the objects have to be moved\n     * @param {number} x - Defines the distance by which the selected objects have to be horizontally moved\n     * @param {number} y -  Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    Diagram.prototype.insertBlazorDiagramObjects = function (actualObject) {\n        if (isBlazor() && !(this.blazorActions & BlazorAction.interaction)) {\n            this.enableServerDataBinding(false);\n            if (actualObject instanceof Selector) {\n                for (var i = 0; i < actualObject.nodes.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.nodes[i]);\n                }\n                for (var i = 0; i < actualObject.connectors.length; i++) {\n                    this.insertBlazorDiagramObjects(actualObject.connectors[i]);\n                }\n            }\n            if (!(actualObject instanceof Selector)) {\n                var object = void 0;\n                if (actualObject && actualObject.children && actualObject.children.length > 0) {\n                    for (var i = 0; i < actualObject.children.length; i++) {\n                        this.insertBlazorDiagramObjects(this.nameTable[actualObject.children[i]]);\n                    }\n                }\n                object = cloneObject(this.nameTable[actualObject.id]);\n                this.insertValue(object, !(getObjectType(actualObject) === Connector));\n            }\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param {NodeModel | ConnectorMode | SelectorModel} obj - Defines the nodes/connectors to be dragged\n     * @param {number} tx - Defines the distance by which the given objects have to be horizontally moved\n     * @param {number} ty - Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        if (isBlazor() && obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.callBlazorModel = false;\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            if ((this.diagramActions & DiagramAction.DragUsingMouse)) {\n                this.updatePage();\n            }\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n                if (connectors.shape.type === 'Bpmn' && connectors.shape.sequence === 'Default') {\n                    this.commandHandler.updatePathElementOffset(connectors);\n                }\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction) && !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be resized\n     * @param {number} sx - Defines the ratio by which the objects have to be horizontally scaled\n     * @param {number} sy - Defines the ratio by which the objects have to be vertically scaled\n     * @param {PointModel} pivot - Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints = true;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                this.callBlazorModel = false;\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n                this.callBlazorModel = true;\n            }\n            if (obj.connectors && obj.connectors.length) {\n                this.callBlazorModel = false;\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n                this.callBlazorModel = true;\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param {NodeModel | ConnectorModel | SelectorModel} obj - Defines the objects to be rotated\n     * @param {number} angle - Defines the angle by which the objects have to be rotated\n     * @param {PointModel} pivot - Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        this.insertBlazorDiagramObjects(obj);\n        var checkBoundaryConstraints;\n        if (obj.id) {\n            obj = this.nameTable[obj.id] || obj;\n        }\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                this.callBlazorModel = false;\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n                this.callBlazorModel = true;\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        if (this.callBlazorModel && (!(this.blazorActions & BlazorAction.interaction))) {\n            this.commandHandler.getBlazorOldValues();\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param {ConnectorModel} obj - Defines the connector, the end points of which has to be moved\n     * @param {number} tx - Defines the distance by which the end point has to be horizontally moved\n     * @param {number} ty - Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.insertBlazorDiagramObjects(obj);\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n        if (this.callBlazorModel) {\n            this.commandHandler.getBlazorOldValues();\n        }\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param {PointModel} position - Defines the position, the objects under which has to be found\n     * @param {IElement} source - Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the collection of objects, from which the object has to be found.\n     * @param {Actions} action - Defines the action, using which the relevant object has to be found.\n     * @param {boolean} inAction - Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param {IElement} obj - Defines the object, the child element of which has to be found\n     * @param {PointModel} position - Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object under mouse\n     * @param {DiagramElement} wrapper - Defines the target element of the object under mouse\n     * @param {PointModel} position - Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param {string} action - Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        if (this.customCursor.length) {\n            for (var i = 0; i < this.customCursor.length; i++) {\n                if (this.customCursor[i].action === action) {\n                    return this.customCursor[i].cursor;\n                }\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry, 'CustomAction');\n            }\n        }\n    };\n    /**\n     * Adds the given custom change in the diagram control to the track\n     * @param {HistoryEntry} entry - Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addCustomHistoryEntry = function (entry) {\n        if (isBlazor() && this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            entry.type = undefined;\n            entry.category = 'External';\n            this.undoRedoModule.addHistoryEntry(entry, this);\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry, action) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry.category === 'Internal') {\n            if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n                ((entry.redoObject.connectors) instanceof Array)) {\n                source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n            }\n            else {\n                if (entry.redoObject) {\n                    source.push(entry.redoObject);\n                }\n            }\n            change[type] = entry.type;\n            switch (entry.type) {\n                case 'PositionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n                case 'RotationChanged':\n                    change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                    change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                    break;\n                case 'SizeChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                        width: entry.undoObject.width, height: entry.undoObject.height\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                        width: entry.redoObject.width, height: entry.redoObject.height\n                    };\n                    break;\n                case 'CollectionChanged':\n                    change[entry.changeType] = source;\n                    break;\n                case 'ConnectionChanged':\n                    change[oldValue] = {\n                        offsetX: entry.undoObject.offsetX,\n                        offsetY: entry.undoObject.offsetY\n                    };\n                    change[newValue] = {\n                        offsetX: entry.redoObject.offsetX,\n                        offsetY: entry.redoObject.offsetY\n                    };\n                    break;\n            }\n            var arg = void 0;\n            arg = {\n                cause: entry.category, source: cloneBlazorObject(source), change: cloneBlazorObject(change),\n                action: action\n            };\n            if (isBlazor()) {\n                arg = {\n                    cause: entry.category, change: cloneBlazorObject(change),\n                    source: { connectors: undefined, nodes: undefined }, action: action\n                };\n                var sourceValue = arg.source;\n                sourceValue.connectors = [];\n                sourceValue.nodes = [];\n                var object = void 0;\n                for (var i = 0; i < source.length; i++) {\n                    object = cloneBlazorObject(source[i]);\n                    (getObjectType(source[i]) === Connector) ?\n                        (sourceValue.connectors.push(object)) : (sourceValue.nodes.push(object));\n                }\n                arg.source = sourceValue;\n            }\n            if (source.length) {\n                this.triggerEvent(DiagramEvent.historyChange, arg);\n            }\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        this.canEnableBlazorObject = true;\n        this.callBlazorModel = false;\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    Diagram.prototype.getBlazorDiagramObjects = function (objects) {\n        if (objects) {\n            for (var j = 0; j < objects.length; j++) {\n                this.insertBlazorDiagramObjects(objects[j]);\n            }\n        }\n        else {\n            this.insertBlazorDiagramObjects(this.selectedItems);\n        }\n        this.callBlazorModel = false;\n        this.canEnableBlazorObject = true;\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the objects that have to be aligned\n     * @param {AlignmentOptions} option - Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n        this.commandHandler.getBlazorOldValues();\n        this.callBlazorModel = true;\n        this.canEnableBlazorObject = false;\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param {DistributeOptions} objects - Defines the objects that have to be equally spaced\n     * @param {NodeModel[] | ConnectorModel[]} option - Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param {NodeModel[] | ConnectorModel[]} objects - Defines the collection of objects that have to be scaled\n     * @param {SizingOptions} option - Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        this.getBlazorDiagramObjects(objects);\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n        this.commandHandler.getBlazorOldValues();\n        this.canEnableBlazorObject = false;\n        this.callBlazorModel = true;\n    };\n    Diagram.prototype.updateBlazorDiagramProperties = function (attribute, canCall) {\n        if (isBlazor() && !canCall) {\n            this.enableServerDataBinding(false);\n            for (var i = 0; i < attribute.length; i++) {\n                this.oldDiagramObject[attribute[i]] = cloneObject(this[attribute[i]]);\n            }\n        }\n        if (canCall) {\n            this.commandHandler.getDiagramOldValues(this.oldDiagramObject, attribute);\n        }\n    };\n    Diagram.prototype.getZoomingAttribute = function () {\n        var attribute = [];\n        attribute.push('scrollSettings');\n        attribute.push('snapSettings');\n        return attribute;\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {number} factor - Defines the factor by which the diagram is zoomed\n     * @param {PointModel} focusedPoint - Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n        if (!(this.blazorActions & BlazorAction.interaction)) {\n            this.updateBlazorDiagramProperties(attribute, true);\n        }\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param {ZoomOptions} options - used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param {number} horizontalOffset - Defines the horizontal distance to which the diagram has to be scrolled\n     * @param {number} verticalOffset - Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.setCursor('grabbing');\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        var attribute = this.getZoomingAttribute();\n        this.updateBlazorDiagramProperties(attribute);\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n        this.updateBlazorDiagramProperties(attribute, true);\n    };\n    /**\n     * Resets the segments of the connectors\n     */\n    Diagram.prototype.resetSegments = function () {\n        var previousConnectorObject = [];\n        var updateConnectorObject = [];\n        var changeConnectors = [];\n        if (isBlazor()) {\n            for (var _i = 0, _a = this.connectors; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                previousConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n        }\n        if (this.constraints & DiagramConstraints.LineRouting && this.lineRoutingModule) {\n            this.lineRoutingModule.lineRouting(this);\n        }\n        else {\n            this.protectPropertyChange(true);\n            var connector = void 0;\n            for (var i = 0; i < this.connectors.length; i++) {\n                connector = this.connectors[i];\n                connector.segments = [];\n                this.connectorPropertyChange(connector, {}, { segments: connector.segments });\n            }\n            this.protectPropertyChange(false);\n        }\n        if (isBlazor()) {\n            for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n                var obj = _c[_b];\n                updateConnectorObject.push(cloneObject(obj, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var blazor = 'Blazor';\n            var diagramObject = { nodes: [], connectors: changeConnectors };\n            if (window && window[blazor]) {\n                var obj = { 'methodName': 'UpdateBlazorProperties', 'diagramobj': diagramObject };\n                window[blazorInterop].updateBlazorProperties(obj, this);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var eventArgs;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (args) {\n                            this.updateEventValue(args);\n                        }\n                        return [4 /*yield*/, this.trigger(DiagramEvent[eventName], args)];\n                    case 1:\n                        eventArgs = _a.sent();\n                        if (isBlazor() && typeof eventArgs === 'string') {\n                            eventArgs = JSON.parse(eventArgs);\n                        }\n                        return [2 /*return*/, eventArgs];\n                }\n            });\n        });\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given node to the lane\n     * @deprecated\n     */\n    Diagram.prototype.addNodeToLane = function (node, swimLane, lane) {\n        if (this.nameTable[swimLane]) {\n            var swimlaneNode = this.nameTable[swimLane];\n            this.protectPropertyChange(true);\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n            }\n            if (!this.nameTable[node.id]) {\n                node.offsetX = swimlaneNode.wrapper.bounds.width + swimlaneNode.wrapper.bounds.x;\n                node.offsetY = swimlaneNode.wrapper.bounds.height + swimlaneNode.wrapper.bounds.y;\n                node = this.add(node);\n            }\n            node.parentId = '';\n            if (!swimlaneNode.shape.phases.length) {\n                var laneId = swimLane + lane + '0';\n                if (this.nameTable[laneId]) {\n                    addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                    updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                }\n            }\n            else {\n                for (var i = 0; i < swimlaneNode.shape.phases.length; i++) {\n                    var laneId = swimLane + lane + i;\n                    if (this.nameTable[laneId] && this.nameTable[laneId].isLane) {\n                        var laneNode = this.nameTable[laneId].wrapper.bounds;\n                        var focusPoint = {\n                            x: laneNode.x +\n                                (laneNode.x - swimlaneNode.wrapper.bounds.x + node.margin.left + (node.wrapper.bounds.width / 2)),\n                            y: laneNode.y + swimlaneNode.wrapper.bounds.y - node.margin.top\n                        };\n                        if (swimlaneNode.shape.orientation === 'Horizontal') {\n                            focusPoint.y = laneNode.y;\n                        }\n                        else {\n                            focusPoint.x = laneNode.x;\n                            var laneHeaderId = this.nameTable[laneId].parentId +\n                                swimlaneNode.shape.lanes[0].id + '_0_header';\n                            focusPoint.y = laneNode.y +\n                                (swimlaneNode.wrapper.bounds.y - this.nameTable[laneHeaderId].wrapper.bounds.height +\n                                    node.margin.top + (node.wrapper.bounds.height / 2));\n                        }\n                        if (laneNode.containsPoint(focusPoint) ||\n                            (laneId === swimLane + lane + (swimlaneNode.shape.phases.length - 1))) {\n                            addChildToContainer(this, this.nameTable[laneId], node, undefined, true);\n                            updateLaneBoundsAfterAddChild(this.nameTable[laneId], swimlaneNode, node, this);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (this.undoRedoModule) {\n                this.historyManager.endGroupAction();\n            }\n            this.protectPropertyChange(false);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Shows tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be shown\n     */\n    Diagram.prototype.showTooltip = function (obj) {\n        var bounds = getBounds(obj.wrapper);\n        var position = { x: 0, y: 0 };\n        var content = obj.tooltip.content ?\n            obj.tooltip.content : 'X:' + Math.round(bounds.x) + ' ' + 'Y:' + Math.round(bounds.y);\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            if (obj instanceof Node) {\n                position = { x: obj.offsetX + (obj.width / 2), y: obj.offsetY + (obj.height / 2) };\n            }\n            else {\n                position = { x: obj.targetPoint.x, y: obj.targetPoint.x };\n            }\n            this.commandHandler.showTooltip(obj, position, content, 'SelectTool', true);\n        }\n    };\n    /**\n     * hides tooltip for corresponding diagram object\n     * @param {NodeModel | ConnectorModel} obj - Defines the object for that tooltip has to be hide\n     */\n    Diagram.prototype.hideTooltip = function (obj) {\n        if (obj && obj.tooltip.openOn === 'Custom') {\n            this.tooltipObject.close();\n        }\n    };\n    /**\n     * Adds the given node to diagram control\n     * @param {NodeModel} obj - Defines the node that has to be added to diagram\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addNode = function (obj, group) {\n        return this.add(obj, group);\n    };\n    /**\n     * Adds the given diagram object to the group.\n     * @param {NodeModel} Group - defines where the diagram object to be added.\n     * @param {string | NodeModel | ConnectorModel} Child - defines the diagram object to be added to the group\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addChildToGroup = function (group, child) {\n        this.addChild(group, child);\n    };\n    /**\n     * Will return the history stack values\n     * @param {boolean} isUndoStack - returns the history stack values\n     */\n    Diagram.prototype.getHistoryStack = function (isUndoStack) {\n        var temp;\n        var historyEntry = [];\n        temp = isUndoStack ? this.historyManager.undoStack : this.historyManager.redoStack;\n        if (this.historyManager.stackLimit !== undefined) {\n            for (var i = temp.length - 1; i >= 0; i--) {\n                historyEntry.push(temp[i]);\n                if (historyEntry.length > this.historyManager.stackLimit) {\n                    return historyEntry;\n                }\n            }\n        }\n        else {\n            historyEntry = temp;\n        }\n        return historyEntry;\n    };\n    /* tslint:disable */\n    /**\n     * Return the edges for the given node\n     * @deprecated\n     * @param {Object} args - return the edge of the given node\n     */\n    Diagram.prototype.getEdges = function (args) {\n        return args['outEdge'] ? this.nameTable[args['id']].outEdges : this.nameTable[args['id']].inEdges;\n    };\n    /* tslint:enable */\n    /**\n     * Returns the parent id for the node\n     * @deprecated\n     * @param {string} id - returns the parent id\n     */\n    Diagram.prototype.getParentId = function (id) {\n        return this.nameTable[id].parentId;\n    };\n    /**\n     * Adds the given connector to diagram control\n     * @param {ConnectorModel} obj - Defines the connector that has to be added to diagram\n     * @blazorArgsType obj|DiagramConnector\n     */\n    Diagram.prototype.addConnector = function (obj) {\n        return this.add(obj);\n    };\n    /** @private */\n    Diagram.prototype.UpdateBlazorDiagramModelCollection = function (obj, copiedObject, multiSelectDelete) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && (!this.isServerUpdate || multiSelectDelete)) {\n            this.isServerUpdate = true;\n            var removalIndexCollection = [];\n            var updatedModelCollection = [];\n            var connectorModelCollection = [];\n            var elements = [];\n            var removalIndex = void 0;\n            var tempNode = [];\n            var objectTypeCollection = [];\n            if (!copiedObject) {\n                if (!multiSelectDelete) {\n                    tempNode = this.commandHandler.getChildren(obj, elements);\n                }\n                else {\n                    tempNode = multiSelectDelete;\n                }\n                for (var i = 0; i < tempNode.length; i++) {\n                    updatedModel = cloneBlazorObject(tempNode[i]);\n                    updatedModelCollection.push(updatedModel);\n                    if (getObjectType(tempNode[i]) === Connector) {\n                        removalIndex = this.connectors.indexOf(tempNode[i]);\n                    }\n                    else {\n                        removalIndex = this.nodes.indexOf(tempNode[i]);\n                    }\n                    removalIndexCollection.push(removalIndex);\n                    objectTypeCollection.push(getObjectType(tempNode[i]) === Connector ? 'Connector' : 'Node');\n                }\n                if (!multiSelectDelete) {\n                    updatedModelCollection.push(cloneBlazorObject(obj));\n                    removalIndexCollection.push(this.nodes.indexOf(obj));\n                    objectTypeCollection.push(getObjectType(obj) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            if (copiedObject && copiedObject.length > 0) {\n                for (var i = 0; i < copiedObject.length; i++) {\n                    updatedModel = cloneBlazorObject(copiedObject[i]);\n                    var isNode = (copiedObject[i] instanceof Node) ? true : false;\n                    isNode ? updatedModelCollection.push(updatedModel) : connectorModelCollection.push(updatedModel);\n                    objectTypeCollection.push(getObjectType(copiedObject[i]) === Connector ? 'Connector' : 'Node');\n                }\n            }\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModelCollection),\n                    'ObjectType': objectTypeCollection,\n                    'removalIndex': copiedObject ? undefined : removalIndexCollection,\n                    'isMultipleObjects': true, 'annotationIndex': undefined,\n                    'connectorObj': JSON.stringify(connectorModelCollection)\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    Diagram.prototype.UpdateBlazorDiagramModel = function (obj, objectType, removalIndex, annotationNodeIndex) {\n        var blazorInterop = 'sfBlazor';\n        var updatedModel = cloneBlazorObject(obj);\n        var blazor = 'Blazor';\n        if (window && window[blazor] && !this.isServerUpdate && !(this.diagramActions & DiagramAction.Clear)) {\n            var dgmObj = {\n                'methodName': 'UpdateBlazorDiagramObjects',\n                'diagramobj': {\n                    'nodeObj': JSON.stringify(updatedModel),\n                    'ObjectType': objectType, 'removalIndex': removalIndex,\n                    'isMultipleObjects': false,\n                    'annotationIndex': annotationNodeIndex, 'connectorObj': undefined\n                }\n            };\n            window[blazorInterop].updateBlazorProperties(dgmObj, this);\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.addBlazorDiagramObjects = function () {\n        var nodesCollection = [];\n        var connectorCollection = [];\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                nodesCollection.push(cloneObject(this.nodes[i], undefined, undefined, true));\n            }\n            for (var i = 0; i < this.connectors.length; i++) {\n                connectorCollection.push(cloneObject(this.connectors[i], undefined, undefined, true));\n            }\n        }\n        var blazorInterop = 'sfBlazor';\n        var blazor = 'Blazor';\n        if (window && window[blazor]) {\n            var obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(nodesCollection), 'isConnector': false }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n            obj = {\n                'methodName': 'AddBlazorObjects',\n                'diagramobj': { 'nodeObj': JSON.stringify(connectorCollection), 'isConnector': true }\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.removeNodeEdges = function (elementId, id, isOutEdges) {\n        var node = this.nameTable[elementId];\n        var edges = isOutEdges ? node.outEdges : node.inEdges;\n        if (edges.length > 0) {\n            for (var i = 0; i < edges.length; i++) {\n                if (edges[i] === id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /* tslint:disable */\n    /**\n     * Adds the given object to diagram control\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        var propertyChangeValue = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = void 0;\n            args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (this.parentObject) {\n                args.parentId = this.parentObject.id;\n            }\n            if (isBlazor()) {\n                args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Addition');\n            }\n            if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            if (args.cancel && this.drawingObject) {\n                this.removeElements(args.element);\n                this.tooltipObject.close();\n                if (getObjectType(args.element) === Connector) {\n                    if (args.element.sourceID) {\n                        this.removeNodeEdges(args.element.sourceID, args.element.id, true);\n                    }\n                    if (args.element.targetID) {\n                        this.removeNodeEdges(args.element.targetID, args.element.id, false);\n                    }\n                }\n            }\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    updateDefaultValues(newObj, obj, this.connectorDefaults);\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    this.UpdateBlazorDiagramModel(newObj, \"Connector\");\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    updateDefaultValues(newObj, obj, this.nodeDefaults);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    this.UpdateBlazorDiagramModel(newObj, \"Node\");\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (this.lineRoutingModule && (this.constraints & DiagramConstraints.LineRouting)) {\n                        var objects = this.spatialSearch.findObjects(newObj.wrapper.outerBounds);\n                        for (var i = 0; i < objects.length; i++) {\n                            var object = objects[i];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(object, {}, {\n                                    sourceID: object.sourceID, targetID: object.targetID, sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID, sourcePoint: object.sourcePoint, targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (this.parentObject) {\n                    args.parentId = this.parentObject.id;\n                }\n                this.updateBlazorCollectionChange(newObj, true);\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Addition');\n                }\n                if (obj.id !== 'helper' && !(this.diagramActions & DiagramAction.PreventCollectionChangeOnDragOver)) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                this.parentObject = undefined;\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateTextElementValue(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.protectPropertyChange(propertyChangeValue);\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        if (newObj && this.layers.length > 1) {\n            this.moveNode(newObj);\n        }\n        for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n            var temp = _c[_b];\n            var view = this.views[temp];\n            if (!(view instanceof Diagram)) {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n        return newObj;\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateBlazorCollectionChange = function (newObject, isAdding) {\n        var blazorInterop = 'sfBlazor';\n        if (window && window[blazorInterop]) {\n            var newNode = {};\n            var object = newObject instanceof Node ? 'nodes' : 'connectors';\n            var index = void 0;\n            index = (object === 'nodes') ? this.nodes.indexOf(newObject).toString()\n                : this.connectors.indexOf(newObject).toString();\n            newNode[index] = cloneObject(newObject);\n            if (window[blazorInterop].updateDiagramCollection) {\n                window[blazorInterop].updateDiagramCollection.call(this, object, newNode, {}, !isAdding, false);\n            }\n        }\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    if (child) {\n                        child.parentNode.removeChild(child);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param {BpmnAnnotationModel} annotation - Defines the annotation to be added\n     * @param {NodeModel} node - Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        if (children) {\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                    if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                        element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                        element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                        var elementId = _a[_i];\n                        removeElement(children[i].id + '_groupElement', elementId);\n                    }\n                }\n                else if (children[i] instanceof DiagramHtmlElement) {\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var elementId = _c[_b];\n                        removeElement(currentObj.id + '_html_element', elementId);\n                        removeElement(children[i].id + '_html_element', elementId);\n                    }\n                }\n                removeGradient(children[i].id);\n            }\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param {NodeModel | ConnectorModel} obj - Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (isBlazor()) {\n                    args = getCollectionChangeEventArguements(args, obj, 'Changing', 'Removal');\n                }\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        this.updateBlazorCollectionChange(obj, false);\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (isBlazor() && (obj.id !== 'helper')) {\n                            this.UpdateBlazorDiagramModel(obj, \"Node\", index);\n                        }\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        this.UpdateBlazorDiagramModel(obj, \"Connector\", index);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (isBlazor()) {\n                                args = getCollectionChangeEventArguements(args, obj, 'Changed', 'Removal');\n                            }\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    if (isBlazor()) {\n                        if (!this.isServerUpdate && selectedItems && selectedItems.length > 1) {\n                            this.isServerUpdate = true;\n                            this.UpdateBlazorDiagramModelCollection(selectedItems[0], undefined, selectedItems);\n                        }\n                        if (selectedItems[i].parentId) {\n                            this.insertBlazorDiagramObjects(this.nameTable[selectedItems[i].parentId]);\n                        }\n                    }\n                    this.remove(selectedItems[i]);\n                    if (isBlazor() && selectedItems[i].parentId) {\n                        this.commandHandler.getBlazorOldValues();\n                        this.isServerUpdate = false;\n                    }\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n        this.tooltipObject.close();\n        if (isBlazor() && selectedItems && selectedItems.length > 0) {\n            var check = true;\n            for (var k = 0; k < selectedItems.length; k++) {\n                if (this.nameTable[selectedItems[k].id]) {\n                    check = false;\n                }\n            }\n            if (check) {\n                this.isServerUpdate = false;\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     * @deprecated\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /* tslint:disable */\n    /**\n     * Specified annotation to edit mode\n     * @param {NodeModel | ConnectorModel} node - Defines node/connector that contains the annotation to be edited\n     * @param {string} id - Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if ((!canZoomPan(this) && !canMultiSelect(this)) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(node);\n                    if (selectedNode.annotations.length > 0) {\n                        this.insertValue(selectedNode, (node instanceof Node) ? true : false);\n                    }\n                    node = this.nameTable[node.id] || node;\n                }\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    this.activeLabel.text = text;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    Diagram.prototype.removeChildrenFromLayout = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var nodes = this.removeChildrenFromLayout(this.nodes);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.layout.type !== 'None') {\n            if (this.organizationalChartModule) {\n                layout = this.organizationalChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n                update = true;\n                if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                    this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n                }\n            }\n            else if (this.mindMapChartModule) {\n                if (nodes && nodes.length > 0) {\n                    this.mindMapChartModule.updateLayout(nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n                }\n                update = true;\n            }\n            else if (this.radialTreeModule) {\n                this.radialTreeModule.updateLayout(nodes, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.symmetricalLayoutModule) {\n                this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n                this.symmetricalLayoutModule.springLength = this.layout.springLength;\n                this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n                this.symmetricalLayoutModule.updateLayout(nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n                update = true;\n            }\n            else if (this.complexHierarchicalTreeModule) {\n                var nodes_1 = this.complexHierarchicalTreeModule.getLayoutNodesCollection(this.nodes);\n                if (nodes_1.length > 0) {\n                    this.complexHierarchicalTreeModule.doLayout(nodes_1, this.nameTable, this.layout, viewPort);\n                }\n                update = true;\n            }\n            if (update) {\n                this.preventUpdate = true;\n                var connectors = {};\n                var updatedNodes = nodes;\n                if (isBlazor()) {\n                    this.updateTemplate();\n                }\n                for (var _i = 0, updatedNodes_1 = updatedNodes; _i < updatedNodes_1.length; _i++) {\n                    var obj = updatedNodes_1[_i];\n                    var node = obj;\n                    if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                        this.updateIcon(node);\n                        this.updateDefaultLayoutIcons(node);\n                    }\n                    this.preventNodesUpdate = true;\n                    this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                    this.preventNodesUpdate = false;\n                    node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                    node.wrapper.arrange(node.wrapper.desiredSize);\n                    this.updateDiagramObject(node, true);\n                    if (node.inEdges.length > 0) {\n                        for (var j = 0; j < node.inEdges.length; j++) {\n                            var connector = this.nameTable[node.inEdges[j]];\n                            connectors[connector.id] = connector;\n                        }\n                    }\n                    if (node.outEdges.length > 0) {\n                        for (var k = 0; k < node.outEdges.length; k++) {\n                            var connection = this.nameTable[node.outEdges[k]];\n                            connectors[connection.id] = connection;\n                        }\n                    }\n                }\n                for (var _a = 0, _b = Object.keys(connectors); _a < _b.length; _a++) {\n                    var conn = _b[_a];\n                    var connector = connectors[conn];\n                    var points = this.getPoints(connector);\n                    updateConnector(connector, points);\n                    if (connector.shape.type === 'Bpmn' && connector.shape.sequence === 'Default') {\n                        this.commandHandler.updatePathElementOffset(connector);\n                    }\n                    connector.wrapper.measure(new Size(undefined, undefined));\n                    connector.wrapper.arrange(connector.wrapper.desiredSize);\n                    this.updateConnectorAnnotation(connector);\n                    this.updateQuad(connector);\n                    this.updateDiagramObject(connector, true);\n                }\n                this.preventUpdate = false;\n                this.updatePage();\n                if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                    this.refreshDiagramLayer();\n                }\n            }\n            if (!propChange) {\n                this.protectPropertyChange(propChange);\n            }\n        }\n        if (update) {\n            this.updateDiagramElementQuad();\n        }\n        return ((this.blazorActions & BlazorAction.expandNode) ? layout : true);\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param {string} data - Defines the behavior of the diagram to be loaded\n     * @deprecated\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param {StyleSheetList} styleSheets - defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param {string} image - defines image content to be exported.\n     * @param {IExportOptions} options - defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param {string} image - defines image content.\n     * @param {IExportOptions} options - defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param {number} stackLimit - defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param {IExportOptions} options - defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param {IPrintOptions} optons - defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     * @blazorArgsType obj|DiagramNode\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add labels in node at the run time in the blazor platform\n     */\n    Diagram.prototype.addNodeLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add labels in connector at the run time in the blazor platform\n     */\n    Diagram.prototype.addConnectorLabels = function (obj, labels) {\n        this.addLabels(obj, labels);\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        obj = this.nameTable[obj.id] || obj;\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                this.UpdateBlazorDiagramModel(newObj, 'NodeAnnotation', undefined, this.nodes.indexOf(obj));\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_2 = 0; i_2 < node.wrapper.children.length; i_2++) {\n                        if (node.wrapper.children[i_2].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_2];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                this.UpdateBlazorDiagramModel(newObj, 'ConnectorAnnotation', undefined, this.connectors.indexOf(obj));\n                obj.annotations.push(newObj);\n                if (isBlazor()) {\n                    var selectedNode = cloneObject(obj);\n                    this.insertValue(selectedNode, (obj instanceof Node) ? true : false);\n                }\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        node = this.nameTable[node.id] || node;\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.removeLane = function (node, lane) {\n        removeLane(this, undefined, node, lane);\n        this.updateDiagramElementQuad();\n    };\n    /**\n     * Remove a phase to a swimLane at runtime\n     */\n    Diagram.prototype.removePhase = function (node, phase) {\n        removePhase(this, undefined, node, phase);\n        this.updateDiagramElementQuad();\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        obj = this.nameTable[obj.id] || obj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        obj = this.nameTable[obj.id] || obj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param {string | number} real - real value\n     * @param {number} rulerSize - ruler size\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            applyStyleAgainstCsp(this.diagramCanvas, style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        applyStyleAgainstCsp(bgLayer, commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%'\n        });\n        if (checkBrowserInfo()) {\n            rect.setAttribute('fill', 'url(' + location.href + '#' + this.element.id + '_pattern ');\n        }\n        else {\n            rect.setAttribute('fill', 'url(#' + this.element.id + '_pattern)');\n        }\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.style['pointer-events'] = 'none';\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramSvg.style['pointer-events'] = 'all';\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            applyStyleAgainstCsp(this.diagramLayer, 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n            var measureElements = document.getElementById('measureElement');\n            measureElements.remove();\n        }\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.style['pointer-events'] = 'none';\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.style[' pointer-events'] = 'all';\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.updateBazorShape = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            switch (node.shape.type) {\n                case 'Bpmn':\n                    node.shape.bpmnShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.bpmnShape;\n                    break;\n                case 'UmlActivity':\n                    node.shape.umlActivityShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.umlActivityShape;\n                    break;\n                case 'Flow':\n                    node.shape.flowShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.flowShape;\n                    break;\n                case 'Basic':\n                    node.shape.basicShape =\n                        node.shape.shape ? node.shape.shape\n                            : node.shape.basicShape;\n                    break;\n                case 'Text':\n                    node.shape.textContent =\n                        node.shape.content ? node.shape.content\n                            : node.shape.textContent;\n                    break;\n            }\n        }\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        this.updateBazorShape();\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var blazor = 'Blazor';\n        var canCloneObject = window && window[blazor] && !this.dataSourceSettings.dataSource;\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        var previousNodeObject = [];\n        var previousConnectorObject = [];\n        var updateNodeObject = [];\n        var updateConnectorObject = [];\n        var changeNodes = [];\n        var changeConnectors = [];\n        if (isBlazor() && canCloneObject) {\n            previousNodeObject = this.previousNodeCollection;\n            previousConnectorObject = this.previousConnectorCollection;\n        }\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n        if (isBlazor() && canCloneObject) {\n            for (var _p = 0, _q = this.nodes; _p < _q.length; _p++) {\n                var obj_2 = _q[_p];\n                updateNodeObject.push(cloneObject(obj_2, undefined, undefined, true));\n            }\n            for (var _r = 0, _s = this.connectors; _r < _s.length; _r++) {\n                var obj_3 = _s[_r];\n                updateConnectorObject.push(cloneObject(obj_3, undefined, undefined, true));\n            }\n            this.commandHandler.getObjectChanges(previousNodeObject, updateNodeObject, changeNodes);\n            this.commandHandler.getObjectChanges(previousConnectorObject, updateConnectorObject, changeConnectors);\n            var blazorInterop = 'sfBlazor';\n            var diagramObject = { nodes: changeNodes, connectors: changeConnectors };\n            var obj = {\n                'methodName': 'UpdateBlazorProperties',\n                'diagramobj': diagramObject\n            };\n            window[blazorInterop].updateBlazorProperties(obj, this);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue,\n            newValue: newValue, source: this\n        };\n        if (isBlazor() && this.scrollChange) {\n            arg = {\n                oldValue: oldValue,\n                newValue: newValue,\n                sourceId: this.element.id\n            };\n        }\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n        var adapter = 'adaptorName';\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (dataSourceSettings && this.dataSourceSettings.connectionDataSource.dataManager) {\n                var dataManager = this.dataSourceSettings.dataManager || this.dataSourceSettings.dataSource;\n                this.nodes = this.generateData(dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (dataSourceSettings && dataSourceSettings.dataSource &&\n                (dataSourceSettings.dataSource.url || (dataSourceSettings[adapter] === 'BlazorAdaptor' &&\n                    !dataSourceSettings.dataSource.url))) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        var tempLayers = this.layers;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (this.layers[i].zIndex !== -1) {\n                var temp = this.layers[i];\n                this.layers[i] = this.layers[this.layers[i].zIndex];\n                this.layers[temp.zIndex] = temp;\n            }\n        }\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = layer.zIndex !== -1 ? layer.zIndex : this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        for (var i = 0; i < this.layers.length; i++) {\n            for (var j = i + 1; j < this.layers.length; j++) {\n                if (this.layers[i].zIndex > this.layers[j].zIndex) {\n                    var temp = this.layers[i];\n                    this.layers[i] = this.layers[j];\n                    this.layers[j] = temp;\n                }\n            }\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults.ports) {\n                                for (var i = 0; i < defaults.ports.length; i++) {\n                                    defaults.ports[i].inEdges = [];\n                                    defaults.ports[i].outEdges = [];\n                                }\n                            }\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                var port = this.getConnectedPort(sourceNode, obj);\n                var targetPort = this.getConnectedPort(targetNode, obj);\n                var outPort = this.findInOutConnectPorts(sourceNode, false);\n                var inPort = this.findInOutConnectPorts(targetNode, true);\n                if ((sourceNode !== undefined && canOutConnect(sourceNode)) || (obj.sourcePortID !== ''\n                    && canPortOutConnect(outPort))) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if ((targetNode !== undefined && canInConnect(targetNode)) || (obj.targetPortID !== ''\n                    && canPortInConnect(inPort))) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                if (obj instanceof Connector && obj.type === 'Bezier') {\n                    this.updateConnectorAnnotation(obj);\n                }\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                this.preventNodesUpdate = true;\n                this.preventConnectorsUpdate = true;\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n                this.preventNodesUpdate = false;\n                this.preventConnectorsUpdate = false;\n            }\n            if (this['enterObject'] === undefined) {\n                this.updateQuad(obj);\n            }\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate && obj.id !== 'helper') {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false, this.annotationTemplate);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n            this.updateDiagramElementQuad();\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height), obj.id, this.onLoadImageSize.bind(this));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramElementQuad = function () {\n        for (var i = 0; i < this.nodes.length; i++) {\n            this.updateQuad(this.nodes[i]);\n        }\n    };\n    Diagram.prototype.onLoadImageSize = function (id, size) {\n        var obj = this.getObject(id);\n        var image = document.getElementById(id + 'sf-imageNode');\n        if (image) {\n            image.parentNode.removeChild(image);\n        }\n        this.nodePropertyChange(obj, {}, { width: size.width, height: size.height });\n        var args = { element: cloneObject(obj), size: size };\n        this.triggerEvent(DiagramEvent.onImageLoad, args);\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child.id) {\n                var id = child.id.split(node.id)[1];\n                if (id && id.match('^_icon')) {\n                    child.visible = visibility;\n                    this.updateDiagramContainerVisibility(child, visibility);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, false);\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            this.updatePortEdges(node, obj, true);\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortEdges = function (node, obj, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                var portId = (isInEdges) ? obj.targetPortID : obj.sourcePortID;\n                if (port.id === portId) {\n                    var portEdges = (isInEdges) ? port.inEdges : port.outEdges;\n                    if (portEdges.indexOf(obj.id) === -1) {\n                        portEdges.push(obj.id);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n        this.addBlazorDiagramObjects();\n        if (isBlazor() && this.layout && this.layout.layoutInfo && this.layout.layoutInfo.isRootInverse && this.nodes.length > 2) {\n            var rootNode = this.nodes[0];\n            if (rootNode.outEdges.length > 1) {\n                var isProtectedChange = this.isProtectedOnChange;\n                var connector = this.nameTable[rootNode.outEdges[1]];\n                this.protectPropertyChange(false);\n                this.preventUpdate = true;\n                connector.sourcePortID = rootNode.ports[1].id;\n                this.preventUpdate = false;\n                this.dataBind();\n                this.protectPropertyChange(isProtectedChange);\n            }\n        }\n        if (isBlazor()) {\n            var view = void 0;\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                view = this.views[temp];\n                if (view.renderDocument) {\n                    view.renderDocument(view);\n                    view.diagramRenderer.setLayers();\n                    view.updateView(view);\n                    this.renderNodes(view);\n                }\n            }\n        }\n        this.updateFitToPage();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex, isUpdateObject) {\n        var view;\n        var domTable = 'domTable';\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var hasLayers = this.layers.length > 1;\n                    var layer = void 0;\n                    if (hasLayers) {\n                        layer = this.commandHandler.getObjectLayer(obj.id);\n                    }\n                    if ((layer === undefined || (layer && layer.visible)) || isUpdateObject) {\n                        var htmlLayer = getHTMLLayer(this.element.id);\n                        if (!window[domTable][view.element.id + '_diagramLayer']) {\n                            window[domTable][view.element.id + '_diagramLayer'] =\n                                document.getElementById(view.element.id + '_diagramLayer');\n                        }\n                        var diagramElementsLayer = window[domTable][view.element.id + '_diagramLayer'];\n                        if (this.diagramActions & DiagramAction.Interactions) {\n                            this.updateCanupdateStyle(obj.wrapper.children, true);\n                        }\n                        this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById(this.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(this.element.id);\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) && layer.visible &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n                        this.layout.orientation : undefined);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var domTable = 'domTable';\n        if (!window[domTable][this.element.id + 'content']) {\n            window[domTable][this.element.id + 'content'] = document.getElementById(this.element.id + 'content');\n        }\n        var container = window[domTable][this.element.id + 'content'];\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        if (!(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.updateSelector();\n        }\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var isProtectedOnChangeValue = this.isProtectedOnChange;\n        if (isBlazor()) {\n            this.isProtectedOnChange = true;\n            this.commandHandler.oldSelectedObjects = cloneSelectedObjects(this, true);\n        }\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation) && !this.currentSymbol) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n        this.commandHandler.updateBlazorSelector();\n        this.isProtectedOnChange = isProtectedOnChangeValue;\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation)) && !this.currentSymbol) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if ((!isBlazor() && node.shape.shape === 'Activity') ||\n                (isBlazor() && node.shadow.bpmnShape === 'Activity')) {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    /* tslint:disable */\n    Diagram.prototype.endEdit = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var textArea, text, element, node, annotation, args, bpmnAnnotation, textWrapper, deleteNode, annotation_1, clonedObject, selectedNode, swimLaneNode, laneHeader, phaseHeader, collection, j;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this.diagramActions & DiagramAction.TextEdit)) return [3 /*break*/, 9];\n                        this.enableServerDataBinding(false);\n                        textArea = document.getElementById(this.element.id + '_editBox');\n                        if (!((isBlazor() && textArea) || !isBlazor())) return [3 /*break*/, 9];\n                        text = textArea.value;\n                        EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n                        EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n                        element = document.getElementById(this.element.id + '_editTextBoxDiv');\n                        node = void 0;\n                        node = this.nameTable[this.activeLabel.parentId];\n                        annotation = findAnnotation(node, this.activeLabel.id);\n                        args = { oldValue: this.activeLabel.text, newValue: text, cancel: false, element: node, annotation: annotation };\n                        if (isBlazor() && this.textEdit) {\n                            args = this.getBlazorTextEditArgs(args);\n                        }\n                        bpmnAnnotation = false;\n                        element.parentNode.removeChild(element);\n                        textWrapper = void 0;\n                        if (!this.bpmnModule) return [3 /*break*/, 4];\n                        node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                        textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                        bpmnAnnotation = node ? true : false;\n                        if (!bpmnAnnotation) return [3 /*break*/, 4];\n                        if (!(element.textContent !== text || text !== this.activeLabel.text)) return [3 /*break*/, 4];\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 1:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 3;\n                    case 3:\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                        _a.label = 4;\n                    case 4:\n                        if (!!bpmnAnnotation) return [3 /*break*/, 8];\n                        node = this.nameTable[this.activeLabel.parentId];\n                        deleteNode = this.eventHandler.isAddTextNode(node, true);\n                        if (!(!deleteNode && (element.textContent !== text || text !== this.activeLabel.text))) return [3 /*break*/, 7];\n                        if (!isBlazor()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.textEdit, args)];\n                    case 5:\n                        args = (_a.sent()) || args;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        _a.label = 7;\n                    case 7:\n                        if (!textWrapper) {\n                            textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                        }\n                        annotation_1 = findAnnotation(node, this.activeLabel.id);\n                        if (annotation_1.content !== text && !args.cancel) {\n                            if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                                && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                                && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                                text = ' + ' + text;\n                            }\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(true);\n                            }\n                            if (isBlazor() && (node.shape).type === \"Text\") {\n                                node.shape.textContent = text;\n                            }\n                            annotation_1.content = text;\n                            this.dataBind();\n                            this.updateSelector();\n                            if (node.isLane || node.isPhase) {\n                                this.protectPropertyChange(false);\n                            }\n                        }\n                        if (deleteNode) {\n                            this.removeObjectsFromLayer(node);\n                            this.removeFromAQuad(node);\n                            delete this.nameTable[this.activeLabel.parentId];\n                            if (text !== '') {\n                                this.clearSelection();\n                                clonedObject = cloneObject(node);\n                                node = this.add(clonedObject);\n                                this.updateDiagramObject(node);\n                                this.commandHandler.select(this.nameTable[node.id]);\n                            }\n                        }\n                        _a.label = 8;\n                    case 8:\n                        if (this.selectedItems.nodes.length) {\n                            selectedNode = this.nameTable[this.activeLabel.parentId];\n                            swimLaneNode = this.nameTable[selectedNode.parentId];\n                            if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                                laneHeader = 'LaneHeaderParent';\n                                phaseHeader = 'PhaseHeaderParent';\n                                if ((selectedNode.shape.type === 'SwimLane')) {\n                                    swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                                    selectedNode = node;\n                                }\n                                if ((selectedNode.isLane || selectedNode.isPhase)) {\n                                    collection = selectedNode.isLane ?\n                                        swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                                    for (j = 0; j < collection.length; j++) {\n                                        if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                            collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                                        }\n                                    }\n                                }\n                                else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                                    swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                                }\n                            }\n                            this.dataBind();\n                        }\n                        textWrapper.visible = true;\n                        this.updateDiagramObject(node);\n                        this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n                        if (this.activeLabel.isGroup) {\n                            this.endGroupAction();\n                        }\n                        this.activeLabel = { id: '', parentId: '', isGroup: false, text: undefined };\n                        this.commandHandler.getBlazorOldValues();\n                        this.enableServerDataBinding(true);\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /* tslint:enable */\n    Diagram.prototype.getBlazorTextEditArgs = function (args) {\n        var element = getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n            : { node: cloneBlazorObject(args.element) };\n        var annotation = {};\n        if (element.node) {\n            if (element.node.shape.type === 'Text') {\n                annotation.textNode = args.element.shape;\n            }\n            else {\n                annotation.nodeAnnotation = args.element.annotations[0];\n            }\n        }\n        else {\n            annotation.connectorAnnotation = args.element.annotations[0];\n        }\n        args = {\n            oldValue: args.oldValue,\n            newValue: args.newValue,\n            cancel: args.cancel,\n            element: element,\n            annotation: annotation\n        };\n        return args;\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        if (isBlazor()) {\n            for (var i = 0; i < this.nodes.length; i++) {\n                if (node.id === this.nodes[i].id) {\n                    this.UpdateBlazorDiagramModel(node, 'Node', i);\n                }\n            }\n        }\n        this.UpdateBlazorDiagramModel(node, 'Node', (this.nodes.indexOf(node)));\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        this.UpdateBlazorDiagramModelCollection(node);\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                                this.updateDiagramElementQuad();\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            else if (oldObject.constraints) {\n                var oldSelectConstraints = (oldObject.constraints & NodeConstraints.Select);\n                var newSelectConstraints = (node.constraints & NodeConstraints.Select);\n                if (oldSelectConstraints !== newSelectConstraints) {\n                    var shape = actualObject.shape;\n                    // Header - constraints\n                    var headerNode = this.nameTable[actualObject.id + shape.header.id];\n                    headerNode.constraints = (!newSelectConstraints) ? headerNode.constraints & ~NodeConstraints.Select :\n                        headerNode.constraints | NodeConstraints.Select;\n                    // Phase - Constraints\n                    var phaseNode = void 0;\n                    if (shape.phaseSize > 0) {\n                        for (var i = 0; i < shape.phases.length; i++) {\n                            phaseNode = this.nameTable[actualObject.id + shape.phases[i].id + '_header'];\n                            phaseNode.constraints = (!newSelectConstraints) ? phaseNode.constraints & ~NodeConstraints.Select :\n                                phaseNode.constraints | NodeConstraints.Select;\n                        }\n                    }\n                    // Header - Constraints\n                    var laneNode = void 0;\n                    var laneHeader = void 0;\n                    var value = shape.phases.length || 1;\n                    for (var i = 0; i < shape.lanes.length; i++) {\n                        for (var l = 0; l < value; l++) {\n                            laneNode = this.nameTable[actualObject.id + shape.lanes[i].id + l];\n                            laneNode.constraints = (!newSelectConstraints) ? laneNode.constraints & ~NodeConstraints.Select :\n                                laneNode.constraints | NodeConstraints.Select;\n                            if (l === 0) {\n                                laneHeader = this.nameTable[actualObject.id + shape.lanes[i].id + '_' + l + '_header'];\n                                laneHeader.constraints = (!newSelectConstraints) ? laneHeader.constraints & ~NodeConstraints.Select :\n                                    laneHeader.constraints | NodeConstraints.Select;\n                            }\n                        }\n                    }\n                }\n            }\n            update = true;\n        }\n        return update;\n    };\n    /** @private */\n    Diagram.prototype.insertValue = function (oldNodeObject, isNode) {\n        var value;\n        var oldObjects = isNode ? this.oldNodeObjects : this.oldConnectorObjects;\n        for (var i = 0; i < oldObjects.length; i++) {\n            if (oldObjects[i].id === oldNodeObject.id) {\n                value = true;\n            }\n        }\n        if (!value) {\n            isNode ? (this.oldNodeObjects.push(oldNodeObject)) : this.oldConnectorObjects.push(oldNodeObject);\n        }\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node_2 = cloneObject(actualObject);\n            this.insertValue(node_2, true);\n        }\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = actualObject.wrapper.children[0].minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = actualObject.wrapper.children[0].minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && ((!isBlazor() && actualObject.shape.shape === 'FinalNode') ||\n            (isBlazor() && actualObject.shape.umlActivityShape === 'FinalNode'))) {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            if (this.checkSelectedItem(actualObject) && actualObject.wrapper.children[0] instanceof TextElement) {\n                actualObject.wrapper.children[0].refreshTextElement();\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height), actualObject.id, this.onLoadImageSize.bind(this));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                // if (updateConnector) {\n                //     this.updateConnectorEdges(actualObject);\n                // }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            // if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) { this.updateQuad(actualObject); }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                    if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                        this.updateDiagramObject(actualObject, true);\n                    }\n                    else {\n                        this.updateDiagramObject(actualObject);\n                    }\n                }\n                if (!isLayout && updateConnector) {\n                    if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) && actualObject.id !== 'helper') {\n                        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n                            this.lineRoutingModule.renderVirtualRegion(this, true);\n                        }\n                    }\n                    this.updateConnectorEdges(actualObject);\n                    if (actualObject.id !== 'helper' && !(this.diagramActions & DiagramAction.ToolAction)) {\n                        var objects_2 = this.spatialSearch.findObjects(actualObject.wrapper.outerBounds);\n                        for (var i_3 = 0; i_3 < objects_2.length; i_3++) {\n                            var object = objects_2[i_3];\n                            if (object instanceof Connector) {\n                                this.connectorPropertyChange(objects_2[i_3], {}, {\n                                    sourceID: object.sourceID,\n                                    targetID: object.targetID,\n                                    sourcePortID: object.sourcePortID,\n                                    targetPortID: object.targetPortID,\n                                    sourcePoint: object.sourcePoint,\n                                    targetPoint: object.targetPoint\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: element, cause: this.diagramActions,\n                oldValue: oldObject, newValue: node\n            };\n            if (isBlazor() && this.propertyChange) {\n                args.element = { node: cloneBlazorObject(element) };\n                args.oldValue = { node: cloneBlazorObject(oldObject) };\n                args.newValue = { node: cloneBlazorObject(node) };\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn, undefined, true);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging, propertyChange) {\n        if (this.canEnableBlazorObject) {\n            var node = cloneObject(actualObject);\n            this.insertValue(node, false);\n        }\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        var source;\n        var target;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                    if (actualObject.sourcePortID && newProp.sourcePortID === undefined) {\n                        actualObject.sourcePortWrapper = sourceNode ? this.getWrapper(sourceNode.wrapper, actualObject.sourcePortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.sourceID] || sourceNode, oldProp.sourcePortID || actualObject.sourcePortID, actualObject.id, false);\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                    if (actualObject.targetPortID && newProp.targetPortID === undefined) {\n                        actualObject.targetPortWrapper = targetNode ? this.getWrapper(targetNode.wrapper, actualObject.targetPortID) : undefined;\n                    }\n                    this.removePortEdges(this.nameTable[oldProp.targetID] || targetNode, oldProp.targetPortID || actualObject.targetPortID, actualObject.id, true);\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                if (!sourceNode || (canOutConnect(sourceNode) || (actualObject.sourcePortID !== '' && canPortOutConnect(outPort)))) {\n                    actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n                }\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var targetNode = this.nameTable[actualObject.targetID];\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                if (!targetNode || (canInConnect(targetNode) || (actualObject.targetPortID !== '' && canPortInConnect(inPort)))) {\n                    actualObject.targetPortWrapper = target ? this.getWrapper(target, newProp.targetPortID) : undefined;\n                }\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            if (this.lineRoutingModule && this.diagramActions && (this.constraints & DiagramConstraints.LineRouting) &&\n                !(this.diagramActions & DiagramAction.ToolAction)) {\n                this.lineRoutingModule.renderVirtualRegion(this, true);\n                this.lineRoutingModule.refreshConnectorSegments(this, actualObject, false);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && (canMeasureDecoratorPath(Object.keys(newProp.targetDecorator)))) || newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (actualObject.shape.type === 'Bpmn' && actualObject.shape.sequence === 'Default') {\n            this.commandHandler.updatePathElementOffset(actualObject);\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject) && (!(this.diagramActions & DiagramAction.ToolAction)\n            || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            if (!canVitualize(this) || (canVitualize(this) && this.scroller.oldCollectionObjects.indexOf(actualObject.id) > -1)) {\n                if (this.diagramActions & DiagramAction.PreventZIndexOnDragging) {\n                    this.updateDiagramObject(actualObject, true);\n                }\n                else {\n                    this.updateDiagramObject(actualObject);\n                }\n            }\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n        this.triggerPropertyChange(propertyChange, actualObject, oldProp, newProp);\n    };\n    /* tslint:enable */\n    /** @private */\n    Diagram.prototype.removePortEdges = function (node, portId, item, isInEdges) {\n        if (node) {\n            for (var i = 0; i < node.ports.length; i++) {\n                var port = node.ports[i];\n                if (port.id === portId) {\n                    var portEdge = (isInEdges) ? port.inEdges : port.outEdges;\n                    removeItem(portEdge, item);\n                }\n            }\n        }\n    };\n    Diagram.prototype.getpropertyChangeArgs = function (element, oldProp, newProp, args) {\n        args.element = { connector: cloneBlazorObject(element) };\n        args.oldValue = { connector: cloneBlazorObject(oldProp) };\n        args.newValue = { connector: cloneBlazorObject(newProp) };\n        return args;\n    };\n    Diagram.prototype.triggerPropertyChange = function (propertyChange, actualObject, oldProp, newProp) {\n        if (!propertyChange) {\n            var element = actualObject;\n            var args = {\n                element: cloneBlazorObject(element), cause: this.diagramActions,\n                oldValue: cloneBlazorObject(oldProp), newValue: cloneBlazorObject(newProp)\n            };\n            if (isBlazor()) {\n                args = this.getpropertyChangeArgs(element, oldProp, newProp, args);\n            }\n            this.triggerEvent(DiagramEvent.propertyChange, args);\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id], undefined, true);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    //updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if (actualObject.shape.type === 'UmlActivity' &&\n                    ((isBlazor && actualObject.shape.umlActivityShape === 'StructuredNode') ||\n                        (!isBlazor && actualObject.shape.shape === 'StructuredNode'))) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                    portWrapper.canMeasurePath = true;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if ((this.diagramActions & DiagramAction.Render) &&\n            !(this.diagramActions & DiagramAction.DragUsingMouse)) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.getProtectPropertyChangeValue = function () {\n        return this.isProtectedOnChange;\n    };\n    /** @private */\n    Diagram.prototype.enableServerDataBinding = function (enable) {\n        if (isBlazor()) {\n            this.allowServerDataBinding = enable;\n            if (enable) {\n                this.bulkChanges = {};\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                var dragDataHelper = null;\n                if (!args.dragData && args.name === 'drag') {\n                    var helper = document.getElementsByClassName('e-dragclone')[0];\n                    if (helper) {\n                        dragDataHelper = helper;\n                    }\n                }\n                if (args.dragData || dragDataHelper) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = dragDataHelper || args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    var nodeDragSize = void 0;\n                    var nodePreviewSize = void 0;\n                    var paletteDragSize = void 0;\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            _this.allowServerDataBinding = false;\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                if (obj.shape.shape === 'TextAnnotation') {\n                                    clonedObject.offsetX = position.x + 11 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + 11 + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                else {\n                                    clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                    clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                }\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                nodeDragSize = newNode.dragSize;\n                                nodePreviewSize = newNode.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                var palettePreview = sourceElement['symbolPreview'];\n                                newNode.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || palettePreview.width || newNode.width;\n                                newNode.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || palettePreview.height || newNode.height;\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        _this.diagramActions |= DiagramAction.PreventCollectionChangeOnDragOver;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        group.previewSize = newNode.previewSize;\n                                        group.dragSize = newNode.dragSize;\n                                        newNode = _this.add(group);\n                                        _this.diagramActions &= ~DiagramAction.PreventCollectionChangeOnDragOver;\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            if (isBlazor()) {\n                                arg = _this.getBlazorDragEventArgs(arg);\n                            }\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                nodeDragSize = newObj.dragSize;\n                                nodePreviewSize = newObj.previewSize;\n                                paletteDragSize = sourceElement['symbolDragSize'];\n                                laneObj.width = nodeDragSize.width || paletteDragSize.width || nodePreviewSize.width || laneObj.width;\n                                laneObj.height = nodeDragSize.height || paletteDragSize.height || nodePreviewSize.height || laneObj.height;\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                if (newObj.zIndex !== -1) {\n                                    newObj.zIndex = -1;\n                                }\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                        _this.allowServerDataBinding = true;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) { return __awaiter(_this, void 0, void 0, function () {\n            var source, value, isPhase, orientation_2, isConnector, newObj, node, conn, arg, clonedObject, id, nodeId, arg, clonedObject, id, selectedSymbols;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        source = 'sourceElement';\n                        if (!this.currentSymbol) return [3 /*break*/, 4];\n                        isPhase = false;\n                        isConnector = void 0;\n                        isConnector = (this.currentSymbol instanceof Connector) ? true : false;\n                        if (args.event.touches) {\n                            this.eventHandler.mouseUp(args.event);\n                        }\n                        newObj = void 0;\n                        node = void 0;\n                        conn = void 0;\n                        arg = void 0;\n                        arg = {\n                            source: this.droppable[source],\n                            element: this.currentSymbol,\n                            target: this.eventHandler['hoverNode'] || this.eventHandler['lastObjectUnderMouse'] || this, cancel: false,\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        arg = {\n                            source: cloneBlazorObject(this.droppable[source]),\n                            element: getObjectType(this.currentSymbol) === Connector ? { connector: cloneBlazorObject(this.currentSymbol) } : { node: cloneBlazorObject(this.currentSymbol) },\n                            cancel: false, target: {},\n                            position: { x: this.currentSymbol.wrapper.offsetX, y: this.currentSymbol.wrapper.offsetY }\n                        };\n                        this.getDropEventArgs(arg);\n                        return [4 /*yield*/, this.triggerEvent(DiagramEvent.drop, arg)];\n                    case 1:\n                        arg = (_a.sent()) || arg;\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        _a.label = 3;\n                    case 3:\n                        clonedObject = void 0;\n                        id = 'id';\n                        clonedObject = cloneObject(this.currentSymbol);\n                        clonedObject['hasTarget'] = this.currentSymbol['hasTarget'];\n                        this.removeFromAQuad(this.currentSymbol);\n                        this.removeObjectsFromLayer(this.nameTable[this.currentSymbol.id]);\n                        this.removeElements(this.currentSymbol);\n                        if (this.currentSymbol.shape.isLane ||\n                            this.currentSymbol.shape.isPhase) {\n                            this.removeChildInNodes(this.currentSymbol);\n                        }\n                        if (arg.cancel) {\n                            removeChildNodes(this.currentSymbol, this);\n                        }\n                        if (this.currentSymbol.shape.isPhase) {\n                            isPhase = true;\n                            orientation_2 = this.currentSymbol.shape.orientation;\n                        }\n                        delete this.nameTable[this.currentSymbol.id];\n                        this.currentSymbol = null;\n                        this.protectPropertyChange(true);\n                        if (!arg.cancel) {\n                            this.startGroupAction();\n                            if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                                if (isPhase) {\n                                    clonedObject.shape.isPhase = isPhase;\n                                    clonedObject.shape.orientation = orientation_2;\n                                }\n                                this.eventHandler.addSwimLaneObject(clonedObject);\n                            }\n                            if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                                && clonedObject['hasTarget']) {\n                                nodeId = clonedObject.shape.annotation.nodeId;\n                                clonedObject.shape.annotation.id = clonedObject.id;\n                                this.addTextAnnotation(clonedObject.shape.annotation, this.nameTable[nodeId]);\n                                clonedObject.nodeId = '';\n                            }\n                            if (!clonedObject.shape.isLane && !isPhase) {\n                                if (clonedObject.children) {\n                                    this.addChildNodes(clonedObject);\n                                }\n                                if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(this, arg.target)\n                                    && canAllowDrop(arg.target)) {\n                                    addChildToContainer(this, arg.target, clonedObject);\n                                }\n                                else {\n                                    this.allowServerDataBinding = false;\n                                    value = this.add(clonedObject, true);\n                                    this.allowServerDataBinding = true;\n                                }\n                                if ((clonedObject || value) && canSingleSelect(this)) {\n                                    this.select([this.nameTable[clonedObject[id]]]);\n                                }\n                            }\n                        }\n                        else {\n                            this.clearSelectorLayer();\n                        }\n                        this.protectPropertyChange(false);\n                        newObj = this.nameTable[clonedObject[id]];\n                        if (clonedObject['hasTarget']) {\n                            clonedObject.nodeId = clonedObject['hasTarget'];\n                            this.remove(clonedObject);\n                        }\n                        if (this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                            newObj.processId = clonedObject.processId;\n                            this.bpmnModule.dropBPMNchild(this.nameTable[newObj.processId], newObj, this);\n                        }\n                        this.endGroupAction();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        delete this.droppable[source];\n                        return [3 /*break*/, 5];\n                    case 4:\n                        arg = {\n                            source: cloneBlazorObject(args.droppedElement),\n                            element: undefined,\n                            target: cloneBlazorObject(this.eventHandler['hoverNode'] || (this.eventHandler['lastObjectUnderMouse']) || this), cancel: false,\n                            position: undefined\n                        };\n                        if (isBlazor()) {\n                            arg = {\n                                source: cloneBlazorObject(args.droppedElement),\n                                element: undefined,\n                                cancel: false,\n                                position: undefined,\n                                target: {}\n                            };\n                            this.getDropEventArgs(arg);\n                        }\n                        this.triggerEvent(DiagramEvent.drop, arg);\n                        clonedObject = void 0;\n                        id = 'id';\n                        _a.label = 5;\n                    case 5:\n                        selectedSymbols = 'selectedSymbols';\n                        if (this.droppable[selectedSymbols]) {\n                            remove(this.droppable[selectedSymbols]);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                var args_1 = {\n                    element: cloneBlazorObject(_this.currentSymbol),\n                    diagram: _this\n                };\n                if (isBlazor()) {\n                    args_1 = _this.getBlazorDragLeaveEventArgs(args_1);\n                }\n                _this.triggerEvent(DiagramEvent.dragLeave, args_1);\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.getBlazorDragLeaveEventArgs = function (args) {\n        args = {\n            diagramId: this.element.id,\n            element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) }\n        };\n        return args;\n    };\n    Diagram.prototype.getDropEventArgs = function (arg) {\n        if ((this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'])) {\n            var object = this.eventHandler['lastObjectUnderMouse'] || this.eventHandler['hoverNode'];\n            arg.target = getObjectType(object) === Connector ? { connector: cloneBlazorObject(object) } : { node: cloneBlazorObject(object) };\n        }\n        else {\n            arg.target.diagramId = this.element.id;\n        }\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.getBlazorDragEventArgs = function (args) {\n        args = {\n            source: cloneBlazorObject(args.source), element: getObjectType(args.element) === Connector ? { connector: cloneBlazorObject(args.element) }\n                : { node: cloneBlazorObject(args.element) },\n            cancel: args.cancel, diagramId: this.element.id\n        };\n        return args;\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    Diagram.prototype.moveNode = function (node) {\n        var currentLayer = this.commandHandler.getObjectLayer(node.id);\n        var index = currentLayer.zIndex;\n        var length = currentLayer.objects.length;\n        var targetLayer;\n        for (var i = 0; i < this.layers.length; i++) {\n            if (index === this.layers[i].zIndex) {\n                targetLayer = this.layers[i + 1];\n            }\n        }\n        if (length > 1) {\n            this.commandHandler.moveSvgNode(node.id, currentLayer.objects[length - 2]);\n            this.commandHandler.moveSvgNode(currentLayer.objects[length - 2], node.id);\n        }\n        else {\n            if (targetLayer) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[0];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.updateNativeNodeIndex(node.id, targetObject);\n                }\n                else {\n                    this.moveObjectsUp(node, currentLayer);\n                }\n            }\n            else {\n                this.moveObjectsUp(node, currentLayer);\n            }\n        }\n    };\n    /**\n     * moves the node or connector forward within given layer\n     */\n    Diagram.prototype.moveObjectsUp = function (node, currentLayer) {\n        var targetLayer;\n        for (var i = this.layers.length - 1; i >= 0; i--) {\n            targetLayer = this.layers[i];\n            if (currentLayer.id !== targetLayer.id) {\n                var targetObject = this.commandHandler.getLayer(this.layerZIndexTable[targetLayer.zIndex]).objects[targetLayer.objects.length - 1];\n                if (targetObject) {\n                    this.commandHandler.moveSvgNode(node.id, targetObject);\n                    this.commandHandler.moveSvgNode(targetObject, node.id);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"annotationTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"connectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Collection([], CustomCursorAction)\n    ], Diagram.prototype, \"customCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"keyDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onUserHandleMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"segmentCollectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"onImageLoad\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"commandExecute\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { checkBrowserInfo } from './utility/diagram-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        /* tslint:disable */\n        return checkBrowserInfo() ? htmlData.replace(\"url(\" + location.href + \"#diagram_pattern \", \"url(#diagram_pattern)\") : htmlData;\n        /* tslint:enable */\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillStyle = 'transparent';\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, 0, 0, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\nimport { updateDefaultValues } from '../utility/diagram-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || data.dataSource || {};\n        dataSource = dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length === 0 && dataManager.dataSource.data) {\n            dataSource = dataManager.dataSource.data;\n        }\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param {DataSourceModel} data\n     * @param {Diagram} diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        var node;\n        if (dataSource.dataManager instanceof DataManager || dataSource.dataSource instanceof DataManager) {\n            var tempObj = mapper.dataManager || mapper.dataSource;\n            var query = tempObj.defaultQuery || new Query();\n            var dataManager = data.dataManager || data.dataSource;\n            dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    diagram.protectPropertyChange(true);\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.protectPropertyChange(false);\n                    diagram.trigger('dataLoaded', { diagram: cloneBlazorObject(diagram) });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var node;\n        var nodes;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param {Object} object\n     * @param {Object[]} rootnodes\n     * @param {DataSourceModel} mapper\n     * @param {Object[]} data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param {DataSourceModel} mapper\n     * @param {Object} item\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var blazor = 'Blazor';\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        updateDefaultValues(obj, nodeModel, diagram.nodeDefaults);\n        if (mapper.dataMapSettings) {\n            var index = void 0;\n            var arrayProperty = [];\n            var innerProperty = [];\n            for (var i = 0; i < mapper.dataMapSettings.length; i++) {\n                if (mapper.dataMapSettings[i].property.indexOf('.') !== -1) {\n                    innerProperty = this.splitString(mapper.dataMapSettings[i].property);\n                    for (var p = 0; p < innerProperty.length; p++) {\n                        if (innerProperty[p].indexOf('[') !== -1) {\n                            index = innerProperty[p].indexOf('[');\n                            arrayProperty = innerProperty[p].split('[');\n                        }\n                    }\n                    if (index) {\n                        if (innerProperty[2]) {\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]][innerProperty[2]] =\n                                item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            var value = item[mapper.dataMapSettings[i].field];\n                            obj[arrayProperty[0]][innerProperty[0].charAt(index + 1)][innerProperty[1]] = value;\n                        }\n                    }\n                    else {\n                        if (innerProperty[2]) {\n                            obj[innerProperty[0]][innerProperty[1]][innerProperty[2]] = item[mapper.dataMapSettings[i].field];\n                        }\n                        else {\n                            obj[innerProperty[0]][innerProperty[1]] = item[mapper.dataMapSettings[i].field];\n                        }\n                    }\n                }\n                else {\n                    var property = mapper.dataMapSettings[i].property;\n                    property = property.charAt(0).toLowerCase() + property.slice(1);\n                    obj[property] = item[mapper.dataMapSettings[i].field];\n                }\n                index = 0;\n                arrayProperty = [];\n                innerProperty = [];\n            }\n        }\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.splitString = function (property) {\n        var temp = [];\n        temp = property.split('.');\n        for (var i = 0; i < temp.length; i++) {\n            temp[i] = temp[i].charAt(0).toLowerCase() + temp[i].slice(1);\n        }\n        return temp;\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        var returnNode;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param {Node} node\n     * @param {Diagram} diagram\n     * @param {string} id\n     * @param {string} parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param {string} sNode\n     * @param {string} tNode\n     * @param {Diagram} diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        updateDefaultValues(obj, connModel, diagram.connectorDefaults);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu',\n            animationSettings: { effect: 'None' }\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && (event || this.parent.checkMenu) &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        return __awaiter(this, void 0, void 0, function () {\n            var diagramArgs, _i, _a, item, _b, _c, newItem, hidden, contextItems, i, item, i, item;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        if (!this.parent.checkMenu &&\n                            (window.navigator.userAgent.indexOf('Linux') !== -1 || window.navigator.userAgent.indexOf('X11') !== -1)) {\n                            this.parent.checkMenu = args.cancel = true;\n                        }\n                        if (this.parent.checkMenu) {\n                            this.hiddenItems = [];\n                        }\n                        diagramArgs = args;\n                        diagramArgs.hiddenItems = [];\n                        for (_i = 0, _a = args.items; _i < _a.length; _i++) {\n                            item = _a[_i];\n                            this.ensureItems(item, args.event);\n                            if (item.items.length) {\n                                for (_b = 0, _c = item.items; _b < _c.length; _b++) {\n                                    newItem = _c[_b];\n                                    this.ensureItems(newItem, args.event);\n                                }\n                            }\n                        }\n                        this.eventArgs = args.event;\n                        if (!isBlazor()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.parent.trigger(contextMenuOpen, diagramArgs)];\n                    case 1:\n                        diagramArgs =\n                            (_d.sent()) || diagramArgs;\n                        if (typeof diagramArgs === 'string') {\n                            diagramArgs = JSON.parse(diagramArgs);\n                        }\n                        return [3 /*break*/, 3];\n                    case 2:\n                        this.parent.trigger(contextMenuOpen, diagramArgs);\n                        _d.label = 3;\n                    case 3:\n                        hidden = true;\n                        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n                        this.contextMenu.enableItems(this.disableItems, false, true);\n                        contextItems = this;\n                        for (i = 0; i < args.items.length; i++) {\n                            item = args.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                                contextItems.contextMenu.hideItems([item.id], true);\n                            }\n                        }\n                        for (i = 0; i < contextItems.contextMenu.items.length; i++) {\n                            item = contextItems.contextMenu.items[i];\n                            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                                hidden = false;\n                                contextItems.contextMenu.showItems([item.id], true);\n                            }\n                        }\n                        if (hidden) {\n                            diagramArgs.cancel = hidden;\n                            this.hiddenItems = [];\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../objects/node';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale === 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = scale;\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = this.diagram.scroller.currentZoom;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\nimport { DiagramEvent } from '../enum/enum';\nimport { isBlazor } from '@syncfusion/ej2-base';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.undo(entry);\n                }\n                var arg = {\n                    entryType: 'undo', oldValue: entry.undoObject, newValue: entry.redoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryChangeEvent = function (object, prop) {\n        var value = {};\n        switch (prop) {\n            case 'Node':\n                value.node = object;\n                break;\n            case 'Connector':\n                value.connector = object;\n                break;\n            case 'Selector':\n                value.selector = object;\n                break;\n            case 'Diagram':\n                value.diagram = object;\n                break;\n            case 'ShapeAnnotation':\n                value.shapeAnnotation = object;\n                break;\n            case 'PathAnnotation':\n                value.pathAnnotation = object;\n                break;\n            case 'PortObject':\n                value.pointPortModel = object;\n                break;\n            case 'Object':\n                value.object = object;\n        }\n        return value;\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry, 'Undo');\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, node instanceof Node ? true : false);\n        }\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo, entry.historyAction === 'AddNodeToLane');\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        if (diagram.canEnableBlazorObject) {\n            var node = cloneObject(diagram.nameTable[entryObject.id]);\n            diagram.insertValue(node, true);\n        }\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.sourceID], connector.sourcePortID, connector.id, false);\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            diagram.removePortEdges(diagram.nameTable[connector.targetID], connector.targetPortID, connector.id, true);\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, false);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n                diagram.updatePortEdges(node, obj, true);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                if (!isBlazor()) {\n                    diagram.historyManager.redo(entry);\n                }\n                var arg = {\n                    entryType: 'redo', oldValue: entry.redoObject, newValue: entry.undoObject\n                };\n                if (isBlazor()) {\n                    arg = {\n                        entryType: 'undo', oldValue: this.getHistoryChangeEvent(entry.redoObject, entry.blazorHistoryEntryType),\n                        newValue: this.getHistoryChangeEvent(entry.undoObject, entry.blazorHistoryEntryType)\n                    };\n                }\n                diagram.triggerEvent(DiagramEvent.historyStateChange, arg);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry, 'Redo');\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent, RealAction } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\nimport { cloneBlazorObject } from '../utility/diagram-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        diagram.realActions = diagram.realActions | RealAction.AnimationClick;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    diagram.allowServerDataBinding = false;\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                    diagram.allowServerDataBinding = true;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.realActions = diagram.realActions & ~RealAction.AnimationClick;\n            diagram.refreshCanvasLayers();\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: cloneBlazorObject(clone(node)), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { getPortDirection } from '../utility/connector';\nimport { canEnableRouting } from '../utility/constraints-util';\n/**\n * Line Routing\n */\nvar LineRouting = /** @class */ (function () {\n    /**\n     * Constructor for the line routing module\n     * @private\n     */\n    function LineRouting() {\n        this.size = 20;\n        this.intermediatePoints = [];\n        this.gridCollection = [];\n        this.startArray = [];\n        this.targetGridCollection = [];\n        this.sourceGridCollection = [];\n        this.considerWalkable = [];\n        //constructs the line routing module\n    }\n    /** @private */\n    LineRouting.prototype.lineRouting = function (diagram) {\n        var length = diagram.connectors.length;\n        this.renderVirtualRegion(diagram);\n        if (length > 0) {\n            for (var k = 0; k < length; k++) {\n                var connector = diagram.connectors[k];\n                if (connector.type === 'Orthogonal') {\n                    this.refreshConnectorSegments(diagram, connector, true);\n                }\n            }\n        }\n    };\n    /** @private */\n    LineRouting.prototype.renderVirtualRegion = function (diagram, isUpdate) {\n        /* tslint:disable */\n        var extraBounds = this.size;\n        if (diagram.spatialSearch['pageTop'] < 0 || diagram.spatialSearch['pageLeft'] < 0) {\n            extraBounds = this.size + (this.size / 2);\n        }\n        var right = diagram.spatialSearch['pageRight'] + extraBounds;\n        var bottom = diagram.spatialSearch['pageBottom'] + extraBounds;\n        var left = diagram.spatialSearch['pageLeft'] - extraBounds;\n        var top = diagram.spatialSearch['pageTop'] - extraBounds;\n        left = left < 0 ? left - 20 : 0;\n        top = top < 0 ? top - 20 : 0;\n        /* tslint:enable */\n        if ((isUpdate && (this.width !== (right - left) || this.height !== (bottom - top) ||\n            this.diagramStartX !== left || this.diagramStartY !== top)) || isUpdate === undefined) {\n            this.width = right - left;\n            this.height = bottom - top;\n            this.diagramStartX = left;\n            this.diagramStartY = top;\n            this.gridCollection = [];\n            this.noOfRows = this.width / this.size;\n            this.noOfCols = this.height / this.size;\n            var size = this.size;\n            var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    if (i === 0) {\n                        // tslint:disable-next-line:no-any\n                        this.gridCollection.push([0]);\n                    }\n                    var grid = {\n                        x: x, y: y, width: size, height: size, gridX: j,\n                        gridY: i, walkable: true, tested: undefined, nodeId: []\n                    };\n                    this.gridCollection[j][i] = grid;\n                    x += size;\n                }\n                x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n                y += size;\n            }\n        }\n        var nodes = this.findNodes(diagram.nodes);\n        this.updateNodesInVirtualRegion(nodes);\n    };\n    LineRouting.prototype.findNodes = function (nodes) {\n        var objects = [];\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.shape.type !== 'SwimLane' && !node.isLane && !node.isPhase && !node.isHeader) {\n                objects.push(node);\n            }\n        }\n        return objects;\n    };\n    LineRouting.prototype.updateNodesInVirtualRegion = function (diagramNodes) {\n        var size = this.size;\n        var x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n        var y = this.diagramStartY < 0 ? this.diagramStartY : 0;\n        for (var i = 0; i < this.noOfCols; i++) {\n            for (var j = 0; j < this.noOfRows; j++) {\n                var grid = this.gridCollection[j][i];\n                var rectangle = new Rect(x, y, this.size, this.size);\n                var isContains = void 0;\n                var k = void 0;\n                grid.walkable = true;\n                grid.tested = undefined;\n                grid.nodeId = [];\n                for (k = 0; k < diagramNodes.length; k++) {\n                    isContains = this.intersectRect(rectangle, diagramNodes[k].wrapper.bounds);\n                    if (isContains) {\n                        grid.nodeId.push(diagramNodes[k].id);\n                        grid.walkable = false;\n                    }\n                }\n                x += size;\n            }\n            x = this.diagramStartX < 0 ? this.diagramStartX : 0;\n            y += size;\n        }\n    };\n    LineRouting.prototype.intersectRect = function (r1, r2) {\n        return !(r2.left >= r1.right || r2.right <= r1.left ||\n            r2.top >= r1.bottom || r2.bottom <= r1.top);\n    };\n    LineRouting.prototype.findEndPoint = function (connector, isSource, isPortBounds) {\n        var endPoint;\n        var portDirection;\n        if ((isSource && connector.sourcePortID !== '') || (!isSource && connector.targetPortID !== '')) {\n            endPoint = (isSource) ? { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY } :\n                { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n            portDirection = getPortDirection(endPoint, undefined, (isSource) ? connector.sourceWrapper.bounds : connector.targetWrapper.bounds, false);\n            var bounds = (isSource) ? connector.sourcePortWrapper.bounds : connector.targetPortWrapper.bounds;\n            if (isPortBounds) {\n                if (portDirection === 'Top') {\n                    endPoint = { x: bounds.topCenter.x, y: bounds.topCenter.y };\n                }\n                else if (portDirection === 'Left') {\n                    endPoint = { x: bounds.middleLeft.x, y: bounds.middleLeft.y };\n                }\n                else if (portDirection === 'Right') {\n                    endPoint = { x: bounds.middleRight.x, y: bounds.middleRight.y };\n                }\n                else {\n                    endPoint = { x: bounds.bottomCenter.x, y: bounds.bottomCenter.y };\n                }\n            }\n            else {\n                endPoint = { x: bounds.center.x, y: bounds.center.y };\n            }\n        }\n        else {\n            if ((isSource && this.startNode) || (!isSource && this.targetNode)) {\n                endPoint = (isSource) ? { x: this.startNode.wrapper.offsetX, y: this.startNode.wrapper.offsetY } :\n                    { x: this.targetNode.wrapper.offsetX, y: this.targetNode.wrapper.offsetY };\n            }\n            else {\n                endPoint = (isSource) ? { x: connector.sourcePoint.x, y: connector.sourcePoint.y } :\n                    { x: connector.targetPoint.x, y: connector.targetPoint.y };\n            }\n        }\n        return endPoint;\n    };\n    /** @private */\n    LineRouting.prototype.refreshConnectorSegments = function (diagram, connector, isUpdate) {\n        var sourceId = connector.sourceID;\n        var targetId = connector.targetID;\n        var sourcePortID = connector.sourcePortID;\n        var targetPortID = connector.targetPortID;\n        var startPoint;\n        var targetPoint;\n        var sourcePortDirection;\n        var targetPortDirection;\n        var grid;\n        var sourceTop;\n        var sourceBottom;\n        var isBreak;\n        var sourceLeft;\n        var sourceRight;\n        var targetRight;\n        var targetTop;\n        var targetBottom;\n        var targetLeft;\n        if (canEnableRouting(connector, diagram)) {\n            this.startNode = diagram.nameTable[sourceId];\n            this.targetNode = diagram.nameTable[targetId];\n            this.intermediatePoints = [];\n            this.startArray = [];\n            this.targetGridCollection = [];\n            this.sourceGridCollection = [];\n            this.startGrid = undefined;\n            this.targetGrid = undefined;\n            for (var i = 0; i < this.noOfCols; i++) {\n                for (var j = 0; j < this.noOfRows; j++) {\n                    this.gridCollection[j][i].tested = this.gridCollection[j][i].parent = undefined;\n                    this.gridCollection[j][i].previousDistance = this.gridCollection[j][i].afterDistance = undefined;\n                    this.gridCollection[j][i].totalDistance = undefined;\n                }\n            }\n            // Set the source point and target point\n            startPoint = this.findEndPoint(connector, true);\n            targetPoint = this.findEndPoint(connector, false);\n            // Find the start grid and target grid\n            for (var i = 0; i < this.noOfRows; i++) {\n                for (var j = 0; j < this.noOfCols; j++) {\n                    grid = this.gridCollection[i][j];\n                    var rectangle = new Rect(grid.x, grid.y, grid.width, grid.height);\n                    if (rectangle.containsPoint(startPoint) && !this.startGrid &&\n                        (grid.nodeId.indexOf(sourceId) !== -1 || sourceId === '')) {\n                        this.startGrid = (sourcePortID && this.startGrid &&\n                            (sourcePortDirection === 'Left' || sourcePortDirection === 'Top')) ? this.startGrid : grid;\n                    }\n                    if (rectangle.containsPoint(targetPoint) && !this.targetGrid &&\n                        (grid.nodeId.indexOf(targetId) !== -1 || targetId === '')) {\n                        this.targetGrid = (targetPortID && this.targetGrid &&\n                            (targetPortDirection === 'Left' || targetPortDirection === 'Top')) ? this.targetGrid : grid;\n                    }\n                    if (!sourcePortID && this.startNode) {\n                        var bounds = this.startNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !sourceTop) {\n                            sourceTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !sourceLeft) {\n                            sourceLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !sourceRight) {\n                            sourceRight = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.bottomCenter) && !sourceBottom) {\n                            sourceBottom = grid;\n                        }\n                    }\n                    if (!targetPortID && this.targetNode) {\n                        var bounds = this.targetNode.wrapper.bounds;\n                        if (rectangle.containsPoint(bounds.topCenter) && !targetTop) {\n                            targetTop = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleLeft) && !targetLeft) {\n                            targetLeft = grid;\n                        }\n                        if (rectangle.containsPoint(bounds.middleRight) && !targetRight) {\n                            targetRight = grid;\n                        }\n                        if (rectangle.containsPoint({ x: bounds.bottomCenter.x, y: bounds.bottomCenter.y }) && !targetBottom) {\n                            targetBottom = grid;\n                        }\n                    }\n                }\n            }\n            this.findEdgeBoundary(sourcePortID, sourceLeft, sourceRight, sourceTop, sourceBottom, true);\n            this.findEdgeBoundary(targetPortID, targetLeft, targetRight, targetTop, targetBottom, false);\n            this.startGrid.totalDistance = 0;\n            this.startGrid.previousDistance = 0;\n            this.intermediatePoints.push({ x: this.startGrid.gridX, y: this.startGrid.gridY });\n            this.startArray.push(this.startGrid);\n            this.checkObstacles(connector);\n            renderPathElement: while (this.startArray.length > 0) {\n                var startGridNode = this.startArray.pop();\n                for (var i = 0; i < this.targetGridCollection.length; i++) {\n                    var target = this.targetGridCollection[i];\n                    if (startGridNode.gridX === target.gridX && startGridNode.gridY === target.gridY) {\n                        this.getIntermediatePoints(startGridNode);\n                        isBreak = this.updateConnectorSegments(diagram, this.intermediatePoints, this.gridCollection, connector, isUpdate);\n                        if (!isBreak) {\n                            this.targetGridCollection.splice(this.targetGridCollection.indexOf(target), 1);\n                            startGridNode = this.startArray.pop();\n                        }\n                        else {\n                            this.considerWalkable = [];\n                            break renderPathElement;\n                        }\n                    }\n                }\n                this.findPath(startGridNode);\n            }\n        }\n    };\n    LineRouting.prototype.findEdgeBoundary = function (portID, left, right, top, bottom, isSource) {\n        var grid;\n        var collection = (isSource) ? this.sourceGridCollection : this.targetGridCollection;\n        if (!portID && ((isSource) ? this.startNode : this.targetNode)) {\n            for (var i = left.gridX; i <= right.gridX; i++) {\n                grid = this.gridCollection[i][left.gridY];\n                if ((grid.nodeId.length === 1 && (i === left.gridX || i === right.gridX)) ||\n                    (i !== left.gridX && i !== right.gridX)) {\n                    collection.push(grid);\n                }\n            }\n            for (var i = top.gridY; i <= bottom.gridY; i++) {\n                grid = this.gridCollection[top.gridX][i];\n                if (((grid.nodeId.length === 1 && (i === top.gridY || i === bottom.gridY)) ||\n                    (i !== top.gridY && i !== bottom.gridY)) && collection.indexOf(grid) === -1) {\n                    collection.push(grid);\n                }\n            }\n        }\n        else {\n            collection.push((isSource) ? this.startGrid : this.targetGrid);\n        }\n    };\n    LineRouting.prototype.checkObstacles = function (connector) {\n        var neigbours = this.findNearestNeigbours(this.startGrid, this.gridCollection, true);\n        if (neigbours.length === 0) {\n            if (connector.sourcePortID !== '') {\n                var endPoint = { x: connector.sourcePortWrapper.offsetX, y: connector.sourcePortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.sourceWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.startGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.startGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.startGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.startGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.startGrid, 'top', true);\n                this.resetGridColl(this.startGrid, 'right', true);\n                this.resetGridColl(this.startGrid, 'bottom', true);\n                this.resetGridColl(this.startGrid, 'left', true);\n            }\n        }\n        neigbours = this.findNearestNeigbours(this.targetGrid, this.gridCollection, false);\n        if (neigbours.length === 0) {\n            if (connector.targetPortID !== '') {\n                var endPoint = { x: connector.targetPortWrapper.offsetX, y: connector.targetPortWrapper.offsetY };\n                var portDirection = getPortDirection(endPoint, undefined, connector.targetWrapper.bounds, false);\n                if (portDirection === 'Top') {\n                    this.resetGridColl(this.targetGrid, 'top', true);\n                }\n                else if (portDirection === 'Right') {\n                    this.resetGridColl(this.targetGrid, 'right', true);\n                }\n                else if (portDirection === 'Bottom') {\n                    this.resetGridColl(this.targetGrid, 'bottom', true);\n                }\n                else {\n                    this.resetGridColl(this.targetGrid, 'left', true);\n                }\n            }\n            else {\n                this.resetGridColl(this.targetGrid, 'top', false);\n                this.resetGridColl(this.targetGrid, 'right', false);\n                this.resetGridColl(this.targetGrid, 'bottom', false);\n                this.resetGridColl(this.targetGrid, 'left', false);\n            }\n        }\n    };\n    // Get all the intermediated points from target grid\n    LineRouting.prototype.getIntermediatePoints = function (target) {\n        var distance;\n        this.intermediatePoints = [];\n        while (target) {\n            this.intermediatePoints.push({ x: target.gridX, y: target.gridY });\n            target = target.parent;\n        }\n        this.intermediatePoints.reverse();\n        if (this.intermediatePoints[0].x === this.intermediatePoints[1].x) {\n            if (this.intermediatePoints[0].y < this.intermediatePoints[1].y) {\n                distance = this.neigbour(this.startGrid, 'bottom', undefined, true);\n                this.intermediatePoints[0].y += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'top', undefined, true);\n                this.intermediatePoints[0].y -= distance - 1;\n            }\n        }\n        else {\n            if (this.intermediatePoints[0].x < this.intermediatePoints[1].x) {\n                distance = this.neigbour(this.startGrid, 'right', undefined, true);\n                this.intermediatePoints[0].x += distance - 1;\n            }\n            else {\n                distance = this.neigbour(this.startGrid, 'left', undefined, true);\n                this.intermediatePoints[0].x -= distance - 1;\n            }\n        }\n    };\n    // Connector rendering\n    /* tslint:disable */\n    LineRouting.prototype.updateConnectorSegments = function (diagram, intermediatePoints, gridCollection, connector, isUpdate) {\n        var segments = [];\n        var seg;\n        var targetPoint;\n        var pointX;\n        var pointY;\n        var node;\n        var points = [];\n        var direction;\n        var length;\n        var currentdirection;\n        var prevDirection;\n        var targetWrapper = connector.targetWrapper;\n        var sourceWrapper = connector.sourceWrapper;\n        var sourcePoint = this.findEndPoint(connector, true);\n        if (connector.targetPortID !== '' || !connector.targetWrapper) {\n            targetPoint = this.findEndPoint(connector, false, true);\n        }\n        for (var i = 0; i < intermediatePoints.length; i++) {\n            node = gridCollection[intermediatePoints[i].x][intermediatePoints[i].y];\n            pointX = node.x + node.width / 2;\n            pointY = node.y + node.height / 2;\n            points.push({ x: pointX, y: pointY });\n            if (i >= 1) {\n                if (points[points.length - 2].x !== points[points.length - 1].x) {\n                    currentdirection = (points[points.length - 2].x > points[points.length - 1].x) ? 'Left' : 'Right';\n                }\n                else {\n                    currentdirection = (points[points.length - 2].y > points[points.length - 1].y) ? 'Top' : 'Bottom';\n                }\n            }\n            if (i >= 2 && prevDirection === currentdirection) {\n                points.splice(points.length - 2, 1);\n            }\n            prevDirection = currentdirection;\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (j === 0 && connector.sourcePortID === '' && sourceWrapper) {\n                    sourcePoint = (points[j].x > points[j + 1].x) ? sourceWrapper.bounds.middleLeft : sourceWrapper.bounds.middleRight;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].x > points[j + 1].x) ? targetWrapper.bounds.middleRight : targetWrapper.bounds.middleLeft;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].x = sourcePoint.x;\n                    points[j].y = points[j + 1].y = sourcePoint.y;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.x - points[j + 1].x) < 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x -= this.size / 2;\n                    }\n                    if (((targetPoint.x - points[j + 1].x) > 0) &&\n                        (Math.abs(targetPoint.x - points[j].x) < connector.targetDecorator.width + 1)) {\n                        points[j].x = points[j - 1].x += this.size / 2;\n                    }\n                    points[j + 1].x = targetPoint.x;\n                    points[j].y = points[j + 1].y = targetPoint.y;\n                }\n            }\n            else {\n                if (j === 0 && sourceWrapper) {\n                    sourcePoint = (points[j].y > points[j + 1].y) ? sourceWrapper.bounds.topCenter : sourceWrapper.bounds.bottomCenter;\n                }\n                if (j === points.length - 2 && connector.targetPortID === '' && targetWrapper) {\n                    targetPoint = (points[j].y > points[j + 1].y) ? targetWrapper.bounds.bottomCenter : targetWrapper.bounds.topCenter;\n                }\n                if (j === 0 && sourcePoint) {\n                    points[j].y = sourcePoint.y;\n                    points[j].x = points[j + 1].x = sourcePoint.x;\n                }\n                if (j === points.length - 2 && targetPoint) {\n                    if (((targetPoint.y - points[j + 1].y) < 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.height + 1)) {\n                        points[j].y = points[j - 1].y -= this.size / 2;\n                    }\n                    if (((targetPoint.y - points[j + 1].y) > 0) &&\n                        (Math.abs(targetPoint.y - points[j].y) < connector.targetDecorator.width + 1)) {\n                        points[j].y = points[j - 1].y += this.size / 2;\n                    }\n                    points[j + 1].y = targetPoint.y;\n                    points[j].x = points[j + 1].x = targetPoint.x;\n                }\n            }\n        }\n        for (var j = 0; j < points.length - 1; j++) {\n            if (points[j].x !== points[j + 1].x) {\n                if (points[j].x > points[j + 1].x) {\n                    direction = 'Left';\n                    length = points[j].x - points[j + 1].x;\n                }\n                else {\n                    direction = 'Right';\n                    length = points[j + 1].x - points[j].x;\n                }\n            }\n            else {\n                if (points[j].y > points[j + 1].y) {\n                    direction = 'Top';\n                    length = points[j].y - points[j + 1].y;\n                }\n                else {\n                    direction = 'Bottom';\n                    length = points[j + 1].y - points[j].y;\n                }\n            }\n            seg = { type: 'Orthogonal', length: length, direction: direction };\n            segments.push(seg);\n        }\n        var lastSeg = segments[segments.length - 1];\n        if (segments.length === 1) {\n            lastSeg.length -= 20;\n        }\n        if (lastSeg.length < 10 && segments.length === 2) {\n            segments.pop();\n            segments[0].length -= 20;\n            lastSeg = segments[0];\n        }\n        if (((lastSeg.direction === 'Top' || lastSeg.direction === 'Bottom') && lastSeg.length > connector.targetDecorator.height + 1) ||\n            ((lastSeg.direction === 'Right' || lastSeg.direction === 'Left') && lastSeg.length > connector.targetDecorator.width + 1)) {\n            connector.segments = segments;\n            if (isUpdate) {\n                diagram.connectorPropertyChange(connector, {}, { type: 'Orthogonal', segments: segments });\n            }\n            return true;\n        }\n        return false;\n    };\n    /* tslint:enable */\n    // Shortest path\n    LineRouting.prototype.findPath = function (startGrid) {\n        var intermediatePoint;\n        var collection = [];\n        var neigbours = this.findNearestNeigbours(startGrid, this.gridCollection, true);\n        for (var i = 0; i < neigbours.length; i++) {\n            intermediatePoint = this.findIntermediatePoints(neigbours[i].gridX, neigbours[i].gridY, startGrid.gridX, startGrid.gridY, this.targetGrid.gridX, this.targetGrid.gridY);\n            if (intermediatePoint !== null) {\n                var grid = this.gridCollection[intermediatePoint.x][intermediatePoint.y];\n                var h = this.octile(Math.abs(intermediatePoint.x - startGrid.gridX), Math.abs(intermediatePoint.y - startGrid.gridY));\n                var l = startGrid.previousDistance + h;\n                if ((!grid.previousDistance || grid.previousDistance > l) &&\n                    (!(intermediatePoint.x === startGrid.gridX && intermediatePoint.y === startGrid.gridY))) {\n                    collection.push(intermediatePoint);\n                    grid.previousDistance = l;\n                    grid.afterDistance = grid.afterDistance || this.manhattan(Math.abs(intermediatePoint.x - this.targetGrid.gridX), Math.abs(intermediatePoint.y - this.targetGrid.gridY));\n                    grid.totalDistance = grid.previousDistance + grid.afterDistance;\n                    grid.parent = startGrid;\n                }\n            }\n        }\n        if (collection.length > 0) {\n            for (var i = 0; i < collection.length; i++) {\n                var grid = this.gridCollection[collection[i].x][collection[i].y];\n                if (this.startArray.indexOf(grid) === -1) {\n                    this.startArray.push(grid);\n                }\n            }\n        }\n        this.sorting(this.startArray);\n    };\n    // sorting the array based on total distance between source and target node\n    LineRouting.prototype.sorting = function (array) {\n        var done = false;\n        while (!done) {\n            done = true;\n            for (var i = 1; i < array.length; i += 1) {\n                if (array[i - 1].totalDistance < array[i].totalDistance) {\n                    done = false;\n                    var tmp = array[i - 1];\n                    array[i - 1] = array[i];\n                    array[i] = tmp;\n                }\n            }\n        }\n        return array;\n    };\n    LineRouting.prototype.octile = function (t, e) {\n        var r = Math.SQRT2 - 1;\n        return e > t ? r * t + e : r * e + t;\n    };\n    LineRouting.prototype.manhattan = function (t, e) {\n        return t + e;\n    };\n    // Find the nearest neigbour from the current boundaries, the neigbour is use to find next intermdiate point.\n    LineRouting.prototype.findNearestNeigbours = function (startGrid, gridCollection, isSource) {\n        var neigbours = [];\n        var parent = startGrid.parent;\n        if (parent) {\n            var dx = (startGrid.gridX - parent.gridX) / Math.max(Math.abs(startGrid.gridX - parent.gridX), 1);\n            var dy = (startGrid.gridY - parent.gridY) / Math.max(Math.abs(startGrid.gridY - parent.gridY), 1);\n            if (dx !== 0) {\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY - 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY - 1]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY - 1]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + 1, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + 1])) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + 1]);\n                }\n                if (this.isWalkable(startGrid.gridX + dx, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + dx][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + dx][startGrid.gridY]);\n                }\n            }\n            else if (dy !== 0) {\n                if (this.isWalkable(startGrid.gridX - 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX - 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX - 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX + 1, startGrid.gridY, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX + 1][startGrid.gridY]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX + 1][startGrid.gridY]);\n                }\n                if (this.isWalkable(startGrid.gridX, startGrid.gridY + dy, true) &&\n                    this.sourceGridCollection.indexOf(gridCollection[startGrid.gridX][startGrid.gridY + dy]) === -1) {\n                    neigbours.push(gridCollection[startGrid.gridX][startGrid.gridY + dy]);\n                }\n            }\n        }\n        else {\n            this.neigbour(startGrid, 'top', neigbours, isSource);\n            this.neigbour(startGrid, 'right', neigbours, isSource);\n            this.neigbour(startGrid, 'bottom', neigbours, isSource);\n            this.neigbour(startGrid, 'left', neigbours, isSource);\n        }\n        return neigbours;\n    };\n    LineRouting.prototype.neigbour = function (startGrid, direction, neigbours, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (startGrid.gridX) : ((direction === 'left') ? startGrid.gridX - i : startGrid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (startGrid.gridY) : ((direction === 'top') ? startGrid.gridY - i : startGrid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1)\n                || (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (neigbours && this.isWalkable(x, y)) {\n                    neigbours.push(nearGrid);\n                }\n                return i;\n            }\n            if (x > 0 && y > 0) {\n                i++;\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.resetGridColl = function (grid, direction, isSource) {\n        var i = 1;\n        var nearGrid;\n        while (i > 0) {\n            var x = (direction === 'top' || direction === 'bottom') ?\n                (grid.gridX) : ((direction === 'left') ? grid.gridX - i : grid.gridX + i);\n            var y = (direction === 'right' || direction === 'left') ?\n                (grid.gridY) : ((direction === 'top') ? grid.gridY - i : grid.gridY + i);\n            nearGrid = this.gridCollection[x][y];\n            if (nearGrid && ((isSource && this.sourceGridCollection.indexOf(nearGrid) === -1) ||\n                (!isSource && this.targetGridCollection.indexOf(nearGrid) === -1))) {\n                if (this.isWalkable(x, y)) {\n                    break;\n                }\n                else {\n                    var grid_1 = this.gridCollection[x][y];\n                    this.considerWalkable.push(grid_1);\n                }\n            }\n            if (x > 0 && y > 0) {\n                if (direction === 'top' || direction === 'left') {\n                    i--;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return null;\n    };\n    LineRouting.prototype.isWalkable = function (x, y, isparent) {\n        if (x >= 0 && x < this.noOfRows && y >= 0 && y < this.noOfCols) {\n            var grid = this.gridCollection[x][y];\n            if (grid && (grid.walkable || (grid.nodeId.length === 1 &&\n                (this.sourceGridCollection.indexOf(grid) !== -1 || this.targetGridCollection.indexOf(grid) !== -1 ||\n                    this.considerWalkable.indexOf(grid) !== -1)))) {\n                if ((isparent && !grid.parent) || !isparent) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    LineRouting.prototype.findIntermediatePoints = function (neigbourGridX, neigbourGridY, startGridX, startGridY, endGridX, endGridY) {\n        var dx = neigbourGridX - startGridX;\n        var dy = neigbourGridY - startGridY;\n        var gridX = neigbourGridX;\n        var gridY = neigbourGridY;\n        for (var i = 0; i < this.targetGridCollection.length; i++) {\n            if (neigbourGridX === this.targetGridCollection[i].gridX && neigbourGridY === this.targetGridCollection[i].gridY) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (!this.isWalkable(neigbourGridX, neigbourGridY)) {\n            return null;\n        }\n        var neigbourGrid = this.gridCollection[neigbourGridX][neigbourGridY];\n        if (neigbourGrid.tested) {\n            return { x: neigbourGridX, y: neigbourGridY };\n        }\n        neigbourGrid.tested = true;\n        if (dx !== 0) {\n            dx = (dx > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX, gridY - 1) && !this.isWalkable(gridX - dx, gridY - 1)) ||\n                (this.isWalkable(gridX, gridY + 1) && !this.isWalkable(gridX - dx, gridY + 1))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        if (dy !== 0) {\n            dy = (dy > 0) ? 1 : -1;\n            if ((this.isWalkable(gridX - 1, gridY) && !this.isWalkable(gridX - 1, gridY - dy)) ||\n                (this.isWalkable(gridX + 1, gridY) && !this.isWalkable(gridX + 1, gridY - dy))) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n            if (this.findIntermediatePoints(gridX + 1, gridY, gridX, gridY, endGridX, endGridY) ||\n                this.findIntermediatePoints(gridX - 1, gridY, gridX, gridY, endGridX, endGridY)) {\n                return { x: neigbourGridX, y: neigbourGridY };\n            }\n        }\n        return this.findIntermediatePoints(gridX + dx, gridY + dy, gridX, gridY, endGridX, endGridY);\n    };\n    /**\n     * To destroy the line routing module\n     * @return {void}\n     * @private\n     */\n    LineRouting.prototype.destroy = function () {\n        /**\n         * Destroys the line routing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LineRouting.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LineRouting';\n    };\n    return LineRouting;\n}());\nexport { LineRouting };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\nimport { updateLayoutValue } from '../utility/diagram-util';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        var parentId = 'parentId';\n                        var processId = 'processId';\n                        if (!node[parentId] && !node[processId]) {\n                            rootNodes.push(node);\n                        }\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            var check = void 0;\n            this.updateEdges(layout, node, 1, action, nodes);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (info.mid) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds = { x: 0, y: 0, right: 0, bottom: 0 };\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1 ? shape1.tree.children && shape1.tree.children.length : 0;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action, nodes) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (edge && !edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action, nodes);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if ((layout.getLayoutInfo || layout.layoutInfo) && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo ?\n                layout.getLayoutInfo(node, layoutInfo.tree) : updateLayoutValue(layoutInfo.tree, layout.layoutInfo, nodes, node);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var yValue = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                orientation === 'LeftToRight' ? layout.anchorX -= yValue : layout.anchorX += yValue;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                yValue = layout.graphNodes[fixedNode.id].y;\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                orientation === 'TopToBottom' ? layout.anchorY -= yValue : layout.anchorY += yValue;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        if (node && !node.excludeFromLayout) {\n            width = node.actualSize.width;\n            height = node.actualSize.height;\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            align = node && node.branch ? node.branch : align;\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo),\n            layoutInfo: layoutProp.layoutInfo, margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    ComplexHierarchicalTree.prototype.getLayoutNodesCollection = function (nodes) {\n        var nodesCollection = [];\n        var node;\n        var parentId = 'parentId';\n        var processId = 'processId';\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if ((node.inEdges.length + node.outEdges.length > 0) && !node[parentId] && !node[processId]) {\n                nodesCollection.push(node);\n            }\n        }\n        return nodesCollection;\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        this.updateMargin(layoutProp, layout, modelBounds, viewPort);\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            this.isNodeOverLap(this.nameTable[this.vertices[i].name], layoutProp);\n        }\n    };\n    HierarchicalLayoutUtil.prototype.calculateRectValue = function (dnode) {\n        var rect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        rect.x = dnode.offsetX - dnode.actualSize.width / 2;\n        rect.right = dnode.offsetX + dnode.actualSize.width / 2;\n        rect.y = dnode.offsetY - dnode.actualSize.height / 2;\n        rect.bottom = dnode.offsetY + dnode.actualSize.height / 2;\n        return rect;\n    };\n    HierarchicalLayoutUtil.prototype.isNodeOverLap = function (dnode, layoutProp) {\n        var nodeRect = { x: 0, y: 0, right: 0, bottom: 0, height: 0, width: 0 };\n        for (var i = 0; i < this.vertices.length; i++) {\n            var rect = { x: 0, y: 0, width: 0, height: 0 };\n            var tempnode1 = void 0;\n            tempnode1 = this.nameTable[this.vertices[i].value];\n            if (dnode.id !== tempnode1.id && tempnode1.offsetX !== 0 && tempnode1.offsetY !== 0) {\n                nodeRect = this.calculateRectValue(dnode);\n                rect = this.calculateRectValue(tempnode1);\n                if (this.isIntersect(rect, nodeRect, layoutProp)) {\n                    if (layoutProp.orientation === 'TopToBottom' || layoutProp.orientation === 'BottomToTop') {\n                        dnode.offsetX += layoutProp.horizontalSpacing;\n                    }\n                    else {\n                        dnode.offsetY += layoutProp.verticalSpacing;\n                    }\n                    this.isNodeOverLap(dnode, layoutProp);\n                }\n            }\n        }\n    };\n    HierarchicalLayoutUtil.prototype.isIntersect = function (rect, nodeRect, layoutProp) {\n        if (!(rect.right + layoutProp.horizontalSpacing <= nodeRect.x || rect.x - layoutProp.horizontalSpacing >= nodeRect.right\n            || rect.y - layoutProp.verticalSpacing >= nodeRect.bottom\n            || rect.bottom + layoutProp.verticalSpacing <= nodeRect.y)) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    HierarchicalLayoutUtil.prototype.updateMargin = function (layoutProp, layout, modelBounds, viewPort) {\n        var viewPortBounds = { x: 0, y: 0, width: viewPort.x, height: viewPort.y };\n        var layoutBounds;\n        var bounds = {\n            x: modelBounds.x, y: modelBounds.y,\n            right: modelBounds.x + modelBounds.width,\n            bottom: modelBounds.y + modelBounds.height\n        };\n        layoutBounds = layoutProp.bounds ? layoutProp.bounds : viewPortBounds;\n        if (layout.orientation === 'TopToBottom' || layout.orientation === 'BottomToTop') {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    layout.marginX = (layoutBounds.x - bounds.x) + layoutProp.margin.left;\n                    break;\n                case 'Right':\n                    layout.marginX = layoutBounds.x + layoutBounds.width - layoutProp.margin.right - bounds.right;\n                    break;\n                case 'Center':\n                    layout.marginX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    var top_1;\n                    top_1 = layoutBounds.y + layoutProp.margin.top;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? top_1 : -top_1;\n                    break;\n                case 'Bottom':\n                    var bottom = void 0;\n                    bottom = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom;\n                    layout.marginY = layout.orientation === 'TopToBottom' ? bottom - bounds.bottom : -(bottom - bounds.bottom);\n                    break;\n                case 'Auto':\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.y + layoutBounds.height / 2;\n                    layout.marginY = layout.orientation === 'TopToBottom' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.y + bounds.bottom) / 2;\n                    break;\n            }\n        }\n        else {\n            switch (layoutProp.horizontalAlignment) {\n                case 'Auto':\n                case 'Left':\n                    var left = void 0;\n                    left = layoutBounds.x + layoutProp.margin.left;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? left : -left;\n                    break;\n                case 'Right':\n                    var right = void 0;\n                    right = layoutBounds.x + layoutBounds.width - layoutProp.margin.right;\n                    layout.marginX = layout.orientation === 'LeftToRight' ? right - bounds.right : bounds.right - right;\n                    break;\n                case 'Center':\n                    var center = void 0;\n                    center = layoutBounds.width / 2 + layoutBounds.x;\n                    layout.marginX = layout.orientation === 'LeftToRight' ?\n                        center - (bounds.y + bounds.bottom) / 2 : -center + (bounds.x + bounds.right) / 2;\n                    break;\n            }\n            switch (layoutProp.verticalAlignment) {\n                case 'Top':\n                    layout.marginY = layoutBounds.y + layoutProp.margin.top - bounds.x;\n                    break;\n                case 'Auto':\n                case 'Center':\n                    layout.marginY = layoutBounds.y + layoutBounds.height / 2 - (bounds.y + bounds.bottom) / 2;\n                    break;\n                case 'Bottom':\n                    layout.marginY = layoutBounds.y + layoutBounds.height - layoutProp.margin.bottom - bounds.bottom;\n                    break;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            if (nextConnectedCount === 1 && prevConnectedCount === 1) {\n                cellMedian = (medianPreviousLevel * prevConnectedCount) / prevConnectedCount;\n            }\n            else if (nextConnectedCount === 1) {\n                cellMedian = (medianNextLevel * nextConnectedCount) / nextConnectedCount;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param {MultiParentModel} model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { isBlazor } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { removeElementsByClass, applyStyleAgainstCsp } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults, updateDefaultValues } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the drag size of the individual palette items.\n */\nvar SymbolDragSize = /** @class */ (function (_super) {\n    __extends(SymbolDragSize, _super);\n    function SymbolDragSize() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolDragSize.prototype, \"height\", void 0);\n    return SymbolDragSize;\n}(ChildProperty));\nexport { SymbolDragSize };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.oldObject = null;\n        _this.laneTable = {};\n        _this.isExpand = false;\n        _this.isExpandMode = false;\n        _this.isMethod = false;\n        _this.paletteid = 88123;\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n                if (_this.nodeDefaults || _this.connectorDefaults) {\n                    updateDefaultValues(child, node, child instanceof Node ? _this.nodeDefaults : _this.connectorDefaults);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param {SymbolPaletteModel} newProp - Defines the new values of the changed properties\n     * @param {SymbolPaletteModel} oldProp - Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                this.isExpand = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                            if (!this.isExpandMode && !this.isMethod && !this.isExpand) {\n                                this.isExpand = true;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    this.isExpandMode = true;\n                    break;\n                case 'allowDrag':\n                    this.allowDrag = newProp.allowDrag;\n                    if (!this.allowDrag) {\n                        this.draggable.helper = function () {\n                            return null;\n                        };\n                    }\n                    else {\n                        this.draggable.helper = this.helper;\n                    }\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n        if (this.isExpand && !refresh) {\n            this.refresh();\n            this.isExpand = false;\n            for (var p = 0; p < this.palettes.length; p++) {\n                var paletteElement = this.palettes[p].id;\n                if (window[paletteElement]) {\n                    if (window[paletteElement].length > 1) {\n                        window[paletteElement][1].parentNode.removeChild(window[paletteElement][1]);\n                        window[paletteElement][1] = null;\n                    }\n                }\n            }\n        }\n        this.isMethod = false;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-symbolpalette').length;\n            this.element.id = 'symbolpalette_' + this.paletteid + '_' + collection;\n        }\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n        this.renderComplete();\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    var measureElementCount = 'measureElementCount';\n                    window[measureElementCount]--;\n                    if (window[measureElementCount] === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style, class: 'e-remove-palette' });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                updateDefaultValues(obj, paletteSymbol, obj instanceof Node ? this.nodeDefaults : this.connectorDefaults);\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || this.symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            if (symbol instanceof Node) {\n                stackPanel.offsetX = symbol.style.strokeWidth / 2;\n                stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            }\n            else {\n                stackPanel.offsetX = 0.5;\n                stackPanel.offsetY = 0.5;\n            }\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        this.allowServerDataBinding = false;\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        var symbolPreview = symbol.previewSize;\n        if ((symbol && (symbolPreview.width || symbolPreview.height)) ||\n            this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (symbolPreview.width || this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (symbolPreview.height || this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                // BLAZ-3223: translate applied only for Basic and Flow now and need to add for remaining shapes in future \n                if (symbol.shape.type === 'Basic' || symbol.shape.type === 'Flow') {\n                    style += 'transform: scale(0.5) translate(-' + canvas.width / 2 + 'px, -' + canvas.height / 2 + 'px);';\n                }\n                else {\n                    style += 'transform:scale(0.5);';\n                }\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas), style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        this.allowServerDataBinding = true;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            applyStyleAgainstCsp(((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas), style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        this.isMethod = true;\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.oldObject, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    this.oldObject = id;\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n        if (isBlazor()) {\n            e.bindEvents(e.dragElement);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape.type === 'Bpmn' && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        removeElementsByClass('e-remove-palette', this.element.id);\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        applyStyleAgainstCsp(searchDiv, 'backgroundColor:white;height:30px');\n        //  searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        applyStyleAgainstCsp(textBox, 'width:100%;height:auto');\n        //textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.getFilterSymbol = function (symbol) {\n        var items = [];\n        for (var i = 0; i < symbol.length; i++) {\n            for (var j = 0; j < this.ignoreSymbolsOnSearch.length; j++) {\n                if (this.ignoreSymbolsOnSearch[j] !== symbol[i].id) {\n                    items.push(symbol[0]);\n                }\n            }\n        }\n        return items;\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        if (this.ignoreSymbolsOnSearch && this.ignoreSymbolsOnSearch.length > 0) {\n            symbolGroup = this.getFilterSymbol(symbolGroup);\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n            var searchPalette = document.getElementById('SearchPalette');\n            if (searchPalette) {\n                searchPalette.remove();\n            }\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"ignoreSymbolsOnSearch\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Complex({}, SymbolDragSize)\n    ], SymbolPalette.prototype, \"symbolDragSize\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"nodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"connectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement, getHTMLLayer } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.overviewid = 88123;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param {OverviewModel} newProp - Lists the new values of the changed properties\n     * @param {OverviewModel} oldProp - Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-overview').length;\n            this.element.id = 'overview_' + this.overviewid + '_' + collection;\n        }\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n        this.renderComplete();\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; margin-top:6px; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            var widthValue = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n            eWidth = widthValue > 0 ? widthValue : Math.floor(window.innerWidth);\n        }\n        if (eHeight === 0) {\n            var heightValue = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n            eHeight = heightValue > 0 ? heightValue : Math.floor(window.innerHeight);\n        }\n        if (eWidth > 0) {\n            svg.setAttribute('width', String(eWidth));\n            this.model.height = eHeight;\n        }\n        if (eHeight > 0) {\n            svg.setAttribute('height', String(eHeight));\n            this.model.width = eWidth;\n        }\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        if (!document.getElementById(this.element.id + '_nativeLayer_svg')) {\n            var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n            var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n            nativeLayerSvg.appendChild(nativeLayer);\n            view.diagramLayerDiv.appendChild(nativeLayerSvg);\n            setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n        }\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            class: 'overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y + 1, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height + 3, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 11, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y + 3, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y + 3, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height + 3, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height + 3, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByClassName('overviewsvg')[0];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    Overview.prototype.updateHtmlLayer = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        var bounds = this.parent.scroller.getPageBounds(true);\n        var width = bounds.width;\n        var height = bounds.height;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        var scale = Math.min(Number(this.model.width) / w, Number(this.model.height) / h);\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + this.parent.scroller.transform.tx + 'px,'\n            + (this.parent.scroller.transform.ty) + 'px)';\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        var diagramBoundsWidth = this.parent.scroller.viewPortWidth / this.parent.scroller.currentZoom;\n        var diagramBoundsHeight = this.parent.scroller.viewPortHeight / this.parent.scroller.currentZoom;\n        var transformWidth = 0;\n        var transformHeight = 0;\n        if (this.parent.scroller.currentZoom < 1 && diagramBoundsWidth > bounds.width && diagramBoundsHeight > bounds.height) {\n            transformWidth = (diagramBoundsWidth - bounds.width) / 2;\n            transformHeight = (diagramBoundsHeight - bounds.height) / 2;\n        }\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + ((-(bounds.x)) + transformWidth) + 'px,'\n            + (((-bounds.y) + transformHeight)) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width > 0 ? bRect.width : _this.model.width;\n            _this.model.height = bRect.height > 0 ? bRect.height : _this.model.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n","import * as index from './index';\nindex.Diagram.Inject(index.HierarchicalTree, index.MindMap, index.RadialTree, index.ComplexHierarchicalTree, index.DataBinding, index.Snapping, index.PrintAndExport, index.BpmnDiagrams, index.SymmetricLayout, index.ConnectorBridging, index.UndoRedo, index.LayoutAnimation, index.DiagramContextMenu, index.LineRouting, index.ConnectorEditing);\nindex.SymbolPalette.Inject(index.BpmnDiagrams);\nexport * from './index';\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","findConnectorPoints","element","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","id","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","node","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","close","args","this","content","style","display","collidedPosition","position","updateTooltip","tooltipObject","showTipPointer","animation","effect","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","class","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","scroller","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","Size","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","parentNode","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","scale","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canEnableRouting","state","LineRouting","InheritLineRouting","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getUMLActivityShape","umlActivityShapes","updateCanvasBounds","isBoundsUpdate","container","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","propertyChangeValue","AllowMovingOutsideLane","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","newObj","_a","Object","keys","prop","getObjectType","initObject","updateDiagramObject","renderContainerHelper","enableServerDataBinding","nodes","isBlazor","selectedObject","helperObject","selectedItems","connectors","actualObject","currentSymbol","isLane","canLaneInterchange","minWidth","minHeight","maxWidth","maxHeight","strokeDashArray","fill","strokeColor","strokeWidth","isChild","checkChildNodeInContainer","nodePropertyChange","measure","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","historyAction","getObject","indexOf","swimLaneBounds","parentBounds","laneHeaderId","removeElements","addChild","currentParentId","parentObj","Diagram","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","updateDiagramElementQuad","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","phases","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","k","randomId","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","HideThumbs","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","annotations","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","Default","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","lineRoutingModule","renderVirtualRegion","refreshConnectorSegments","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","changeHeaderIndex","columnSpan","updateColumnIndex","updateSwimLaneChildPosition","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","cause","cancel","triggerEvent","DiagramEvent","collectionChange","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","swimLanePhases","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevWidth","prevChild","phaseRowIndex","prevHeight","laneHeader","findLane","completeRegion","region","selectedObjects","containsRect","findNodeByName","name","findObjectType","drawingObject","setSwimLaneDefaults","getSpaceValue","intervals","isLine","space","getInterval","newInterval","setUMLActivityDefaults","umlActivityShape","umlActivityFlow","flow","setConnectorDefaults","bpmnFlow","hasRelation","relationship","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","updateDefaultValues","actualNode","plainValue","defaultValue","property","oldKey","keyObj","key","Array","isArray","createObject","PointPort","ports","updateLayoutValue","assitants","assistants","hasSubTree","canEnableSubTree","layoutInfo","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","bold","color","textWrapping","fontFamily","fontSize","italic","textAlign","whiteSpace","textDecoration","gradient","updateGradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","horizontalAlignment","verticalAlignment","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","basicShape","flowShapeElement","flowShape","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getCollectionChangeEventArguements","args1","cloneBlazorObject","getDropEventArguements","arg","getPoint","w","h","cornerPoint","trans","checkBrowserInfo","navigator","platform","Browser","info","canMeasureDecoratorPath","getULMClassifierShapes","classifier","textWrap","classShape","enumerationShape","interfaceShape","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","removeElementsByClass","className","elements","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","callback","imageElement","createElement","setAttributeHtml","onload","event","loadedImage","currentTarget","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","CSS","escape","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","expandCollapse","elementType","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","nodeObject","sentNode","isTemplate","compiledString","getNodeTemplate","template","compile","cloneNode","svg","applyStyleAgainstCsp","trim","createMeasureElements","usageCount","divElement","createTextNode","tSpan","setChildPosition","getTemplateContent","annotationcontent","annotationTemplate","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","getIndex","comp","templateCompiler","querySelectorAll","baseTemplateComplier","innerHTML","updateCloneProp","Decorator","Shape","IconShape","BpmnTask","BpmnSubProcess","Port","Annotation","Margin","TextStyle","ShapeStyle","additionalProp","cloneBlazorProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","allowDrag","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","getGradientType","DiagramGradient","LinearGradient","RadialGradient","Thickness","Gradient","Collection","ComplexFactory","DiagramShapeStyle","BlazorAction","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","canMeasure","textNodes","textWrapBounds","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","absolutePath","pointTimer","setTimeout","imageSource","stretch","templatePosition","getAvailableSize","Complex","Connect","Hyperlink","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","DiagramTooltip","NodeBase","nodeTemplate","templateFn","SymbolSize","getConnectorType","DiagramConnectorShape","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","DiagramConnectorSegment","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseq","updatePathElement","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","findDistance","findPath","sourcePt","targetPt","textele","annotationType","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","renderComplete","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","label","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","updatePortEdges","portContent","alignElement","updateConnectorEdges","cloneSelectedObjects","clonedSelectedItems","pathseqData","pathElement","checkPort","beginningpoint","transferpt","startpoint","endpoint","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","LayoutInfo","getShapeType","DiagramShape","BpmnTransactionSubProcess","trigger","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","bpmnShape","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","pathdata","initIconContainer","iconContent","iconContentBounds","getWrapper","All","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","childNodesHeight","innerHtmlTextElement","svgLabelAlign","setText","isHorizontalLane","parentOffsetX","parentOffsetY","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","parentHtmlElement","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","location","href","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","isPreviewNode","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","disableConnectors","disableNodes","pathSize","newData","pathColor","handleContent","element_1","sourceWidth","sourceHeight","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","gridType","verticalLineIntervals","verticalGridlines","lineIntervals","dotIntervals","horizontalLineIntervals","horizontalGridlines","dynamicGrid","scaledIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","lineDashArray","updateLineIntervals","lineColor","renderDotGrid","spacey","vLine","updateGrid","svgGrid","snapIntervals","gridlines","parentWidth","parentHeight","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","domTable","updateNode","diagramElementsLayer","insertIndex","Background","FitOptions","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","DataMappingItems","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","DeepDiffMapper","valueCreated","valueUpdated","valueDeleted","valueUnchanged","newNodeObject","newConnectorObject","diagramObject","updateObjectCollection","getOldObject","isNode","oldNodeObjects","oldConnectorObjects","changeSegments","removeNullValues","newSegments","removeNullObjectValues","newSegObject","getDifferenceValues","labelDrag","diffValue","frameObject","removeEmptyValues","getDiagramObjects","getLayerObject","oldDiagram","diffLayers","newDiagram","sfIndex","tempObject","objectValue","removeArrayValues","newValue","frame","obj1","obj2","arrayName","isFunction","isValue","compareValues","ss","value2","kk","value1","isDate","getTime","isObject","final","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","__generator","verb","op","f","TypeError","_","ops","pop","trys","sent","throw","return","Symbol","iterator","ToolBase","protectChange","deepDiffer","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","checkProperty","undoParentElement","startAction","mouseDown","enableCloneObject","ismouseEvents","startPosition","currentPosition","prevPosition","checkPropertyValue","startTransaction","mouseMove","mouseUp","endTransaction","getBlazorOldValues","LabelDragTool","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","clearSelectedItems","isUserHandle","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","updateBlazorSelector","selectObjects","labelSelect","ConnectTool","isConnected","temparg","oldValue","segmentpoint1","segmentpoint2","oldConnector","connectorTargetValue","connectorEnd","connectionChange","tempArgs","canCancel","ConnectorDrawingTool","selectedSegment","nodeEndId","portEndId","oldValues","targetPortName","targetNodeNode","connectorSourceValue","updateConnectorValue","updateSelector","removeSnap","changeAnnotationDrag","findTarget","sourcePointChange","targetPointChange","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","objectType","getSubProcess","initialOffset","targetPosition","allowDrop","isPreventHistory","blazorArgs","historyAdded","entry_1","snappedPoint","isEndGroup","positionChange","dragSelectedObjects","getBlazorPositionChangeEventArgs","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","removeChildFromBPmn","arg_1","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","object_2","rotateChange","rotatePropertyChnage","oldValue_1","arg_2","snapAngle","arg1","rotateSelectedItems","ResizeTool","checkSelection","blazarArgs","scaleWidth","scaleHeight","deltaValues","entry_2","sizeChange","scaleSelectedItems","scaleObjects","changes","getChanges","change","AspectRatio","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","allowServerDataBinding","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","edit","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","removeSegments","segmentCollectionChange","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","previousAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","keyArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","checkPreviousAction","checkUserHandleEvent","onUserHandleMouseLeave","eventName","onUserHandleMouseUp","onUserHandleMouseEnter","onUserHandleMouseDown","userHandleObject","isScrolling","preventDefault","oldSelectedObjects","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","hoverNode","checkAction","isSwimlaneElements","touchMoveList","content_1","openOn","elementLeave","canResetElement","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","checkMenu","userAgent","contextMenuModule","contextMenu","hasStack","updateSelectedNodeProperties","renderSelector","click","getBlazorClickEventArgs","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","blazorActions","interaction","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","commandExecute","getKeyModifier","getlabel","Control","Shift","Alt","Meta","keyUp","movingPosition","autoScrollBorder","delay","autoScroll","targets","mouseEnter","getBlazorCollectionObject","lastObjectUnderMouse","elementOver","isPrivateTooltip","keyModifier","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","laneId","firstlane","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","portElement","eventArg","findTargetElement","objj1","selected","Layer","objectZIndex","zIndexTable","CommandHandler","newSelectedObjects","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","setTooltipTemplate","ToolTip","newChanges","oldChanges","connectionEnd","dragOverArg","dragOver","returnargs","checkBlazor","insertValue","connectionEventChange","connectedNode","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","UpdateBlazorDiagramModelLayers","updatedModel","methodName","diagramobj","updateBlazorProperties","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","copiedObject","isServerUpdate","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","UpdateBlazorDiagramModelCollection","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","oldProtectPropertyChangeValue","getProtectPropertyChangeValue","enable","updateArgsObject","argValue","updateSelectionChangeEventArgs","argOldValue","argNewValue","multipleSelection","canDoMultipleSelection","canDoSingleSelection","selectionChange","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","updateBlazorSelectorModel","hasProcesses","preventUpdate","hasLayer","getObjectCollectionId","oldItemsCollection","oldItems","newItems","updateDiagramCollection","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","targetLayerObjects_1","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","isObjectInteraction","canEnableBlazorObject","updateLayerObject","getDiagramOldValues","oldNodeObject","oldConnectorObject","getObjectChanges","previousObject","changedNodes","triggerAction","isTriggered","selectNodes","selectedNodes","selectedConnectors","highlighter","symbolDrag","parentObject","isGroupDragging","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","sequence","updatePathElementOffset","translateBezierPoints","realActions","AnimationClick","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","pivotValue","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","isOutsideBoundary","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","scaleConnector","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","PreventZIndexOnDragging","DragUsingMouse","preventNodesUpdate","PreventIconsUpdate","view","refreshCanvasDiagramLayer","expandNode","expand","preventConnectorsUpdate","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","previousNodeObject","previousConnectorObject","updateNodeObject","updateConnectorObject","changeNodes","changeConnectors","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableBounds","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","CustomCursorAction","oldDiagramObject","groupTable","isGroup","callBlazorModel","selectionConnectorsList","changedConnectorCollection","changedNodesCollection","previousNodeCollection","previousConnectorCollection","crudDeleteNodes","diagramid","renderTimer","canCloneObject","dataSource","ignoreCollectionWatch","updateAnnotationText","defaultConnector","defaultPropChanges","bulkChanges","join","callFromServer","isOutEdge","loadDiagram","clearCollection","isConnector","clearObjects","isPropertyChanged","refreshLayout","refereshColelction","Render","eventHandler","updateView","changedProp","excludeFromLayout","propertyChange","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","canLogChange","modelChanged","resetDiagramActions","scrollAlone","_k","_l","updateHtmlLayer","resetTemplate","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","changedConnectors","blazorInterop","blazor","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","lineRouting","renderPageBreaks","isDevice","updateTemplate","updateFitToPage","fitOptions","canFit","pathAnnotation","updateBlazorTemplate","htmlNode","templateAnnotation","resetBlazorTemplate","tempObj","Ajax","onSuccess","dataManager","send","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","getZoomingAttribute","updateBlazorDiagramProperties","cutCommand","removeProcess","pasteCommand","copyCommand","insertBlazorDiagramObjects","layerObjectUpdate","leyerObject","moveForward","getNodeObject","getConnectorObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","customCursor","historyChangeTrigger","addCustomHistoryEntry","sourceValue","historyChange","undo","redo","getBlazorDiagramObjects","PublicMethod","canCall","focusedPoint","zoomTo","resetSegments","updateEventValue","addNodeToLane","hideTooltip","addNode","addChildToGroup","getHistoryStack","isUndoStack","historyEntry","undoStack","redoStack","stackLimit","getEdges","getParentId","addConnector","multiSelectDelete","removalIndexCollection","updatedModelCollection","connectorModelCollection","removalIndex","objectTypeCollection","dgmObj","nodeObj","ObjectType","isMultipleObjects","annotationIndex","UpdateBlazorDiagramModel","annotationNodeIndex","Clear","addBlazorDiagramObjects","nodesCollection","connectorCollection","dataBindingModule","removeNodeEdges","isOutEdges","PreventCollectionChangeOnDragOver","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateBlazorCollectionChange","updateSvgNodes","updateTextElementValue","updateProcesses","moveNode","isAdding","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","check","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","removeChildrenFromLayout","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","getLayoutNodesCollection","updatedNodes","updatedNodes_1","updateIcon","updateDefaultLayoutIcons","saveDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","addNodeLabels","labels","addConnectorLabels","removelabelExtension","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","updateBazorShape","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_m","groups_1","_o","connectors_1","_p","_q","obj_2","_r","_s","obj_3","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","sourceId","generateData","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getConnectedPort","findInOutConnectPorts","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","onLoadImageSize","bind","updateChildPosition","onImageLoad","newCommands","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","isInEdges","portEdges","refreshDiagram","isRootInverse","isProtectedChange","renderDocument","renderNodes","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","isUpdateObject","updateGridContainer","objectArray","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","isProtectedOnChangeValue","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","annotation_1","phaseHeader","textEdit","getBlazorTextEditArgs","isBpmnTextAnnotation","updateTextAnnotationContent","nodeAnnotation","connectorAnnotation","isAction","tempNode_1","updateObject","oldNode","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","oldSelectConstraints","newSelectConstraints","isLayout","node_2","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","removePortEdges","oldSource","updateAnnotations","triggerPropertyChange","getpropertyChangeArgs","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","nodeShadow","changedShadow","entryTable","Droppable","over","dragDataHelper","dragData","helper","selectedSymbol","paletteId","getAttribute","nodeDragSize","nodePreviewSize","paletteDragSize","ej2_instances","dragSize","previewSize","palettePreview","tempTable","getBlazorDragEventArgs","dragEnter","swimLaneObj","child1","child2","findChild","selectedSymbols","getDropEventArgs","removeChildInNodes","addChildNodes","droppedElement","out","args_1","getBlazorDragLeaveEventArgs","dragLeave","moveObjectsUp","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","replace","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","Query","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","dataMapSettings","arrayProperty","innerProperty","splitString","field","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","animationSettings","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","updateBPMNStyle","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","entryType","getHistoryChangeEvent","blazorHistoryEntryType","historyStateChange","shapeAnnotation","pointPortModel","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","gridCollection","startArray","targetGridCollection","sourceGridCollection","considerWalkable","isUpdate","extraBounds","diagramStartX","diagramStartY","noOfRows","noOfCols","gridX","gridY","walkable","tested","updateNodesInVirtualRegion","diagramNodes","rectangle","intersectRect","findEndPoint","isPortBounds","portDirection","startNode","sourceTop","sourceBottom","sourceLeft","sourceRight","targetRight","targetTop","targetBottom","targetLeft","targetId","startGrid","targetGrid","previousDistance","afterDistance","totalDistance","findEdgeBoundary","checkObstacles","startGridNode","getIntermediatePoints","updateConnectorSegments","portID","neigbours","findNearestNeigbours","resetGridColl","neigbour","currentdirection","prevDirection","lastSeg","intermediatePoint","findIntermediatePoints","octile","manhattan","sorting","tmp","SQRT2","dx","isWalkable","nearGrid","grid_1","isparent","neigbourGridX","neigbourGridY","startGridX","startGridY","endGridX","endGridY","neigbourGrid","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutBounds","mod","yValue","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","branch","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","nodeGraph","exploreGraphEdge","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","isNodeOverLap","calculateRectValue","nodeRect","tempnode1","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolDragSize","SymbolPreview","SymbolPalette","symbolTable","laneTable","isExpand","isExpandMode","isMethod","paletteid","clonedElement","sender","symbol","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","paletteElement","accordionDiv","Accordion","updatePalettes","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","bindEvents","dragElement","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","getFilterSymbol","ignoreSymbolsOnSearch","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","overviewid","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","widthValue","innerWidth","heightValue","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","diagramBoundsWidth","diagramBoundsHeight","transformWidth","transformHeight","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering","index.Diagram","Inject","index.HierarchicalTree","index.MindMap","index.RadialTree","index.ComplexHierarchicalTree","index.DataBinding","index.Snapping","index.PrintAndExport","index.BpmnDiagrams","index.SymmetricLayout","index.ConnectorBridging","index.UndoRedo","index.LayoutAnimation","index.DiagramContextMenu","index.LineRouting","index.ConnectorEditing","index.SymbolPalette"],"mappings":"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"}