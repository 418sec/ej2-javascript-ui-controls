{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/ruler/ruler.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/annotation.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n        }\n    }\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper);\n    var targetSegment = createSegmentsCollection(targetWrapper);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        segmentPoints = getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        // textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port) {\n        if ((port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { NodeConstraints } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                    (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                    if (container.rowIndex !== undefined) {\n                        var parent_1 = diagram.nameTable[container.parentId];\n                        if (parent_1.columns.length - 1 === container.columnIndex) {\n                            var x = wrapper.bounds.x;\n                            var y = wrapper.bounds.y;\n                            (wrapper).maxWidth = wrapper.outerBounds.width;\n                            parent_1.wrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width);\n                            diagram.drag(parent_1, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                            diagram.updateDiagramObject(parent_1);\n                        }\n                    }\n                    else {\n                        diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                    }\n                }\n                if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                    (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                    if (container.rowIndex !== undefined) {\n                        var contai = diagram.nameTable[container.parentId];\n                        var x = wrapper.bounds.x;\n                        var y = wrapper.bounds.y;\n                        (wrapper).maxHeight = wrapper.outerBounds.height;\n                        contai.wrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height);\n                        diagram.drag(contai, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                    }\n                    else {\n                        diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                    }\n                }\n            }\n            else if (container.container.type === 'Canvas') {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                diagram.deleteChild(obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.select([obj]);\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: 'red' }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    parentNode.wrapper.measure(new Size());\n    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node) {\n    if (!diagram.currentSymbol) {\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            if (node.parentId !== '') {\n                diagram.deleteChild(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            var entry = {\n                type: 'ChildCollectionChanged', category: 'Internal',\n                undoObject: undoObj, redoObject: cloneObject(node)\n            };\n            diagram.addHistoryEntry(entry);\n            diagram.updateDiagramObject(container);\n        }\n    }\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var orientation = node.shape.orientation === 'Horizontal' ? true : false;\n    if (node.shape.header) {\n        createRow(row, node.shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    var index = 0;\n    if (node.shape.header) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (node.shape.phases.length > 0) {\n        phaseDefine(grid, diagram, node, index, orientation);\n        index++;\n    }\n    if (node.shape.lanes.length > 0) {\n        for (var k = 0; k < node.shape.lanes.length; k++) {\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader) {\n    var node = new Node(parent, 'nodes', object);\n    node.parentId = grid.id;\n    if (isHeader) {\n        node.isHeader = true;\n    }\n    diagram.initObject(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n        }\n    }\n    return node.wrapper;\n}\n// /** @private */\n// export function addGridObject(\n//     diagram: Diagram, grid: Grid, object: NodeModel, isHeader?: boolean, rowValue?: number, colValue?: number,\n//     nodeObj?: NodeModel, orientation?: boolean, lanesNo?: number): void {\n//     let node: Node = new Node(object, 'nodes', { container: { type: 'Canvas', orientation: 'Horziontal' } });\n//     diagram.initObject(node as IElement);\n//     node.parentId = grid.id;\n//     if (isHeader) {\n//         (node as Node).isHeader = true;\n//     }\n//     diagram.nodes.push(node);\n//     let canvas: Container = node.wrapper;\n//     node.rowIndex = rowValue; node.columnIndex = colValue;\n//     canvas.children = [];\n//     if (nodeObj) {\n//         if (lanesNo !== undefined) {\n//             orientation ? canvas.verticalAlignment = 'Stretch' : canvas.horizontalAlignment = 'Stretch';\n//             canvas.relativeMode = 'Object';\n//             if (orientation) {\n//                 nodeObj.width = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             } else {\n//                 nodeObj.height = (object.shape as SwimLaneModel).lanes[lanesNo].header.width;\n//             }\n//         }\n//         let node: Node = new Node(object, 'nodes', nodeObj);\n//         node.parentId = grid.id;\n//         node.rowIndex = rowValue; node.columnIndex = colValue;\n//         if (isHeader) {\n//             (node as Node).isHeader = true;\n//         }\n//         diagram.initObject(node);\n//         if (lanesNo === undefined) {\n//             if (isHeader) {\n//                 node.wrapper.horizontalAlignment = 'Stretch';\n//             } else {\n//                 orientation ? node.wrapper.horizontalAlignment = 'Stretch' : node.wrapper.verticalAlignment = 'Stretch';\n//             }\n//             canvas.horizontalAlignment = node.wrapper.horizontalAlignment;\n//             canvas.verticalAlignment = node.wrapper.verticalAlignment;\n//             canvas.relativeMode = node.wrapper.relativeMode = 'Object';\n//         } else {\n//             orientation ? node.wrapper.verticalAlignment = 'Stretch' : node.wrapper.horizontalAlignment = 'Stretch';\n//             node.wrapper.relativeMode = 'Object';\n//         }\n//         if (node.wrapper.children.length > 0) {\n//             for (let i: number = 0; i < node.wrapper.children.length; i++) {\n//                 let child: DiagramElement = node.wrapper.children[i];\n//                 if (child instanceof DiagramElement) {\n//                     child.isCalculateDesiredSize = false;\n//                 }\n//             }\n//         }\n//         canvas.children.push(node.wrapper);\n//     }\n//     grid.addObject(canvas, rowValue, colValue, 1, (isHeader) ? grid.columnDefinitions().length : 1);\n// }\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var node = {\n        annotations: [{ content: object.shape.header.content.content }],\n        style: object.shape.header.style,\n        rowIndex: 0, columnIndex: 0,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation) {\n    var rowValue = 0;\n    var colValue = 0;\n    for (var k = 0; k < object.shape.phases.length; k++) {\n        if (orientation) {\n            colValue = k;\n            rowValue = indexValue;\n        }\n        else {\n            rowValue = object.shape.header ? k + 1 : k;\n        }\n        var phaseObject = {\n            annotations: [{\n                    content: object.shape.phases[k].header.content.content,\n                    rotateAngle: orientation ? 0 : 270\n                }],\n            style: object.shape.phases[k].style,\n            rowIndex: rowValue, columnIndex: colValue,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var wrapper = addObjectToGrid(diagram, grid, object, phaseObject);\n        grid.addObject(wrapper, rowValue, colValue);\n    }\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var value = object.shape.phases.length || 1;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : 1;\n    var phaseCount = object.shape.phases.length > 0 ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        var canvas = {\n            id: object.shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            style: object.shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        var parentWrapper = addObjectToGrid(diagram, grid, object, canvas);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            var laneNode = void 0;\n            laneNode = {\n                id: object.shape.lanes[laneIndex].id + '_header',\n                style: object.shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: object.shape.lanes[laneIndex].header.content.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            (orientation) ? laneNode.width = object.shape.lanes[laneIndex].header.width :\n                laneNode.height = object.shape.lanes[laneIndex].header.width;\n            var childWrapper = addObjectToGrid(diagram, grid, object, laneNode);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n// /** @private */\n// export function laneDefine(\n//     grid: Grid, diagram: Diagram, object: NodeModel, indexValue: number, laneIndex: number, orientation: boolean): void {\n//     let value: number = orientation ? grid.columnDefinitions().length : (object.shape as SwimLaneModel).phases.length || 1;\n//     let colValue: number = 0;\n//     let rowValue: number = 0;\n//     let phaseLength: number = (object.shape as SwimLaneModel).phases.length > 0 ? 1 : 0;\n//     rowValue = orientation ? indexValue : 1;\n//     for (let l: number = 0; l < value; l++) {\n//         colValue = orientation ? l : laneIndex + phaseLength;\n//         let node: NodeModel = {\n//             style: (object.shape as SwimLaneModel).lanes[laneIndex].style, width: object.width, height: object.height\n//         };\n//         addGridObject(diagram, grid, object, false, orientation ? rowValue : rowValue, colValue);\n//         if (l === 0) {\n//             let laneNode: NodeModel;\n//             laneNode = {\n//                 id: (object.shape as SwimLaneModel).lanes[laneIndex].id,\n//                 style: (object.shape as SwimLaneModel).lanes[laneIndex].header.style,\n//                 annotations: [{\n//                     content: (object.shape as SwimLaneModel).lanes[laneIndex].header.content.content,\n//                     rotateAngle: orientation ? 270 : 0\n//                 }],\n//                 container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n//             };\n//             addGridObject(diagram, grid, object, false, rowValue, orientation ? 0 : colValue, laneNode, orientation, laneIndex);\n//         }\n//         if (!orientation) {\n//             rowValue++;\n//         }\n//         colValue = orientation ? l : laneIndex + 1;\n//     }\n// }\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (object.shape.phases.length > 0) {\n            totalHeight += object.shape.phases[0].height;\n            createRow(row, object.shape.phases[0].height);\n        }\n        if (object.shape.lanes.length > 0) {\n            for (var i = 0; i < object.shape.lanes.length; i++) {\n                height = object.shape.lanes[i].height;\n                totalHeight += height;\n                if (i === object.shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (object.shape.phases.length > 0) {\n            for (var i = 0; i < object.shape.phases.length; i++) {\n                height = object.shape.phases[i].offset;\n                totalHeight += height;\n                if (i === object.shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    if (object.shape.phases.length > 0 && object.shape.orientation === 'Horizontal') {\n        for (var j = 0; j < object.shape.phases.length; j++) {\n            totalWidth += object.shape.phases[j].offset;\n            var cols = createColumn(object.shape.phases[j].offset);\n            if (j === object.shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        var value = object.shape.phases.length > 0 ? object.shape.lanes.length\n            + 1 : object.shape.lanes.length;\n        for (var j = 0; j < value; j++) {\n            if (j === 0 && object.shape.phases.length > 0) {\n                totalWidth += object.shape.phases[0].height;\n                var cols = createColumn(object.shape.phases[0].height);\n                columns.push(cols);\n            }\n            else {\n                totalWidth += object.shape.lanes[0].height;\n                var cols = createColumn(object.shape.lanes[0].height);\n                if (j === object.shape.lanes.length && totalWidth < object.width) {\n                    cols.width += object.width - totalWidth;\n                }\n                columns.push(cols);\n            }\n        }\n    }\n    else {\n        var cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n//#end region\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { Node } from './../objects/node';\nimport { Connector, bezierPoints } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners) {\n    var line = [];\n    line.push(corners.topLeft);\n    line.push(corners.topRight);\n    line.push(corners.bottomRight);\n    line.push(corners.bottomLeft);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = i; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (b.center.x > bounds.center.x) {\n                temp = objects[i];\n                objects[i] = objects[j];\n                objects[j] = temp;\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    return JSON.stringify(clonedObject);\n}\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings;\n    diagram.constraints = dataObj.constraints;\n    diagram.tool = dataObj.tool;\n    diagram.bridgeDirection = dataObj.bridgeDirection;\n    diagram.pageSettings = dataObj.pageSettings;\n    diagram.drawingObject = dataObj.drawingObject;\n    diagram.tooltip = dataObj.tooltip;\n    diagram.addInfo = dataObj.addInfo;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings;\n    diagram.commandManager = dataObj.commandManager;\n    diagram.layers = dataObj.layers;\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor;\n    diagram.basicElements = dataObj.basicElements;\n    diagram.connectors = dataObj.connectors;\n    diagram.dataSourceSettings = dataObj.dataSourceSettings;\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height;\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode;\n    diagram.nodes = dataObj.nodes;\n    diagram.rulerSettings = dataObj.rulerSettings;\n    diagram.snapSettings = dataObj.snapSettings;\n    diagram.width = dataObj.width;\n    diagram.layout = dataObj.layout;\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    dataObj.selectedItems.nodes = [];\n    dataObj.selectedItems.connectors = [];\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (actualObject.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_groupElement', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                this.arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > text.width - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height) {\n        scaleX = element.actualSize.width / Number(bBox.width ? bBox.width : 1);\n        scaleY = element.actualSize.height / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n// /** @private */\n// export function getDiagramLayer(diagramId: string): SVGElement {\n//     let diagramLayer: SVGElement;\n//     let diagramLayerSvg: SVGSVGElement = getDiagramLayerSvg(diagramId);\n//     diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer') as SVGElement;\n//     return diagramLayer;\n// }\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n})(DiagramAction || (DiagramAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.width || availableSize.width);\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if (desiredBounds === undefined) {\n                    desiredBounds = childBounds;\n                }\n                else {\n                    desiredBounds.uniteRect(childBounds);\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.None)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].minWidth = row.cells[j].desiredCellWidth;\n                        }\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            row.cells[j].desiredCellHeight += (this.height - calculateHeight);\n                            if (row.cells[j].children && row.cells[j].children.length) {\n                                row.cells[j].children[0].minHeight = row.cells[j].desiredCellHeight;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height) {\n        var row = this.rows[rowId];\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].minHeight = height;\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width) {\n        if (this.width !== undefined) {\n            this.width += width - this.rows[0].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].minWidth = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rows) {\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            this.rowDefns.push(rowDefn);\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            defaultCell.width = this.width;\n            var columns = this.colDefns;\n            this.addCellInRow(columns, rowDefn, row);\n            if (rowId > this.rows.length - 1) {\n                this.rows.push(row);\n            }\n            else {\n                this.rows.splice(rowId, 0, row);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, columns) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var row = rows[i];\n            var rowDefn = this.rowDefns[i];\n            for (var j = 0; j < columns.length; j++) {\n                var colDefn = columns[j];\n                var cell = new GridCell();\n                cell.style = this.cellStyle;\n                cell.desiredCellWidth = colDefn.width;\n                cell.desiredCellHeight = rowDefn.height;\n                if (columnId > row.cells.length - 1) {\n                    row.cells.push(cell);\n                }\n                else {\n                    row.cells.splice(columnId, 0, cell);\n                }\n                this.children.push(cell);\n            }\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            var cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var rows = this.rows;\n        for (var i = 0; i < rows.length; i++) {\n            var cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            var element = document.getElementById(cell.id + '_groupElement');\n            element.parentElement.removeChild(element);\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            var j = 0;\n            var i = 0;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                for (var i_1 = 0; i_1 < this.rows.length; i_1++) {\n                    var row = this.rows[i_1];\n                    for (var j_1 = 0; j_1 < row.cells.length; j_1++) {\n                        var cell = row.cells[j_1];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            var k = void 0;\n                            var z = void 0;\n                            for (k = i_1, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                var removeCelll = this.rows[k + 1].cells[j_1];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCelll), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from '../interaction/container-interaction';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent.setOffsetWithRespectToBounds(ports.offset.x, ports.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize) {\n        annotation.id = annotation.id || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Annotation)\n    ], Header.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"childNodes\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(25)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"height\", void 0);\n    __decorate([\n        Property(30)\n    ], Phase.prototype, \"width\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property('10')\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({}, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], SwimLane.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + child.x - wrapBounds.x;\n                    var offsetY = position.y + child.dy * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(htmlElement);\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        var dashArray = [];\n        var fill;\n        if (style.dashArray !== undefined) {\n            var canvasRenderer = new CanvasRenderer();\n            dashArray = canvasRenderer.parseDashArray(style.dashArray);\n        }\n        if (style.gradient && style.gradient.type !== 'None') {\n            var grd = this.renderGradient(style, svg, diagramId);\n            fill = 'url(#' + grd.id + ')';\n        }\n        else {\n            fill = style.fill;\n        }\n        if (style.stroke) {\n            svg.setAttribute('stroke', style.stroke);\n        }\n        if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n            svg.setAttribute('stroke-width', style.strokeWidth.toString());\n        }\n        if (dashArray) {\n            svg.setAttribute('stroke-dasharray', dashArray.toString());\n        }\n        if (fill) {\n            svg.setAttribute('fill', fill);\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        if (element instanceof Container) {\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (constraints & ThumbsConstraints.Rotate) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        options.id = 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId);\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer));\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette);\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        };\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element));\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                var oldValues = void 0;\n                var newValues = void 0;\n                if (args.source) {\n                    newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                }\n                var arg = {\n                    source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                    target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                this.commandHandler.startGroupAction();\n                historyAdded = true;\n                var entry = {\n                    type: 'PositionChanged',\n                    redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                };\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_1 = {\n                        type: 'SizeChanged', category: 'Internal',\n                        undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                    };\n                    this.commandHandler.addHistoryEntry(entry_1);\n                }\n                this.commandHandler.addHistoryEntry(entry);\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var node = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                    this.commandHandler.dropChildToContainer(this.currentTarget, node);\n                    this.commandHandler.renderContainerHelper(node);\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                if (!this.commandHandler.isParentAsContainer((args.source instanceof Selector) ? args.source.nodes[0] : args.source, true)) {\n                    this.commandHandler.drawHighlighter(this.currentTarget);\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, args.position.x - this.prevPosition.x, args.position.y - this.prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.startGroupAction();\n            this.commandHandler.addHistoryEntry(entry);\n            if (obj.nodes[0] && obj.nodes[0].processId) {\n                var entry_2 = {\n                    type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                    undoObject: this.undoParentElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry_2);\n            }\n            this.commandHandler.endGroupAction();\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter } from './container-interaction';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var hasStack = this.updateContainerProperties();\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    this.tool.mouseUp(this.eventArgs);\n                    if (hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (this.diagram.selectedObject.helperObject) {\n                    var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    var obj = this.diagram.selectedObject.actualObject;\n                    this.diagram.updateDiagramObject(obj);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                    updateCanvasBounds(this.diagram, obj, this.eventArgs.position, boundsUpdate);\n                    this.diagram.updateSelector();\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            this.diagram.startTextEdit();\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape' && (this.checkEditBoxAsTarget(evt))) {\n                                    document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if (!node && this.tool instanceof TextDrawingTool) {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var hasGroup;\n        if (this.diagram.selectedObject.helperObject) {\n            helperObject = this.diagram.selectedObject.helperObject;\n            this.diagram.selectedItems.wrapper.children[0].offsetX = helperObject.wrapper.offsetX;\n            this.diagram.selectedItems.wrapper.children[0].offsetY = helperObject.wrapper.offsetY;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.width = helperObject.wrapper.actualSize.width;\n            this.diagram.selectedItems.wrapper.children[0].actualSize.height = helperObject.wrapper.actualSize.height;\n            var obj = this.diagram.selectedObject.actualObject;\n            obj.offsetX = helperObject.offsetX;\n            obj.offsetY = helperObject.offsetY;\n            if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                obj.width = helperObject.width;\n                obj.height = helperObject.height;\n            }\n            obj.rotateAngle = helperObject.rotateAngle;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            var undoElement = void 0;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                this.diagram.startGroupAction();\n                hasGroup = true;\n            }\n            if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                undoElement = {\n                    targetIndex: undefined, target: undefined,\n                    sourceIndex: index, source: clone(obj)\n                };\n                if (index > -1) {\n                    var children = parentNode.children;\n                    children.splice(children.indexOf(obj.id), 1);\n                    this.diagram.nameTable[obj.id].parentId = '';\n                    hasStack = true;\n                    parentNode.wrapper.children.splice(index, 1);\n                }\n            }\n            moveChildInStack(obj, target, this.diagram, this.action);\n            parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                (this.diagram.nameTable[obj.parentId] || obj);\n            if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.wrapper.maxWidth = parentNode.wrapper.actualSize.width;\n                parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                parentNode.wrapper.maxHeight = parentNode.wrapper.actualSize.height;\n                isChangeProperties = true;\n            }\n            if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                checkChildNodeInContainer(this.diagram, obj);\n            }\n            else {\n                if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                    var container = ((parentNode.shape.type === 'SwimLane') ?\n                        parentNode.wrapper.children[0] : parentNode.wrapper);\n                    var x = parentNode.wrapper.bounds.x;\n                    var y = parentNode.wrapper.bounds.y;\n                    if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' && obj.rowIndex === 1) ||\n                        (parentNode.container.orientation === 'Vertical' && obj.rowIndex > 0 && obj.columnIndex > 0)) {\n                        container.updateColumnWidth(obj.columnIndex, helperObject.width);\n                    }\n                    else if (obj.rowIndex !== undefined) {\n                        container.updateRowHeight(obj.rowIndex, helperObject.height);\n                    }\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                        width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY,\n                        width: obj.width, height: obj.height,\n                        rotateAngle: obj.rotateAngle\n                    });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            if (isChangeProperties) {\n                parentNode.maxWidth = undefined;\n                parentNode.wrapper.maxWidth = undefined;\n                parentNode.maxHeight = undefined;\n                parentNode.wrapper.maxHeight = undefined;\n            }\n            if (hasStack) {\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    width: parentNode.width, height: parentNode.height,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                var entry = {\n                    type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                    undoObject: undoElement, category: 'Internal'\n                };\n                if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                    this.diagram.addHistoryEntry(entry);\n                }\n            }\n        }\n        return hasGroup;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper, findBounds } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        this.diagram.add(obj);\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[0]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[0]], node);\n                    if (node.parentId && node.children[0]) {\n                        this.diagram.addChild(parentNode, node.children[0]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                selectorModel.nodes.push(obj);\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    if (checkParentAsContainer(this.diagram, selectorModel.nodes[0], true)) {\n                        var parentNode = this.diagram.nameTable[selectorModel.nodes[0].parentId];\n                        if (parentNode && parentNode.container.type === 'Grid') {\n                            var canvas = new Canvas();\n                            canvas.children = [];\n                            var element = new DiagramElement();\n                            if (selectorModel.nodes[0].rowIndex && selectorModel.nodes[0].rowIndex > 0) {\n                                if ((parentNode.container.orientation === 'Horizontal' && selectorModel.nodes[0].rowIndex === 1) ||\n                                    (parentNode.container.orientation === 'Vertical' &&\n                                        selectorModel.nodes[0].rowIndex > 0 && selectorModel.nodes[0].columnIndex > 0)) {\n                                    var bounds = findBounds(parentNode, selectorModel.nodes[0].columnIndex, true);\n                                    canvas.offsetX = bounds.center.x;\n                                    canvas.offsetY = bounds.center.y;\n                                    element.width = bounds.width;\n                                    element.height = bounds.height;\n                                }\n                                else {\n                                    canvas.offsetX = parentNode.offsetX;\n                                    canvas.offsetY = selectorModel.nodes[0].wrapper.offsetY;\n                                    element.width = parentNode.wrapper.actualSize.width;\n                                    element.height = selectorModel.nodes[0].wrapper.actualSize.height;\n                                }\n                            }\n                            canvas.children.push(element);\n                            canvas.measure(new Size());\n                            canvas.arrange(canvas.desiredSize);\n                            selectorModel.wrapper.children[0] = canvas;\n                        }\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n        }\n        if (source && target && source.parentId && target.parentId && (source.parentId === target.parentId)\n            && (source.id !== target.id) && (this.diagram.nameTable[target.parentId].container &&\n            this.diagram.nameTable[target.parentId].container.type === 'Stack')) {\n            var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n            renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var expand = node.isExpanded;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = false;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.organizationalChartModule.isAnimation, objects, node, this.diagram);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node.shape.shape === 'TextAnnotation') {\n            return true;\n        }\n        if (node && node.shape.type === 'Bpmn') {\n            if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                targetNodes.shape.activity.subProcess.collapsed) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child = selector.nodes[0];\n                if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child.rowIndex > 0 && child.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = node.wrapper.children[0];\n                                var child_1 = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                                this.select(this.diagram.nameTable[child_1.children[0].children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            if (node.shape.type === 'SwimLane') {\n                                var wrapper = void 0;\n                                var child_2;\n                                wrapper = node.wrapper.children[0];\n                                child_2 = wrapper.rows[wrapper.rows.length - 1].cells[wrapper.rows[wrapper.rows.length - 1].cells.length - 1];\n                                this.select(this.diagram.nameTable[child_2.children[0].id]);\n                            }\n                            else {\n                                for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                    var obj = this.diagram.nodes[i];\n                                    if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                        this.select(obj);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                if (selector.nodes[0].shape.type === 'SwimLane') {\n                    node = selector.nodes[0];\n                    var wrapper = void 0;\n                    var child = void 0;\n                    var index = void 0;\n                    if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Vertical')) {\n                        wrapper = node.wrapper.children[0];\n                        child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if (corner === 'ResizeEast') {\n                        wrapper = node.wrapper.children[0];\n                        index = (selector.nodes[0].shape.header) ? 1 : 0;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                    else if ((corner === 'ResizeSouth' && selector.nodes[0].shape.orientation === 'Horizontal')) {\n                        wrapper = node.wrapper.children[0];\n                        index = wrapper.rows.length - 1;\n                        child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n                        this.select(this.diagram.nameTable[child.children[0].id]);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds();\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region) {\n        var rect = new Rect();\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            return new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            return this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || { x: this.viewPortWidth / 2, y: this.viewPortHeight / 2 };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds();\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer } from './interaction/container-interaction';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    refreshLayout = true;\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n        if (this.mode === 'Canvas') {\n            for (var _f = 0, _g = this.views; _f < _g.length; _f++) {\n                var temp = _g[_f];\n                var view = void 0;\n                view = this.views[temp];\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_1 = this.nameTable[obj.parentId];\n                        parent_1.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_1.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_1.wrapper.measure(new Size());\n                        parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_1);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                            this.addHistoryEntry(entry);\n                        }\n                    }\n                    if (obj.children) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    this.removeObjectsFromLayer(obj);\n                    if (this.currentDrawingObject) {\n                        this.currentDrawingObject.wrapper = undefined;\n                    }\n                    delete this.nameTable[obj.id];\n                    this.removeElements(currentObj);\n                    this.updateBridging();\n                    if (this.mode !== 'SVG') {\n                        this.refreshDiagramLayer();\n                    }\n                    if (!(this.diagramActions & DiagramAction.Clear)) {\n                        this.removeFromAQuad(currentObj);\n                        args = {\n                            element: obj, cause: this.diagramActions,\n                            state: 'Changed', type: 'Removal', cancel: false\n                        };\n                        if (obj.id !== 'helper') {\n                            this.triggerEvent(DiagramEvent.collectionChange, args);\n                        }\n                        this.resetTool();\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    parentNode.wrapper.children.splice(i, 1);\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                this.updateDiagramObject(parentNode);\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        this.startTextEdit();\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        this.activeLabel.isGroup = true;\n                        this.startGroupAction();\n                        this.addLabels(node, [{ id: randomId(), content: '' }]);\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    this.drag(node1, diffX, 0);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    this.drag(node1, 0, diffY);\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                    }\n                }\n            }\n            portContainer.id = 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        canvas.measure(new Size(obj.width, obj.height));\n        if (canvas instanceof GridPanel) {\n            canvas.arrange(canvas.desiredSize, true);\n        }\n        else {\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.shape.type === 'SwimLane') {\n            var nodesCollection = [];\n            var rowvalue = void 0;\n            var orientation_1 = obj.shape.orientation === 'Horizontal' ? true : false;\n            if (orientation_1) {\n                rowvalue = (obj.shape.header ? 1 : 0)\n                    + (obj.shape.phases.length > 0 ? 1 : 0);\n            }\n            else {\n                rowvalue = (obj.shape.header ? 1 : 0);\n            }\n            var columnValue = void 0;\n            if (orientation_1) {\n                columnValue = 0;\n            }\n            else {\n                columnValue = obj.shape.phases.length > 0 ? 1 : 0;\n            }\n            var grid = obj.wrapper.children[0];\n            if (obj.shape.lanes.length > 0) {\n                for (var i = 0; i < obj.shape.lanes.length; i++) {\n                    for (var j = 0; j < obj.shape.lanes[i].childNodes.length; j++) {\n                        var node = obj.shape.lanes[i].childNodes[j];\n                        node.parentId = grid.rows[rowvalue].cells[columnValue].children[0].id;\n                        this.initObject(node);\n                        this.nodes.push(node);\n                        nodesCollection.push(node);\n                        var canvas_1 = node.wrapper;\n                        if (orientation_1) {\n                            columnValue = 0;\n                        }\n                        if (orientation_1 && canvas_1.actualSize.width + canvas_1.margin.left > grid.rows[rowvalue].cells[0].actualSize.width) {\n                            columnValue++;\n                            canvas_1.margin.left = canvas_1.margin.left - grid.rows[rowvalue].cells[0].actualSize.width;\n                        }\n                        canvas_1.measure(new Size(node.width, node.height));\n                        canvas_1.arrange(canvas_1.desiredSize);\n                        grid.rows[rowvalue].cells[columnValue].children[0].children.push(canvas_1);\n                    }\n                    orientation_1 ? rowvalue++ : columnValue++;\n                }\n            }\n            grid.measure(new Size(obj.width, obj.height));\n            grid.arrange(canvas.desiredSize);\n            for (var i = 0; i < nodesCollection.length; i++) {\n                nodesCollection[i].offsetX = nodesCollection[i].wrapper.offsetX;\n                nodesCollection[i].offsetY = nodesCollection[i].wrapper.offsetY;\n            }\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined);\n                }\n                else {\n                    this.refreshCanvasDiagramLayer(view);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if (portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (!(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                        var stack = selectorModel.nodes[0];\n                        if (stack.shape.type !== 'UmlClassifier' && (!(stack.parentId || this.nameTable[stack.parentId]\n                            && this.nameTable[stack.parentId].shape.type === 'UmlClassifier'))) {\n                            selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selectorModel.wrapper !== null && selectorModel.wrapper.children && selectorModel.wrapper.children.length) {\n                selectorModel.wrapper.measure(size);\n                selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n                if (selectorModel.rotateAngle !== 0 || selectorModel.rotateAngle !== selectorModel.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selectorModel.width = selectorModel.wrapper.actualSize.width;\n                selectorModel.height = selectorModel.wrapper.actualSize.height;\n                selectorModel.offsetX = selectorModel.wrapper.offsetX;\n                selectorModel.offsetY = selectorModel.wrapper.offsetY;\n                var selectorElement = void 0;\n                selectorElement = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n                if (selectorModel.annotation) {\n                    this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n                }\n                else {\n                    this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                    this.updateThumbConstraints(selectorModel.connectors, selectorModel);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selectorModel.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n                }\n                if (selectorModel.annotation) {\n                    this.renderSelectorForAnnotation(selectorModel, selectorElement);\n                }\n                else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                    if (selectorModel.connectors[0] instanceof Connector) {\n                        var connector = selectorModel.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selectorModel.nodes[0] instanceof Node) {\n                        if (checkParentAsContainer(this, selectorModel.nodes[0])) {\n                            var stackPanel = selectorModel.nodes[0];\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel.nodes[0]), (selectorModel.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false);\n                    }\n                }\n                else {\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, canHideResizers, canMove(selectorModel));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        this.clearHighlighter();\n        var childNodes = getSelectorElement(this.element.id).childNodes;\n        var child;\n        for (var i = childNodes.length; i > 0; i--) {\n            child = childNodes[i - 1];\n            child.parentNode.removeChild(child);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_2 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_2.children) {\n                        for (var _i = 0, _a = parent_2.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            actualObject.wrapper.offsetX = node.offsetX;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            actualObject.wrapper.offsetY = node.offsetY;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _i = 0, _a = Object.keys(node.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n            }\n        }\n        if (node.annotations !== undefined || node.width !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.annotations || actualObject.annotations); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_3 = this.nameTable[actualObject.parentId];\n                    parent_3.wrapper.measure(new Size(parent_3.wrapper.width, actualObject.wrapper.height));\n                    parent_3.wrapper.arrange(parent_3.wrapper.desiredSize);\n                    parent_3.offsetX = parent_3.wrapper.offsetX;\n                    parent_3.offsetY = parent_3.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ?\n                    this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || newProp.targetDecorator !== undefined ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                if (actualObject.annotations.length) {\n                    for (var _i = 0, _a = actualObject.annotations; _i < _a.length; _i++) {\n                        var annotation = _a[_i];\n                        var annotationWrapper = void 0;\n                        annotationWrapper = this.getWrapper(actualObject.wrapper, annotation.id);\n                        actualObject.updateAnnotation(annotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n                    }\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        newNode = _this.add(group);\n                                    }\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.center.x;\n                                var ty = position.y - bounds.center.y;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = child2.width / 2;\n                                    lane.offsetY = (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = child1.width / 2;\n                                header.offsetY = child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            if (_this.currentSymbol) {\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var source = 'sourceElement';\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (arg.cancel) {\n                    _this.removeChildNodes(_this.currentSymbol);\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (clonedObject.children) {\n                        _this.addChildNodes(clonedObject);\n                    }\n                    if (arg.target && (arg.target instanceof Node) && checkParentAsContainer(_this, arg.target)\n                        && canAllowDrop(arg.target)) {\n                        addChildToContainer(_this, arg.target, clonedObject);\n                    }\n                    else {\n                        _this.add(clonedObject, true);\n                    }\n                    if (canSingleSelect(_this)) {\n                        _this.select([_this.nameTable[clonedObject[id]]]);\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n            }\n            var selectedSymbols = 'selectedSymbols';\n            remove(_this.droppable[selectedSymbols]);\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n            }\n        };\n    };\n    Diagram.prototype.removeChildNodes = function (node) {\n        if (node instanceof Node && node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                if (this.nameTable[node.children[i]].children) {\n                    this.removeChildNodes(node);\n                }\n                this.removeFromAQuad(this.nameTable[node.children[i]]);\n                this.removeObjectsFromLayer(this.nameTable[node.children[i]]);\n                delete this.nameTable[node.children[i]];\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var _this = this;\n        var fileType;\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var images = [];\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY]\n        }, customBounds);\n        fileType = options.format || 'JPG';\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n        return null;\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        return canvas;\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        var _this = this;\n        options.mode = 'Data';\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var url = this.exportDiagram(options);\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        if (diagramArgs.items.length === diagramArgs.hiddenItems.length) {\n            diagramArgs.cancel = true;\n            diagramArgs.hiddenItems = [];\n        }\n        else {\n            this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n            this.contextMenu.enableItems(this.disableItems, false, true);\n            var contextItems_1 = this;\n            args.items.forEach(function (item) {\n                if (contextItems_1.hiddenItems.indexOf(item.id) > -1) {\n                    contextItems_1.contextMenu.hideItems([item.id], true);\n                }\n            });\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size } from '../index';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: []\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode;\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (actualObject.parentId) {\n            parentNode = diagram.nameTable[actualObject.parentId];\n            parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n            parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n        }\n        if (entryObject.parentId !== '') {\n            parentNode = diagram.nameTable[entryObject.parentId];\n            parentNode.children.push(entryObject.id);\n            parentNode.wrapper.children.push(actualObject.wrapper);\n        }\n        actualObject.parentId = entryObject.parentId;\n        diagram.updateDiagramObject(actualObject);\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            var tx = obj.offsetX - node.wrapper.offsetX;\n            var ty = obj.offsetY - node.wrapper.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram, entry);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            this.updateOpacity(node, opacity_1, diagram);\n            var current = this;\n            setIntervalObjects_1[x] = setInterval(function () {\n                opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                opacity_1 += .2;\n            }, 20);\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node = diagram.nameTable[objValue.objects[k].id];\n                node.offsetX += objValue.objects[k].differenceX / 5;\n                node.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || !this.isAnimation)) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.content.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data =\n                            'M' + 20 + ',' + (laneHeight / 2) + ' L' + (laneWidth - 20) + ',' + (laneHeight / 2) + 'z';\n                    }\n                    else {\n                        symbol.shape.data =\n                            'M' + (laneWidth / 2) + ',' + 20 + ' L' + (laneWidth / 2) + ',' + (laneHeight - 20) + 'z';\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = isLane ? this.laneTable[obj.id].width :\n                        this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = isLane ? this.laneTable[obj.id].height :\n                        this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / (content.width || width);\n                sh = actualHeight / (content.height || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.description ? symbolInfo.description.text : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'margin-left:' +\n                Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                + 'px;pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","topLeft","bottomLeft","middleLeft","topRight","bottomCenter","middleRight","bottomRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","isTarget","reverse","isTar","child","segmentPoints","wrapper","actualSize","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","getIntersectionPoints","thisSegment","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","verticalAlignment","horizontalAlignment","initObject","nodes","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","checkParentAsContainer","nameTable","parentId","rowIndex","parent_1","columns","columnIndex","updateColumnWidth","drag","updateDiagramObject","scale","contai","maxHeight","updateRowHeight","undoObj","cloneObject","clearSelection","deleteChild","entry","category","undoObject","redoObject","addHistoryEntry","select","findBounds","isHeader","rect","Rect","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","renderContainerHelper","selectedObject","helperObject","connectors","actualObject","selectedItems","minWidth","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","measure","Size","arrange","desiredSize","addChildToContainer","parent","currentSymbol","indexOf","addChild","renderStackHighlighter","isVertical","isUml","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","commandHandler","initSwimLane","grid","row","header","createRow","initGridRow","initGridColumns","setDefinitions","index","headerDefine","phases","phaseDefine","lanes","k","laneCollection","addObjectToGrid","DiagramElement","isCalculateDesiredSize","addObject","columnDefinitions","indexValue","rowValue","colValue","laneIndex","phaseCount","parentWrapper","laneNode","childWrapper","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","totalWidth","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","serialize","clonedObject","getCustomProperty","JSON","stringify","deserialize","clear","protectPropertyChange","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","mode","snapSettings","isLoading","component","views","refresh","Diagram","classList","add","updateStyle","changedObject","textElement","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","TextElement","refreshTextElement","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","Text","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","umlActivityShapeData","getUMLFinalNode","finalNodeShape","Canvas","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","canMeasurePath","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","size","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","ports","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","getNativeLayer","getHTMLLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","chars","crypto","count","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","properties","concat","customProperties","propAdditional","internalProp","getInternalProperties","properties_1","property","hasOwnProperty","Array","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","PointPort","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","conn","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","padding","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","constructor","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Stop","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","canMeasure","textNodes","textWrapBounds","imageSource","stretch","leftMargin","topMargin","isStack","childX","childY","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Complex","Connect","None","defaultValue","isArray","Hyperlink","Annotation","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","slice","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetID","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","UserHandle","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","GridPanel","childTable","cellStyle","desiredRowHeight","desiredCellWidth","colDefns","rowId","columnId","rowSpan","columnSpan","cell","GridCellItem","addObjectToCell","updateProperties","rowDefns","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","desiredCellHeight","calculateSize","calculateHeight","calculateWidth","colId","addRow","addColumn","removeRow","removeColumn","updateRowIndex","currentIndex","newIndex","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","i_1","z","removeCelll","getShapeType","BasicShape","FlowShape","Path","Image","BpmnShape","Native","Html","UmlActivityShape","UmlClassifierShape","SwimLane","Shape","BpmnGateway","BpmnDataObject","BpmnTask","BpmnEvent","BpmnSubEvent","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","isCanvasUpdate","processId","umlIndex","outEdges","inEdges","isLane","isPhase","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","canvas","borderWidth","initPorts","accessibilityContent","initPortWrapper","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","Header","Lane","Phase","ChildContainer","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","remove","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","parentSvg","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","ariaLabel","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","option","pathSize","newData","pathColor","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","historyAdded","targetPosition","allowDrop","positionChange","startGroupAction","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","dropChildToContainer","dropAnnotation","endGroupAction","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","detail","which","isMultipleSelect","hasStack","updateContainerProperties","addUmlNode","boundsUpdate","renderSelector","click","up","wheelDelta","isTriggerEvent","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","layer","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","activeLabel","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","hasGroup","isChangeProperties","UndoRedo","innerNode","zIndex","updateConnectorEdges","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","clipboardData","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","connectorPropertyChange","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","pasteIndex","undoRedoModule","historyManager","clipObject","copyObjects","refreshDiagramLayer","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","removeNode","copiedItems","getNewObject","multiSelect","groupAction","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","removeFromAQuad","removeObjectsFromLayer","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","selectorModel","objArray","selectormodel","getChildElements","childNode","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","clearSelectorLayer","highlighter","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","nodes_1","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_2","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","nodeBounds","selectorBounds","top_2","expandNode","expand","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","preventNodesUpdate","preventConnectorsUpdate","doLayout","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","redoObj","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","child_2","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","negwidth","negheight","multiplePage","origin","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","KeyGesture","Command","CommandManager","ContextMenuSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","droppable","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getObject","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","refreshCanvasDiagramLayer","getCustomTool","active","getCustomCursor","historyChangeTrigger","changeType","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","removeDependentConnector","objIndex","removeElements","currentObj","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","exportDiagram","printandExportModule","print","addPorts","addConstraints","constraintsType","constraintsValue","removeConstraints","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","nodesCollection","rowvalue","orientation_1","columnValue","canvas_1","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateGridContainer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","hideRotate","hideResize","thumbConstraints","selectorElement","renderSelectorForAnnotation","stackPanel","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","deleteNode","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","isLayout","existingBounds","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","updateGroupSize","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","annotationWrapper","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","isMeasure","updateAnnotationContent","updateAnnotationWrapper","portWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","lane","entryTable","Droppable","accept","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","laneObj","child1","child2","findChild","removeChildNodes","addChildNodes","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","getDiagramBounds","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","images","setScaleValueforCanvas","diagramAsCanvas","toDataURL","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","exportImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","getPrintCanvasStyle","img","isExport","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","printImage","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printWind","write","innerHTML","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","contextItems_1","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","actualShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","currentEntry","Function","canLog","undoStack","redoStack","getHistoryList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","isUndo","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","hList","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","column","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","selectedNode","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","draggable","initSymbols","symbolGroup","laneHeight","laneWidth","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","i_2","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","version","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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"}