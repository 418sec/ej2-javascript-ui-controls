{"version":3,"file":"ej2-diagrams.min.js","sources":["../../src/diagram/utility/path-util.js","../../src/diagram/primitives/matrix.js","../../src/diagram/objects/dictionary/basic-shapes.js","../../src/diagram/objects/dictionary/common.js","../../src/diagram/objects/dictionary/flow-shapes.js","../../src/diagram/objects/tooltip.js","../../src/diagram/utility/connector.js","../../src/diagram/objects/connector.js","../../src/diagram/utility/constraints-util.js","../../src/diagram/utility/uml-util.js","../../src/diagram/interaction/container-interaction.js","../../src/diagram/utility/swim-lane-util.js","../../src/diagram/ruler/ruler.js","../../src/diagram/objects/dictionary/umlactivity-shapes.js","../../src/diagram/utility/diagram-util.js","../../src/diagram/utility/dom-util.js","../../src/diagram/utility/base-util.js","../../src/diagram/interaction/actions.js","../../src/diagram/objects/bpmn.js","../../src/diagram/layout/symmetrical-layout.js","../../src/diagram/primitives/size.js","../../src/diagram/primitives/point.js","../../src/diagram/primitives/rect.js","../../src/diagram/enum/enum.js","../../src/diagram/core/elements/diagram-element.js","../../src/diagram/core/appearance.js","../../src/diagram/core/containers/container.js","../../src/diagram/core/elements/path-element.js","../../src/diagram/core/elements/native-element.js","../../src/diagram/core/elements/text-element.js","../../src/diagram/core/elements/image-element.js","../../src/diagram/objects/annotation.js","../../src/diagram/core/containers/canvas.js","../../src/diagram/objects/port.js","../../src/diagram/objects/icon.js","../../src/diagram/objects/node-base.js","../../src/diagram/core/elements/html-element.js","../../src/diagram/interaction/selector.js","../../src/diagram/core/containers/stack-panel.js","../../src/diagram/core/containers/grid.js","../../src/diagram/objects/node.js","../../src/ruler/ruler.js","../../src/diagram/diagram/keyboard-commands.js","../../src/diagram/rendering/canvas-renderer.js","../../src/diagram/rendering/svg-renderer.js","../../src/diagram/rendering/renderer.js","../../src/diagram/diagram/page-settings.js","../../src/diagram/objects/service.js","../../src/diagram/diagram/grid-lines.js","../../src/diagram/diagram/ruler-settings.js","../../src/diagram/diagram/data-source.js","../../src/diagram/layout/layout-base.js","../../src/diagram/interaction/tool.js","../../src/diagram/interaction/connector-editing.js","../../src/diagram/interaction/event-handlers.js","../../src/diagram/diagram/layer.js","../../src/diagram/interaction/command-manager.js","../../src/diagram/interaction/scroller.js","../../src/diagram/interaction/spatial-search/quad.js","../../src/diagram/interaction/spatial-search/spatial-search.js","../../src/diagram/diagram/serialization-settings.js","../../src/diagram/diagram.js","../../src/diagram/print-settings.js","../../src/diagram/data-binding/data-binding.js","../../src/diagram/objects/context-menu.js","../../src/diagram/objects/connector-bridging.js","../../src/diagram/objects/snapping.js","../../src/diagram/objects/undo-redo.js","../../src/diagram/objects/layout-animation.js","../../src/diagram/layout/hierarchical-tree.js","../../src/diagram/layout/mind-map.js","../../src/diagram/layout/radial-tree.js","../../src/diagram/layout/complex-hierarchical-tree.js","../../src/symbol-palette/symbol-palette.js","../../src/overview/overview.js"],"sourcesContent":["/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function processPathData(data) {\n    var collection = [];\n    var j;\n    var arrayCollection = parsePathData(data);\n    if (arrayCollection.length > 0) {\n        for (var i = 0; i < arrayCollection.length; i++) {\n            var ob = arrayCollection[i];\n            var char = '';\n            char = ob[0];\n            switch (char.toLowerCase()) {\n                case 'm':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                        if (char === 'm') {\n                            char = 'l';\n                        }\n                        else if (char === 'M') {\n                            char = 'L';\n                        }\n                    }\n                    break;\n                case 'l':\n                case 't':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j], y: ob[j + 1] });\n                        j = j + 1;\n                    }\n                    break;\n                case 'h':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x: ob[j] });\n                    }\n                    break;\n                case 'v':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, y: ob[j] });\n                    }\n                    break;\n                case 'z':\n                    collection.push({ command: char });\n                    break;\n                case 'c':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, x1: ob[j], y1: ob[j + 1], x2: ob[j + 2], y2: ob[j + 3], x: ob[j + 4], y: ob[j + 5]\n                        });\n                        j = j + 5;\n                    }\n                    break;\n                case 's':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x2: ob[j], y2: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'q':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({ command: char, x1: ob[j], y1: ob[j + 1], x: ob[j + 2], y: ob[j + 3] });\n                        j = j + 3;\n                    }\n                    break;\n                case 'a':\n                    for (j = 1; j < ob.length; j++) {\n                        collection.push({\n                            command: char, r1: ob[j], r2: ob[j + 1], angle: ob[j + 2], largeArc: ob[j + 3],\n                            sweep: ob[j + 4], x: ob[j + 5], y: ob[j + 6]\n                        });\n                        j = j + 6;\n                    }\n                    break;\n            }\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function parsePathData(data) {\n    var tokenizer = /([a-z]+)|([+-]?(?:\\d+\\.?\\d*|\\.\\d+))/gi;\n    var current = [];\n    var commands = [];\n    var match = {};\n    tokenizer.lastIndex = 0;\n    var isExponential = false;\n    match = tokenizer.exec(data);\n    while (match) {\n        if (match[1] === 'e') {\n            var s1 = '';\n            isExponential = true;\n        }\n        else if (match[1]) {\n            if (match[1].toLowerCase() === 'zm') {\n                if (current.length) {\n                    commands.push(current);\n                }\n                commands.push(['Z']);\n                current = [match[1].substring(1, 2)];\n            }\n            else {\n                if (current.length) {\n                    commands.push(current);\n                }\n                current = [match[1]];\n            }\n            isExponential = false;\n        }\n        else {\n            if (!current.length) {\n                current = [];\n            }\n            if (!isExponential) {\n                current.push(Number(match[2]));\n            }\n            isExponential = false;\n        }\n        match = tokenizer.exec(data);\n    }\n    if (current.length) {\n        commands.push(current);\n    }\n    return commands;\n}\n/**\n * Used to find the path for rounded rect\n */\nexport function getRectanglePath(cornerRadius, height, width) {\n    var x = 0;\n    var y = 0;\n    var path = '';\n    var points = [{ x: x + cornerRadius, y: y }, { x: x + width - cornerRadius, y: y },\n        { x: x + width, y: y + cornerRadius }, { x: x + width, y: y + height - cornerRadius },\n        { x: x + width - cornerRadius, y: y + height }, { x: x + cornerRadius, y: y + height },\n        { x: x, y: y + height - cornerRadius }, { x: x, y: y + cornerRadius }\n    ];\n    var corners = [{ x: x + width, y: y }, { x: x + width, y: y + height }, { x: x, y: y + height }, { x: x, y: y }];\n    var corner = 0;\n    var point2;\n    var next;\n    path = 'M' + points[0].x + ' ' + points[0].y;\n    var i;\n    for (i = 0; i < points.length; i = i + 2) {\n        point2 = points[i + 1];\n        path += 'L' + point2.x + ' ' + point2.y;\n        next = points[i + 2] || points[0];\n        path += 'Q' + corners[corner].x + ' ' + corners[corner].y + ' ' + next.x + ' ' + next.y;\n        corner++;\n    }\n    return path;\n}\n/**\n * Used to find the path for polygon shapes\n */\nexport function getPolygonPath(collection) {\n    var path = '';\n    var seg;\n    path = 'M' + collection[0].x + ' ' + collection[0].y;\n    var i;\n    for (i = 1; i < collection.length; i++) {\n        seg = collection[i];\n        path += 'L' + seg.x + ' ' + seg.y;\n    }\n    path += 'Z';\n    return path;\n}\n/** @private */\nexport function pathSegmentCollection(collection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var initx;\n    var inity;\n    var segments = [];\n    for (x = 0, y = 0, i = 0, length = collection.length; i < length; ++i) {\n        var obj = collection[i];\n        var seg = obj;\n        var char = '';\n        char = seg.command;\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        var prev = segments[segments.length - 1];\n        switch (char) {\n            case 'M':\n                segments.push({ command: 'M', x: x, y: y });\n                break;\n            case 'L':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y });\n                break;\n            case 'H':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x, y: y0 });\n                break;\n            case 'V':\n                segments.push({ command: 'L', x0: x0, y0: y0, x: x0, y: y });\n                break;\n            case 'C':\n                segments.push({ command: 'C', x0: x0, y0: y0, x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y });\n                break;\n            case 'S':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'C' || prev.command === 'S') {\n                        ctrl = { x: prev.x2, y: prev.y2 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'C', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x2: x2, y2: y2, x: x, y: y });\n                }\n                break;\n            case 'Q':\n                //ctx.quadraticCurveTo(x1, y1, x, y);\n                segments.push({ command: 'Q', x0: x0, y0: y0, x1: x1, y1: y1, x: x, y: y });\n                break;\n            case 'T':\n                if (prev) {\n                    var ctrl = void 0;\n                    if (prev.command === 'Q') {\n                        ctrl = { x: prev.x1, y: prev.y1 };\n                    }\n                    else {\n                        ctrl = { x: x0, y: y0 };\n                    }\n                    var cpt2 = { x: 2 * x0 - ctrl.x, y: 2 * y0 - ctrl.y };\n                    segments.push({ command: 'Q', x0: x0, y0: y0, x1: cpt2.x, y1: cpt2.y, x: x, y: y });\n                }\n                break;\n            case 'A':\n                var newSeg = seg;\n                newSeg.command = 'A';\n                segments.push(newSeg);\n                break;\n            case 'Z':\n            case 'z':\n                segments.push({ command: 'Z' });\n                x = x0;\n                y = y0;\n                break;\n        }\n        if (char === 'M' || char === 'm') {\n            initx = x;\n            inity = y;\n        }\n        x0 = x;\n        y0 = y;\n    }\n    return segments;\n}\n/** @private */\nexport function transformPath(arr, sX, sY, s, bX, bY, iX, iY) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    var newSeg;\n    for (x = 0, y = 0, i = 0, length = arr.length; i < length; ++i) {\n        var obj = arr[i];\n        var seg = obj;\n        var char = seg.command;\n        if ('x' in seg) {\n            x = seg.x;\n        }\n        if ('y' in seg) {\n            y = seg.y;\n        }\n        if ('y1' in seg) {\n            y1 = seg.y1;\n        }\n        if ('y2' in seg) {\n            y2 = seg.y2;\n        }\n        if ('x1' in seg) {\n            x1 = seg.x1;\n        }\n        if ('x2' in seg) {\n            x2 = seg.x2;\n        }\n        if (s) {\n            if (x !== undefined) {\n                x = scalePathData(x, sX, bX, iX);\n            }\n            if (y !== undefined) {\n                y = scalePathData(y, sY, bY, iY);\n            }\n            if (x1 !== undefined) {\n                x1 = scalePathData(x1, sX, bX, iX);\n            }\n            if (y1 !== undefined) {\n                y1 = scalePathData(y1, sY, bY, iY);\n            }\n            if (x2 !== undefined) {\n                x2 = scalePathData(x2, sX, bX, iX);\n            }\n            if (y2 !== undefined) {\n                y2 = scalePathData(y2, sY, bY, iY);\n            }\n        }\n        else {\n            if (x !== undefined) {\n                x = Number((x + sX).toFixed(2));\n            }\n            if (y !== undefined) {\n                y = Number((y + sY).toFixed(2));\n            }\n            if (x1 !== undefined) {\n                x1 = Number((x1 + sX).toFixed(2));\n            }\n            if (y1 !== undefined) {\n                y1 = Number((y1 + sY).toFixed(2));\n            }\n            if (x2 !== undefined) {\n                x2 = Number((x2 + sX).toFixed(2));\n            }\n            if (y2 !== undefined) {\n                y2 = Number((y2 + sY).toFixed(2));\n            }\n        }\n        var scaledPath = { x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2, r1: seg.r1, r2: seg.r2 };\n        newSeg = updatedSegment(seg, char, scaledPath, s, sX, sY);\n        if (newSeg) {\n            arr[i] = newSeg;\n        }\n        // Record the start of a subpath\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    var pathData = getPathString(arr);\n    return pathData;\n}\n/** @private */\nexport function updatedSegment(segment, char, obj, isScale, sX, sY) {\n    switch (char) {\n        case 'M':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'L':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'H':\n            segment.x = obj.x;\n            break;\n        case 'V':\n            segment.y = obj.y;\n            break;\n        case 'C':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'S':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x2 = obj.x2;\n            segment.y2 = obj.y2;\n            break;\n        case 'Q':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.x1 = obj.x1;\n            segment.y1 = obj.y1;\n            break;\n        case 'T':\n            segment.x = obj.x;\n            segment.y = obj.y;\n            break;\n        case 'A':\n            var r1 = obj.r1;\n            var r2 = obj.r2;\n            if (isScale) {\n                obj.r1 = r1 = (r1 * sX);\n                obj.r2 = r2 = (r2 * sY);\n            }\n            segment.x = obj.x;\n            segment.y = obj.y;\n            segment.r1 = obj.r1;\n            segment.r2 = obj.r2;\n            break;\n        case 'z':\n        case 'Z':\n            segment = { command: 'Z' };\n            break;\n    }\n    return segment;\n}\n/** @private */\nexport function scalePathData(val, scaleFactor, oldOffset, newOffset) {\n    if (val !== oldOffset) {\n        if (newOffset !== oldOffset) {\n            val = (((val * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)))\n                + (newOffset - Number(oldOffset)));\n        }\n        else {\n            val = ((Number(val) * scaleFactor) - (Number(oldOffset) * scaleFactor - Number(oldOffset)));\n        }\n    }\n    else {\n        if (newOffset !== oldOffset) {\n            val = newOffset;\n        }\n    }\n    return Number(val.toFixed(2));\n}\n/** @private */\nexport function splitArrayCollection(arrayCollection) {\n    var x0;\n    var y0;\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var x;\n    var y;\n    var length;\n    var i;\n    for (x = 0, y = 0, i = 0, length = arrayCollection.length; i < length; ++i) {\n        var path = arrayCollection[i];\n        var seg = path;\n        var char = seg.command;\n        if (/[MLHVCSQTA]/.test(char)) {\n            if ('x' in seg) {\n                seg.x = x = seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y = seg.y;\n            }\n        }\n        else {\n            if ('x1' in seg) {\n                seg.x1 = x1 = x + seg.x1;\n            }\n            if ('x2' in seg) {\n                seg.x2 = x2 = x + seg.x2;\n            }\n            if ('y1' in seg) {\n                seg.y1 = y1 = y + seg.y1;\n            }\n            if ('y2' in seg) {\n                seg.y2 = y2 = y + seg.y2;\n            }\n            if ('x' in seg) {\n                seg.x = x += seg.x;\n            }\n            if ('y' in seg) {\n                seg.y = y += seg.y;\n            }\n            var newSeg = void 0;\n            switch (char) {\n                case 'm':\n                case 'M':\n                    newSeg = { command: 'M', x: x, y: y };\n                    break;\n                case 'l':\n                case 'L':\n                    newSeg = { command: 'L', x: x, y: y };\n                    break;\n                case 'h':\n                case 'H':\n                    newSeg = { command: 'H', x: x };\n                    break;\n                case 'v':\n                case 'V':\n                    newSeg = { command: 'V', y: y };\n                    break;\n                case 'c':\n                case 'C':\n                    newSeg = { command: 'C', x: x, y: y, x1: x1, y1: y1, x2: x2, y2: y2 };\n                    break;\n                case 's':\n                case 'S':\n                    newSeg = { command: 'S', x: x, y: y, x2: x2, y2: y2 };\n                    break;\n                case 'q':\n                case 'Q':\n                    newSeg = { command: 'Q', x: x, y: y, x1: x1, y1: y1 };\n                    break;\n                case 't':\n                case 'T':\n                    newSeg = { command: 'T', x: x, y: y };\n                    break;\n                case 'a':\n                case 'A':\n                    newSeg = { command: 'A', x: x, y: y };\n                    newSeg.r1 = seg.r1;\n                    newSeg.r2 = seg.r2;\n                    newSeg.angle = seg.angle;\n                    newSeg.largeArc = seg.largeArc;\n                    newSeg.sweep = seg.sweep;\n                    break;\n                case 'z':\n                case 'Z':\n                    newSeg = { command: 'Z' };\n                    x = x0;\n                    y = y0;\n                    newSeg = arrayCollection[i];\n                    break;\n            }\n            if (newSeg) {\n                arrayCollection[i] = newSeg;\n            }\n        }\n        if (char === 'M' || char === 'm') {\n            x0 = x;\n            y0 = y;\n        }\n    }\n    return arrayCollection;\n}\n/** @private */\nexport function getPathString(arrayCollection) {\n    var getNewString = '';\n    var i;\n    for (i = 0; i < arrayCollection.length; i++) {\n        if (i === 0) {\n            getNewString += getString(arrayCollection[i]);\n        }\n        else {\n            getNewString += ' ' + getString(arrayCollection[i]);\n        }\n    }\n    return getNewString;\n}\n/** @private */\nexport function getString(obj) {\n    var string = '';\n    switch (obj.command) {\n        case 'Z':\n        case 'z':\n            string = obj.command;\n            break;\n        case 'M':\n        case 'm':\n        case 'L':\n        case 'l':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'C':\n        case 'c':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'Q':\n        case 'q':\n            string = obj.command + ' ' + obj.x1 + ' ' + obj.y1 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'A':\n        case 'a':\n            var cmd = obj.command;\n            var ang = obj.angle;\n            var l = (obj.largeArc ? '1' : '0');\n            var s = (obj.sweep ? '1' : '0');\n            string = cmd + ' ' + obj.r1 + ' ' + obj.r2 + ' ' + ang + ' ' + l + ' ' + s + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'H':\n        case 'h':\n            string = obj.command + ' ' + obj.x;\n            break;\n        case 'V':\n        case 'v':\n            string = obj.command + ' ' + obj.y;\n            break;\n        case 'S':\n        case 's':\n            string = obj.command + ' ' + obj.x2 + ' ' + obj.y2 + ' ' + obj.x + ' ' + obj.y;\n            break;\n        case 'T':\n        case 't':\n            string = obj.command + ' ' + obj.x + ' ' + obj.y;\n    }\n    return string;\n}\n","/**\n * Matrix module is used to transform points based on offsets, angle\n */\n/** @private */\nexport var MatrixTypes;\n(function (MatrixTypes) {\n    MatrixTypes[MatrixTypes[\"Identity\"] = 0] = \"Identity\";\n    MatrixTypes[MatrixTypes[\"Translation\"] = 1] = \"Translation\";\n    MatrixTypes[MatrixTypes[\"Scaling\"] = 2] = \"Scaling\";\n    MatrixTypes[MatrixTypes[\"Unknown\"] = 4] = \"Unknown\";\n})(MatrixTypes || (MatrixTypes = {}));\n/** @private */\nvar Matrix = /** @class */ (function () {\n    function Matrix(m11, m12, m21, m22, offsetX, offsetY, type) {\n        this.m11 = m11;\n        this.m12 = m12;\n        this.m21 = m21;\n        this.m22 = m22;\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        // if (type === undefined) {\n        //     this.type = MatrixTypes.Unknown;\n        // } else {\n        //     this.type = type;\n        // }\n        this.type = type;\n    }\n    return Matrix;\n}());\nexport { Matrix };\n/** @private */\nexport function identityMatrix() {\n    return new Matrix(1, 0, 0, 1, 0, 0, MatrixTypes.Identity);\n}\n/** @private */\nexport function transformPointByMatrix(matrix, point) {\n    var pt = multiplyPoint(matrix, point.x, point.y);\n    return { x: Math.round(pt.x * 100) / 100, y: Math.round(pt.y * 100) / 100 };\n}\n/** @private */\nexport function transformPointsByMatrix(matrix, points) {\n    var transformedPoints = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        transformedPoints.push(transformPointByMatrix(matrix, point));\n    }\n    return transformedPoints;\n}\n/** @private */\nexport function rotateMatrix(matrix, angle, centerX, centerY) {\n    angle %= 360.0;\n    multiplyMatrix(matrix, createRotationRadians(angle * 0.017453292519943295, centerX ? centerX : 0, centerY ? centerY : 0));\n}\n/** @private */\nexport function scaleMatrix(matrix, scaleX, scaleY, centerX, centerY) {\n    if (centerX === void 0) { centerX = 0; }\n    if (centerY === void 0) { centerY = 0; }\n    multiplyMatrix(matrix, createScaling(scaleX, scaleY, centerX, centerY));\n}\n/** @private */\nexport function translateMatrix(matrix, offsetX, offsetY) {\n    if (matrix.type & MatrixTypes.Identity) {\n        matrix.type = MatrixTypes.Translation;\n        setMatrix(matrix, 1.0, 0.0, 0.0, 1.0, offsetX, offsetY);\n        return;\n    }\n    if (matrix.type & MatrixTypes.Unknown) {\n        matrix.offsetX += offsetX;\n        matrix.offsetY += offsetY;\n        return;\n    }\n    matrix.offsetX += offsetX;\n    matrix.offsetY += offsetY;\n    matrix.type |= MatrixTypes.Translation;\n}\n/** @private */\nfunction createScaling(scaleX, scaleY, centerX, centerY) {\n    var result = identityMatrix();\n    result.type = !(centerX || centerY) ? MatrixTypes.Scaling : MatrixTypes.Scaling | MatrixTypes.Translation;\n    setMatrix(result, scaleX, 0.0, 0.0, scaleY, centerX - scaleX * centerX, centerY - scaleY * centerY);\n    return result;\n}\n/** @private */\nfunction createRotationRadians(angle, centerX, centerY) {\n    var result = identityMatrix();\n    var num = Math.sin(angle);\n    var num2 = Math.cos(angle);\n    var offsetX = centerX * (1.0 - num2) + centerY * num;\n    var offsetY = centerY * (1.0 - num2) - centerX * num;\n    result.type = MatrixTypes.Unknown;\n    setMatrix(result, num2, num, -num, num2, offsetX, offsetY);\n    return result;\n}\n/** @private */\nfunction multiplyPoint(matrix, x, y) {\n    switch (matrix.type) {\n        case MatrixTypes.Identity: break;\n        case MatrixTypes.Translation:\n            x += matrix.offsetX;\n            y += matrix.offsetY;\n            break;\n        case MatrixTypes.Scaling:\n            x *= matrix.m11;\n            y *= matrix.m22;\n            break;\n        case MatrixTypes.Translation | MatrixTypes.Scaling:\n            x *= matrix.m11;\n            x += matrix.offsetX;\n            y *= matrix.m22;\n            y += matrix.offsetY;\n            break;\n        default:\n            var num = y * matrix.m21 + matrix.offsetX;\n            var num2 = x * matrix.m12 + matrix.offsetY;\n            x *= matrix.m11;\n            x += num;\n            y *= matrix.m22;\n            y += num2;\n            break;\n    }\n    return { x: x, y: y };\n}\n/** @private */\nexport function multiplyMatrix(matrix1, matrix2) {\n    var type = matrix1.type;\n    var type2 = matrix2.type;\n    if (type2 === MatrixTypes.Identity) {\n        return;\n    }\n    if (type === MatrixTypes.Identity) {\n        assignMatrix(matrix1, matrix2);\n        matrix1.type = matrix2.type;\n        return;\n    }\n    if (type2 === MatrixTypes.Translation) {\n        matrix1.offsetX += matrix2.offsetX;\n        matrix1.offsetY += matrix2.offsetY;\n        if (type !== MatrixTypes.Unknown) {\n            matrix1.type |= MatrixTypes.Translation;\n        }\n        return;\n    }\n    if (type !== MatrixTypes.Translation) {\n        var num = type << 4 | type2;\n        switch (num) {\n            case 34:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                return;\n            case 35:\n                matrix1.m11 *= matrix2.m11;\n                matrix1.m22 *= matrix2.m22;\n                matrix1.offsetX = matrix2.offsetX;\n                matrix1.offsetY = matrix2.offsetY;\n                matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n                return;\n            case 36: break;\n            default:\n                {\n                    switch (num) {\n                        case 50:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX *= matrix2.m11;\n                            matrix1.offsetY *= matrix2.m22;\n                            return;\n                        case 51:\n                            matrix1.m11 *= matrix2.m11;\n                            matrix1.m22 *= matrix2.m22;\n                            matrix1.offsetX = matrix2.m11 * matrix1.offsetX + matrix2.offsetX;\n                            matrix1.offsetY = matrix2.m22 * matrix1.offsetY + matrix2.offsetY;\n                            return;\n                        case 52: break;\n                        default:\n                            switch (num) {\n                                case 66:\n                                case 67:\n                                case 68: break;\n                                default: return;\n                            }\n                            break;\n                    }\n                    break;\n                }\n        }\n        var result = identityMatrix();\n        var m11New = matrix1.m11 * matrix2.m11 + matrix1.m12 * matrix2.m21;\n        var m12New = matrix1.m11 * matrix2.m12 + matrix1.m12 * matrix2.m22;\n        var m21New = matrix1.m21 * matrix2.m11 + matrix1.m22 * matrix2.m21;\n        var m22New = matrix1.m21 * matrix2.m12 + matrix1.m22 * matrix2.m22;\n        var offsetX_1 = matrix1.offsetX * matrix2.m11 + matrix1.offsetY * matrix2.m21 + matrix2.offsetX;\n        var offsetY_1 = matrix1.offsetX * matrix2.m12 + matrix1.offsetY * matrix2.m22 + matrix2.offsetY;\n        setMatrix(result, m11New, m12New, m21New, m22New, offsetX_1, offsetY_1);\n        if (result.m21 || result.m12) {\n            result.type = MatrixTypes.Unknown;\n        }\n        else {\n            if (result.m11 && result.m11 !== 1.0 || result.m22 && result.m22 !== 1.0) {\n                result.type = MatrixTypes.Scaling;\n            }\n            if (result.offsetX || result.offsetY) {\n                result.type |= MatrixTypes.Translation;\n            }\n            if ((result.type & (MatrixTypes.Translation | MatrixTypes.Scaling)) === MatrixTypes.Identity) {\n                result.type = MatrixTypes.Identity;\n            }\n            result.type = MatrixTypes.Scaling | MatrixTypes.Translation;\n        }\n        assignMatrix(matrix1, result);\n        matrix1.type = result.type;\n        return;\n    }\n    var offsetX = matrix1.offsetX;\n    var offsetY = matrix1.offsetY;\n    matrix1.offsetX = offsetX * matrix2.m11 + offsetY * matrix2.m21 + matrix2.offsetX;\n    matrix1.offsetY = offsetX * matrix2.m12 + offsetY * matrix2.m22 + matrix2.offsetY;\n    if (type2 === MatrixTypes.Unknown) {\n        matrix1.type = MatrixTypes.Unknown;\n        return;\n    }\n    matrix1.type = (MatrixTypes.Translation | MatrixTypes.Scaling);\n}\n/** @private */\nfunction setMatrix(mat, m11, m12, m21, m22, x, y) {\n    mat.m11 = m11;\n    mat.m12 = m12;\n    mat.m21 = m21;\n    mat.m22 = m22;\n    mat.offsetX = x;\n    mat.offsetY = y;\n}\n/** @private */\nfunction assignMatrix(matrix1, matrix2) {\n    matrix1.m11 = matrix2.m11;\n    matrix1.m12 = matrix2.m12;\n    matrix1.m21 = matrix2.m21;\n    matrix1.m22 = matrix2.m22;\n    matrix1.offsetX = matrix2.offsetX;\n    matrix1.offsetY = matrix2.offsetY;\n    matrix1.type = matrix2.type;\n}\n","/**\n * BasicShapeDictionary defines the shape of the built-in basic shapes\n */\n/** @private */\nexport function getBasicShape(shape) {\n    return basicShapes[shape.toString()];\n}\nvar basicShapes = {\n    //Rectangle,\n    'Rectangle': 'M0,0 L50,0 L50,50 L0,50 z',\n    //Ellipse,\n    'Ellipse': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    //Hexagon,\n    'Hexagon': 'M30,0 L60,0 L90,30 L60,60 L30,60 L0,30 L30,0 z',\n    //Parallelogram,\n    'Parallelogram': 'M30,0 L60,0 L45,30 L15,30 z',\n    //Triangle,\n    'Triangle': 'M45,0 L90,45 L0,45 L45,0 z',\n    //Plus,\n    'Plus': 'M696.6084,158.2656 L674.8074,158.2656 L674.8074,136.4656 L658.4084,136.4656 L658.4084,158.2656 L636.6084,158.2656' +\n        'L636.6084,174.6646 L658.4084,174.6646 L658.4084,196.4656 L674.8074,196.4656 L674.8074,174.6646 L696.6084,174.6646' +\n        'L696.6084,158.2656 z',\n    //Star,\n    'Star': 'M540.3643,137.9336 L546.7973,159.7016 L570.3633,159.7296 L550.7723,171.9366 L558.9053,194.9966 L540.3643,179.4996' +\n        'L521.8223,194.9966 L529.9553,171.9366 L510.3633,159.7296 L533.9313,159.7016 L540.3643,137.9336 z',\n    //Pentagon,\n    'Pentagon': 'M30,0 L60,30 L50,70 L10,70 L0,30 L30,0 z',\n    //Heptagon,\n    'Heptagon': 'M223.7783,195.7134 L207.1303,174.8364 L213.0713,148.8034 L237.1303,137.2174 L261.1883,148.8034 L267.1303,174.8364' +\n        'L250.4813,195.7134 L223.7783,195.7134 z',\n    //Octagon,\n    'Octagon': 'M98.7319,196.4653 L81.1579,178.8923 L81.1579,154.0393 L98.7319,136.4653 L123.5849,136.4653' +\n        'L141.1579,154.0393 L141.1579,178.8923 L123.5849,196.4653 L98.7319,196.4653 z',\n    //Trapezoid,\n    'Trapezoid': 'M127.2842,291.4492 L95.0322,291.4492 L81.1582,256.3152 L141.1582,256.3152 L127.2842,291.4492 z',\n    //Decagon,\n    'Decagon': 'M657.3379,302.4141 L642.3369,291.5161 L636.6089,273.8821 L642.3369,256.2481 L657.3379,245.3511 L675.8789,245.3511' +\n        'L690.8789,256.2481 L696.6089,273.8821' +\n        'L690.8789,291.5161 L675.8789,302.4141 L657.3379,302.4141 z',\n    //RightTriangle,\n    'RightTriangle': 'M836.293,292.9238 L776.293,292.9238 L776.293,254.8408 L836.293,292.9238 z',\n    //Cylinder,\n    'Cylinder': 'M 542.802,362.009C 542.802,368.452 525.341,373.676 503.802,373.676C 482.263,373.676 464.802,368.452 464.802,362.009' +\n        'L 464.802,466.484C 464.802,472.928 482.263,478.151 503.802,478.151' +\n        'C 525.341,478.151 542.802,472.928 542.802,466.484L 542.802,362.016C 542.802,368.459 525.341,373.534 503.802,373.534' +\n        'C 482.263,373.534 464.802,368.31 464.802,361.867' +\n        'L 464.802,362.016C 464.802,355.572 482.263,350.349 503.802,350.349C 525.341,350.349 542.802,355.572 542.802,362.016',\n    //Diamond,\n    'Diamond': 'M397.784,287.875 L369.5,316.159 L341.216,287.875 L369.5,259.591 L397.784,287.875 z'\n};\n","/**\n * ShapeDictionary defines the shape of the default nodes and ports\n */\n/** @private */\nexport function getPortShape(shape) {\n    return portShapes[shape.toString()];\n}\n/** @private */\nexport function getDecoratorShape(shape, decorator) {\n    if (shape === 'Custom') {\n        return decorator.pathData;\n    }\n    return decoratorShapes[shape];\n}\n/**\n * @private\n * @param icon\n * sets the path data for different icon shapes\n */\nexport function getIconShape(icon) {\n    var data;\n    switch (icon.shape) {\n        case 'Minus':\n            data = 'M0,50 L100,50';\n            break;\n        case 'Plus':\n            data = 'M0,-50 L0,50 M-50,0 L50,0';\n            break;\n        case 'ArrowUp':\n            data = 'M0,100 L50,0 L100,100 Z';\n            break;\n        case 'ArrowDown':\n            data = 'M0,0 L50,100 L100,0 Z';\n            break;\n        case 'Path':\n            data = icon.pathData;\n            break;\n    }\n    return data;\n}\nvar portShapes = {\n    'X': 'M14,14 L106,106 M106,14 L14,106',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n};\nvar decoratorShapes = {\n    'OpenArrow': 'M15.9,23 L5,16 L15.9,9 L17,10.7 L8.7,16 L17,21.3Z',\n    'Square': 'M0,0 L10,0 L10,10 L0,10 z',\n    'Fletch': 'M14.8,10c0,0-3.5,6,0.2,12c0,0-2.5-6-10.9-6C4.1,16,11.3,16,14.8,10z',\n    'OpenFetch': 'M6,17c-0.6,0-1-0.4-1-1s0.4-1,1-1c10.9,0,11-5,11-5' +\n        'c0-0.6,0.4-1,1-1s1,0.4,1,1C19,10.3,18.9,17,6,17C6,17,6,17,6,17z ' +\n        'M18,23c-0.5,0-1-0.4-1-1c0-0.2-0.3-5-11-5c-0.6,0-1-0.5-1-1s0.4-1,1-1c0,0,0,0,0,0' +\n        'c12.9,0,13,6.7,13,7    C19,22.6,18.6,23,18,23z',\n    'IndentedArrow': 'M17,10c0,0-4.5,5.5,0,12L5,16L17,10z',\n    'OutdentedArrow': 'M14.6,10c0,0,5.4,6,0,12L5,16L14.6,10z',\n    'DoubleArrow': 'M19,10 L19,22 L13,16Z M12,10 L12,22 L6,16Z',\n    'Arrow': 'M15,10 L15,22 L5,16Z',\n    'Diamond': 'M12,23l-7-7l7-7l6.9,7L12,23z',\n    'Circle': 'M0,50 A50,50,0 1 1 100,50 A50,50,0 1 1 0,50 Z'\n};\n","/**\n * FlowShapeDictionary defines the shape of the built-in flow shapes\n */\n/** @private */\nexport function getFlowShape(shape) {\n    return flowShapes[shape.toString()];\n}\nvar flowShapes = {\n    // Process,\n    'Process': 'M419.511,76.687L359.511,76.687L359.511,43.086L419.511,43.086z',\n    // Decision,\n    'Decision': 'M 253.005,115.687L 200.567,146.071L 148.097,115.687L 200.534,85.304L 253.005,115.687 Z',\n    // Document,\n    'Document': 'M 60 31.9 c 0 0 -11 -7.7 -30 0 s -30 0 -30 0 V 0 h 60 V 31.9 Z',\n    // PreDefinedProcess,\n    'PreDefinedProcess': 'M 0,0 L 50,0 L 50,50 L 0,50 Z  M 8.334,0 L 8.334,50 M 41.667,0 L 41.667,50',\n    // Terminator,\n    'Terminator': 'M 269.711,29.33C 269.71,44.061 257.77,56 243.04,56L 158.058,56C 143.33,56 131.39,44.061 131.39,29.33L 131.39,29.33' +\n        'C 131.391,14.6057 143.33,2.669 158.058,2.669L 243.044,2.669C 257.772,2.669 269.711,14.6057 269.711,29.333 Z',\n    // PaperTap,\n    'PaperTap': 'M0.0009,17.2042 L0.0009,47.165 C0.001,47.165 14.403,53.5455 25.00,47.165 C35.599,40.7852 44.403,43.5087 50.00,47.165' +\n        'L50.001,17.2042 M50.001,32.7987 L50.001,2.8405 C50.001,2.8405 35.599,-3.5427 25.001,2.8405' +\n        'C14.403,9.2237 5.599,6.494 0.0009,2.8405 L0.0009,32.7987',\n    // DirectData,\n    'DirectData': 'M 132.62 0 L 17.38 0 C 7.78 0 0 13.43 0 30 C 0 46.57 7.78 60 17.38 60 L 132.62 60 M 132.62 0' +\n        'C 123.02 0 115.24 13.43 115.24 30 C 115.24 46.57 123.02 60 132.62 60 C 142.22 60 150 46.57 150 30 C 150 13.43 142.22 0 132.62 0 z ',\n    // SequentialData,\n    'SequentialData': 'M0.0029,24.999 C0.0029,11.1922 10.433,0.0021 23.295,0.0021 C36.159,0.00216 46.585,11.1922 46.585,24.999' +\n        'C46.585,38.8057 36.159,49.9979 23.295,49.9979 C10.433,49.9979 0.0029,38.8057 0.0029,24.999 z M23.294,49.999 L50.002,49.999',\n    // Sort,\n    'Sort': 'M50.001,24.9971 L25.001,49.9971 L0.00097,24.9971 L25.001,-0.00286865 L50.001,24.9971 z' +\n        ' M0.000976562,24.9971 L50.001,24.9971',\n    // MultiDocument,\n    'MultiDocument': 'M43.6826,40 C44.8746,40.6183 45.8586,41.3502 46.8366,42.1122 L46.8366,4.74487 L3.09857,4.74487 L3.09857,10.9544' +\n        ' M46.837,35.143 C48.027,35.765 49.025,36.604 50.003,37.369 L50.003,0.002 L6.264,0.002 L6.264,4.744 M43.682,47.113 L43.682,10.765' +\n        ' L0.0025,10.7652 L0.0025,47.1132 C0.0025,47.1132 12.5846,53.6101 21.8426,47.1132 C31.1006,40.6163 38.792,43.393 43.6826,47.1132 z',\n    // Collate,\n    'Collate': 'M50.001,0.0028 L25.001,25.0029 L0.00097,0.0028 L50.001,0.002 z M0.0009,50.002 L25.001,25.002' +\n        'L50.001,50.002 L0.0009,50.0029 z',\n    // SummingJunction,\n    'SummingJunction': 'M7.3252,42.6768 L42.6772,7.3247 M42.6768,42.6768 L7.3248,7.3247 M0.0009,25.001 ' +\n        'C0.0009,11.193 11.197,0.0009 25.001,0.0009' +\n        ' C38.809,0.0009 50.001,11.193 50.001,25.001 C50.001,38.809 38.809,50.001 25.001,50.001 C11.197,50.00 0.0009,38.809 0.0009,25.00 z',\n    // Or,\n    'Or': 'M 0 50 L 100 50 M 50 100 L 50 0.0 M 0 50 C 0 22.384 22.392 0 50 0 C 77.616 0 100 22.384 100 50' +\n        ' C 100 77.616 77.616 100 50 100 C 22.392 100 0 77.616 0 50 Z',\n    // InternalStorage,\n    'InternalStorage': 'M 0 3.81946A 2.5,3.81946 0 0,1 2.5,0L 47.5 0A 2.5,3.81946 0 0,1 50,3.81946' +\n        'L 50 45.836A 2.5,3.819446 0 0,1 47.5,49.652778' +\n        'L 2.5 49.652778A 2.5,3.819446 0 0,1 0,45.8336L 0 3.819446ZM 0 11.45834L 50 11.4583334M 12.5 0L 12.5 49.652778',\n    // Extract,\n    'Extract': 'M0,35 L30,0 L60,35 Z',\n    // ManualOperation,\n    'ManualOperation': 'M46.4,28.8 L14.8,28.8 L0,0 L60,0 Z',\n    // Merge,\n    'Merge': 'M60,0 L30,35 L0,0 Z',\n    // OffPageReference,\n    'OffPageReference': 'M60,33.3 L30.1,39 L0,33.3 L0,0 L60,0 Z',\n    // SequentialAccessStorage,\n    'SequentialAccessStorage': 'M 60 30 C 60 13.4 46.6 0 30 0 S 0 13.4 0 30 s 13.4 30 30 30 h 28.6 v -6.5 h -9.9' +\n        'C 55.5 48 60 39.5 60 30 Z',\n    // Annotation,\n    'Annotation': 'M49.9984,50.0029 L-0.00271199,50.0029 L-0.00271199,0.00286865 L49.9984,0.00286865',\n    // Annotation2,\n    'Annotation2': 'M49.9977,50.0029 L25.416,50.0029 L25.416,0.00286865 L49.9977,0.00286865 M25.4166,25.0029 L-0.00227869,25.0029',\n    // Data,\n    'Data': 'M 10 0 L 40 0 L 30 40 L 0 40 Z',\n    // Card,\n    'Card': 'M275,60 L400,60 L400,110 L260,110 L260,75 Z',\n    // Delay,\n    'Delay': 'M0,0 L12.029,0 C14.212999,0 16,1.7869979 16,3.9709952 C16,6.1549926 14.212999,7.9409904 12.029,7.9409904 L0,7.9409904 z',\n    // Preparation,\n    'Preparation': 'M 1048.17 572 C 1051.06 568.86 1055.17 567.05 1059.5 567 L 1094.51 567'\n        + ' C 1098.84 567.05 1102.95 568.86 1105.84 572' +\n        ' L 1126.43 595 C 1127.01 596.28 1127.01 597.72 1126.43 599 L 1105.84 622 C 1102.95 625.14 1098.84 626.95 1094.51 627' +\n        ' L 1059.5 627 C 1055.17 626.95 1051.06 625.14 1048.17 622 L 1027.58 599 C 1027 597.72 1027 596.28 1027.58 595 L 1048.17 572 Z',\n    // Display,\n    'Display': 'M47.8809,19.2914 L32.7968,-0.00594145 L11.3902,-0.00594145 C7.93166,-0.00594145 0.00124586,11.187 0.00124586,24.9968' +\n        'C0.00124586,38.8032 7.93166,49.9962 11.3902,49.9962 L32.7968,49.99 L47.615,31.038 C47.615,31.0388 52.798,24.9968 47.880,19.2914 z',\n    // ManualInput,\n    'ManualInput': 'M 912 732 L 1006.85 707 C 1008.2 707 1009.5 707.53 1010.46 708.46 C 1011.41 709.4 1011.95 710.67 1011.95 712' +\n        ' L 1011.95 762C 1012 764.41 1010.28 766.52 1007.87 767 L 917.1 767 C 915.75 767 914.45 766.47 913.49 765.54' +\n        ' C 912.54 764.6 912 763.33 912 762 L 912 732 Z',\n    // LoopLimit,\n    'LoopLimit': 'M 8 9 L 27 9 L 33 15 L 33 26 C 33 27 33 27 32 27 L 4 27 C 3 27 2 27 2 26 L 2 15 L 8 9 Z',\n    // StoredData\n    'StoredData': 'M 5.55 0L 50 0A 1.5,30 0 0,1 50,0A 5.555,25 0 0,0 50,50A 1.5,30 0 0,1 50,50L 5.555 50A 5.55,25 0 0,1 5.555,0Z',\n};\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\nimport { Tooltip } from '@syncfusion/ej2-popups';\n/**\n * Defines the tooltip that should be shown when the mouse hovers over node.\n * An object that defines the description, appearance and alignments of tooltip\n */\nvar DiagramTooltip = /** @class */ (function (_super) {\n    __extends(DiagramTooltip, _super);\n    function DiagramTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DiagramTooltip.prototype, \"content\", void 0);\n    __decorate([\n        Property('TopLeft')\n    ], DiagramTooltip.prototype, \"position\", void 0);\n    __decorate([\n        Property('Mouse')\n    ], DiagramTooltip.prototype, \"relativeMode\", void 0);\n    __decorate([\n        Property(true)\n    ], DiagramTooltip.prototype, \"showTipPointer\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"width\", void 0);\n    __decorate([\n        Property('auto')\n    ], DiagramTooltip.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], DiagramTooltip.prototype, \"animation\", void 0);\n    return DiagramTooltip;\n}(ChildProperty));\nexport { DiagramTooltip };\n/**\n * @private\n * defines the Tooltip.\n * @param diagram\n */\nexport function initTooltip(diagram) {\n    var tooltipOption = new Tooltip;\n    tooltipOption = updateTooltipContent(diagram.tooltip, tooltipOption);\n    var tooltip = new Tooltip(tooltipOption);\n    tooltip.beforeCollision = beforeCollision;\n    tooltip.beforeOpen = beforeOpen;\n    tooltip.cssClass = 'e-diagram-tooltip';\n    tooltip.opensOn = 'custom';\n    tooltip.appendTo('#' + diagram.element.id);\n    tooltip.close();\n    return tooltip;\n}\nfunction beforeOpen(args) {\n    if ((this.content === '' || this.content === undefined)) {\n        args.element.style.display = 'none';\n    }\n}\nfunction beforeCollision(args) {\n    if ((args.collidedPosition && args.collidedPosition !== this.position)) {\n        args.element.style.display = 'none';\n    }\n}\n/**\n * @private\n * updates the contents of the tooltip.\n * @param diagram\n * @param node\n */\nexport function updateTooltip(diagram, node) {\n    var tooltip;\n    var tooltipObject = diagram.tooltipObject;\n    tooltip = node ? node.tooltip : diagram.tooltip;\n    updateTooltipContent(tooltip, tooltipObject);\n    return tooltipObject;\n}\nfunction updateTooltipContent(tooltip, tooltipObject) {\n    if (tooltip.content) {\n        tooltipObject.content = tooltip.content;\n        tooltipObject.position = tooltip.position;\n        tooltipObject.showTipPointer = tooltip.showTipPointer;\n        tooltipObject.width = tooltip.width;\n        tooltipObject.height = tooltip.height;\n        if (!tooltip.animation) {\n            tooltipObject.animation = { close: { effect: 'None' } };\n        }\n        else {\n            tooltipObject.animation = tooltip.animation;\n        }\n    }\n    else {\n        tooltipObject.close();\n    }\n    return tooltipObject;\n}\n","import { Point } from './../primitives/point';\nimport { Rect } from './../primitives/rect';\nimport { getPoints, intersect3 } from './diagram-util';\nimport { NoOfSegments } from '../enum/enum';\nimport { StraightSegment, BezierSegment, OrthogonalSegment } from './../objects/connector';\nimport { PathElement } from './../core/elements/path-element';\nimport { cornersPointsBeforeRotation, rotatePoint } from './base-util';\n/**\n * Connector modules are used to dock and update the connectors\n */\n/** @private */\nexport function findConnectorPoints(element, layoutOrientation) {\n    var intermeditatePoints;\n    var sourcePoint;\n    if (element.type === 'Straight' || !element.sourceWrapper) {\n        sourcePoint = getSourcePoint(element);\n    }\n    else {\n        sourcePoint = element.sourceWrapper.corners.center;\n    }\n    intermeditatePoints = terminateConnection(element, sourcePoint, element.targetPoint, layoutOrientation);\n    setLineEndPoint(element, intermeditatePoints[0], false);\n    setLineEndPoint(element, intermeditatePoints[intermeditatePoints.length - 1], true);\n    return intermeditatePoints;\n}\nfunction getSourcePoint(element) {\n    var srcPoint;\n    if (element.sourcePortWrapper) {\n        var srcPort = element.sourcePortWrapper;\n        var srcNode = element.sourceWrapper;\n        var pt = { x: srcPort.offsetX, y: srcPort.offsetY };\n        var direction = getPortDirection(pt, cornersPointsBeforeRotation(srcNode), srcNode.bounds, false);\n        srcPoint = pt;\n    }\n    else if (element.sourceID && element.sourceWrapper) {\n        if (element.targetWrapper) {\n            var sPoint = element.sourceWrapper.corners.center;\n            var tPoint = element.targetWrapper.corners.center;\n            srcPoint = getIntersection(element, element.sourceWrapper, sPoint, tPoint, false);\n        }\n        else {\n            srcPoint = element.sourcePoint;\n        }\n    }\n    else {\n        srcPoint = element.sourcePoint;\n    }\n    return srcPoint;\n}\nfunction getDirection(source, target, layoutOrientation) {\n    if (layoutOrientation === 'LeftToRight') {\n        source.direction = source.direction ? source.direction : 'Right';\n        target.direction = target.direction ? target.direction : 'Left';\n    }\n    else if (layoutOrientation === 'RightToLeft') {\n        source.direction = source.direction ? source.direction : 'Left';\n        target.direction = target.direction ? target.direction : 'Right';\n    }\n    else if (layoutOrientation === 'TopToBottom') {\n        source.direction = source.direction ? source.direction : 'Bottom';\n        target.direction = target.direction ? target.direction : 'Top';\n    }\n    else if (layoutOrientation === 'BottomToTop') {\n        source.direction = source.direction ? source.direction : 'Top';\n        target.direction = target.direction ? target.direction : 'Bottom';\n    }\n}\nfunction terminateConnection(element, srcPoint, tarPoint, layoutOrientation) {\n    var sourceNode = element.sourceWrapper;\n    var targetNode = element.targetWrapper;\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var srcCorner;\n    var tarCorner;\n    var intermeditatePoints = [];\n    var segPoint;\n    var srcDir;\n    var tarDir;\n    var minSpace = 13;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCorner, point: srcPoint, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCorner, point: tarPoint, direction: tarDir, margin: targetMargin };\n    var sourceCorners;\n    var targetCorners;\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        sourceCorners = cornersPointsBeforeRotation(sourceNode);\n        targetCorners = cornersPointsBeforeRotation(targetNode);\n        source.corners = sourceNode.corners;\n        target.corners = targetNode.corners;\n    }\n    if (sourcePort !== undefined) {\n        var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n        source.direction = getPortDirection(port, sourceCorners, sourceNode.bounds, false);\n    }\n    if (targetPort !== undefined) {\n        var tarPortPt = { x: targetPort.offsetX, y: targetPort.offsetY };\n        target.direction = getPortDirection(tarPortPt, targetCorners, targetNode.bounds, false);\n    }\n    if (sourceNode !== undefined && targetNode !== undefined) {\n        if (source.direction === undefined || target.direction === undefined) {\n            if (layoutOrientation) {\n                getDirection(source, target, layoutOrientation);\n            }\n            else {\n                if (source.corners.top > target.corners.bottom &&\n                    Math.abs(source.corners.top - target.corners.bottom) >\n                        (source.margin.top + source.margin.bottom)) {\n                    source.direction = source.direction ? source.direction : 'Top';\n                    target.direction = target.direction ? target.direction : 'Bottom';\n                }\n                else if (source.corners.bottom < target.corners.top &&\n                    Math.abs(source.corners.bottom - target.corners.top) >\n                        (source.margin.bottom + source.margin.top)) {\n                    source.direction = source.direction ? source.direction : 'Bottom';\n                    target.direction = target.direction ? target.direction : 'Top';\n                }\n                else if ((source.corners.right < target.corners.left &&\n                    Math.abs(source.corners.right - target.corners.left) >\n                        (source.margin.right + source.margin.left)) ||\n                    ((source.corners.right + minSpace < target.corners.left) ||\n                        (target.corners.right >= source.corners.left - minSpace && source.corners.left > target.corners.left))) {\n                    source.direction = source.direction ? source.direction : 'Right';\n                    target.direction = target.direction ? target.direction : 'Left';\n                }\n                else if ((source.corners.left > target.corners.right &&\n                    Math.abs(source.corners.left - target.corners.right) > (source.margin.left + source.margin.right)) ||\n                    ((target.corners.right + minSpace < source.corners.left ||\n                        (source.corners.right >= target.corners.left - minSpace\n                            && source.corners.left < target.corners.left)))) {\n                    source.direction = source.direction ? source.direction : 'Left';\n                    target.direction = target.direction ? target.direction : 'Right';\n                }\n                else {\n                    if (sourceNode.id !== targetNode.id && (!sourceCorners.equals(sourceCorners, targetCorners)) &&\n                        targetCorners.containsPoint(sourceCorners.topCenter, source.margin.top)) {\n                        source.direction = source.direction ? source.direction : 'Bottom';\n                        target.direction = target.direction ? target.direction : 'Top';\n                    }\n                    else {\n                        source.direction = source.direction ? source.direction : 'Top';\n                        target.direction = target.direction ? target.direction : 'Bottom';\n                    }\n                }\n            }\n        }\n        return defaultOrthoConnection(element, source.direction, target.direction, source.point, target.point);\n    }\n    //It will be called only when there is only one end node\n    checkLastSegmentasTerminal(element);\n    if (element.sourceWrapper || element.targetWrapper) {\n        connectToOneEnd(element, source, target);\n    }\n    if (element.type === 'Straight' || element.type === 'Bezier') {\n        intermeditatePoints = intermeditatePointsForStraight(element, source, target);\n    }\n    else {\n        if (element.type === 'Orthogonal' && element.segments && element.segments.length > 0 &&\n            element.segments[0].length !== null &&\n            element.segments[0].direction !== null) {\n            intermeditatePoints = findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort);\n        }\n        else {\n            var extra = void 0;\n            if (!source.direction) {\n                source.direction = (target.direction) ? ((element.targetPortWrapper !== undefined) ? target.direction : getOppositeDirection(target.direction)) :\n                    Point.direction(source.point, target.point);\n            }\n            else {\n                extra = adjustSegmentLength(sourceNode.bounds, source, 20);\n            }\n            element.segments[0].points = intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n        }\n    }\n    return intermeditatePoints;\n}\nfunction updateSegmentPoints(source, segment) {\n    var segPoint;\n    var angle;\n    var extra;\n    source.direction = segment.direction;\n    segment.points = [];\n    segment.points.push(source.point);\n    extra = (segment.direction === 'Left' || segment.direction === 'Top') ? -(segment.length) : segment.length;\n    angle = (segment.direction === 'Left' || segment.direction === 'Right') ? 0 : 90;\n    segPoint = addLineSegment(source.point, extra, angle);\n    segment.points.push(segPoint);\n    return segPoint;\n}\nfunction pointToPoint(element, source, target) {\n    var point;\n    var direction;\n    var portdirection;\n    source.corners = (element.sourceWrapper) ? element.sourceWrapper.corners : undefined;\n    if (element.sourcePortWrapper) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n        if (source.corners && (source.direction === 'Bottom' || source.direction === 'Top')) {\n            if (target.point.x > source.corners.left && target.point.x < source.corners.right) {\n                direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else if (source.corners && (source.direction === 'Left' || source.direction === 'Right')) {\n            if (target.point.y > source.corners.top && target.point.y < source.corners.bottom) {\n                direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n    }\n    if (element.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_1;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.center.y) &&\n            (target.point.y >= source.corners.top && target.point.y <= source.corners.center.y)) {\n            source.direction = 'Top';\n            length_1 = source.point.y - source.corners.top + 20;\n        }\n        else if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y > source.corners.center.y\n            && source.point.y <= source.corners.bottom) &&\n            (target.point.y > source.corners.center.y && target.point.y <= source.corners.bottom)) {\n            source.direction = 'Bottom';\n            length_1 = source.corners.bottom - source.point.y + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.center.x) &&\n            (target.point.x >= source.corners.left && target.point.x <= source.corners.center.x)) {\n            source.direction = 'Left';\n            length_1 = source.point.x - source.corners.left + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x <= source.corners.right\n            && source.point.x > source.corners.center.x) &&\n            (target.point.x <= source.corners.right && target.point.x < source.corners.center.x)) {\n            source.direction = 'Right';\n            length_1 = source.corners.right - source.point.x + 20;\n        }\n        if (source.direction && length_1) {\n            point = orthoConnection3Segment(element, source, target, length_1, true);\n        }\n    }\n    else {\n        source.direction = (direction) ? direction : findSourceDirection(source.direction, source.point, target.point);\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction pointToNode(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    findDirection(element.targetWrapper, source, target, element);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (source.direction === target.direction && (source.direction === 'Left' || source.direction === 'Right')) {\n        source.direction = direction;\n        point = orthoConnection3Segment(element, source, target, element.targetWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        findDirection(element.targetWrapper, source, target, element);\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction addPoints(element, source, target) {\n    var refPoint;\n    target.corners = element.targetWrapper.corners;\n    var direction;\n    var length;\n    if (source.direction !== 'Left' && source.direction !== 'Right') {\n        if (target.corners.center.y === source.point.y &&\n            (!(target.corners.left <= source.point.x && source.point.x <= target.corners.right))) {\n            direction = 'Top';\n            length = target.corners.height / 2 + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Bottom') ||\n            (target.corners.center.y > source.point.y && source.point.y >= target.corners.top)) {\n            direction = 'Top';\n            length = (source.point.y - target.corners.top) + 20;\n        }\n        else if ((target.corners.center.y === source.point.y &&\n            element.segments[element.segments.length - 2].direction === 'Top') ||\n            (target.corners.center.y < source.point.y && source.point.y <= target.corners.bottom)) {\n            direction = 'Bottom';\n            length = (target.corners.bottom - source.point.y) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.top <= source.point.y && source.point.y <= source.corners.bottom) {\n            direction = source.direction;\n            length = (source.point.y > target.point.y) ? (source.point.y - source.corners.top + 20) :\n                (source.corners.bottom - source.point.y + 20);\n        }\n    }\n    else {\n        if (target.corners.center.x === source.point.x &&\n            (!(target.corners.top < source.point.y && source.point.y <= target.corners.bottom))) {\n            direction = 'Left';\n            length = target.corners.width / 2 + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Right')\n            || (target.corners.center.x > source.point.x && source.point.x >= target.corners.left)) {\n            direction = 'Left';\n            length = (source.point.x - target.corners.left) + 20;\n        }\n        else if ((target.corners.center.x === source.point.x &&\n            element.segments[element.segments.length - 2].direction === 'Left') ||\n            (target.corners.center.x <= source.point.x && source.point.x <= target.corners.right)) {\n            direction = 'Right';\n            length = (target.corners.right - source.point.x) + 20;\n        }\n        else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            source.corners.left <= source.point.x && source.point.x <= source.corners.right) {\n            direction = source.direction;\n            length = (source.point.x > target.point.x) ? (source.point.x - source.corners.left + 20) :\n                (source.corners.right - source.point.x + 20);\n        }\n    }\n    var extra = (direction === 'Left' || direction === 'Top') ? -(length) : length;\n    var angle = (direction === 'Left' || direction === 'Right') ? 0 : 90;\n    refPoint = source.point;\n    source.point = addLineSegment(source.point, extra, angle);\n    source.direction = Point.direction(source.point, target.point);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        (source.corners.center.x === target.corners.center.x || source.corners.center.y === target.corners.center.y)) {\n        source.direction = target.direction;\n    }\n    var point = orthoConnection3Segment(element, source, target);\n    point.splice(0, 0, refPoint);\n    return point;\n}\nfunction findSegmentDirection(element, source, target, portDir) {\n    var update = false;\n    switch (target.direction) {\n        case 'Left':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Right' &&\n                source.point.x > target.point.x && source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)\n                || (((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) &&\n                    source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (portDir === 'Right') ? ((source.point.y > target.point.y) ? 'Top' : 'Bottom') :\n                    (source.point.x < target.point.x ? 'Right' : 'Left');\n                update = true;\n            }\n            else if (source.point.x > target.point.x && (source.point.y > target.point.y || source.point.y < target.point.y)\n                && (!(target.corners.top > source.point.y && target.corners.bottom < source.point.y))) {\n                source.direction = 'Left';\n            }\n            else if ((source.point.x < target.point.x && source.point.y > target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y <= target.point.y)\n                    && ((target.corners.top < source.point.y && target.corners.center.y >= source.point.y)))) {\n                source.direction = 'Top';\n            }\n            else if ((source.point.x < target.point.x && source.point.y < target.point.y) ||\n                (source.point.x > target.point.x && (source.point.y > target.point.y)\n                    && ((target.corners.bottom < source.point.y && target.corners.center.y > source.point.y)))) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y === target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Right':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                ((portDir === 'Bottom' && source.point.y > target.point.y) ||\n                    (portDir === 'Top' && source.point.y < target.point.y)) && source.point.x > target.point.x &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right)) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                update = true;\n            }\n            else if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n                portDir === 'Left' && source.point.x < target.point.x && (source.point.y >= source.corners.top &&\n                source.point.y <= source.corners.bottom)) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                update = true;\n            }\n            else if (source.point.x < target.point.x && target.corners.top <= source.point.y\n                && target.corners.bottom >= source.point.y && source.point.y === target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.x < target.point.x && (source.point.y > target.point.y ||\n                source.point.y < target.point.y)) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y === target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            break;\n        case 'Top':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && (portDir === 'Bottom' &&\n                source.point.y > target.point.y && source.point.x >= source.corners.left &&\n                source.point.x <= source.corners.right) || (((portDir === 'Right' && source.point.x > target.point.x) ||\n                (portDir === 'Left' && target.point.y > source.point.y && target.point.x > source.point.x)) &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom))) {\n                source.direction = (portDir === 'Bottom') ? ((source.point.x > target.point.x) ? 'Left' : 'Right') :\n                    (source.point.y < target.point.y) ? 'Bottom' : 'Top';\n                update = true;\n            }\n            else if (source.point.x === target.point.x && source.point.y < target.point.y) {\n                source.direction = 'Bottom';\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.corners.left &&\n                source.point.x < target.corners.right) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y >= target.point.y) {\n                source.direction = 'Top';\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y < target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            break;\n        case 'Bottom':\n            if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined && ((((portDir === 'Right') ||\n                (portDir === 'Left' && target.point.x > source.point.x)) && (source.point.y > target.point.y) &&\n                source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) ||\n                (((portDir === 'Top' && source.point.y < target.point.y)) &&\n                    (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n                if (portDir === 'Right' || portDir === 'Left') {\n                    source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n                }\n                else {\n                    source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n                }\n                update = true;\n            }\n            else if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                target.corners.right > source.point.x) {\n                if (source.point.y < target.point.y && source.point.x > target.corners.left &&\n                    target.corners.center.x >= source.point.x) {\n                    source.direction = 'Left';\n                }\n                else if (source.point.y < target.point.y && source.point.x < target.corners.right &&\n                    target.corners.center.x < source.point.x) {\n                    source.direction = 'Right';\n                }\n            }\n            else if (source.point.y > target.point.y && source.point.x > target.point.x) {\n                source.direction = 'Left';\n            }\n            else if (source.point.y > target.point.y && source.point.x < target.point.x) {\n                source.direction = 'Right';\n            }\n            else if (source.point.y <= target.point.y && (source.point.x > target.point.x || target.point.x > source.point.x)) {\n                source.direction = 'Bottom';\n            }\n            break;\n    }\n    return update;\n}\nfunction pointToPort(element, source, target) {\n    var point;\n    target.corners = element.targetWrapper.corners;\n    var portdirection;\n    var length;\n    if (element.sourcePortWrapper !== undefined) {\n        var port = { x: element.sourcePortWrapper.offsetX, y: element.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(element.sourceWrapper), element.sourceWrapper.bounds, false);\n    }\n    var update = findSegmentDirection(element, source, target, portdirection);\n    if (element.sourcePortWrapper !== undefined && element.targetPortWrapper !== undefined &&\n        target.direction === getOppositeDirection(portdirection) &&\n        ((((target.direction === 'Left' && source.point.x > target.point.x) || (target.direction === 'Right' &&\n            source.point.x < target.point.x)) && source.point.y >= source.corners.top &&\n            source.point.y <= source.corners.bottom) || (target.direction === 'Bottom' && source.point.y < target.point.y &&\n            (source.point.x >= source.corners.left && source.point.x <= source.corners.right)))) {\n        point = addPoints(element, source, target);\n    }\n    else if (source.direction === target.direction) {\n        point = orthoConnection3Segment(element, source, target);\n    }\n    else if ((((target.direction === 'Left' && source.point.x > target.point.x) ||\n        (target.direction === 'Right' && source.point.x < target.point.x)) && (source.direction === 'Top' || source.direction === 'Bottom')\n        && ((source.point.y <= target.point.y) &&\n            ((target.corners.top <= source.point.y && target.corners.bottom >= source.point.y)))) ||\n        ((target.direction === 'Top' && source.point.y > target.point.y) ||\n            (target.direction === 'Bottom' && source.point.y < target.point.y) &&\n                ((target.corners.left <= source.point.x && target.corners.right >= source.point.x)))) {\n        point = addPoints(element, source, target);\n    }\n    else {\n        if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Left' || source.direction === 'Right') &&\n                (source.point.y >= source.corners.top && source.point.y <= source.corners.bottom)\n                && (target.direction === 'Top' || target.direction === 'Bottom') &&\n                (target.corners.center.x === source.corners.center.x))) {\n            source.direction = (target.direction === 'Top') ? 'Bottom' : 'Top';\n            length = (target.direction === 'Top') ? (source.corners.bottom - source.point.y + 20) :\n                (source.point.y - source.corners.top + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (element.sourceWrapper !== undefined && element.targetWrapper !== undefined && element.targetPortWrapper !== undefined &&\n            ((source.direction === 'Top' || source.direction === 'Bottom') &&\n                (source.point.x >= source.corners.left && source.point.x <= source.corners.right) &&\n                (target.direction === 'Left' || target.direction === 'Right') && (target.corners.center.y === source.corners.center.y))) {\n            source.direction = (target.direction === 'Left') ? 'Right' : 'Left';\n            length = (target.direction === 'Left') ? (source.corners.right - source.point.x + 20) :\n                (source.point.x - source.corners.left + 20);\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else if (update) {\n            if (source.direction === 'Left' || source.direction === 'Right') {\n                length = (source.direction === 'Left') ? (source.point.x - source.corners.left + 20) :\n                    (source.corners.right - source.point.x + 20);\n            }\n            else {\n                length = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n                    (source.corners.bottom - source.point.y + 20);\n            }\n            point = orthoConnection3Segment(element, source, target, length);\n        }\n        else {\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    return point;\n}\nfunction findPointToPointOrtho(element, source, target, sourceNode, targetNode, sourcePort, targetPort) {\n    var j;\n    var point;\n    var intermeditatePoints = [];\n    var direction;\n    var port;\n    var seg;\n    checkLastSegmentasTerminal(element);\n    var removeSegment;\n    if (element.segments.length > 0) {\n        for (var i = 0; i < element.segments.length; i++) {\n            var seg_1 = element.segments[i];\n            if (i === 0 && element.sourcePortWrapper !== undefined) {\n                port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n                direction = getPortDirection(port, cornersPointsBeforeRotation(sourceNode), sourceNode.bounds, false);\n                if (seg_1.direction === getOppositeDirection(direction)) {\n                    seg_1.direction = direction;\n                }\n            }\n            if (i > 0 && element.segments[i - 1].direction === seg_1.direction) {\n                i = checkConsectiveSegmentAsSame(element, i, source);\n            }\n            else {\n                var lastSegment = element.segments[i - 1];\n                source.point = (seg_1.direction) ? updateSegmentPoints(source, seg_1) :\n                    lastSegment.points[lastSegment.points.length - 1];\n            }\n            if (i === element.segments.length - 1) {\n                if (!targetPort && !targetNode) {\n                    point = pointToPoint(element, source, target);\n                }\n                else if (element.targetWrapper && element.targetPortWrapper === undefined) {\n                    checkSourcePointInTarget(element, source);\n                    point = pointToNode(element, source, target);\n                }\n                else {\n                    point = pointToPort(element, source, target);\n                }\n                checkPreviousSegment(point, element, source);\n                seg_1.points = [];\n                if (point.length >= 2) {\n                    for (j = 0; j < point.length; j++) {\n                        seg_1.points.push(point[j]);\n                    }\n                }\n                else {\n                    removeSegment = i;\n                }\n            }\n            if (sourcePort && i === 0) {\n                var sourcePoint = checkPortdirection(element, sourcePort, sourceNode);\n                if (sourcePoint) {\n                    source.point = sourcePoint;\n                }\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === element.segments.length - 1) {\n                element.segments[removeSegment - 1].direction = null;\n                element.segments[removeSegment - 1].length = null;\n            }\n            element.segments.splice(removeSegment, 1);\n        }\n        intermeditatePoints = returnIntermeditatePoints(element, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction checkPortdirection(element, sourcePort, sourceNode) {\n    var port = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n    var point;\n    var bounds = cornersPointsBeforeRotation(sourceNode);\n    var direction = getPortDirection(port, bounds, sourceNode.bounds, false);\n    var seg = element.segments[0];\n    if (seg.direction !== direction) {\n        pointsFromNodeToPoint(seg, direction, bounds, seg.points[0], seg.points[seg.points.length - 1], false);\n        point = seg.points[seg.points.length - 1];\n        seg.direction = Point.direction(seg.points[seg.points.length - 2], seg.points[seg.points.length - 1]);\n    }\n    return point;\n}\nfunction checkPreviousSegment(tPoints, connector, source) {\n    var actualSegment = connector.segments[connector.segments.length - 2];\n    var actualLastPoint = actualSegment.points[actualSegment.points.length - 1];\n    var direction;\n    if (((actualSegment.direction === 'Top' || actualSegment.direction === 'Bottom') && (actualLastPoint.x === tPoints[1].x)) ||\n        ((actualSegment.direction === 'Left' || actualSegment.direction === 'Right') && (actualLastPoint.y === tPoints[1].y))) {\n        actualSegment.points[actualSegment.points.length - 1] = tPoints[1];\n        direction = Point.direction(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        if (connector.sourceWrapper !== undefined && connector.sourcePortWrapper === undefined &&\n            direction === getOppositeDirection(actualSegment.direction)) {\n            if (actualSegment.direction === 'Left' || actualSegment.direction === 'Right') {\n                actualSegment.points[0].x = (actualSegment.direction === 'Right') ?\n                    actualSegment.points[0].x - connector.sourceWrapper.corners.width :\n                    actualSegment.points[0].x + connector.sourceWrapper.corners.width;\n            }\n            else {\n                actualSegment.points[0].y = (actualSegment.direction === 'Bottom') ?\n                    actualSegment.points[0].y - connector.sourceWrapper.corners.height :\n                    actualSegment.points[0].y + connector.sourceWrapper.corners.height;\n            }\n        }\n        actualSegment.direction = direction;\n        actualSegment.length = Point.distancePoints(actualSegment.points[0], actualSegment.points[actualSegment.points.length - 1]);\n        tPoints.splice(0, 1);\n    }\n}\nfunction connectToOneEnd(element, source, target) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var node = element.sourceWrapper;\n    var fixedPoint = source.point;\n    var nodeMargin = { left: 0, right: 0, top: 0, bottom: 0 };\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var refPoint;\n    var nodeDirection = 'Top';\n    if (!node) {\n        node = element.targetWrapper;\n        nodeMargin = target.margin;\n    }\n    else {\n        fixedPoint = target.point;\n        nodeMargin = source.margin;\n    }\n    if (element.type === 'Orthogonal') {\n        if ((element.segments && element.segments.length > 0) && element.sourceWrapper &&\n            element.segments[0].direction) {\n            source.direction = element.segments[0].direction;\n            nodeConnectingPoint = findPoint(node.corners, source.direction);\n            refPoint = findPoint(node.corners, getOppositeDirection(source.direction));\n            nodeConnectingPoint = getIntersection(element, node, nodeConnectingPoint, refPoint, false);\n        }\n        else {\n            var source_1 = { corners: null, direction: null, point: fixedPoint, margin: nodeMargin };\n            var target_1 = { corners: null, direction: null, point: null, margin: null };\n            findDirection(node, source_1, target_1, element);\n            nodeConnectingPoint = target_1.point;\n            nodeDirection = target_1.direction;\n        }\n    }\n    else {\n        var segmentPoint = void 0;\n        if (element.segments && element.segments.length > 1) {\n            if (node === element.sourceWrapper) {\n                segmentPoint = element.segments[0].point;\n            }\n            else {\n                segmentPoint = element.segments[element.segments.length - 2].point;\n            }\n        }\n        nodeConnectingPoint = getIntersection(element, node, node.bounds.center, (element.segments && element.segments.length > 1) ? segmentPoint : fixedPoint, node === element.targetWrapper);\n    }\n    if (node === element.sourceWrapper) {\n        source.direction = source.direction || nodeDirection;\n        source.point = nodeConnectingPoint;\n        if (element.sourcePortWrapper) {\n            source.point = { x: sourcePort.offsetX, y: sourcePort.offsetY };\n            if (element.sourcePadding) {\n                source.point = addPaddingToConnector(element, source, target, false);\n            }\n        }\n    }\n    else {\n        target.direction = target.direction || nodeDirection;\n        target.point = nodeConnectingPoint;\n        if (element.targetPortWrapper) {\n            target.point = { x: targetPort.offsetX, y: targetPort.offsetY };\n            if (element.targetPadding) {\n                target.point = addPaddingToConnector(element, source, target, true);\n            }\n        }\n    }\n}\nfunction addPaddingToConnector(element, source, target, isTarget) {\n    var sourcePort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var padding = (isTarget) ? element.targetPadding : element.sourcePadding;\n    var paddingPort = (isTarget) ? targetPort : sourcePort;\n    var rect = new Rect(paddingPort.bounds.x - padding, paddingPort.bounds.y - padding, paddingPort.actualSize.width + 2 * padding, paddingPort.actualSize.height + 2 * padding);\n    var segmentPoints = [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft];\n    segmentPoints[segmentPoints.length] = segmentPoints[0];\n    var length = segmentPoints.length;\n    var thisSegment = { x1: source.point.x, y1: source.point.y, x2: target.point.x, y2: target.point.y };\n    var point = (isTarget) ? target.point : source.point;\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || point;\n}\nfunction checkSourceAndTargetIntersect(sourceWrapper, targetWrapper, connector) {\n    var sourceSegment = createSegmentsCollection(sourceWrapper, connector.sourcePadding);\n    var targetSegment = createSegmentsCollection(targetWrapper, connector.targetPadding);\n    for (var i = 0; i < sourceSegment.length - 1; i++) {\n        var srcSegment = sourceSegment[i];\n        for (var j = 0; j < targetSegment.length - 1; j++) {\n            var tarSegmet = targetSegment[j];\n            if (intersect3(srcSegment, tarSegmet).enabled) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createSegmentsCollection(sourceWrapper, padding) {\n    var segments = [];\n    var points = getPoints(sourceWrapper, sourceWrapper.corners, padding);\n    points.push(points[0]);\n    for (var i = 0; i < points.length - 1; i++) {\n        segments.push(createLineSegment(points[i], points[i + 1]));\n    }\n    return segments;\n}\nfunction createLineSegment(sPt, tPt) {\n    var line = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return line;\n}\n/** @private */\nexport function swapBounds(object, bounds, outerBounds) {\n    var rectBounds;\n    var rotateAngle = object.rotateAngle + object.parentTransform;\n    if (rotateAngle) {\n        if (rotateAngle < 45) {\n            return bounds;\n        }\n        else if (rotateAngle <= 135) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.middleLeft, topRight: bounds.topLeft,\n                middleLeft: bounds.bottomCenter, center: outerBounds.center, middleRight: bounds.topCenter,\n                bottomLeft: bounds.bottomRight, bottomCenter: bounds.middleRight, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 225) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.bottomLeft, topCenter: bounds.bottomCenter, topRight: bounds.bottomRight,\n                middleLeft: bounds.middleRight, center: outerBounds.center, middleRight: bounds.middleLeft,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.topCenter, bottomRight: bounds.topRight,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top,\n                bottom: outerBounds.bottom\n            };\n        }\n        else if (rotateAngle <= 315) {\n            rectBounds = {\n                width: bounds.width, height: bounds.height,\n                topLeft: bounds.topRight, topCenter: bounds.middleRight, topRight: bounds.bottomRight,\n                middleLeft: bounds.topCenter, center: outerBounds.center, middleRight: bounds.bottomCenter,\n                bottomLeft: bounds.topLeft, bottomCenter: bounds.middleLeft, bottomRight: bounds.bottomLeft,\n                left: outerBounds.left, right: outerBounds.right, top: outerBounds.top, bottom: outerBounds.bottom\n            };\n        }\n        else {\n            return bounds;\n        }\n        return rectBounds;\n    }\n    return bounds;\n}\n/* tslint:disable */\nfunction defaultOrthoConnection(ele, srcDir, tarDir, sPt, tPt) {\n    var sourceEle = ele.sourceWrapper;\n    var targetEle = ele.targetWrapper;\n    var srcPort = ele.sourcePortWrapper;\n    var tarPort = ele.targetPortWrapper;\n    var intermeditatePoints = [];\n    var refPoint;\n    var seg;\n    var srcCor = sourceEle.corners;\n    var tarCor = targetEle.corners;\n    var point = tarCor.center;\n    var i;\n    var sourceMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var targetMargin = { left: 5, right: 5, bottom: 5, top: 5 };\n    var source = { corners: srcCor, point: sPt, direction: srcDir, margin: sourceMargin };\n    var target = { corners: tarCor, point: tPt, direction: tarDir, margin: targetMargin };\n    var srcBounds = swapBounds(sourceEle, srcCor, ele.sourceWrapper.bounds);\n    var tarBounds = swapBounds(targetEle, tarCor, ele.targetWrapper.bounds);\n    var isInterSect = false;\n    if (ele.sourceWrapper && ele.targetWrapper) {\n        isInterSect = checkSourceAndTargetIntersect(ele.sourceWrapper, ele.targetWrapper, ele);\n    }\n    if (srcPort !== undefined) {\n        source.point = { x: srcPort.offsetX, y: srcPort.offsetY };\n        switch (source.direction) {\n            case 'Bottom':\n            case 'Top':\n                source.point.y = source.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                source.point.x = source.point.x;\n                break;\n        }\n        if (ele.sourcePadding && !isInterSect) {\n            if (tarPort) {\n                target.point = {\n                    x: tarPort.offsetX,\n                    y: tarPort.offsetY\n                };\n            }\n            source.point = addPaddingToConnector(ele, source, target, false);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            if (ele.segments && ele.segments.length > 0 && ele.segments[0].direction) {\n                source.direction = ele.segments[0].direction;\n            }\n            source.point = findPoint(srcBounds, source.direction);\n            refPoint = findPoint(srcBounds, getOppositeDirection(source.direction));\n            source.point = getIntersection(ele, sourceEle, source.point, refPoint, false);\n        }\n        else {\n            source.point = sourceEle.corners.center;\n        }\n    }\n    if (tarPort !== undefined) {\n        target.point = {\n            x: tarPort.offsetX,\n            y: tarPort.offsetY\n        };\n        switch (target.direction) {\n            case 'Bottom':\n            case 'Top':\n                target.point.y = target.point.y;\n                break;\n            case 'Left':\n            case 'Right':\n                target.point.x = target.point.x;\n                break;\n        }\n        if (ele.targetPadding && !isInterSect) {\n            target.point = addPaddingToConnector(ele, source, target, true);\n        }\n    }\n    else {\n        if (ele.type === 'Orthogonal') {\n            target.point = findPoint(tarBounds, target.direction);\n            refPoint = findPoint(tarBounds, getOppositeDirection(target.direction));\n            target.point = getIntersection(ele, targetEle, target.point, refPoint, true);\n        }\n        else {\n            target.point = targetEle.corners.center;\n        }\n    }\n    if (ele.type !== 'Orthogonal') {\n        var segment = void 0;\n        var first = void 0;\n        checkLastSegmentasTerminal(ele);\n        if (ele.sourcePortWrapper === undefined) {\n            source.point = source.corners.center;\n            if (ele.segments && ele.segments.length > 0) {\n                first = ele.segments[0];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var tarPoint = (segment !== undefined) ? segment.point : target.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[0].vector1.angle && ele.segments[0].vector1.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                tarPoint = Point.transform(source.point, ele.segments[0].vector1.angle, value / 2);\n            }\n            source.point = isInterSect ? ele.sourceWrapper.bounds.center : getIntersection(ele, sourceEle, source.point, tarPoint, false);\n        }\n        if (ele.targetPortWrapper === undefined) {\n            target.point = target.corners.center;\n            if (ele.segments && ele.segments.length > 1) {\n                first = ele.segments[ele.segments.length - 2];\n                segment = (!Point.isEmptyPoint(first.point)) ? first : undefined;\n            }\n            var srcPoint = (segment) ? segment.point : source.point;\n            if (ele.type === 'Bezier' && ele.segments.length > 0 &&\n                ele.segments[ele.segments.length - 1].vector2.angle &&\n                ele.segments[ele.segments.length - 1].vector2.distance) {\n                var value = Math.max(source.corners.width, source.corners.height);\n                srcPoint = Point.transform(target.point, ele.segments[0].vector2.angle, value / 2);\n            }\n            target.point = isInterSect ? ele.targetWrapper.bounds.center : getIntersection(ele, targetEle, srcPoint, target.point, true);\n        }\n        intermeditatePoints = intermeditatePointsForStraight(ele, source, target);\n    }\n    else {\n        if (ele.type === 'Orthogonal' && (ele.segments && ele.segments.length > 0) &&\n            ele.segments[0].direction !== null) {\n            intermeditatePoints = findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle);\n        }\n        else {\n            if (!ele.segments[0]) {\n                var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n                ele.segments.push(segment);\n            }\n            ele.segments[0].points = intermeditatePoints = findOrthoSegments(ele, source, target);\n        }\n    }\n    return intermeditatePoints;\n}\n/* tslint:enable */\nfunction intermeditatePointsForStraight(element, source, target) {\n    var intermeditatePoints = [];\n    if (element.segments && element.segments.length > 0) {\n        var i = void 0;\n        var segPoint = [];\n        var srcPoint = source.point;\n        for (i = 0; i < element.segments.length; i++) {\n            var seg = element.segments[i];\n            segPoint = [];\n            segPoint.push(srcPoint);\n            if (i !== element.segments.length - 1) {\n                segPoint.push(seg.point);\n                srcPoint = seg.point;\n            }\n            else {\n                segPoint.push(target.point);\n            }\n            element.segments[i].points = segPoint;\n            if (element.segments.length > 1 && Point.equals(seg.points[0], seg.points[1])) {\n                (element.segments).splice(i, 1);\n            }\n            if (seg) {\n                for (var j = 0; j < seg.points.length; j++) {\n                    if (j > 0 || i === 0) {\n                        intermeditatePoints.push(seg.points[j]);\n                    }\n                }\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findSourceDirection(dir, srcPoint, tarPoint) {\n    var direction = (dir === 'Top' || dir === 'Bottom') ?\n        ((tarPoint.x > srcPoint.x) ? 'Right' : 'Left') :\n        ((tarPoint.y > srcPoint.y) ? 'Bottom' : 'Top');\n    return direction;\n}\nfunction checkLastSegmentasTerminal(ele) {\n    if (ele.type === 'Straight' || ele.type === 'Bezier') {\n        if ((ele.segments.length === 0 || (ele.segments.length > 0 &&\n            (!Point.isEmptyPoint(ele.segments[ele.segments.length - 1].point))))) {\n            var segment = void 0;\n            segment = (ele.type === 'Bezier') ? new BezierSegment(ele, 'segments', { type: 'Bezier' }, true) :\n                new StraightSegment(ele, 'segments', { type: 'Straight' }, true);\n            (ele.segments).push(segment);\n        }\n    }\n    else {\n        if (ele.segments.length === 0 || ele.segments[ele.segments.length - 1].direction) {\n            var segment = new OrthogonalSegment(ele, 'segments', { type: 'Orthogonal' }, true);\n            ele.segments.push(segment);\n        }\n    }\n}\nfunction checkConsectiveSegmentAsSame(ele, i, source) {\n    var seg = ele.segments[i];\n    var extra = (seg.direction === 'Left' || seg.direction === 'Top') ? -(seg.length) : seg.length;\n    var angle = (seg.direction === 'Left' || seg.direction === 'Right') ? 0 : 90;\n    var segPoint = addLineSegment(source.point, extra, angle);\n    ele.segments[i - 1].length += seg.length;\n    ele.segments[i - 1].points[1] = source.point = segPoint;\n    ele.segments.splice(i, 1);\n    i--;\n    return i;\n}\nfunction nodeOrPortToNode(ele, source, target) {\n    var point;\n    var portdirection;\n    if (ele.sourcePortWrapper) {\n        var port = { x: ele.sourcePortWrapper.offsetX, y: ele.sourcePortWrapper.offsetY };\n        portdirection = getPortDirection(port, cornersPointsBeforeRotation(ele.sourceWrapper), ele.sourceWrapper.bounds, false);\n    }\n    findDirection(ele.targetWrapper, source, target, ele);\n    var direction = findSourceDirection(target.direction, source.point, target.point);\n    if (ele.sourcePortWrapper !== undefined && source.direction === target.direction &&\n        ((source.direction === 'Top' || source.direction === 'Bottom') && (source.corners.center.x === target.corners.center.x)\n            || (source.direction === 'Left' || source.direction === 'Right') && (source.corners.center.y === target.corners.center.y))) {\n        source.direction = direction;\n        point = (direction === 'Top' || direction === 'Bottom') ?\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.height / 2 + 20) :\n            orthoConnection3Segment(ele, source, target, ele.sourceWrapper.width / 2 + 20);\n        var source1 = source;\n        source1.point = point[1];\n        if (direction === 'Left' || direction === 'Right') {\n            target.direction = direction;\n            target.point = (direction === 'Left') ? target.corners.middleLeft : target.corners.middleRight;\n        }\n        else {\n            findDirection(ele.targetWrapper, source, target, ele);\n        }\n        point = orthoConnection3Segment(ele, source, target);\n    }\n    else if (target.point.x >= source.corners.left && target.point.x <= source.corners.right &&\n        source.point.y >= source.corners.top && source.point.y <= source.corners.bottom) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var length_2 = (source.direction === 'Top') ? (source.point.y - source.corners.top + 20) :\n            (source.corners.bottom - source.point.y + 20);\n        point = orthoConnection3Segment(ele, source, target, length_2);\n    }\n    else if (ele.sourcePortWrapper && portdirection === getOppositeDirection(direction)) {\n        var length_3;\n        if ((portdirection === 'Left' || portdirection === 'Right') && (source.point.y >= source.corners.top\n            && source.point.y <= source.corners.bottom)) {\n            source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n            length_3 = source.corners.height / 2 + 20;\n        }\n        else if ((portdirection === 'Top' || portdirection === 'Bottom') && (source.point.x >= source.corners.left\n            && source.point.x <= source.corners.right)) {\n            source.direction = (target.point.x > source.point.x) ? 'Right' : 'Left';\n            length_3 = source.corners.width / 2 + 20;\n        }\n        if (source.direction && length_3) {\n            point = orthoConnection3Segment(ele, source, target, length_3, true);\n        }\n        else {\n            source.direction = direction;\n            point = orthoConnection2Segment(source, target);\n        }\n    }\n    else if (ele.sourcePortWrapper && portdirection === target.direction && (portdirection === 'Top' || portdirection === 'Bottom') &&\n        (source.corners.center.x === target.corners.center.x)) {\n        source.direction = (target.point.y > source.point.y) ? 'Bottom' : 'Top';\n        var len = (source.direction === 'Bottom') ? (source.corners.bottom - source.point.y + 20) :\n            (source.point.y - source.corners.top + 20);\n        point = orthoConnection3Segment(ele, source, target, len);\n    }\n    else {\n        source.direction = direction;\n        point = orthoConnection2Segment(source, target);\n    }\n    return point;\n}\nfunction checkSourcePointInTarget(ele, source) {\n    if (ele.targetWrapper !== undefined && ele.targetPortWrapper === undefined) {\n        if (cornersPointsBeforeRotation(ele.targetWrapper).containsPoint(source.point)) {\n            var target = ele.targetWrapper;\n            var segment = ele.segments[ele.segments.length - 2];\n            var lastPoint = segment.points[segment.points.length - 1];\n            var direction = getOppositeDirection(segment.direction);\n            if (direction === 'Bottom') {\n                if (lastPoint.y < target.corners.bottom) {\n                    segment.points[segment.points.length - 1].y = target.corners.bottom + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Top') {\n                if (lastPoint.y > target.corners.top) {\n                    segment.points[segment.points.length - 1].y = target.corners.top - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Left') {\n                if (lastPoint.x > target.corners.left) {\n                    segment.points[segment.points.length - 1].x = target.corners.left - 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            else if (direction === 'Right') {\n                if (lastPoint.x < target.corners.right) {\n                    segment.points[segment.points.length - 1].x = target.corners.right + 20;\n                    segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n                }\n            }\n            source.point = segment.points[segment.points.length - 1];\n        }\n    }\n}\nfunction findIntermeditatePoints(ele, source, target, srcPort, tarPort, sourceEle, targetEle) {\n    var point;\n    var intermeditatePoints = [];\n    var seg;\n    var j;\n    var removeSegment;\n    checkLastSegmentasTerminal(ele);\n    for (var i = 0; i < ele.segments.length; i++) {\n        seg = ele.segments[i];\n        if (srcPort && source.direction === getOppositeDirection(seg.direction)) {\n            seg.direction = source.direction;\n        }\n        if (i > 0 && ele.segments[i - 1].direction === seg.direction) {\n            i = checkConsectiveSegmentAsSame(ele, i, source);\n        }\n        else {\n            if (seg.direction) {\n                source.point = updateSegmentPoints(source, ele.segments[i]);\n            }\n            else {\n                var segment = ele.segments[i - 1];\n                source.point = segment.points[segment.points.length - 1];\n            }\n        }\n        if (i === ele.segments.length - 1) {\n            checkSourcePointInTarget(ele, source);\n            if (tarPort === undefined) {\n                point = nodeOrPortToNode(ele, source, target);\n            }\n            else {\n                point = pointToPort(ele, source, target);\n            }\n            checkPreviousSegment(point, ele, source);\n            seg.points = [];\n            if (point.length >= 2) {\n                for (j = 0; j < point.length; j++) {\n                    seg.points.push(point[j]);\n                }\n            }\n            else {\n                removeSegment = i;\n            }\n        }\n        if (removeSegment !== undefined) {\n            if (removeSegment === ele.segments.length - 1) {\n                ele.segments[removeSegment - 1].direction = null;\n                ele.segments[removeSegment - 1].length = null;\n            }\n            ele.segments.splice(removeSegment, 1);\n        }\n        if (srcPort && i === 0) {\n            var sourcePoint = checkPortdirection(ele, srcPort, sourceEle);\n            if (sourcePoint) {\n                source.point = sourcePoint;\n            }\n        }\n    }\n    return returnIntermeditatePoints(ele, intermeditatePoints);\n}\nfunction returnIntermeditatePoints(element, intermeditatePoints) {\n    for (var i = 0; i < element.segments.length; i++) {\n        var seg = element.segments[i];\n        for (var j = 0; j < seg.points.length; j++) {\n            if (j > 0 || i === 0) {\n                intermeditatePoints.push(seg.points[j]);\n            }\n        }\n    }\n    return intermeditatePoints;\n}\nfunction findDirection(node, source, target, ele) {\n    var nodeDirection;\n    var nodeConnectingPoint = { x: 0, y: 0 };\n    var nodeCorners = swapBounds(node, node.corners, node.bounds);\n    var nodeMargin = source.margin;\n    var fixedPoint = source.point;\n    if (nodeCorners.bottomCenter.y + nodeMargin.bottom < fixedPoint.y) {\n        nodeDirection = 'Bottom';\n        nodeConnectingPoint = nodeCorners.bottomCenter;\n    }\n    else if (nodeCorners.topCenter.y - nodeMargin.top > fixedPoint.y) {\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n    }\n    else if (nodeCorners.middleLeft.x - nodeMargin.left > fixedPoint.x) {\n        nodeDirection = 'Left';\n        nodeConnectingPoint = nodeCorners.middleLeft;\n    }\n    else if (nodeCorners.middleRight.x + nodeMargin.right < fixedPoint.x) {\n        nodeDirection = 'Right';\n        nodeConnectingPoint = nodeCorners.middleRight;\n    }\n    else {\n        var top_1 = Math.abs(fixedPoint.y - nodeCorners.topCenter.y);\n        var right = Math.abs(fixedPoint.x - nodeCorners.middleRight.x);\n        var bottom = Math.abs(fixedPoint.y - nodeCorners.bottomCenter.y);\n        var left = Math.abs(fixedPoint.x - nodeCorners.middleLeft.x);\n        var shortes = Number.MAX_VALUE;\n        shortes = top_1;\n        nodeDirection = 'Top';\n        nodeConnectingPoint = nodeCorners.topCenter;\n        if (shortes > right) {\n            shortes = right;\n            nodeDirection = 'Right';\n            nodeConnectingPoint = nodeCorners.middleRight;\n        }\n        if (shortes > bottom) {\n            shortes = bottom;\n            nodeDirection = 'Bottom';\n            nodeConnectingPoint = nodeCorners.bottomCenter;\n        }\n        if (shortes > left) {\n            //shortes = left;\n            nodeDirection = 'Left';\n            nodeConnectingPoint = nodeCorners.middleLeft;\n        }\n    }\n    target.point = nodeConnectingPoint;\n    target.direction = nodeDirection;\n    var refPoint = findPoint(nodeCorners, getOppositeDirection(target.direction));\n    target.point = getIntersection(ele, node, target.point, refPoint, node === ele.targetWrapper);\n}\nfunction findOrthoSegments(ele, source, target, extra) {\n    var swap = false;\n    var intermeditatePoints = [];\n    var seg;\n    swap = getSwapping(source.direction, target.direction);\n    if (swap) {\n        swapPoints(source, target);\n    }\n    if (source.direction === 'Right' && target.direction === 'Left') {\n        seg = getRightToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Right') {\n        seg = getRightToRightSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Top') {\n        seg = getRightToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Right' && target.direction === 'Bottom') {\n        seg = getRightToBottomSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Top') {\n        seg = getBottomToTopSegmentCount(source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Bottom') {\n        source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n        seg = getBottomToBottomSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Bottom' && target.direction === 'Left') {\n        seg = getBottomToLeftSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Left') {\n        seg = getLeftToLeftSegmentCount(ele, source, target);\n    }\n    else if (source.direction === 'Left' && target.direction === 'Top') {\n        seg = getLeftToTopSegmentCount(ele, source, target, swap);\n    }\n    else if (source.direction === 'Top' && target.direction === 'Top') {\n        seg = getTopToTopSegmentCount(ele, source, target);\n    }\n    if (swap) {\n        swapPoints(source, target);\n    }\n    intermeditatePoints = addOrthoSegments(ele, seg, source, target, extra);\n    return intermeditatePoints;\n}\n/** @private */\nexport function findAngle(s, e) {\n    var r = { x: e.x, y: s.y };\n    var sr = Point.findLength(s, r);\n    var re = Point.findLength(r, e);\n    var es = Point.findLength(e, s);\n    var ang = Math.asin(re / es);\n    ang = ang * 180 / Math.PI;\n    if (s.x < e.x) {\n        if (s.y > e.y) {\n            ang = 360 - ang;\n        }\n    }\n    else {\n        if (s.y < e.y) {\n            ang = 180 - ang;\n        }\n        else {\n            ang = 180 + ang;\n        }\n    }\n    return ang;\n}\n/** @private */\nexport function findPoint(cor, direction) {\n    var point;\n    switch (direction) {\n        case 'Left':\n            point = cor.middleLeft;\n            break;\n        case 'Top':\n            point = cor.topCenter;\n            break;\n        case 'Right':\n            point = cor.middleRight;\n            break;\n        case 'Bottom':\n            point = cor.bottomCenter;\n            break;\n    }\n    return point;\n}\nfunction pointsFromNodeToPoint(seg, direction, bounds, point, endPoint, isTarget) {\n    var minSpace = 13;\n    var x;\n    var points = [];\n    var y;\n    points.push(point);\n    var straight;\n    straight = (point.y === endPoint.y && (direction === 'Left' && endPoint.x < point.x ||\n        direction === 'Right' && endPoint.x > point.x)) ||\n        (point.x === endPoint.x && (direction === 'Top' && endPoint.y < point.y ||\n            direction === 'Bottom' && endPoint.y > point.y));\n    if (!straight) {\n        if (direction === 'Top' || direction === 'Bottom') {\n            if (direction === 'Top' && endPoint.y < point.y && endPoint.y > point.y - minSpace ||\n                direction === 'Bottom' && endPoint.y > point.y && endPoint.y < point.y + minSpace) {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: y });\n                points.push({ x: point.x + (endPoint.x - point.x) / 2, y: endPoint.y });\n            }\n            else if (Math.abs(point.x - endPoint.x) > minSpace &&\n                (direction === 'Top' && endPoint.y < point.y || direction === 'Bottom' && endPoint.y > point.y)) {\n                //twosegments\n                points.push({ x: point.x, y: endPoint.y });\n            }\n            else {\n                y = direction === 'Top' ? bounds.top - minSpace : bounds.bottom + minSpace;\n                x = (endPoint.x < point.x) ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: point.x, y: y });\n                points.push({ x: endPoint.x, y: y });\n            }\n        }\n        else {\n            if (direction === 'Left' && endPoint.x < point.x && endPoint.x > point.x - minSpace || direction === 'right' &&\n                endPoint.x > point.x && endPoint.x < point.x + minSpace) {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: point.y + (endPoint.y - point.y) / 2 });\n                points.push({ x: endPoint.x, y: point.y + (endPoint.y - point.y) / 2 });\n            }\n            else if (Math.abs(point.y - endPoint.y) > minSpace &&\n                (direction === 'Left' && endPoint.x < point.x || direction === 'Right' && endPoint.x > point.x)) {\n                points.push({ x: endPoint.x, y: point.y });\n                //twosegments\n            }\n            else {\n                x = direction === 'Left' ? bounds.left - minSpace : bounds.right + minSpace;\n                points.push({ x: x, y: point.y });\n                points.push({ x: x, y: endPoint.y });\n            }\n        }\n        if (isTarget) {\n            points.push(seg.points[0]);\n            points.reverse();\n        }\n        seg.points = points;\n    }\n}\nfunction addLineSegment(point, extra, angle) {\n    var segEnd = Point.transform(point, angle, extra);\n    return segEnd;\n}\n/** @private */\nexport function getIntersection(ele, bounds, sPt, tPt, isTar) {\n    sPt = { x: sPt.x, y: sPt.y };\n    tPt = { x: tPt.x, y: tPt.y };\n    var angle = Point.findAngle(tPt, sPt);\n    var child;\n    var intersection;\n    var wrapper = isTar ? ele.targetWrapper : ele.sourceWrapper;\n    var padding = (isTar ? ele.targetPadding : ele.sourcePadding);\n    var rect;\n    var segmentPoints;\n    var point = isTar || ele.type === 'Orthogonal' ? sPt : tPt;\n    var sourcePoint = Point.transform(sPt, angle, Math.max(wrapper.actualSize.height / 2, wrapper.actualSize.width / 2));\n    child = wrapper;\n    var sPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt);\n    var tPt1 = rotatePoint(-wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, tPt);\n    if (ele.type === 'Orthogonal') {\n        var constValue = 5;\n        if (sPt1.x === tPt1.x) {\n            if (sPt1.y < tPt1.y) {\n                sPt1.y -= constValue;\n            }\n            else {\n                sPt1.y += constValue;\n            }\n        }\n        if (sPt1.y === tPt1.y) {\n            if (sPt1.x < tPt1.x) {\n                sPt1.x -= constValue;\n            }\n            else {\n                sPt1.x += constValue;\n            }\n        }\n        sPt = rotatePoint(wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY, sPt1);\n    }\n    else {\n        var angle_1 = isTar ? Point.findAngle(sPt, tPt) : Point.findAngle(tPt, sPt);\n        if (isTar) {\n            var angle_2 = Point.findAngle(sPt, tPt);\n            tPt = Point.transform({ x: tPt.x, y: tPt.y }, angle_2, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n        else {\n            var angle_3 = Point.findAngle(tPt, sPt);\n            sPt = Point.transform({ x: sPt.x, y: sPt.y }, angle_3, Math.max(wrapper.actualSize.width, wrapper.actualSize.height));\n        }\n    }\n    if (wrapper instanceof PathElement && wrapper.data) {\n        segmentPoints = child.getPoints();\n        if (((child.data.split('m').length - 1) + (child.data.split('M').length - 1)) === 1) {\n            segmentPoints[segmentPoints.length] = segmentPoints[0];\n        }\n    }\n    else {\n        if ((ele.sourcePadding || ele.targetPadding)) {\n            rect = new Rect(wrapper.bounds.x - padding, wrapper.bounds.y - padding, wrapper.actualSize.width + 2 * padding, wrapper.actualSize.height + 2 * padding);\n        }\n        segmentPoints = rect ? [rect.topLeft, rect.topRight, rect.bottomRight, rect.bottomLeft] : getPoints(wrapper, wrapper.corners);\n        segmentPoints[segmentPoints.length] = segmentPoints[0];\n    }\n    var length = segmentPoints.length;\n    var thisSegment = { x1: sPt.x, y1: sPt.y, x2: tPt.x, y2: tPt.y };\n    return getIntersectionPoints(thisSegment, segmentPoints, true, point) || sPt;\n}\nfunction setLineEndPoint(element, point, isTarget) {\n    point.x = Math.round(point.x * 100) / 100;\n    point.y = Math.round(point.y * 100) / 100;\n    if (isTarget) {\n        element.targetPoint = point;\n    }\n    else {\n        element.sourcePoint = point;\n    }\n    return point;\n}\n/** @private */\nexport function getIntersectionPoints(thisSegment, pts, minimal, point) {\n    var length = pts.length;\n    var min;\n    var segment = {\n        x1: pts[0].x, y1: pts[0].y, x2: pts[1].x,\n        y2: pts[1].y\n    };\n    var intersection = intersectSegment(thisSegment, segment);\n    if (intersection) {\n        // if (!minimal) { return intersection; } //commented because minimal is always true\n        min = Point.distancePoints(intersection, point);\n    }\n    if (isNaN(min) || min > 0) {\n        for (var i = 1; i < length - 1; i++) {\n            segment = {\n                x1: pts[i].x, y1: pts[i].y,\n                x2: pts[i + 1].x, y2: pts[i + 1].y\n            };\n            var intersect = intersectSegment(thisSegment, segment);\n            if (intersect) {\n                // if (!minimal) { return intersect; }//commented because minimal is always true\n                var dist = Point.distancePoints(intersect, point);\n                if (isNaN(min) || min > dist) {\n                    min = dist;\n                    intersection = intersect;\n                }\n                if (min >= 0 && min <= 1) {\n                    break;\n                }\n            }\n        }\n    }\n    return intersection;\n}\nfunction intersectSegment(segment1, segment2) {\n    var x1 = segment1.x1;\n    var y1 = segment1.y1;\n    var x2 = segment1.x2;\n    var y2 = segment1.y2;\n    var x3 = segment2.x1;\n    var y3 = segment2.y1;\n    var x4 = segment2.x2;\n    var y4 = segment2.y2;\n    var a1;\n    var a2;\n    var b1;\n    var b2;\n    var c1;\n    var c2;\n    var x;\n    var y;\n    var r1;\n    var r2;\n    var r3;\n    var r4;\n    var denom;\n    var offset;\n    var num;\n    a1 = y2 - y1;\n    b1 = x1 - x2;\n    c1 = (x2 * y1) - (x1 * y2);\n    r3 = ((a1 * x3) + (b1 * y3) + c1);\n    r4 = ((a1 * x4) + (b1 * y4) + c1);\n    if ((r3 !== 0) && (r4 !== 0) && sameSign(r3, r4)) {\n        return null;\n    }\n    a2 = y4 - y3;\n    b2 = x3 - x4;\n    c2 = (x4 * y3) - (x3 * y4);\n    r1 = (a2 * x1) + (b2 * y1) + c2;\n    r2 = (a2 * x2) + (b2 * y2) + c2;\n    if ((r1 !== 0) && (r2 !== 0) && (sameSign(r1, r2))) {\n        return null;\n    }\n    denom = (a1 * b2) - (a2 * b1);\n    if (denom === 0) {\n        return null;\n    }\n    if (denom < 0) {\n        offset = -denom / 2;\n    }\n    else {\n        offset = denom / 2;\n    }\n    offset = 0;\n    num = (b1 * c2) - (b2 * c1);\n    if (num < 0) {\n        x = (num - offset) / denom;\n    }\n    else {\n        x = (num + offset) / denom;\n    }\n    num = (a2 * c1) - (a1 * c2);\n    if (num < 0) {\n        y = (num - offset) / denom;\n    }\n    else {\n        y = (num + offset) / denom;\n    }\n    return { x: x, y: y };\n}\nfunction sameSign(a, b) {\n    return ((a * b) >= 0);\n}\nfunction getRightToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var pts;\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var margin = 10;\n    if (swap) {\n        var point = void 0;\n        point = left;\n        left = right;\n        right = point;\n    }\n    if (!(source.corners.bottom + margin < target.corners.top - margin ||\n        source.corners.top - margin > target.corners.bottom + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffY === 0 && (source.corners.right < target.corners.left\n        || (swap && source.corners.right < target.corners.left))) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.point.x + source.margin.right < target.point.x - target.margin.left) {\n        pts = NoOfSegments.Three;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(left) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.bottom <= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.top >= target.corners.top) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY <= target.corners.top) ||\n        (srcPort === undefined && source.corners.right <= target.corners.top)) {\n        pts = NoOfSegments.Five;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY >= target.corners.bottom) ||\n        (srcPort === undefined && source.corners.right >= target.corners.bottom)) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getRightToRightSegmentCount(element, sourceObj, targetObj) {\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var pts;\n    var diffX = sourceObj.point.x - targetObj.point.x;\n    var diffY = sourceObj.point.y - targetObj.point.y;\n    targetObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    sourceObj.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (sourceObj.corners.right >= targetObj.corners.right) {\n        if ((sourcePort !== undefined && (sourcePort.offsetY < targetObj.corners.top ||\n            sourcePort.offsetY > targetObj.corners.bottom)) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y < targetObj.corners.top)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY > targetObj.corners.bottom + targetObj.margin.bottom\n            && sourceObj.corners.top > targetObj.corners.bottom) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((sourcePort !== undefined && sourcePort.offsetY < targetObj.corners.top\n            && sourceObj.corners.bottom > targetObj.corners.top) ||\n            (sourcePort === undefined && sourceObj.corners.middleRight.y > targetObj.corners.bottom)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (sourceObj.corners.right < targetObj.corners.left ||\n            targetObj.corners.right < sourceObj.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.bottom < tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.bottom < targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && sourceObj.corners.top > tarPort.offsetY) ||\n        (tarPort === undefined && sourceObj.corners.top > targetObj.corners.middleRight.y)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && ((sourcePort !== undefined && sourcePort.offsetX < targetObj.corners.left &&\n        sourcePort.offsetX !== tarPort.offsetX && sourcePort.offsetY !== tarPort.offsetY &&\n        (Math.abs(sourceObj.corners.right - targetObj.corners.left) <= 20)) ||\n        (sourcePort === undefined && sourceObj.corners.right < targetObj.corners.left &&\n            sourceObj.corners.center.x !== targetObj.corners.center.x && sourceObj.corners.center.y !== targetObj.corners.center.y)))) {\n        pts = NoOfSegments.Three;\n    }\n    else if (sourceObj.corners.right < targetObj.corners.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getRightToTopSegmentCount(element, source, target, swap) {\n    var tarPort = element.targetPortWrapper;\n    var srcPort = element.sourcePortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var pts;\n    target.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n    source.margin = { top: 5, bottom: 5, left: 5, right: 5 };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.bottom < target.corners.top - target.margin.top)) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined && Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (tarPort !== undefined && Math.abs(tarPort.offsetX - source.corners.topCenter.x) >= 25 &&\n        source.corners.middleRight.y < tarPort.offsetY) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(right))) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getRightToBottomSegmentCount(element, source, target, swap) {\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var right = { x: Math.max(source.point.x, source.corners.right), y: source.point.y };\n    var bottom = { x: target.point.x, y: Math.max(target.point.y, target.corners.bottom) };\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleRight.y > target.corners.bottom + target.margin.bottom)) {\n        if (source.corners.top > target.corners.bottom) {\n            if ((tarPort !== undefined && source.corners.right + source.margin.right < tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.right + source.margin.right < target.corners.bottomCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.left > target.corners.bottomCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (srcPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(srcPort.offsetY - target.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.right < target.corners.left) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToTopSegmentCount(source, target) {\n    var pts;\n    var diffX = source.point.x - target.point.x;\n    var diffY = source.point.y - target.point.y;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    var margin = 10;\n    if (!(source.corners.right + margin < target.corners.left - margin ||\n        source.corners.left - margin > target.corners.right + margin)) {\n        margin = 0;\n    }\n    source.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    target.margin = { left: margin, right: margin, top: margin, bottom: margin };\n    if (diffX === 0 && source.corners.bottom < target.corners.top) {\n        pts = NoOfSegments.One;\n    }\n    else if (source.corners.bottom + source.margin.bottom < target.corners.top - target.margin.top) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.right + source.margin.right < target.corners.left - target.margin.left) {\n        pts = NoOfSegments.Five;\n    }\n    else if (source.corners.left - source.margin.left > target.corners.right + target.margin.right) {\n        pts = NoOfSegments.Five;\n    }\n    else {\n        pts = NoOfSegments.Five;\n    }\n    return pts;\n}\nfunction getBottomToLeftSegmentCount(element, source, target, swap) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var bottom = { x: source.point.x, y: Math.max(source.point.y, source.corners.bottom) };\n    var left = { x: Math.min(target.point.x, target.corners.left), y: target.point.y };\n    var pts;\n    if (swap) {\n        var port = void 0;\n        port = srcPort;\n        srcPort = tarPort;\n        tarPort = port;\n    }\n    if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n        (srcPort === undefined && source.corners.bottomCenter.x < target.corners.bottomLeft.x - target.margin.left)) {\n        if (source.corners.right < target.corners.left) {\n            if ((tarPort !== undefined && source.corners.bottom + source.margin.bottom < tarPort.offsetY) ||\n                (tarPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.top > tarPort.offsetY) ||\n            (tarPort === undefined && source.corners.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (tarPort !== undefined &&\n        Math.abs(source.corners.right - target.corners.left) <= 25 &&\n        Math.abs(tarPort.offsetY - source.corners.bottom) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getBottomToBottomSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var difX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(target.point.y - target.point.y));\n    var pts;\n    if (source.corners.bottom < target.corners.bottom) {\n        if ((srcPort !== undefined && srcPort.offsetX < target.corners.left - target.margin.left) ||\n            (srcPort === undefined && source.corners.bottomCenter.x < target.corners.left - target.margin.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right + target.margin.right) ||\n            (srcPort === undefined && source.corners.bottomCenter.x > target.corners.right + target.margin.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (difX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((tarPort !== undefined && source.corners.left > tarPort.offsetX) ||\n        (tarPort === undefined && source.corners.left > target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n        (tarPort === undefined &&\n            source.corners.right < target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (difX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getLeftToTopSegmentCount(element, source, target, swap) {\n    var pts;\n    var sourcePort = element.sourcePortWrapper;\n    var tarPort = element.targetPortWrapper;\n    var left = { x: Math.min(source.point.x, source.corners.left), y: source.point.y };\n    var top = { x: target.point.x, y: Math.min(target.point.y, target.corners.top) };\n    if (swap) {\n        var port = void 0;\n        port = sourcePort;\n        sourcePort = tarPort;\n        tarPort = port;\n    }\n    if ((sourcePort !== undefined && sourcePort.offsetY < target.corners.top - target.margin.top) ||\n        (sourcePort === undefined && (source.corners.bottom < target.corners.top - target.margin.top ||\n            source.corners.middleLeft.y < target.corners.top - target.margin.top))) {\n        if (source.corners.bottom < target.corners.top) {\n            if ((tarPort !== undefined && source.corners.left - source.margin.left > tarPort.offsetX) ||\n                (tarPort === undefined && source.corners.left - source.margin.left > target.corners.topCenter.x)) {\n                pts = NoOfSegments.Two;\n            }\n            else {\n                pts = NoOfSegments.Four;\n            }\n        }\n        else if ((tarPort !== undefined && source.corners.right < tarPort.offsetX) ||\n            (tarPort === undefined && source.corners.right < target.corners.topCenter.x)) {\n            pts = NoOfSegments.Four;\n        }\n        else {\n            pts = NoOfSegments.Two;\n        }\n    }\n    else if (sourcePort !== undefined &&\n        Math.abs(source.corners.left - target.corners.right) <= 25 &&\n        Math.abs(sourcePort.offsetY - target.corners.top) <= 25) {\n        pts = NoOfSegments.Two;\n    }\n    else if (element.sourceWrapper !== element.targetWrapper &&\n        (cornersPointsBeforeRotation(element.sourceWrapper).containsPoint(top) ||\n            cornersPointsBeforeRotation(element.targetWrapper).containsPoint(left))) {\n        pts = NoOfSegments.Two;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Four;\n    }\n    else {\n        pts = NoOfSegments.Four;\n    }\n    return pts;\n}\nfunction getLeftToLeftSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    var pts;\n    if (source.corners.left < target.corners.left) {\n        if ((targetPort !== undefined && source.corners.bottom + source.margin.bottom < targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.bottom + source.margin.bottom < target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.top - source.margin.top > targetPort.offsetY) ||\n            (targetPort === undefined && source.corners.top - source.margin.top > target.corners.middleLeft.y)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.right < target.corners.left ||\n            target.corners.right < source.corners.left) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY < target.corners.top - target.margin.top) ||\n        (srcPort === undefined && source.corners.middleLeft.y < target.corners.top)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetY > target.corners.bottom + target.margin.bottom) ||\n        (srcPort === undefined && source.corners.middleLeft.y > target.corners.bottom + target.margin.bottom)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.left > target.corners.right) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction getTopToTopSegmentCount(element, source, target) {\n    var srcPort = element.sourcePortWrapper;\n    var targetPort = element.targetPortWrapper;\n    var diffX = Math.round(Math.abs(source.point.x - target.point.x));\n    var diffY = Math.round(Math.abs(source.point.y - target.point.y));\n    source.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    var pts;\n    target.margin = { left: 10, right: 10, top: 10, bottom: 10 };\n    if (source.corners.top < target.corners.top) {\n        if ((targetPort !== undefined && source.corners.left > targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.left > target.corners.left)) {\n            pts = NoOfSegments.Three;\n        }\n        else if ((targetPort !== undefined && source.corners.right < targetPort.offsetX) ||\n            (targetPort === undefined && source.corners.right < target.corners.right)) {\n            pts = NoOfSegments.Three;\n        }\n        else if (source.corners.bottom < target.corners.top) {\n            pts = NoOfSegments.Five;\n        }\n        else if (diffX === 0 || diffY === 0) {\n            pts = NoOfSegments.One;\n        }\n        else {\n            pts = NoOfSegments.Three;\n        }\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX > target.corners.right) ||\n        (srcPort === undefined && source.corners.left > target.corners.right)) {\n        pts = NoOfSegments.Three;\n    }\n    else if ((srcPort !== undefined && srcPort.offsetX < target.corners.left) ||\n        (srcPort === undefined && source.corners.bottomRight.x < target.corners.left)) {\n        pts = NoOfSegments.Three;\n    }\n    else if (source.corners.top > target.corners.bottom) {\n        pts = NoOfSegments.Five;\n    }\n    else if (diffX === 0 || diffY === 0) {\n        pts = NoOfSegments.One;\n    }\n    else {\n        pts = NoOfSegments.Three;\n    }\n    return pts;\n}\nfunction addOrthoSegments(element, seg, source, target, segLength) {\n    var src = element.sourceWrapper;\n    var tar = element.targetWrapper;\n    var tarPort = element.targetPortWrapper;\n    var intermeditatePoints;\n    var srcCorner = src.corners;\n    var tarCorner = tar.corners;\n    var extra = 20;\n    if (source.direction !== target.direction || seg === NoOfSegments.Five) {\n        if (source.direction === getOppositeDirection(target.direction) || seg === NoOfSegments.Three) {\n            switch (source.direction) {\n                case 'Left':\n                    if (srcCorner.middleLeft.x > tarCorner.middleRight.x) {\n                        extra = Math.min(extra, (srcCorner.middleLeft.x - tarCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Right':\n                    if (srcCorner.middleRight.x < tarCorner.middleLeft.x) {\n                        extra = Math.min(extra, (tarCorner.middleLeft.x - srcCorner.middleRight.x) / 2);\n                    }\n                    break;\n                case 'Top':\n                    if (srcCorner.topCenter.y > tarCorner.bottomCenter.y) {\n                        extra = Math.min(extra, (srcCorner.topCenter.y - tarCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n                case 'Bottom':\n                    if (srcCorner.bottomCenter.y < tarCorner.topCenter.y) {\n                        extra = Math.min(extra, (tarCorner.topCenter.y - srcCorner.bottomCenter.y) / 2);\n                    }\n                    break;\n            }\n        }\n    }\n    extra = adjustSegmentLength(srcCorner, source, extra);\n    if (segLength) {\n        extra = Math.max(extra, segLength);\n    }\n    if (seg === NoOfSegments.One) {\n        intermeditatePoints = [source.point, target.point];\n    }\n    if (seg === NoOfSegments.Two) {\n        intermeditatePoints = orthoConnection2Segment(source, target);\n    }\n    if (seg === NoOfSegments.Three) {\n        intermeditatePoints = orthoConnection3Segment(element, source, target, extra);\n    }\n    if (seg === NoOfSegments.Four) {\n        var prevDir = undefined;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints, extra);\n    }\n    if (seg === NoOfSegments.Five) {\n        intermeditatePoints = orthoConnection5Segment(source, target, extra);\n    }\n    return intermeditatePoints;\n}\nfunction adjustSegmentLength(bounds, source, extra) {\n    switch (source.direction) {\n        case 'Left':\n            if (source.point.x > bounds.left) {\n                extra = (source.point.x - bounds.left) > extra ? ((source.point.x - bounds.left) + extra) : extra;\n            }\n            break;\n        case 'Right':\n            if (source.point.x < bounds.right) {\n                extra = (bounds.right - source.point.x) > extra ? ((bounds.right - source.point.x) + extra) : extra;\n            }\n            break;\n        case 'Top':\n            if (source.point.y > bounds.top) {\n                extra = (source.point.y - bounds.top) > extra ? ((source.point.y - bounds.top) + extra) : extra;\n            }\n            break;\n        case 'Bottom':\n            if (source.point.y < bounds.bottom) {\n                extra = (bounds.bottom - source.point.y) > extra ? ((bounds.bottom - source.point.y) + extra) : extra;\n            }\n            break;\n    }\n    return extra;\n}\n/** @private */\nexport function orthoConnection2Segment(source, target) {\n    var intermeditatePoints;\n    switch (source.direction) {\n        case 'Left':\n        case 'Right':\n            var point1 = { x: target.point.x, y: source.point.y };\n            intermeditatePoints = (Point.equals(source.point, point1) || Point.equals(target.point, point1)) ?\n                [source.point, target.point] : [source.point, point1, target.point];\n            break;\n        case 'Top':\n        case 'Bottom':\n            var point2 = { x: source.point.x, y: target.point.y };\n            intermeditatePoints = (Point.equals(source.point, point2) || Point.equals(target.point, point2)) ?\n                [source.point, target.point] : [source.point, point2, target.point];\n            break;\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection3Segment(element, source, target, extra, allow) {\n    if (!extra) {\n        extra = 20;\n    }\n    var srcPort = element.sourcePortWrapper;\n    var intermeditatePoints;\n    var segmentValue;\n    var next;\n    var diffx = target.point.x - source.point.x;\n    var diffy = target.point.y - source.point.y;\n    var temp;\n    if (!allow && (Math.abs(diffx) < 0.001 || Math.abs(diffy) < 0.001)) {\n        if (target.direction === undefined) {\n            intermeditatePoints = [source.point, target.point];\n            return intermeditatePoints;\n        }\n    }\n    if (element.targetWrapper === undefined && Math.abs(diffx) <= 31 && Math.abs(diffy) <= 31) {\n        if ((source.direction === 'Left' || source.direction === 'Right')) {\n            if (Math.abs(diffy) < 12) {\n                source.direction = (source.point.y > target.point.y) ? 'Top' : 'Bottom';\n            }\n        }\n        else {\n            if (Math.abs(diffx) < 12) {\n                source.direction = (source.point.x > target.point.x) ? 'Left' : 'Right';\n            }\n        }\n        if (Math.abs(diffx) > 12 || Math.abs(diffy) > 12) {\n            return orthoConnection2Segment(source, target);\n        }\n        else {\n            extra += 5;\n        }\n    }\n    if (source.direction === 'Left' || source.direction === 'Right') {\n        if (source.direction === 'Right') {\n            if (target.direction !== undefined && target.direction === 'Right') {\n                extra = Math.max(source.point.x, target.point.x) - source.point.x + extra;\n            }\n            if (source.point.x > target.point.x && srcPort === undefined) {\n                extra = -extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Left') {\n                extra = source.point.x - Math.min(source.point.x, target.point.x) + extra;\n            }\n            if (source.point.x > target.point.x || srcPort !== undefined || source.direction === 'Left') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.y - source.point.y;\n        segmentValue = addLineSegment(source.point, extra, 0);\n        temp = target.point.y - segmentValue.y;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.y - segmentValue.y, 90);\n        }\n    }\n    else if (source.direction === 'Top' || source.direction === 'Bottom') {\n        if (source.direction === 'Bottom') {\n            if (target.direction !== undefined && target.direction === 'Bottom') {\n                extra = Math.max(source.point.y, target.point.y) - source.point.y + extra;\n            }\n        }\n        else {\n            if (target.direction !== undefined && target.direction === 'Top') {\n                extra = source.point.y - Math.min(source.point.y, target.point.y) + extra;\n            }\n            if (source.point.y > target.point.y || (srcPort !== undefined) || source.direction === 'Top') {\n                extra = -extra;\n            }\n        }\n        temp = target.point.x - source.point.x;\n        if (source.direction === 'Top') {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        else {\n            segmentValue = addLineSegment(source.point, extra, 90);\n        }\n        temp = target.point.x - segmentValue.x;\n        if (temp !== 0) {\n            next = addLineSegment(segmentValue, target.point.x - segmentValue.x, 0);\n        }\n    }\n    if (temp === 0) {\n        return intermeditatePoints = [\n            source.point,\n            target.point\n        ];\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue,\n        next,\n        target.point\n    ];\n    return intermeditatePoints;\n}\nfunction orthoConnection5Segment(source, target, extra) {\n    if (extra === void 0) { extra = 20; }\n    var intermeditatePoints;\n    var length = extra;\n    var sLeft = source.corners.left - source.margin.left;\n    var sRight = source.corners.right + source.margin.right;\n    var sBottom = source.corners.bottom + source.margin.bottom;\n    var sTop = source.corners.top - source.margin.top;\n    var tLeft = target.corners.left - target.margin.left;\n    var tRight = target.corners.right + target.margin.right;\n    var tBottom = target.corners.bottom + target.margin.bottom;\n    var tTop = target.corners.top - target.margin.top;\n    var segmentValue;\n    switch (source.direction) {\n        case 'Left':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sLeft > tLeft && sLeft <= tRight && extra >= 20) {\n                length = source.point.x - target.corners.left + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 180);\n            break;\n        case 'Top':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sTop > tTop && sTop <= tBottom && extra >= 20) {\n                length = source.point.y - target.corners.top + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 270);\n            break;\n        case 'Right':\n            if ((sTop > tTop && sTop < tBottom || sBottom < tBottom && sBottom > tTop) &&\n                sRight < tRight && sRight >= tLeft && extra >= 20) {\n                length = target.corners.right - source.point.x + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 0);\n            break;\n        case 'Bottom':\n            if ((sLeft > tLeft && sLeft < tRight || sRight < tRight && sRight > tLeft) &&\n                sBottom < tBottom && sBottom >= tTop && extra >= 20) {\n                length = target.corners.bottom - source.point.y + length;\n            }\n            segmentValue = addLineSegment(source.point, length, 90);\n            break;\n    }\n    intermeditatePoints = [\n        source.point,\n        segmentValue\n    ];\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        var prevDir = source.direction;\n        source.direction = segmentValue.x > target.point.x ? 'Left' : 'Right';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    else {\n        var prevDir = source.direction;\n        source.direction = segmentValue.y > target.point.y ? 'Top' : 'Bottom';\n        source.point = segmentValue;\n        intermeditatePoints = orthoConnection4Segment(source, target, prevDir, intermeditatePoints);\n    }\n    return intermeditatePoints;\n}\nfunction orthoConnection4Segment(source, target, prevDir, interPt, e) {\n    if (e === void 0) { e = 20; }\n    var segmentValue;\n    if (prevDir === undefined) {\n        source.margin = { left: 2, right: 2, top: 2, bottom: 2 };\n        target.margin = { left: 0, right: 5, top: 0, bottom: 5 };\n    }\n    else {\n        if (source.direction === 'Bottom') {\n            if (target.corners.top > source.corners.bottom && target.corners.top - source.corners.bottom < 20) {\n                e = (target.corners.top - source.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Top') {\n            if (target.corners.bottom < source.corners.top && source.corners.top - target.corners.bottom < 20) {\n                e = (source.corners.top - target.corners.bottom) / 2;\n            }\n        }\n        else if (source.direction === 'Right') {\n            if (target.corners.left > source.corners.right && target.corners.left - source.corners.right < 20) {\n                e = (target.corners.left - source.corners.right) / 2;\n            }\n        }\n        else if (source.direction === 'Left') {\n            if (target.corners.right < source.corners.left && source.corners.left - target.corners.right < 20) {\n                e = (source.corners.left - target.corners.right) / 2;\n            }\n        }\n    }\n    switch (source.direction) {\n        case 'Left':\n            e = getLeftLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 180);\n            break;\n        case 'Right':\n            e = getRightLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 0);\n            break;\n        case 'Top':\n            e = getTopLength(source, target, prevDir, e);\n            segmentValue = addLineSegment(source.point, e, 270);\n            break;\n        case 'Bottom':\n            e = getBottomLength(source, target, e, prevDir);\n            segmentValue = addLineSegment(source.point, e, 90);\n    }\n    if (interPt !== undefined) {\n        interPt.push(segmentValue);\n    }\n    else {\n        interPt = [\n            source.point,\n            segmentValue\n        ];\n    }\n    if (source.direction === 'Top' || source.direction === 'Bottom') {\n        getOrtho3Seg(segmentValue, 'horizontal', source, target, interPt);\n    }\n    else if (source.direction === 'Right' || source.direction === 'Left') {\n        getOrtho3Seg(segmentValue, 'vertical', source, target, interPt);\n    }\n    return interPt;\n}\nfunction getOrtho3Seg(sPt, orientation, src, tar, points) {\n    var point1;\n    var point2;\n    var point3;\n    if (orientation === 'horizontal') {\n        src.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n        tar.margin = { left: 0, right: 10, top: 0, bottom: 10 };\n    }\n    else if (orientation === 'vertical') {\n        src.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n        tar.margin = { left: 10, right: 0, top: 10, bottom: 0 };\n    }\n    var extra = 20;\n    if (orientation === 'horizontal') {\n        switch (tar.direction) {\n            case 'Left':\n                if (src.corners.right + src.margin.right < tar.corners.left - tar.margin.left &&\n                    (tar.corners.left - src.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(tar.corners.left - src.corners.right) / 2, 20);\n                    extra = src.corners.right - sPt.x + gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.min(tar.corners.left, sPt.x) - sPt.x - 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.min(tar.corners.left, src.corners.left) - sPt.x - 20;\n                    }\n                    else {\n                        extra = tar.corners.left - sPt.x - 20;\n                    }\n                }\n                break;\n            case 'Right':\n                if (src.corners.left - src.margin.left > tar.corners.right + tar.margin.right &&\n                    (src.corners.left - tar.corners.right > extra || (src.corners.top - src.margin.top <= tar.point.y &&\n                        src.corners.bottom + src.margin.bottom >= tar.point.y))) {\n                    var gap = Math.min(Math.abs(src.corners.left - tar.corners.right) / 2, 20);\n                    extra = src.corners.left - sPt.x - gap;\n                }\n                else {\n                    if ((src.direction === 'Top' && sPt.y > tar.point.y) || (src.direction === 'Bottom' && sPt.y < tar.point.y)) {\n                        extra = Math.max(tar.corners.right, sPt.x) - sPt.x + 20;\n                    }\n                    else if (sPt.x >= src.corners.left - src.margin.left && sPt.x <= src.corners.right + src.margin.right) {\n                        extra = Math.max(tar.corners.right, src.corners.right) - sPt.x + 20;\n                    }\n                    else {\n                        extra = tar.corners.right - sPt.x + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 0);\n        point2 = addLineSegment(point1, tar.point.y - sPt.y, 90);\n        point3 = tar.point;\n    }\n    else if (orientation === 'vertical') {\n        switch (tar.direction) {\n            case 'Top':\n                if (src.corners.bottom + src.margin.bottom < tar.corners.top - tar.margin.top &&\n                    (tar.corners.top - src.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(tar.corners.top - src.corners.bottom) / 2, 20);\n                    extra = src.corners.bottom - sPt.y + gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.min(tar.corners.top, sPt.y) - sPt.y - 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.min(tar.corners.top, src.corners.top) - sPt.y - 20;\n                    }\n                    else {\n                        extra = tar.corners.top - sPt.y - 20;\n                    }\n                }\n                break;\n            case 'Bottom':\n                if (src.corners.top - src.margin.top > tar.corners.bottom + tar.margin.bottom &&\n                    (src.corners.top - tar.corners.bottom > extra || (src.corners.left - src.margin.left <= tar.point.x &&\n                        src.corners.right + src.margin.right >= tar.point.x))) {\n                    var gap = Math.min(Math.abs(src.corners.top - tar.corners.bottom) / 2, 20);\n                    extra = src.corners.top - sPt.y - gap;\n                }\n                else {\n                    if ((src.direction === 'Left' && sPt.x > tar.point.x) || (src.direction === 'Right' && sPt.x < tar.point.x)) {\n                        extra = Math.max(tar.corners.bottom, sPt.y) - sPt.y + 20;\n                    }\n                    else if (sPt.y >= src.corners.top - src.margin.top && sPt.y <= src.corners.bottom + src.margin.bottom) {\n                        extra = Math.max(tar.corners.bottom, src.corners.bottom) - sPt.y + 20;\n                    }\n                    else {\n                        extra = tar.corners.bottom - sPt.y + 20;\n                    }\n                }\n                break;\n        }\n        point1 = addLineSegment(sPt, extra, 90);\n        point2 = addLineSegment(point1, tar.point.x - sPt.x, 0);\n        point3 = tar.point;\n    }\n    points.push(point1);\n    points.push(point2);\n    points.push(point3);\n}\nfunction getTopLength(source, target, preDir, length) {\n    if (source.corners.top - source.margin.top > target.corners.top + target.margin.top &&\n        source.corners.top - source.margin.top <= target.corners.bottom + target.margin.bottom) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            length += source.corners.top - target.corners.top;\n        }\n        length += source.point.y - source.corners.top;\n    }\n    else {\n        if ((preDir !== undefined && preDir !== 'Left') && target.direction === 'Right' && source.point.x < target.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((preDir !== undefined && preDir !== 'Right') && target.direction === 'Left'\n            && target.point.x < source.point.x) {\n            length += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            length += source.point.y - source.corners.top;\n        }\n    }\n    return length;\n}\nfunction getLeftLength(source, target, prevDir, segLength) {\n    if (source.corners.left - source.margin.left > target.corners.left - target.margin.left &&\n        source.corners.left - source.margin.left <= target.corners.right + target.margin.right) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            segLength += source.corners.left - target.corners.left;\n        }\n        segLength += source.point.x - source.corners.left;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') &&\n            target.direction === 'Top' && target.point.y < source.point.y) {\n            segLength += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            segLength += source.point.x - source.corners.left;\n        }\n    }\n    return segLength;\n}\nfunction getRightLength(source, target, length, prevDir) {\n    if (source.corners.right + source.margin.right < target.corners.right + target.margin.right &&\n        source.corners.right + source.margin.right >= target.corners.left - target.margin.left) {\n        if (target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        else if (target.direction === 'Top' && source.point.y > target.point.y) {\n            length += target.corners.right - source.corners.right;\n        }\n        length += source.corners.right - source.point.x;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Top') && target.direction === 'Bottom' && source.point.y < target.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Bottom') && target.direction === 'Top' && target.point.y < source.point.y) {\n            length += Math.abs(source.point.x - target.corners.right);\n        }\n        else {\n            length += source.corners.right - source.point.x;\n        }\n    }\n    return length;\n}\nfunction getBottomLength(source, target, segLength, prevDir) {\n    if (source.corners.bottom + source.margin.bottom < target.corners.bottom + target.margin.bottom &&\n        source.corners.bottom + source.margin.bottom >= target.corners.top - target.margin.top) {\n        if (target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        else if (target.direction === 'Left' && source.point.x > target.point.x) {\n            segLength += target.corners.bottom - source.corners.bottom;\n        }\n        segLength += source.corners.bottom - source.point.y;\n    }\n    else {\n        if ((prevDir !== undefined && prevDir !== 'Left') &&\n            target.direction === 'Right' && source.point.x < target.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else if ((prevDir !== undefined && prevDir !== 'Right') &&\n            target.direction === 'Left' && target.point.x < source.point.x) {\n            segLength += Math.abs(source.point.y - target.corners.bottom);\n        }\n        else {\n            segLength += source.corners.bottom - source.point.y;\n        }\n    }\n    return segLength;\n}\nfunction getSwapping(srcDir, tarDir) {\n    var swap = false;\n    switch (srcDir) {\n        case 'Left':\n            switch (tarDir) {\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Top':\n            switch (tarDir) {\n                case 'Left':\n                case 'Right':\n                case 'Bottom':\n                    swap = true;\n                    break;\n            }\n            break;\n        case 'Bottom':\n            switch (tarDir) {\n                case 'Right':\n                    swap = true;\n                    break;\n            }\n            break;\n    }\n    return swap;\n}\nfunction swapPoints(source, target) {\n    var direction = source.direction;\n    source.direction = target.direction;\n    target.direction = direction;\n    var point = source.point;\n    source.point = target.point;\n    target.point = point;\n    var corner = source.corners;\n    source.corners = target.corners;\n    target.corners = corner;\n}\nexport function getPortDirection(point, corner, bounds, closeEdge) {\n    var direction;\n    var boundsValue = corner === undefined ? bounds : corner;\n    var one = boundsValue.topLeft;\n    var two = boundsValue.topRight;\n    var three = boundsValue.bottomRight;\n    var four = boundsValue.bottomLeft;\n    var center = boundsValue.center;\n    var angle = findAngle(center, point);\n    var fourty5 = findAngle(center, three);\n    var one35 = findAngle(center, four);\n    var two25 = findAngle(center, one);\n    var three15 = findAngle(center, two);\n    if (angle > two25 && angle < three15) {\n        direction = 'Top';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - one.x) < Math.abs(point.x - two.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Left');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - bounds.width, two.y, width, height), point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= fourty5 && angle < one35) {\n        direction = 'Bottom';\n        // if (bounds.width < bounds.height && closeEdge) {\n        //     let height: number = (bounds.height - bounds.width) / 2;\n        //     let width: number = bounds.width;\n        //     if (Math.abs(point.x - four.x) < Math.abs(point.x - three.x)) {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Left');\n        //     } else {\n        //         let value: Rect = new Rect(three.x - bounds.width, three.y - bounds.height / 4, bounds.width, bounds.height / 4);\n        //         direction = checkCloseEdge(direction, value, point, 'Right');\n        //     }\n        // }\n    }\n    else if (angle >= one35 && angle <= two25) {\n        direction = 'Left';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - one.y) < Math.abs(point.y - four.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(one.x, one.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, new Rect(four.x, four.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else if (angle >= three15 || angle < fourty5) {\n        direction = 'Right';\n        // if (bounds.width > bounds.height && closeEdge) {\n        //     let width: number = (bounds.width - bounds.height) / 2;\n        //     let height: number = bounds.height;\n        //     if (Math.abs(point.y - two.y) < Math.abs(point.y - three.y)) {\n        //         direction = checkCloseEdge(direction, new Rect(two.x - width, two.y, width, height), point, 'Top');\n        //     } else {\n        //         direction = checkCloseEdge(direction, \n        //new Rect(three.x - width, three.y - height, width, height), point, 'Bottom');\n        //     }\n        // }\n    }\n    else {\n        direction = 'Right';\n    }\n    return direction;\n}\n// function checkCloseEdge(direction: string, threshold: Rect, port: PointModel, nearest: string): string {\n// if (threshold) {\n//     switch (direction) {\n//         case 'Bottom':\n//         case 'Top':\n//             let left: number = Math.abs(threshold.left - port.x);\n//             let right: number = Math.abs(threshold.right - port.x);\n//             let ver: number = direction === 'Top' ? Math.abs(threshold.top - port.y) : Math.abs(threshold.bottom - port.y);\n//             if (left < right) {\n//                 if (left < ver) {\n//                     return 'Left';\n//                 }\n//             } else {\n//                 if (right < ver) {\n//                     return 'Right';\n//                 }\n//             }\n//             break;\n//         case 'Left':\n//         case 'Right':\n//             let top: number = Math.abs(threshold.top - port.y);\n//             let bottom: number = Math.abs(threshold.bottom - port.y);\n//             let hor: number = direction === 'Left' ? Math.abs(threshold.left - port.x) : Math.abs(threshold.right - port.x);\n//             if (top < bottom) {\n//                 if (top < hor) {\n//                     return 'Top';\n//                 }\n//             } else {\n//                 if (bottom < hor) {\n//                     return 'Bottom';\n//                 }\n//             }\n//             break;\n//     }\n// }\n//Meant for dock port\n//    return direction;\n//  }\n/** @private */\nexport function getOuterBounds(obj) {\n    var outerBounds;\n    outerBounds = obj.wrapper.children[0].bounds;\n    if (obj.sourceDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[1].bounds);\n    }\n    if (obj.targetDecorator.shape !== 'None') {\n        outerBounds.uniteRect(obj.wrapper.children[2].bounds);\n    }\n    return outerBounds;\n}\nexport function getOppositeDirection(direction) {\n    switch (direction) {\n        case 'Top':\n            return 'Bottom';\n        case 'Bottom':\n            return 'Top';\n        case 'Left':\n            return 'Right';\n        case 'Right':\n            return 'Left';\n    }\n    return 'auto';\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory, CollectionFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, StrokeStyle } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { Transform, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { findAngle, findConnectorPoints, getOuterBounds } from '../utility/connector';\nimport { getAnnotationPosition, alignLabelOnSegments, updateConnector, setUMLActivityDefaults } from '../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { flipConnector } from './../utility/diagram-util';\nimport { PathElement } from '../core/elements/path-element';\nimport { PathAnnotation } from './annotation';\nimport { Canvas } from '../core/containers/canvas';\nimport { getDecoratorShape } from './dictionary/common';\nimport { NodeBase } from './node-base';\nimport { DiagramTooltip } from './tooltip';\nimport { identityMatrix, rotateMatrix, scaleMatrix, transformPointsByMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nvar getConnectorType = function (obj) {\n    switch (obj.type) {\n        case 'Bpmn':\n            return BpmnFlow;\n        case 'UmlActivity':\n            return ActivityFlow;\n        case 'UmlClassifier':\n            return RelationShip;\n        default:\n            return ConnectorShape;\n    }\n};\nvar getSegmentType = function (obj) {\n    switch (obj.type) {\n        case 'Straight':\n            return StraightSegment;\n        case 'Bezier':\n            return BezierSegment;\n        case 'Orthogonal':\n            return OrthogonalSegment;\n        default:\n            return StraightSegment;\n    }\n};\n/**\n * Decorators are used to decorate the end points of the connector with some predefined path geometry\n */\nvar Decorator = /** @class */ (function (_super) {\n    __extends(Decorator, _super);\n    function Decorator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], Decorator.prototype, \"height\", void 0);\n    __decorate([\n        Property('Arrow')\n    ], Decorator.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({ fill: 'black', strokeColor: 'black', strokeWidth: 1 }, ShapeStyle)\n    ], Decorator.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0.5 }, Point)\n    ], Decorator.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('')\n    ], Decorator.prototype, \"pathData\", void 0);\n    return Decorator;\n}(ChildProperty));\nexport { Decorator };\n/**\n * Describes the length and angle between the control point and the start point of bezier segment\n */\nvar Vector = /** @class */ (function (_super) {\n    __extends(Vector, _super);\n    function Vector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"angle\", void 0);\n    __decorate([\n        Property(0)\n    ], Vector.prototype, \"distance\", void 0);\n    return Vector;\n}(ChildProperty));\nexport { Vector };\n/**\n * Sets the type of the connector\n */\nvar ConnectorShape = /** @class */ (function (_super) {\n    __extends(ConnectorShape, _super);\n    function ConnectorShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], ConnectorShape.prototype, \"type\", void 0);\n    return ConnectorShape;\n}(ChildProperty));\nexport { ConnectorShape };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar ActivityFlow = /** @class */ (function (_super) {\n    __extends(ActivityFlow, _super);\n    function ActivityFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Object')\n    ], ActivityFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property(30)\n    ], ActivityFlow.prototype, \"exceptionFlowHeight\", void 0);\n    return ActivityFlow;\n}(ConnectorShape));\nexport { ActivityFlow };\n/**\n * Sets the type of the flow in a BPMN Process\n */\nvar BpmnFlow = /** @class */ (function (_super) {\n    __extends(BpmnFlow, _super);\n    function BpmnFlow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Sequence')\n    ], BpmnFlow.prototype, \"flow\", void 0);\n    __decorate([\n        Property('Normal')\n    ], BpmnFlow.prototype, \"sequence\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"message\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnFlow.prototype, \"association\", void 0);\n    return BpmnFlow;\n}(ConnectorShape));\nexport { BpmnFlow };\n/**\n * Defines the behavior of connector segments\n */\nvar ConnectorSegment = /** @class */ (function (_super) {\n    __extends(ConnectorSegment, _super);\n    // tslint:disable-next-line:no-any\n    function ConnectorSegment(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        _this.points = [];\n        return _this;\n    }\n    __decorate([\n        Property('Straight')\n    ], ConnectorSegment.prototype, \"type\", void 0);\n    return ConnectorSegment;\n}(ChildProperty));\nexport { ConnectorSegment };\n/**\n * Defines the behavior of straight segments\n */\nvar StraightSegment = /** @class */ (function (_super) {\n    __extends(StraightSegment, _super);\n    function StraightSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class StraightSegment\n     */\n    StraightSegment.prototype.getClassName = function () {\n        return 'StraightSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], StraightSegment.prototype, \"point\", void 0);\n    return StraightSegment;\n}(ConnectorSegment));\nexport { StraightSegment };\n/**\n * Defines the behavior of bezier segments\n */\nvar BezierSegment = /** @class */ (function (_super) {\n    __extends(BezierSegment, _super);\n    function BezierSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BezierSegment\n     */\n    BezierSegment.prototype.getClassName = function () {\n        return 'BezierSegment';\n    };\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point1\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], BezierSegment.prototype, \"point2\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector1\", void 0);\n    __decorate([\n        Complex({ angle: 0, distance: 0 }, Vector)\n    ], BezierSegment.prototype, \"vector2\", void 0);\n    return BezierSegment;\n}(StraightSegment));\nexport { BezierSegment };\n/**\n * Defines the behavior of orthogonal segments\n */\nvar OrthogonalSegment = /** @class */ (function (_super) {\n    __extends(OrthogonalSegment, _super);\n    function OrthogonalSegment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class OrthogonalSegment\n     */\n    OrthogonalSegment.prototype.getClassName = function () {\n        return 'OrthogonalSegment';\n    };\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"length\", void 0);\n    __decorate([\n        Property(null)\n    ], OrthogonalSegment.prototype, \"direction\", void 0);\n    return OrthogonalSegment;\n}(ConnectorSegment));\nexport { OrthogonalSegment };\n/**\n * Get the direction of the control points while the bezier is connected to the node\n */\nexport function getDirection(bounds, points, excludeBounds) {\n    var center = bounds.center;\n    var direction;\n    var part = excludeBounds ? 45 : (180 / (2 + 2 / (bounds.height / bounds.width)));\n    var fourty5 = part;\n    var one35 = (180 - part);\n    var two25 = one35 + (2 * part);\n    var three15 = 360 - part;\n    var angle = findAngle(points, center);\n    if (angle > fourty5 && angle < one35) {\n        return direction = 'top';\n    }\n    else if (angle > one35 && angle < two25) {\n        return direction = 'right';\n    }\n    else if (angle > two25 && angle < three15) {\n        return direction = 'bottom';\n    }\n    else {\n        return direction = 'left';\n    }\n}\nexport function isEmptyVector(element) {\n    if (!element.distance && !element.angle) {\n        return true;\n    }\n    return false;\n}\n/**\n * Get the bezier points if control points are not given.\n */\nexport function getBezierPoints(sourcePoint, targetPoint, direction) {\n    var distance = 60;\n    var value = { x: 0, y: 0 };\n    if (!direction) {\n        if (Math.abs(targetPoint.x - sourcePoint.x) > Math.abs(targetPoint.y - sourcePoint.y)) {\n            direction = sourcePoint.x < targetPoint.x ? 'right' : 'left';\n        }\n        else {\n            direction = sourcePoint.y < targetPoint.y ? 'bottom' : 'top';\n        }\n    }\n    switch (direction) {\n        case 'bottom':\n        case 'top':\n            distance = Math.min(Math.abs(sourcePoint.y - targetPoint.y) * 0.45, distance);\n            value = { x: sourcePoint.x, y: sourcePoint.y + (direction === 'bottom' ? distance : -distance) };\n            break;\n        case 'right':\n        case 'left':\n            distance = Math.min(Math.abs(sourcePoint.x - targetPoint.x) * 0.45, distance);\n            value = { x: sourcePoint.x + (direction === 'right' ? distance : -distance), y: sourcePoint.y };\n            break;\n    }\n    return value;\n}\n/**\n * Get the bezier curve bounds.\n */\nexport function getBezierBounds(startPoint, controlPoint1, controlPoint2, endPoint, connector) {\n    var minx = 0;\n    var miny = 0;\n    var maxx = 0;\n    var maxy = 0;\n    var tolerancevalue = 3;\n    var max = Number((connector.distance(controlPoint1, startPoint) +\n        connector.distance(controlPoint2, controlPoint1) +\n        connector.distance(endPoint, controlPoint2)) / tolerancevalue);\n    if (max !== 0) {\n        for (var i = 0; i <= max; i++) {\n            var t = i / max;\n            var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.x +\n                3 * t * t * (1 - t) * controlPoint2.x +\n                t * t * t * endPoint.x;\n            var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n                3 * t * (1 - t) * (1 - t) * controlPoint1.y +\n                3 * t * t * (1 - t) * controlPoint2.y +\n                t * t * t * endPoint.y;\n            if (i === 0) {\n                minx = maxx = x;\n                miny = maxy = y;\n            }\n            else {\n                minx = Math.min(x, minx);\n                miny = Math.min(y, miny);\n                maxx = Math.max(x, maxx);\n                maxy = Math.max(y, maxy);\n            }\n        }\n    }\n    return {\n        x: minx, y: miny, width: maxx - minx, height: maxy - miny,\n        left: minx, top: miny, right: (minx + (maxx - minx)), bottom: (miny + (maxy - miny)),\n        center: { x: (minx + (maxx - minx)) / 2, y: (miny + (maxy - miny)) / 2 },\n    };\n}\n/**\n * Get the intermediate bezier curve for point over connector\n */\nexport function bezierPoints(connector, startPoint, point1, point2, endPoint, i, max) {\n    var pt = { x: 0, y: 0 };\n    var t = i / max;\n    var x = (1 - t) * (1 - t) * (1 - t) * startPoint.x +\n        3 * t * (1 - t) * (1 - t) * point1.x +\n        3 * t * t * (1 - t) * point2.x +\n        t * t * t * endPoint.x;\n    pt.x = x;\n    var y = (1 - t) * (1 - t) * (1 - t) * startPoint.y +\n        3 * t * (1 - t) * (1 - t) * point1.y +\n        3 * t * t * (1 - t) * point2.y +\n        t * t * t * endPoint.y;\n    pt.y = y;\n    return pt;\n}\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar MultiplicityLabel = /** @class */ (function (_super) {\n    __extends(MultiplicityLabel, _super);\n    function MultiplicityLabel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], MultiplicityLabel.prototype, \"optional\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"lowerBounds\", void 0);\n    __decorate([\n        Property(undefined)\n    ], MultiplicityLabel.prototype, \"upperBounds\", void 0);\n    return MultiplicityLabel;\n}(ChildProperty));\nexport { MultiplicityLabel };\n/**\n * Defines the behavior of the UMLActivity Classifier multiplicity connection defaults\n */\nvar ClassifierMultiplicity = /** @class */ (function (_super) {\n    __extends(ClassifierMultiplicity, _super);\n    function ClassifierMultiplicity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ClassifierMultiplicity.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"target\", void 0);\n    __decorate([\n        Complex({}, MultiplicityLabel)\n    ], ClassifierMultiplicity.prototype, \"source\", void 0);\n    return ClassifierMultiplicity;\n}(ChildProperty));\nexport { ClassifierMultiplicity };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar RelationShip = /** @class */ (function (_super) {\n    __extends(RelationShip, _super);\n    function RelationShip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('UmlClassifier')\n    ], RelationShip.prototype, \"type\", void 0);\n    __decorate([\n        Property('Aggregation')\n    ], RelationShip.prototype, \"relationship\", void 0);\n    __decorate([\n        Property('Directional')\n    ], RelationShip.prototype, \"associationType\", void 0);\n    __decorate([\n        Complex({}, ClassifierMultiplicity)\n    ], RelationShip.prototype, \"multiplicity\", void 0);\n    return RelationShip;\n}(ConnectorShape));\nexport { RelationShip };\n/**\n * Connectors are used to create links between nodes\n */\nvar Connector = /** @class */ (function (_super) {\n    __extends(Connector, _super);\n    // tslint:disable-next-line:no-any\n    function Connector(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.bridges = [];\n        /** @private */\n        _this.status = 'None';\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    /** @private */\n    // tslint:disable-next-line:no-any\n    Connector.prototype.init = function (diagram) {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        var bpmnElement;\n        var container = new Canvas();\n        var segment = new PathElement();\n        segment.id = this.id + '_path';\n        var srcDecorator = new PathElement();\n        var targetDecorator = new PathElement();\n        segment = this.getSegmentElement(this, segment);\n        var bounds;\n        var points = [];\n        points = this.getConnectorPoints(this.type);\n        points = this.clipDecorators(this, points);\n        bounds = Rect.toBounds(points);\n        container.width = bounds.width;\n        container.height = bounds.height;\n        container.offsetX = bounds.x + container.pivot.x * bounds.width;\n        container.offsetY = bounds.y + container.pivot.y * bounds.height;\n        switch (this.shape.type) {\n            case 'Bpmn':\n                switch (this.shape.flow) {\n                    case 'Sequence':\n                        bpmnElement = this.getBpmnSequenceFlow();\n                        break;\n                    case 'Association':\n                        bpmnElement = new PathElement();\n                        bpmnElement.visible = false;\n                        this.getBpmnAssociationFlow();\n                        break;\n                    case 'Message':\n                        bpmnElement = this.getBpmnMessageFlow();\n                        segment = this.getSegmentElement(this, segment);\n                        this.updateShapePosition(this, bpmnElement);\n                        break;\n                }\n                break;\n            case 'UmlActivity':\n                switch (this.shape.flow) {\n                    case 'Object':\n                        this.getUMLObjectFlow();\n                        break;\n                    case 'Exception':\n                        this.getUMLExceptionFlow(segment);\n                        break;\n                }\n                break;\n            case 'UmlClassifier':\n                this.getConnectorRelation();\n                break;\n        }\n        var anglePoints = this.intermediatePoints;\n        if (this.type === 'Bezier') {\n            var firstSegment = this.segments[0];\n            var lastSegment = this.segments[this.segments.length - 1];\n            anglePoints = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n                !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n        }\n        var accessContent = 'getDescription';\n        var getDescription = diagram[accessContent];\n        var strokeWidth = this.sourceWrapper ? this.sourceWrapper.style.strokeWidth / 2 / 2 : 0;\n        srcDecorator = this.getDecoratorElement(points[0], anglePoints[1], this.sourceDecorator, true, getDescription);\n        targetDecorator = this.getDecoratorElement(points[points.length - 1], anglePoints[anglePoints.length - 2], this.targetDecorator, false, getDescription);\n        srcDecorator.id = this.id + '_srcDec';\n        targetDecorator.id = this.id + '_tarDec';\n        segment.style = this.style;\n        /* tslint:disable:no-string-literal */\n        segment.style['fill'] = 'transparent';\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(this, diagram);\n            segment.description = wrapperContent ? wrapperContent : this.id;\n        }\n        container.style.strokeColor = 'transparent';\n        container.style.fill = 'transparent';\n        container.style.strokeWidth = 0;\n        container.children = [segment, srcDecorator, targetDecorator];\n        container.id = this.id;\n        if (bpmnElement !== undefined) {\n            container.children.push(bpmnElement);\n        }\n        container.offsetX = segment.offsetX;\n        container.offsetY = segment.offsetY;\n        container.width = segment.width;\n        container.height = segment.height;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            container.children.push(this.getAnnotationElement(this.annotations[i], this.intermediatePoints, bounds, getDescription, diagram.element.id));\n        }\n        this.wrapper = container;\n        return container;\n    };\n    Connector.prototype.getConnectorRelation = function () {\n        var shape = this.shape;\n        if (shape.relationship === 'Association') {\n            this.segments[0].type = 'Straight';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Inheritance') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Composition') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'black';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Aggregation') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'Diamond';\n            this.targetDecorator.shape = 'None';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        else if (shape.relationship === 'Dependency') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'OpenArrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n            this.style.strokeDashArray = '4 4';\n        }\n        else if (shape.relationship === 'Realization') {\n            this.segments[0].type = 'Orthogonal';\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.style.strokeWidth = 2;\n        }\n        if (shape.associationType === 'BiDirectional') {\n            this.sourceDecorator.shape = 'None';\n            this.targetDecorator.shape = 'None';\n        }\n        var text1 = '';\n        var lower;\n        var upper;\n        var sourceText = '';\n        var targetText = '';\n        var text = '';\n        if (shape.multiplicity.source) {\n            shape.multiplicity.source.lowerBounds = shape.multiplicity.source.lowerBounds;\n            shape.multiplicity.source.upperBounds = shape.multiplicity.source.upperBounds;\n        }\n        if (shape.multiplicity.target) {\n            shape.multiplicity.target.lowerBounds = shape.multiplicity.target.lowerBounds;\n            shape.multiplicity.target.upperBounds = shape.multiplicity.target.upperBounds;\n        }\n        lower = shape.multiplicity.source;\n        upper = shape.multiplicity.target;\n        text = lower.upperBounds ? lower.lowerBounds + '...' + lower.upperBounds : lower.lowerBounds;\n        text1 = upper.upperBounds ? upper.lowerBounds + '...' + upper.upperBounds : upper.lowerBounds;\n        if (shape.multiplicity.type === 'ManyToOne') {\n            shape.multiplicity.target.optional = false;\n            sourceText = text ? text : '*';\n            targetText = '1';\n        }\n        if (shape.multiplicity.type === 'OneToMany') {\n            shape.multiplicity.source.optional = false;\n            targetText = text1 ? text1 : '*';\n            sourceText = '1';\n        }\n        if (shape.multiplicity.type === 'ManyToOne') {\n            sourceText = text ? text : '*';\n            targetText = text1 ? text1 : '*';\n        }\n        if (shape.multiplicity.type === 'OneToOne') {\n            shape.multiplicity.target.optional = false;\n            shape.multiplicity.source.optional = false;\n            sourceText = '1';\n            targetText = '1';\n        }\n        this.annotations = [\n            {\n                id: this.id + 'sourcelabel', content: sourceText, offset: 0, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            },\n            {\n                id: this.id + 'targetlabel', content: targetText, offset: 1, alignment: 'Before',\n                margin: { right: 5, bottom: 5 }\n            }\n        ];\n    };\n    Connector.prototype.getBpmnSequenceFlow = function () {\n        var segment = new PathElement();\n        var pathseq = new PathElement();\n        var pathseqData;\n        if ((this.shape.sequence) === 'Normal' && this.type !== 'Bezier') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Default') {\n            segment = this.getSegmentElement(this, segment);\n            var anglePoints = this.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + this.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = this.findPath(anglePoints[j], anglePoints[j + 1]);\n                pathseq.data = pathseqData[0];\n                pathseq.id = this.id + '_' + (this.shape.sequence);\n                pathseq.offsetX = pathseqData[1].x;\n                pathseq.offsetY = pathseqData[1].y;\n                pathseq.rotateAngle = 45;\n                pathseq.transform = Transform.Self;\n            }\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.sequence) === 'Conditional') {\n            this.targetDecorator.shape = 'Arrow';\n            this.sourceDecorator.shape = 'Diamond';\n            this.sourceDecorator.style.fill = 'white';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.width = 20;\n            this.sourceDecorator.height = 10;\n        }\n        return pathseq;\n    };\n    /** @private */\n    Connector.prototype.getUMLObjectFlow = function () {\n        if (this.annotations) {\n            for (var i = 0; i < this.annotations.length; i++) {\n                this.annotations[i].content = '[' + this.annotations[i].content + ']';\n            }\n        }\n    };\n    /** @private */\n    Connector.prototype.getUMLExceptionFlow = function (segment) {\n        this.type = 'Straight';\n        var height = (this.shape.exceptionFlowHeight) / 2;\n        var midPt = { x: (this.targetPoint.x + this.sourcePoint.x) / 2, y: (this.targetPoint.y + this.sourcePoint.y) / 2 };\n        var xDist = midPt.x - this.sourcePoint.x;\n        var yDist = midPt.y - this.sourcePoint.y;\n        var dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        var fractionOfTotal = (height) / dist;\n        var midPt2 = { x: midPt.x - xDist * fractionOfTotal, y: midPt.y - yDist * fractionOfTotal };\n        var midPt1 = { x: midPt.x + xDist * fractionOfTotal, y: midPt.y + yDist * fractionOfTotal };\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, 315, midPt.x, midPt.y);\n        this.segments = [];\n        var segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt1) }, true);\n        (this.segments).push(segments);\n        segments = new StraightSegment(this, 'segments', { type: 'Straight', point: transformPointByMatrix(matrix, midPt2) }, true);\n        (this.segments).push(segments);\n        segment = this.getSegmentElement(this, segment);\n    };\n    Connector.prototype.getBpmnAssociationFlow = function () {\n        if ((this.shape.association) === 'Default') {\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n        }\n        if ((this.shape.association) === 'Directional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.style.fill = 'black';\n            this.targetDecorator.shape = 'Arrow';\n        }\n        if ((this.shape.association) === 'BiDirectional') {\n            this.style.strokeDashArray = '2 2';\n            this.targetDecorator.shape = 'Arrow';\n            this.targetDecorator.style.fill = 'black';\n            this.sourceDecorator.shape = 'Arrow';\n            this.sourceDecorator.style.fill = 'white';\n            this.sourceDecorator.width = 5;\n            this.sourceDecorator.height = 10;\n        }\n    };\n    Connector.prototype.getBpmnMessageFlow = function () {\n        var segmentMessage = new PathElement();\n        this.style.strokeDashArray = '4 4';\n        this.targetDecorator.shape = 'Arrow';\n        this.targetDecorator.width = 5;\n        this.targetDecorator.height = 10;\n        this.sourceDecorator.shape = 'Circle';\n        if (((this.shape.message) === 'InitiatingMessage') ||\n            ((this.shape.message) === 'NonInitiatingMessage')) {\n            segmentMessage.id = this.id + '_' + (this.shape.message);\n            segmentMessage.width = 25;\n            segmentMessage.height = 15;\n            segmentMessage.data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n            segmentMessage.horizontalAlignment = 'Center';\n            segmentMessage.verticalAlignment = 'Center';\n            segmentMessage.transform = Transform.Self;\n            segmentMessage.style.fill = (this.shape.message) === 'NonInitiatingMessage' ? 'lightgrey' : 'white';\n        }\n        return segmentMessage;\n    };\n    /** @private */\n    Connector.prototype.distance = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Connector.prototype.findPath = function (sourcePt, targetPt) {\n        var beginningpoint = { x: sourcePt.x, y: sourcePt.y };\n        var distance = this.distance(sourcePt, targetPt);\n        distance = Math.min(30, distance / 2);\n        var angle = findAngle(sourcePt, targetPt);\n        var transferpoint = Point.transform({ x: beginningpoint.x, y: beginningpoint.y }, angle, distance);\n        var startpoint1 = Point.transform({ x: transferpoint.x, y: transferpoint.y }, angle, -12);\n        var endpoint1 = Point.transform({ x: startpoint1.x, y: startpoint1.y }, angle, 12 * 2);\n        var path = 'M' + startpoint1.x + ' ' + startpoint1.y + ' L' + endpoint1.x + ' ' + endpoint1.y;\n        return [path, transferpoint];\n    };\n    /** @private */\n    Connector.prototype.getAnnotationElement = function (annotation, points, bounds, getDescription, diagramId) {\n        annotation.id = annotation.id || randomId();\n        var textele;\n        if (diagramId && annotation.template) {\n            textele = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            textele.content = annotation.template;\n        }\n        else {\n            textele = new TextElement();\n            textele.content = annotation.content;\n            textele.style.textOverflow = 'Wrap';\n        }\n        textele.constraints = annotation.constraints;\n        textele.visible = annotation.visibility;\n        textele.rotateAngle = annotation.rotateAngle;\n        textele.horizontalAlignment = annotation.horizontalAlignment;\n        textele.verticalAlignment = annotation.verticalAlignment;\n        textele.width = annotation.width;\n        textele.height = annotation.height;\n        if (bounds.width !== undefined && !annotation.template) {\n            textele.width = (annotation.width || bounds.width) - annotation.margin.left - annotation.margin.right;\n        }\n        textele.margin = annotation.margin;\n        textele.id = this.id + '_' + annotation.id;\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        textele.style = annotation.style;\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        var description = getFunction(getDescription);\n        if (description) {\n            wrapperContent = description(annotation, this);\n        }\n        textele.description = wrapperContent ? wrapperContent : textele.id;\n        this.updateAnnotation(annotation, points, bounds, textele);\n        return textele;\n    };\n    /** @private */\n    Connector.prototype.updateAnnotation = function (annotation, points, bounds, textElement, canRefresh) {\n        var getPointloop;\n        var newPoint;\n        var align;\n        var hAlign;\n        var vAlign;\n        var offsetPoint;\n        var pivotPoint = { x: 0, y: 0 };\n        if (!(textElement instanceof DiagramHtmlElement) && (!canRefresh)) {\n            textElement.refreshTextElement();\n        }\n        textElement.width = (annotation.width || bounds.width);\n        getPointloop = getAnnotationPosition(points, annotation, bounds);\n        newPoint = getPointloop.point;\n        if (annotation.segmentAngle) {\n            textElement.rotateAngle = annotation.rotateAngle + getPointloop.angle;\n            textElement.rotateAngle = (textElement.rotateAngle + 360) % 360;\n        }\n        if (bounds.width === 0) {\n            bounds.width = this.style.strokeWidth;\n        }\n        if (bounds.height === 0) {\n            bounds.height = this.style.strokeWidth;\n        }\n        offsetPoint = { x: ((newPoint.x - bounds.x) / bounds.width), y: ((newPoint.y - bounds.y) / bounds.height) };\n        pivotPoint.x = bounds.width * offsetPoint.x;\n        pivotPoint.y = bounds.height * offsetPoint.y;\n        align = alignLabelOnSegments(annotation, getPointloop.angle, points);\n        hAlign = align.hAlign;\n        vAlign = align.vAlign;\n        var horizor;\n        var verzor;\n        if (hAlign === 'left') {\n            horizor = 'Left';\n            pivotPoint.x += annotation.displacement.x;\n        }\n        else if (hAlign === 'right') {\n            horizor = 'Right';\n            pivotPoint.x -= annotation.displacement.x;\n        }\n        else if (hAlign === 'center') {\n            horizor = 'Center';\n        }\n        if (vAlign === 'top') {\n            verzor = 'Top';\n            pivotPoint.y += annotation.displacement.y;\n        }\n        else if (vAlign === 'bottom') {\n            verzor = 'Bottom';\n            pivotPoint.y -= annotation.displacement.y;\n        }\n        else if (vAlign === 'center') {\n            verzor = 'Center';\n        }\n        textElement.horizontalAlignment = horizor;\n        textElement.verticalAlignment = verzor;\n        textElement.setOffsetWithRespectToBounds(pivotPoint.x, pivotPoint.y, 'Absolute');\n        textElement.relativeMode = 'Point';\n    };\n    /** @private */\n    Connector.prototype.getConnectorPoints = function (type, points, layoutOrientation) {\n        var width = Math.abs(this.sourcePoint.x - this.targetPoint.x);\n        var height = Math.abs(this.sourcePoint.y - this.targetPoint.y);\n        points = findConnectorPoints(this, layoutOrientation);\n        var newPoints = points.slice(0);\n        if (newPoints && newPoints.length > 0) {\n            this.sourcePoint = newPoints[0];\n            this.targetPoint = newPoints[newPoints.length - 1];\n        }\n        return newPoints;\n    };\n    /** @private */\n    Connector.prototype.clipDecorator = function (connector, points, isSource) {\n        var point = { x: 0, y: 0 };\n        var start = { x: 0, y: 0 };\n        var end = { x: 0, y: 0 };\n        var length = points.length;\n        start = !isSource ? points[length - 1] : points[0];\n        end = !isSource ? points[length - 2] : points[1];\n        var len = Point.distancePoints(start, end);\n        len = (len === 0) ? 1 : len;\n        var width = connector.style.strokeWidth - 1;\n        point.x = (Math.round(start.x + width * (end.x - start.x) / len));\n        point.y = (Math.round(start.y + width * (end.y - start.y) / len));\n        var strokeWidth = 1;\n        var node = isSource ? connector.sourceWrapper : connector.targetWrapper;\n        if (node) {\n            strokeWidth = node.style.strokeWidth;\n        }\n        if ((isSource && connector.sourceDecorator.shape !== 'None') ||\n            (!isSource && connector.targetDecorator.shape !== 'None')) {\n            point = Point.adjustPoint(point, end, true, (strokeWidth / 2));\n        }\n        return point;\n    };\n    /** @private */\n    Connector.prototype.clipDecorators = function (connector, pts) {\n        if (connector.sourceDecorator.shape !== 'None') {\n            pts[0] = this.clipDecorator(connector, pts, true);\n        }\n        if (connector.targetDecorator.shape !== 'None') {\n            pts[pts.length - 1] = this.clipDecorator(connector, pts, false);\n        }\n        return pts;\n    };\n    /** @private */\n    Connector.prototype.updateSegmentElement = function (connector, points, element) {\n        var segmentPath;\n        var bounds = new Rect();\n        var point;\n        segmentPath = this.getSegmentPath(connector, points);\n        if (connector.type === 'Bezier') {\n            if (this.segments.length > 0) {\n                for (var i = 0; i < this.segments.length; i++) {\n                    var segment = this.segments[i];\n                    var connectorSegment = connector.segments[i];\n                    var point1 = !Point.isEmptyPoint(segment.point1) ? connectorSegment.point1 : connectorSegment.bezierPoint1;\n                    var point2 = !Point.isEmptyPoint(segment.point2) ? connectorSegment.point2 : connectorSegment.bezierPoint2;\n                    bounds.uniteRect(getBezierBounds(segment.points[0], point1, point2, segment.points[1], connector));\n                }\n            }\n        }\n        else {\n            bounds = Rect.toBounds(points);\n        }\n        element.width = bounds.width;\n        element.height = bounds.height;\n        element.offsetX = bounds.x + element.width / 2;\n        element.offsetY = bounds.y + element.height / 2;\n        element.data = segmentPath;\n        if (connector.wrapper) {\n            connector.wrapper.offsetX = element.offsetX;\n            connector.wrapper.offsetY = element.offsetY;\n            connector.wrapper.width = bounds.width;\n            connector.wrapper.height = bounds.height;\n        }\n        return element;\n    };\n    /** @private */\n    Connector.prototype.getSegmentElement = function (connector, segmentElement) {\n        var bounds;\n        var segmentPath;\n        var points = [];\n        flipConnector(connector);\n        points = this.getConnectorPoints(connector.type);\n        this.intermediatePoints = points;\n        segmentElement.staticSize = true;\n        segmentElement = this.updateSegmentElement(connector, points, segmentElement);\n        return segmentElement;\n    };\n    /** @private */\n    Connector.prototype.getDecoratorElement = function (offsetPoint, adjacentPoint, decorator, isSource, getDescription) {\n        var decEle = new PathElement();\n        var getPath;\n        var angle;\n        decEle.transform = Transform.Self;\n        this.updateDecoratorElement(decEle, offsetPoint, adjacentPoint, decorator);\n        if (getDescription !== undefined) {\n            // tslint:disable-next-line:no-any\n            var wrapperContent = getDescription(decorator, this);\n            decEle.description = wrapperContent ? wrapperContent :\n                ('Specifies the ' + isSource ? 'source' : 'target' + 'port element of the connector');\n        }\n        return decEle;\n    };\n    Connector.prototype.bridgePath = function (connector, path, pointIndex) {\n        var pathData = path;\n        if (connector.bridges.length > 0) {\n            if (connector.type === 'Straight' && connector.segments.length < 2) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (!bridge.rendered) {\n                        pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                        pathData += bridge.path;\n                        bridge.rendered = true;\n                    }\n                }\n            }\n            else if (connector.type === 'Orthogonal' || (connector.type === 'Straight' && connector.segments.length > 1)) {\n                for (var n = 0; n < connector.bridges.length; n++) {\n                    var bridge = connector.bridges[n];\n                    if (bridge.segmentPointIndex === pointIndex) {\n                        if (!bridge.rendered) {\n                            if (bridge.segmentPointIndex === pointIndex) {\n                                pathData += ' L' + bridge.startPoint.x + ' ' + bridge.startPoint.y;\n                                pathData += bridge.path;\n                                bridge.rendered = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return pathData;\n    };\n    /** @private */\n    Connector.prototype.updateDecoratorElement = function (element, pt, adjacentPoint, decorator) {\n        var getPath;\n        var angle;\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n        angle = Point.findAngle(pt, adjacentPoint);\n        getPath = getDecoratorShape(decorator.shape, decorator);\n        var size = new Size(decorator.width, decorator.height);\n        element.pivot.x = decorator.pivot.x;\n        element.pivot.y = decorator.pivot.y;\n        element.style = decorator.style;\n        element.rotateAngle = angle;\n        element.data = getPath;\n        element.canMeasurePath = true;\n        element.width = size.width;\n        element.height = size.height;\n    };\n    /** @private */\n    Connector.prototype.getSegmentPath = function (connector, points) {\n        var path = '';\n        var getPt;\n        var end;\n        var st;\n        var pts = [];\n        var j = 0;\n        while (j < points.length) {\n            pts.push({ x: points[j].x, y: points[j].y });\n            j++;\n        }\n        for (var m = 0; m < connector.bridges.length; m++) {\n            var bridge = connector.bridges[m];\n            bridge.rendered = false;\n        }\n        pts = this.clipDecorators(connector, pts);\n        if (this.cornerRadius > 0 && this.type !== 'Bezier') {\n            for (var j_1 = 0; j_1 < pts.length - 1; j_1++) {\n                getPt = pts[j_1];\n                if (j_1 === 0) {\n                    path = 'M' + getPt.x + ' ' + getPt.y;\n                }\n                var segLength = Point.distancePoints(pts[j_1], pts[j_1 + 1]);\n                if (segLength > 0) {\n                    if (j_1 < pts.length - 2) {\n                        if (segLength < this.cornerRadius * 2) {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, segLength / 2);\n                        }\n                        else {\n                            end = Point.adjustPoint(pts[j_1], pts[j_1 + 1], false, this.cornerRadius);\n                        }\n                    }\n                    else {\n                        end = pts[j_1 + 1];\n                    }\n                    if (j_1 > 0) {\n                        if (segLength < this.cornerRadius * 2) {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, segLength / 2);\n                            if (j_1 < pts.length - 2) {\n                                end = null;\n                            }\n                        }\n                        else {\n                            st = Point.adjustPoint(pts[j_1], pts[j_1 + 1], true, this.cornerRadius);\n                        }\n                    }\n                    if (st) {\n                        path += 'Q' + getPt.x + ' ' + getPt.y + ' ' + st.x + ' ' + st.y;\n                    }\n                    if (end) {\n                        if (connector.bridges.length > 0) {\n                            path = this.bridgePath(connector, path, j_1);\n                            if (connector.type === 'Orthogonal') {\n                                path = this.bridgePath(connector, path, j_1 + 1);\n                            }\n                        }\n                        path += ' L' + end.x + ' ' + end.y;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.type === 'Bezier') {\n                var direction = void 0;\n                var segments = this.segments;\n                for (var j_2 = 0; j_2 < segments.length; j_2++) {\n                    if (pts.length > 2) {\n                        segments[j_2].bezierPoint1 = { x: 0, y: 0 };\n                        segments[j_2].bezierPoint2 = { x: 0, y: 0 };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point1) && !segments[j_2].vector1.angle && !segments[j_2].vector1.distance) {\n                        if ((connector.sourceID || this.sourcePortID) && this.sourceWrapper) {\n                            direction = getDirection(this.sourceWrapper.bounds, pts[j_2], true);\n                        }\n                        segments[j_2].bezierPoint1 = getBezierPoints(pts[j_2], pts[j_2 + 1], direction);\n                    }\n                    else if (segments[j_2].vector1.angle || segments[j_2].vector1.distance) {\n                        segments[j_2].bezierPoint1 = Point.transform(pts[j_2], segments[j_2].vector1.angle, segments[j_2].vector1.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint1 = {\n                            x: segments[j_2].point1.x || segments[j_2].bezierPoint1.x,\n                            y: segments[j_2].point1.y || segments[j_2].bezierPoint1.y\n                        };\n                    }\n                    if (Point.isEmptyPoint(segments[j_2].point2) && !segments[j_2].vector2.angle && !segments[j_2].vector2.distance) {\n                        if ((connector.targetID || this.targetPortID) && this.targetWrapper) {\n                            direction = getDirection(this.targetWrapper.bounds, pts[j_2 + 1], true);\n                        }\n                        segments[j_2].bezierPoint2 = getBezierPoints(pts[j_2 + 1], pts[j_2], direction);\n                    }\n                    else if (segments[j_2].vector2.angle || segments[j_2].vector2.distance) {\n                        segments[j_2].bezierPoint2 = Point.transform(pts[j_2 + 1], segments[j_2].vector2.angle, segments[j_2].vector2.distance);\n                    }\n                    else {\n                        segments[j_2].bezierPoint2 = {\n                            x: segments[j_2].point2.x || segments[j_2].bezierPoint2.x,\n                            y: segments[j_2].point2.y || segments[j_2].bezierPoint2.y\n                        };\n                    }\n                }\n                pts.splice(1, 0, { x: segments[0].bezierPoint1.x, y: segments[0].bezierPoint1.y });\n                pts.splice(pts.length - 1, 0, {\n                    x: segments[segments.length - 1].bezierPoint2.x, y: segments[segments.length - 1].bezierPoint2.y\n                });\n                pts = this.clipDecorators(connector, pts);\n                for (var j_3 = 0; j_3 < segments.length; j_3++) {\n                    if (j_3 === 0) {\n                        path = 'M' + pts[0].x + ' ' + pts[0].y;\n                    }\n                    var lastPoint = (j_3 === segments.length - 1) ? pts[pts.length - 1].x + ' ' + pts[pts.length - 1].y :\n                        segments[j_3].points[segments[j_3].points.length - 1].x + ' ' + segments[j_3].points[segments[j_3].points.length - 1].y;\n                    path += 'C' +\n                        segments[j_3].bezierPoint1.x + ' ' + segments[j_3].bezierPoint1.y + ' ' + segments[j_3].bezierPoint2.x + ' '\n                        + segments[j_3].bezierPoint2.y + ' ' + lastPoint;\n                }\n            }\n            else {\n                for (var k = 0; k < pts.length; k++) {\n                    getPt = pts[k];\n                    if (k === 0) {\n                        path = 'M' + getPt.x + ' ' + getPt.y;\n                    }\n                    if (k > 0) {\n                        path = this.bridgePath(connector, path, k);\n                        path += ' ' + 'L' + getPt.x + ' ' + getPt.y;\n                    }\n                }\n            }\n        }\n        return path;\n    };\n    /** @private */\n    Connector.prototype.updateShapeElement = function (connector) {\n        var element;\n        switch (connector.shape.type) {\n            case 'Bpmn':\n                if (connector.wrapper.children[3] instanceof PathElement) {\n                    element = connector.wrapper.children[3];\n                }\n                if (connector.shape.flow === 'Message') {\n                    this.updateShapePosition(connector, element);\n                }\n                break;\n            case 'UmlActivity':\n                if (connector.shape.flow === 'Exception') {\n                    this.getUMLExceptionFlow(connector.wrapper.children[0]);\n                }\n                break;\n        }\n    };\n    /** @private */\n    Connector.prototype.updateShapePosition = function (connector, element) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        var length = 0;\n        var anglePoints = this.intermediatePoints;\n        for (var i = 0; i < anglePoints.length - 1; i++) {\n            length = length + this.distance(anglePoints[i], anglePoints[i + 1]);\n            var offsetLength = length * segmentOffset;\n            if (length >= offsetLength) {\n                angle = findAngle(anglePoints[i], anglePoints[i + 1]);\n                pt = Point.transform(anglePoints[i], angle, offsetLength);\n            }\n        }\n        element.offsetX = pt.x;\n        element.offsetY = pt.y;\n    };\n    /** @hidden */\n    Connector.prototype.scale = function (sw, sh, width, height, refObject) {\n        var tx = 0;\n        var ty = 0;\n        if (this.wrapper && this.wrapper.outerBounds) {\n            var outerBounds = getOuterBounds(this);\n            var connWidth = (this.wrapper.bounds.width || this.style.strokeWidth || 1) - 2;\n            var connHeight = (this.wrapper.bounds.height || this.style.strokeWidth || 1) - 2;\n            tx = (outerBounds.width - connWidth);\n            ty = (outerBounds.height - connHeight);\n            sw = (width - (Math.max(tx, ty))) / connWidth;\n            sh = (height - (Math.max(tx, ty))) / connHeight;\n            tx = ty = Math.min(tx, ty);\n        }\n        sw = sh = Math.min(sw, sh);\n        var matrix = identityMatrix();\n        refObject = refObject || this.wrapper;\n        rotateMatrix(matrix, -refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        scaleMatrix(matrix, sw, sh, refObject.offsetX, refObject.offsetY);\n        rotateMatrix(matrix, refObject.rotateAngle, refObject.offsetX, refObject.offsetY);\n        var points = transformPointsByMatrix(matrix, this.intermediatePoints);\n        this.sourcePoint = points[0];\n        this.targetPoint = points[points.length - 1];\n        points = this.intermediatePoints = findConnectorPoints(this);\n        updateConnector(this, points);\n        return { x: tx, y: ty };\n    };\n    /**\n     * @private\n     * Returns the name of class Connector\n     */\n    Connector.prototype.getClassName = function () {\n        return 'Connector';\n    };\n    __decorate([\n        ComplexFactory(getConnectorType)\n    ], Connector.prototype, \"shape\", void 0);\n    __decorate([\n        Property(ConnectorConstraints.Default)\n    ], Connector.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"bridgeSpace\", void 0);\n    __decorate([\n        Collection([], PathAnnotation)\n    ], Connector.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"sourcePoint\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], Connector.prototype, \"targetPoint\", void 0);\n    __decorate([\n        CollectionFactory(getSegmentType)\n    ], Connector.prototype, \"segments\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(10)\n    ], Connector.prototype, \"hitPadding\", void 0);\n    __decorate([\n        Property('Straight')\n    ], Connector.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ shape: 'None' }, Decorator)\n    ], Connector.prototype, \"sourceDecorator\", void 0);\n    __decorate([\n        Complex({ shape: 'Arrow' }, Decorator)\n    ], Connector.prototype, \"targetDecorator\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Connector.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"sourcePortID\", void 0);\n    __decorate([\n        Property('')\n    ], Connector.prototype, \"targetPortID\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"sourcePadding\", void 0);\n    __decorate([\n        Property(0)\n    ], Connector.prototype, \"targetPadding\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 1, strokeColor: 'black' }, StrokeStyle)\n    ], Connector.prototype, \"style\", void 0);\n    __decorate([\n        Property(null)\n    ], Connector.prototype, \"wrapper\", void 0);\n    return Connector;\n}(NodeBase));\nexport { Connector };\n","import { Node } from './../objects/node';\nimport { NodeConstraints, ConnectorConstraints, DiagramConstraints, DiagramTools, DiagramAction, RendererAction } from '../enum/enum';\nimport { AnnotationConstraints, PortConstraints } from '../enum/enum';\nimport { Connector } from './../objects/connector';\nimport { Selector } from './../interaction/selector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\n/**\n * constraints-util module contains the common constraints\n */\n/** @private */\nexport function canSelect(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Select;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Select;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Select;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canMove(node) {\n    if (node) {\n        var state = 0;\n        if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n            state = node.constraints & AnnotationConstraints.Drag;\n        }\n        else if (node instanceof Connector) {\n            state = node.constraints & ConnectorConstraints.Drag;\n        }\n        else if (node instanceof Selector) {\n            state = 1;\n        }\n        else {\n            state = node.constraints & NodeConstraints.Drag;\n        }\n        return state;\n    }\n    return 1;\n}\n/** @private */\nexport function canEnablePointerEvents(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.PointerEvents;\n    }\n    else {\n        state = node.constraints & NodeConstraints.PointerEvents;\n    }\n    return state;\n}\n/** @private */\nexport function canDelete(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.Delete;\n    }\n    else {\n        state = node.constraints & NodeConstraints.Delete;\n    }\n    return state;\n}\n/** @private */\nexport function canBridge(connector, diagram) {\n    var state = 0;\n    if (connector.constraints & ConnectorConstraints.Bridging) {\n        state = connector.constraints & ConnectorConstraints.Bridging;\n    }\n    else if (connector.constraints & ConnectorConstraints.InheritBridging) {\n        state = diagram.constraints & DiagramConstraints.Bridging;\n    }\n    else {\n        state = 0;\n    }\n    return state;\n}\n/** @private */\nexport function canDragSourceEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragSourceEnd;\n}\n/** @private */\nexport function canDragTargetEnd(connector) {\n    return connector.constraints & ConnectorConstraints.DragTargetEnd;\n}\n/** @private */\nexport function canDragSegmentThumb(connector) {\n    return connector.constraints & ConnectorConstraints.DragSegmentThumb;\n}\n/** @private */\nexport function canRotate(node) {\n    if ((node instanceof ShapeAnnotation) || (node instanceof PathAnnotation)) {\n        return node.constraints & AnnotationConstraints.Rotate;\n    }\n    else {\n        return node.constraints & NodeConstraints.Rotate;\n    }\n}\n/** @private */\nexport function canShadow(node) {\n    return node.constraints & NodeConstraints.Shadow;\n}\n/** @private */\nexport function canInConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.InConnect)) {\n        return node.constraints & NodeConstraints.InConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortInConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.InConnect)) {\n            return port.constraints & PortConstraints.InConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canOutConnect(node) {\n    if ((node instanceof Node) && (node.constraints & NodeConstraints.OutConnect)) {\n        return node.constraints & NodeConstraints.OutConnect;\n    }\n    return 0;\n}\n/** @private */\nexport function canPortOutConnect(port) {\n    if (port && port.constraints) {\n        if (!(port.constraints & PortConstraints.None) && (port.constraints & PortConstraints.OutConnect)) {\n            return port.constraints & PortConstraints.OutConnect;\n        }\n    }\n    return 0;\n}\n/** @private */\nexport function canResize(node, direction) {\n    var returnValue = 0;\n    if (node instanceof ShapeAnnotation || node instanceof PathAnnotation) {\n        returnValue = node.constraints & AnnotationConstraints.Resize;\n    }\n    else if (node) {\n        if (direction === 'SouthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthEast;\n        }\n        else if (direction === 'East') {\n            returnValue = node.constraints & NodeConstraints.ResizeEast;\n        }\n        else if (direction === 'NorthEast') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthEast;\n        }\n        else if (direction === 'South') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouth;\n        }\n        else if (direction === 'North') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorth;\n        }\n        else if (direction === 'SouthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeSouthWest;\n        }\n        else if (direction === 'West') {\n            returnValue = node.constraints & NodeConstraints.ResizeWest;\n        }\n        else if (direction === 'NorthWest') {\n            returnValue = node.constraints & NodeConstraints.ResizeNorthWest;\n        }\n    }\n    return returnValue;\n}\n/** @private */\nexport function canAllowDrop(node) {\n    var state = 0;\n    if (node instanceof Connector) {\n        state = node.constraints & ConnectorConstraints.AllowDrop;\n    }\n    else {\n        state = node.constraints & NodeConstraints.AllowDrop;\n    }\n    return state;\n}\n/** @private */\nexport function canVitualize(diagram) {\n    return diagram.constraints & DiagramConstraints.Virtualization;\n}\n/** @private */\nexport function canEnableToolTip(node, diagram) {\n    var state = 0;\n    if (node instanceof Connector) {\n        if (node.constraints & ConnectorConstraints.Tooltip) {\n            state = node.constraints & ConnectorConstraints.Tooltip;\n        }\n        else if (node.constraints & ConnectorConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    else {\n        if (node.constraints & NodeConstraints.Tooltip) {\n            state = node.constraints & NodeConstraints.Tooltip;\n        }\n        else if (node.constraints & NodeConstraints.InheritTooltip) {\n            state = diagram.constraints & DiagramConstraints.Tooltip;\n        }\n    }\n    return state;\n}\n/** @private */\nexport function canSingleSelect(model) {\n    return model.tool & DiagramTools.SingleSelect;\n}\n/** @private */\nexport function canMultiSelect(model) {\n    return model.tool & DiagramTools.MultipleSelect;\n}\n/** @private */\nexport function canZoomPan(model) {\n    return model.tool & DiagramTools.ZoomPan;\n}\n/** @private */\nexport function canContinuousDraw(model) {\n    return model.tool & DiagramTools.ContinuousDraw;\n}\n/** @private */\nexport function canDrawOnce(model) {\n    return model.tool & DiagramTools.DrawOnce;\n}\n/** @private */\nexport function defaultTool(model) {\n    return (model.tool & DiagramTools.SingleSelect) || (model.tool & DiagramTools.MultipleSelect);\n}\n/** @private */\nexport function canZoom(model) {\n    return model.constraints & DiagramConstraints.Zoom;\n}\n/** @private */\nexport function canPan(model) {\n    return model.constraints & DiagramConstraints.Pan;\n}\n/** @private */\nexport function canUserInteract(model) {\n    return model.constraints & DiagramConstraints.UserInteraction;\n}\n/** @private */\nexport function canApiInteract(model) {\n    return model.constraints & DiagramConstraints.ApiUpdate;\n}\n/** @private */\nexport function canPanX(model) {\n    return ((model.constraints & DiagramConstraints.PanX));\n}\n/** @private */\nexport function canPanY(model) {\n    return ((model.constraints & DiagramConstraints.PanY));\n}\n/** @private */\nexport function canZoomTextEdit(diagram) {\n    return ((diagram.constraints & DiagramConstraints.ZoomTextEdit));\n}\n/** @private */\nexport function canPageEditable(model) {\n    return canApiInteract(model) || (model.diagramActions & DiagramAction.ToolAction);\n}\n/** @private */\nexport function enableReadOnly(annotation, node) {\n    var enumValue = 0;\n    enumValue = (node instanceof Connector) ? ConnectorConstraints.ReadOnly : NodeConstraints.ReadOnly;\n    if (node.shape.type === 'Text') {\n        return node.constraints & NodeConstraints.ReadOnly;\n    }\n    else if (node.constraints & enumValue) {\n        if (annotation.constraints & AnnotationConstraints.InheritReadOnly) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (annotation.constraints & AnnotationConstraints.ReadOnly) {\n        return 1;\n    }\n    return 0;\n}\n/** @private */\nexport function canDraw(port, diagram) {\n    return port.constraints & PortConstraints.Draw;\n}\n/** @private */\nexport function canDrag(port, diagram) {\n    return port.constraints & PortConstraints.Drag;\n}\n/** @private */\nexport function canPreventClearSelection(diagramActions) {\n    if (diagramActions & DiagramAction.PreventClearSelection) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function canDrawThumbs(rendererActions) {\n    if (!(rendererActions & RendererAction.DrawSelectorBorder)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/** @private */\nexport function avoidDrawSelector(rendererActions) {\n    if ((rendererActions & RendererAction.PreventRenderSelector)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n","import { NodeConstraints, AnnotationConstraints } from '../enum/enum';\nimport { Node } from '../objects/node';\nimport { randomId } from './../utility/base-util';\n/**\n * These utility methods help to process the data and to convert it to desired dimensions\n */\n/** @private */\nexport function getULMClassifierShapes(content, node, diagram) {\n    var classifier;\n    var textWrap = 'NoWrap';\n    if (node.shape.classifier === 'Class') {\n        classifier = node.shape.class;\n    }\n    else if (node.shape.classifier === 'Enumeration') {\n        classifier = node.shape.enumeration;\n    }\n    else if (node.shape.classifier === 'Interface') {\n        classifier = node.shape.interface;\n    }\n    var attributeText = '';\n    node.container = { type: 'Stack', orientation: 'Vertical' };\n    node.constraints = (NodeConstraints.Default | NodeConstraints.HideThumbs) &\n        ~(NodeConstraints.Rotate | NodeConstraints.Resize);\n    node.style = {\n        fill: node.style.fill, strokeColor: 'black',\n        strokeWidth: 1.5\n    };\n    node.children = [];\n    if (node.maxWidth) {\n        textWrap = 'Wrap';\n    }\n    var newObj = new Node(diagram, 'nodes', {\n        id: node.id + '_umlClass_header',\n        annotations: [\n            {\n                id: 'name', content: classifier.name,\n                offset: { x: 0.5, y: 0.65 }, margin: { left: 10, right: 10 },\n                style: {\n                    bold: true, fontSize: 14, color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }\n            }, {\n                content: '<<' + node.shape.classifier + '>>', margin: { left: 10, right: 10 },\n                id: 'class', style: {\n                    fontSize: classifier.style.fontSize,\n                    color: classifier.style.color, fill: classifier.style.fill,\n                    textWrapping: textWrap\n                }, offset: { x: 0.5, y: 0.3 }, constraints: AnnotationConstraints.ReadOnly\n            },\n        ],\n        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n        verticalAlignment: 'Stretch',\n        horizontalAlignment: 'Stretch',\n        style: { fill: node.style.fill, strokeColor: '#ffffff00' }\n    }, true);\n    diagram.initObject(newObj);\n    diagram.nodes.push(newObj);\n    node.children.push(newObj.id);\n    getClassNodes(node, diagram, classifier, textWrap);\n    getClassMembers(node, diagram, classifier, textWrap);\n    node.offsetX = node.offsetX;\n    node.offsetY = node.offsetY;\n    node.style.fill = node.style.fill;\n    node.borderColor = node.borderColor;\n    diagram.initObject(node);\n    return content;\n}\n/** @private */\nexport function getClassNodes(node, diagram, classifier, textWrap) {\n    if (node.shape.classifier === 'Enumeration') {\n        var member = classifier.members;\n        if (member && member.length) {\n            addSeparator(node, diagram);\n            var memberText = '';\n            for (var i = 0; i < member.length; i++) {\n                var members = member[i];\n                if (members.name !== '') {\n                    memberText += members.name;\n                }\n                if (i !== member.length) {\n                    var style = getStyle(node, members);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlMember',\n                        annotations: [\n                            {\n                                id: 'name', content: memberText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        style: { fill: node.style.fill, strokeColor: '#ffffff00', textWrapping: textWrap },\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    memberText = '';\n                    if (members.isSeparator && (i !== member.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n    else {\n        var attributes = classifier.attributes;\n        if (attributes.length) {\n            var attributeText = '';\n            addSeparator(node, diagram);\n            for (var i = 0; i < attributes.length; i++) {\n                var text = void 0;\n                var attribute = attributes[i];\n                if (attribute.scope && (attribute).scope === 'Public') {\n                    text = ' +';\n                }\n                else if (attribute.scope && attribute.scope === 'Private') {\n                    text = '-';\n                }\n                else if (attribute.scope && attribute.scope === 'Protected') {\n                    text = '#';\n                }\n                else {\n                    text = '~';\n                }\n                if (attribute.name !== '') {\n                    if (text) {\n                        attributeText += text + ' ' + attribute.name + ' ' + ': ' + attribute.type;\n                    }\n                }\n                if (i !== attributes.length) {\n                    var style = getStyle(node, attribute);\n                    var temp = new Node(diagram, 'nodes', {\n                        id: randomId() + '_umlProperty', style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                        annotations: [\n                            {\n                                id: 'name', content: attributeText, offset: { x: 0, y: 0.5 },\n                                style: {\n                                    bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                    textWrapping: textWrap\n                                },\n                                margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                            }\n                        ], verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                        constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                        minHeight: 25\n                    }, true);\n                    diagram.initObject(temp);\n                    diagram.nodes.push(temp);\n                    node.children.push(temp.id);\n                    attributeText = '';\n                    if (attribute.isSeparator && (i !== attributes.length - 1)) {\n                        addSeparator(node, diagram);\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function getClassMembers(node, diagram, classifier, textWrap) {\n    if (classifier.methods && classifier.methods.length) {\n        var methods = classifier.methods;\n        addSeparator(node, diagram);\n        var argumentText = '';\n        var methodText = '';\n        var text = void 0;\n        for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.scope && method.scope === 'Public') {\n                text = ' +';\n            }\n            else if (method.scope && method.scope === 'Private') {\n                text = '-';\n            }\n            else if (method.scope && method.scope === 'Protected') {\n                text = '#';\n            }\n            else {\n                text = '~';\n            }\n            if (method.parameters) {\n                for (var j = 0; j < method.parameters.length; j++) {\n                    if (method.parameters[j].type) {\n                        argumentText += method.parameters[j].name + ':' + method.parameters[j].type;\n                    }\n                    else {\n                        argumentText += method.parameters[j].name;\n                    }\n                    if (j !== method.parameters.length - 1) {\n                        argumentText += ',';\n                    }\n                }\n            }\n            if (method.name !== '') {\n                if (text) {\n                    methodText += text + ' ' + method.name + '(' + argumentText + ')' + ' ' + ':' + ' ' + method.type;\n                }\n            }\n            if (i !== methods.length) {\n                var style = getStyle(node, method);\n                var temp = new Node(diagram, 'nodes', {\n                    id: randomId() + '_umlMethods', verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    annotations: [\n                        {\n                            id: 'name', content: methodText, offset: { x: 0, y: 0.5 },\n                            style: {\n                                bold: true, fontSize: style.fontSize, color: style.color, fill: style.fill,\n                                textWrapping: textWrap\n                            },\n                            margin: { left: 14, right: 5 }, horizontalAlignment: 'Left'\n                        }\n                    ],\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' }, minHeight: 25,\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize)\n                }, true);\n                diagram.initObject(temp);\n                diagram.nodes.push(temp);\n                node.children.push(temp.id);\n                methodText = '';\n                if (method.isSeparator && (i !== methods.length - 1)) {\n                    addSeparator(node, diagram);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function addSeparator(stack, diagram) {\n    var lineObject = new Node(diagram, 'nodes', {\n        id: randomId() + '_path', height: 1, constraints: NodeConstraints.Default & ~(NodeConstraints.Select),\n        verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n    }, true);\n    diagram.initObject(lineObject);\n    diagram.nodes.push(lineObject);\n    stack.children.push(lineObject.id);\n}\n/** @private */\nexport function getStyle(stack, node) {\n    var newStyle = {};\n    var style = node.style;\n    newStyle.fill = (style.fill !== 'transparent') ? style.fill : stack.style.fill;\n    newStyle.color = style.color;\n    newStyle.fontSize = (style.fontSize !== 12) ? style.fontSize : stack.style.fontSize;\n    newStyle.strokeColor = (style.strokeColor !== 'black') ? style.strokeColor : stack.style.strokeColor;\n    newStyle.strokeWidth = (style.strokeWidth !== 1) ? style.strokeWidth : stack.style.strokeWidth;\n    return newStyle;\n}\n","import { Node } from '../objects/node';\nimport { Selector } from './selector';\nimport { Size } from '../primitives/size';\nimport { cloneObject } from './../utility/base-util';\nimport { getObjectType } from './../utility/diagram-util';\nimport { Rect } from '../primitives/rect';\nimport { getAdornerLayerSvg } from '../utility/dom-util';\nimport { swimLaneMeasureAndArrange, checkLaneSize, checkPhaseOffset } from '../utility/swim-lane-util';\nimport { updatePhaseMaxWidth, updateHeaderMaxWidth, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { considerSwimLanePadding } from '../utility/swim-lane-util';\nimport { DiagramAction } from '../enum/enum';\n/**\n * Interaction for Container\n */\n//#region canvas Container interaction\n/** @private */\nexport function updateCanvasBounds(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    var groupAction = false;\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((isBoundsUpdate || (wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y)))) {\n                var columnIndex = void 0;\n                var parentWrapper = void 0;\n                var y = wrapper.bounds.y;\n                var x = wrapper.bounds.x;\n                var parent_1 = diagram.nameTable[container.parentId] || container;\n                var shape = parent_1.shape;\n                if (shape.type === 'SwimLane') {\n                    groupAction = updateLaneBoundsAfterAddChild(container, parent_1, obj, diagram, true);\n                }\n                else {\n                    var parent_2 = diagram.nameTable[container.parentId] || container;\n                    var shape_1 = parent_2.shape;\n                    parentWrapper = parent_2.wrapper;\n                    if (wrapper.actualSize.width < wrapper.outerBounds.width &&\n                        (!(wrapper.bounds.x > wrapper.outerBounds.x))) {\n                        if (container.rowIndex !== undefined) {\n                            columnIndex = parent_2.columns.length - 1;\n                            parentWrapper.updateColumnWidth(container.columnIndex, wrapper.outerBounds.width, true);\n                            if (shape_1.orientation === 'Horizontal' && shape_1.phaseSize) {\n                                updatePhaseMaxWidth(parent_2, diagram, wrapper, container.columnIndex);\n                            }\n                            updateHeaderMaxWidth(diagram, parent_2);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, (1 + ((wrapper.outerBounds.width - wrapper.actualSize.width) / wrapper.actualSize.width)), 1, ((wrapper.outerBounds.x < wrapper.bounds.x) ? { x: 1, y: 0.5 } : { x: 0, y: 0.5 }));\n                        }\n                    }\n                    if (wrapper.actualSize.height < wrapper.outerBounds.height &&\n                        (!(wrapper.bounds.y > wrapper.outerBounds.y))) {\n                        if (container.rowIndex !== undefined) {\n                            parentWrapper.updateRowHeight(container.rowIndex, wrapper.outerBounds.height, true);\n                            diagram.drag(parent_2, x - wrapper.bounds.x, y - wrapper.bounds.y);\n                        }\n                        else {\n                            diagram.scale(container, 1, (1 + ((wrapper.outerBounds.height - wrapper.actualSize.height) / wrapper.actualSize.height)), ((wrapper.outerBounds.y < wrapper.bounds.y) ? { x: 0.5, y: 1 } : { x: 0.5, y: 0 }));\n                        }\n                    }\n                }\n            }\n            diagram.select([obj]);\n            updateConnectorsProperties(connectorList, diagram);\n        }\n        diagram.protectPropertyChange(false);\n    }\n    return groupAction;\n}\nexport function removeChildInContainer(diagram, obj, position, isBoundsUpdate) {\n    var container;\n    var connectorList = [];\n    if (checkParentAsContainer(diagram, obj, true)) {\n        diagram.protectPropertyChange(true);\n        container = diagram.nameTable[obj.parentId];\n        var wrapper = container.wrapper;\n        if (container && container.container.type === 'Canvas') {\n            if ((!isBoundsUpdate && (!(wrapper.bounds.x <= position.x && wrapper.bounds.right >= position.x &&\n                (wrapper.bounds.y <= position.y && wrapper.bounds.bottom >= position.y))))) {\n                var undoObj = cloneObject(obj);\n                diagram.clearSelection();\n                removeChildrenInLane(diagram, obj);\n                obj.parentId = '';\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(obj)\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.commandHandler.isContainer) {\n                    diagram.commandHandler.isContainer = false;\n                    diagram.endGroupAction();\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function findBounds(obj, columnIndex, isHeader) {\n    var rect = new Rect();\n    var rows = (obj.shape.type === 'SwimLane') ?\n        obj.wrapper.children[0].rows : obj.wrapper.rows;\n    for (var i = ((isHeader) ? 1 : 0); i < rows.length; i++) {\n        rect.uniteRect(rows[i].cells[columnIndex].bounds);\n    }\n    return rect;\n}\n/** @private */\nexport function createHelper(diagram, obj) {\n    var newObj;\n    var cloneObject = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        cloneObject[prop] = obj[prop];\n    }\n    if (getObjectType(obj) === Node) {\n        newObj = new Node(diagram, 'nodes', cloneObject, true);\n        newObj.id = obj.id;\n        diagram.initObject(newObj);\n    }\n    diagram.updateDiagramObject(newObj);\n    return newObj;\n}\n/** @private */\nexport function renderContainerHelper(diagram, obj) {\n    var object;\n    var nodes;\n    if (diagram.selectedObject.helperObject) {\n        nodes = diagram.selectedObject.helperObject;\n    }\n    else if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        if (obj instanceof Selector && obj.nodes.length + obj.connectors.length === 1) {\n            object = (obj.nodes.length > 0) ? obj.nodes[0] : obj.connectors[0];\n        }\n        else {\n            object = obj;\n        }\n        diagram.selectedObject.actualObject = object;\n        var container = diagram.selectedItems.wrapper.children[0];\n        if (checkParentAsContainer(diagram, object)) {\n            var node = {\n                id: 'helper',\n                rotateAngle: container.rotateAngle,\n                offsetX: container.offsetX, offsetY: container.offsetY,\n                minWidth: container.minWidth, minHeight: container.minHeight,\n                maxWidth: container.maxWidth, maxHeight: container.maxHeight,\n                width: container.actualSize.width,\n                height: container.actualSize.height,\n                style: { strokeDashArray: '2 2', fill: 'transparent', strokeColor: '#7D7D7D', strokeWidth: 2 }\n            };\n            nodes = createHelper(diagram, node);\n            diagram.selectedObject.helperObject = nodes;\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function checkParentAsContainer(diagram, obj, isChild) {\n    var parentNode = (isChild) ? diagram.nameTable[obj.parentId] :\n        (diagram.nameTable[obj.parentId] || obj);\n    if (parentNode && parentNode.container) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkChildNodeInContainer(diagram, obj) {\n    var parentNode = diagram.nameTable[obj.parentId];\n    if (parentNode.container.type === 'Canvas') {\n        obj.margin.left = (obj.offsetX - parentNode.wrapper.bounds.x - (obj.width / 2));\n        obj.margin.top = (obj.offsetY - parentNode.wrapper.bounds.y - (obj.height / 2));\n    }\n    diagram.nodePropertyChange(obj, {}, {\n        width: obj.width, height: obj.height,\n        offsetX: obj.offsetX, offsetY: obj.offsetY,\n        margin: {\n            left: obj.margin.left,\n            right: obj.margin.right, top: obj.margin.top,\n            bottom: obj.margin.bottom\n        }, rotateAngle: obj.rotateAngle\n    });\n    if (!parentNode.isLane) {\n        parentNode.wrapper.measure(new Size());\n        parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n    }\n}\nfunction removeChildrenInLane(diagram, node) {\n    if (node.parentId !== '') {\n        var prevParentNode = diagram.nameTable[node.parentId];\n        if (prevParentNode.isLane && prevParentNode.parentId) {\n            var swimlane = diagram.nameTable[prevParentNode.parentId];\n            var canvasId = (prevParentNode.id.slice(swimlane.id.length));\n            var prevParentId = canvasId.substring(0, canvasId.length - 1);\n            var lanes = swimlane.shape.lanes;\n            var lane = void 0;\n            for (var i = 0; i < lanes.length; i++) {\n                lane = lanes[i];\n                if (prevParentId === lane.id) {\n                    for (var j = 0; j < lane.children.length; j++) {\n                        if (lane.children[j].id === node.id) {\n                            lane.children.splice(j, 1);\n                            j--;\n                        }\n                    }\n                }\n            }\n        }\n        diagram.deleteChild(node);\n    }\n}\n/**\n * @private\n */\nexport function addChildToContainer(diagram, parent, node, isUndo) {\n    if (!diagram.currentSymbol) {\n        diagram.protectPropertyChange(true);\n        var swimlane = void 0;\n        node = diagram.getObject(node.id) || node;\n        var child = (diagram.nodes.indexOf(node) !== -1) ? node.id : node;\n        if (parent.container.type === 'Canvas') {\n            var left = (node.wrapper.offsetX - node.wrapper.actualSize.width / 2) -\n                (parent.wrapper.offsetX - parent.wrapper.actualSize.width / 2);\n            var top_1 = (node.wrapper.offsetY - node.wrapper.actualSize.height / 2) -\n                (parent.wrapper.offsetY - parent.wrapper.actualSize.height / 2);\n            node.margin.left = left;\n            node.margin.top = top_1;\n        }\n        var container = diagram.nameTable[parent.id];\n        if (!container.children) {\n            container.children = [];\n        }\n        if (container.children.indexOf(node.id) === -1) {\n            removeChildrenInLane(diagram, node);\n            if (diagram.getObject(node.id)) {\n                diagram.removeElements(node);\n            }\n            var undoObj = cloneObject(node);\n            diagram.addChild(container, child);\n            node = diagram.getObject(node.id);\n            if (container.isLane && container.parentId) {\n                swimlane = diagram.nameTable[container.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (container.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (container.isLane && currentParentId === lanes[i].id) {\n                        lanes[i].children.push(node);\n                    }\n                }\n            }\n            diagram.updateDiagramObject(node);\n            if (!container.parentId) {\n                diagram.updateDiagramObject(container);\n            }\n            else if (!isUndo) {\n                updateLaneBoundsAfterAddChild(container, swimlane, node, diagram);\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'ChildCollectionChanged', category: 'Internal',\n                    undoObject: undoObj, redoObject: cloneObject(node)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        diagram.protectPropertyChange(false);\n    }\n}\nexport function updateLaneBoundsAfterAddChild(container, swimLane, node, diagram, isBoundsUpdate) {\n    var undoObject = cloneObject(container);\n    var isUpdateRow;\n    var isGroupAction = false;\n    var padding = swimLane.shape.padding;\n    var containerBounds = container.wrapper.bounds;\n    var containerOuterBounds = container.wrapper.outerBounds;\n    var nodeBounds = node.wrapper.bounds;\n    if (swimLane && swimLane.shape.type === 'SwimLane' &&\n        (containerBounds.right < nodeBounds.right + padding ||\n            containerBounds.bottom < nodeBounds.bottom + padding)) {\n        var grid = swimLane.wrapper.children[0];\n        var x = grid.bounds.x;\n        var y = grid.bounds.y;\n        var size = void 0;\n        if (containerBounds.right < nodeBounds.right + padding &&\n            containerOuterBounds.x <= containerBounds.x) {\n            size = nodeBounds.right - containerBounds.right;\n            isUpdateRow = false;\n            grid.updateColumnWidth(container.columnIndex, containerBounds.width + size, true, padding);\n        }\n        if (containerBounds.bottom < nodeBounds.bottom + padding &&\n            containerOuterBounds.y <= containerBounds.y) {\n            size = nodeBounds.bottom - containerBounds.bottom;\n            isUpdateRow = true;\n            grid.updateRowHeight(container.rowIndex, containerBounds.height + size, true, padding);\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            if (isBoundsUpdate) {\n                diagram.startGroupAction();\n                isGroupAction = true;\n            }\n            if (isUpdateRow !== undefined) {\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObject, redoObject: cloneObject(container)\n                };\n                diagram.addHistoryEntry(entry);\n            }\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        if (swimLane.shape.orientation === 'Horizontal') {\n            updatePhaseMaxWidth(swimLane, diagram, container.wrapper, container.columnIndex);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        diagram.drag(swimLane, x - grid.bounds.x, y - grid.bounds.y);\n        checkPhaseOffset(swimLane, diagram);\n        checkLaneSize(swimLane);\n    }\n    considerSwimLanePadding(diagram, node, padding);\n    return isGroupAction;\n}\n//#endregion\n//# reginon stack panel interaction\n/** @private */\nexport function renderStackHighlighter(element, isVertical, position, diagram, isUml, isSwimlane) {\n    var adornerSvg = getAdornerLayerSvg(diagram.element.id);\n    diagram.diagramRenderer.renderStackHighlighter(element, adornerSvg, diagram.scroller.transform, isVertical, position, isUml, isSwimlane);\n}\n/** @private */\nexport function moveChildInStack(sourceNode, target, diagram, action) {\n    var obj = sourceNode;\n    var parent = diagram.nameTable[obj.parentId];\n    var sourceParent = diagram.nameTable[obj.parentId];\n    if (target && sourceParent && sourceParent.container && sourceParent.container.type === 'Stack' &&\n        target.container && target.container.type === 'Stack' && (sourceParent.id !== target.parentId)) {\n        var value = sourceParent.wrapper.children.indexOf(obj.wrapper);\n        if (value > -1) {\n            diagram.nameTable[obj.id].parentId = target.id;\n            sourceParent.wrapper.children.splice(value, 1);\n        }\n    }\n    if (target && target.parentId && obj.parentId && action === 'Drag' && sourceParent.container.type === 'Stack') {\n        var targetIndex = parent.wrapper.children.indexOf(target.wrapper);\n        var sourceIndex = parent.wrapper.children.indexOf(obj.wrapper);\n        var undoElement = {\n            targetIndex: targetIndex, target: target,\n            sourceIndex: sourceIndex, source: sourceNode\n        };\n        parent.wrapper.children.splice(sourceIndex, 1);\n        parent.wrapper.children.splice(targetIndex, 0, obj.wrapper);\n        var redoElement = {\n            targetIndex: sourceIndex, target: target,\n            sourceIndex: targetIndex, source: sourceNode\n        };\n        var entry = {\n            type: 'StackChildPositionChanged', redoObject: redoElement,\n            undoObject: undoElement, category: 'Internal'\n        };\n        diagram.commandHandler.addHistoryEntry(entry);\n    }\n}\n//#end region\n//# region Swimlane rendering\n//#end region\n","import { Node } from '../objects/node';\nimport { GridPanel, RowDefinition, ColumnDefinition } from '../core/containers/grid';\nimport { Lane, Phase } from '../objects/node';\nimport { DiagramAction, NodeConstraints } from '../enum/enum';\nimport { cloneObject, randomId } from './../utility/base-util';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { Canvas } from '../core/containers/canvas';\nimport { Rect } from '../primitives/rect';\nimport { checkParentAsContainer, findBounds } from '../interaction/container-interaction';\n/**\n * SwimLane modules are used to rendering and interaction.\n */\n/** @private */\nexport function initSwimLane(grid, diagram, node) {\n    var row = [];\n    var columns = [];\n    var index = 0;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    if (shape.header && shape.hasHeader) {\n        createRow(row, shape.header.height);\n    }\n    initGridRow(row, orientation, node);\n    initGridColumns(columns, orientation, node);\n    grid.setDefinitions(row, columns);\n    if (shape.header && shape.hasHeader) {\n        headerDefine(grid, diagram, node);\n        index++;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        for (var k = 0; k < shape.phases.length; k++) {\n            if (shape.phases[k].id === '') {\n                shape.phases[k].id = randomId();\n            }\n            phaseDefine(grid, diagram, node, index, orientation, k);\n        }\n        index++;\n    }\n    if (shape.lanes.length > 0) {\n        for (var k = 0; k < shape.lanes.length; k++) {\n            if (shape.lanes[k].id === '') {\n                shape.lanes[k].id = randomId();\n            }\n            laneCollection(grid, diagram, node, index, k, orientation);\n            index++;\n        }\n    }\n}\n/** @private */\nexport function addObjectToGrid(diagram, grid, parent, object, isHeader, isPhase, isLane, canvas) {\n    var node = new Node(diagram, 'nodes', object, true);\n    node.parentId = parent.id;\n    node.isHeader = (isHeader) ? true : false;\n    node.isPhase = (isPhase) ? true : false;\n    node.isLane = (isLane) ? true : false;\n    var id = (isPhase) ? 'PhaseHeaderParent' : 'LaneHeaderParent';\n    if (canvas) {\n        node[id] = canvas;\n    }\n    node.constraints &= ~(NodeConstraints.InConnect | NodeConstraints.OutConnect);\n    node.constraints |= NodeConstraints.HideThumbs;\n    diagram.initObject(node);\n    diagram.nodes.push(node);\n    if (node.wrapper.children.length > 0) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            if (child instanceof DiagramElement) {\n                child.isCalculateDesiredSize = false;\n            }\n            if (child instanceof TextElement) {\n                child.canConsiderBounds = false;\n                if (!isHeader && (parent.shape.orientation === 'Vertical' && isPhase) ||\n                    (parent.shape.orientation !== 'Vertical' && isLane)) {\n                    child.isLaneOrientation = true;\n                    child.refreshTextElement();\n                }\n            }\n        }\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n    }\n    return node.wrapper;\n}\n/** @private */\nexport function headerDefine(grid, diagram, object) {\n    var maxWidth = 0;\n    var columns = grid.columnDefinitions();\n    var shape = object.shape;\n    for (var i = 0; i < columns.length; i++) {\n        maxWidth += columns[i].width;\n    }\n    var node = {\n        annotations: [{\n                content: shape.header.annotation.content\n            }],\n        style: shape.header.style ? shape.header.style : undefined,\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        rowIndex: 0, columnIndex: 0,\n        maxWidth: maxWidth,\n        container: { type: 'Canvas', orientation: 'Horizontal' }\n    };\n    var wrapper = addObjectToGrid(diagram, grid, object, node, true);\n    grid.addObject(wrapper, 0, 0, 1, grid.columnDefinitions().length);\n}\n/** @private */\nexport function phaseDefine(grid, diagram, object, indexValue, orientation, phaseIndex) {\n    var rowValue = 0;\n    var colValue = 0;\n    var maxWidth;\n    var shape = object.shape;\n    if (orientation) {\n        colValue = phaseIndex;\n        rowValue = indexValue;\n        maxWidth = grid.columnDefinitions()[phaseIndex].width;\n    }\n    else {\n        rowValue = shape.header && shape.hasHeader ? phaseIndex + 1 : phaseIndex;\n    }\n    var phaseObject = {\n        annotations: [{\n                content: shape.phases[phaseIndex].header.annotation.content,\n                rotateAngle: orientation ? 0 : 270\n            }], maxWidth: maxWidth,\n        id: object.id + shape.phases[phaseIndex].id + '_header',\n        offsetX: object.offsetX, offsetY: object.offsetY,\n        style: shape.phases[phaseIndex].style,\n        rowIndex: rowValue, columnIndex: colValue,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    shape.phases[phaseIndex].header.id = phaseObject.id;\n    var wrapper = addObjectToGrid(diagram, grid, object, phaseObject, false, true, false, shape.phases[phaseIndex].id);\n    grid.addObject(wrapper, rowValue, colValue);\n}\n/** @private */\nexport function laneCollection(grid, diagram, object, indexValue, laneIndex, orientation) {\n    var laneNode;\n    var parentWrapper;\n    var gridCell;\n    var canvas;\n    var childWrapper;\n    var shape = object.shape;\n    var value = shape.phases.length || 1;\n    var isHeader = (shape.header && shape.hasHeader) ? 1 : 0;\n    var colValue = 0;\n    var rowValue = orientation ? indexValue : isHeader;\n    var phaseCount = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n    for (var l = 0; l < value; l++) {\n        colValue = orientation ? l : laneIndex + phaseCount;\n        gridCell = grid.rows[rowValue].cells[colValue];\n        canvas = {\n            id: object.id + shape.lanes[laneIndex].id + l,\n            rowIndex: rowValue, columnIndex: colValue,\n            width: gridCell.minWidth, height: gridCell.minHeight,\n            offsetX: object.offsetX, offsetY: object.offsetY,\n            style: shape.lanes[laneIndex].style,\n            constraints: NodeConstraints.Default | NodeConstraints.ReadOnly | NodeConstraints.AllowDrop,\n            container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n        };\n        parentWrapper = addObjectToGrid(diagram, grid, object, canvas, false, false, true);\n        parentWrapper.children[0].isCalculateDesiredSize = false;\n        if (l === 0) {\n            laneNode = {\n                id: object.id + shape.lanes[laneIndex].id + '_' + l + '_header',\n                style: shape.lanes[laneIndex].header.style,\n                annotations: [{\n                        content: shape.lanes[laneIndex].header.annotation.content,\n                        rotateAngle: orientation ? 270 : 0\n                    }],\n                offsetX: object.offsetX, offsetY: object.offsetY,\n                rowIndex: rowValue, columnIndex: colValue,\n                container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n            };\n            shape.lanes[laneIndex].header.id = laneNode.id;\n            (orientation) ? laneNode.width = shape.lanes[laneIndex].header.width :\n                laneNode.height = shape.lanes[laneIndex].header.height;\n            childWrapper = addObjectToGrid(diagram, grid, object, laneNode, false, false, true, shape.lanes[laneIndex].id);\n            parentWrapper.children.push(childWrapper);\n        }\n        grid.addObject(parentWrapper, rowValue, colValue);\n        if (!orientation) {\n            rowValue++;\n        }\n        colValue = orientation ? l : laneIndex + 1;\n    }\n}\n/** @private */\nexport function createRow(row, height) {\n    var rows = new RowDefinition();\n    rows.height = height;\n    row.push(rows);\n}\n/** @private */\nexport function createColumn(width) {\n    var cols = new ColumnDefinition();\n    cols.width = width;\n    return cols;\n}\n/** @private */\nexport function initGridRow(row, orientation, object) {\n    var totalHeight = 0;\n    var height;\n    var shape = object.shape;\n    if (row.length > 0) {\n        for (var i = 0; i < row.length; i++) {\n            totalHeight += row[i].height;\n        }\n    }\n    if (orientation) {\n        if (shape.phases.length > 0 && shape.phaseSize) {\n            totalHeight += shape.phaseSize;\n            createRow(row, shape.phaseSize);\n        }\n        if (shape.lanes.length > 0) {\n            for (var i = 0; i < shape.lanes.length; i++) {\n                height = shape.lanes[i].height;\n                totalHeight += height;\n                if (i === shape.lanes.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n    }\n    else {\n        if (shape.phases.length > 0) {\n            var phaseHeight = 0;\n            for (var i = 0; i < shape.phases.length; i++) {\n                var phaseOffset = shape.phases[i].offset;\n                if (i === 0) {\n                    phaseHeight += phaseOffset;\n                }\n                else {\n                    phaseOffset -= phaseHeight;\n                    phaseHeight += phaseOffset;\n                }\n                height = phaseOffset;\n                totalHeight += height;\n                if (i === shape.phases.length - 1 && totalHeight < object.height) {\n                    height += object.height - totalHeight;\n                }\n                createRow(row, height);\n            }\n        }\n        else {\n            createRow(row, object.height);\n        }\n    }\n}\n/** @private */\nexport function initGridColumns(columns, orientation, object) {\n    var totalWidth = 0;\n    var shape = object.shape;\n    var phaseOffset;\n    var cols;\n    var k;\n    var j;\n    var value;\n    if (shape.phases.length > 0 && shape.orientation === 'Horizontal') {\n        for (j = 0; j < shape.phases.length; j++) {\n            phaseOffset = shape.phases[j].offset;\n            if (j === 0) {\n                totalWidth += phaseOffset;\n            }\n            else {\n                phaseOffset -= totalWidth;\n                totalWidth += phaseOffset;\n            }\n            cols = createColumn(phaseOffset);\n            if (j === shape.phases.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else if (!orientation) {\n        value = (shape.phaseSize && shape.phases.length > 0) ? shape.lanes.length\n            + 1 : shape.lanes.length;\n        if (shape.phaseSize && shape.phases.length > 0) {\n            totalWidth += shape.phaseSize;\n            cols = createColumn(shape.phaseSize);\n            columns.push(cols);\n        }\n        for (k = 0; k < shape.lanes.length; k++) {\n            totalWidth += shape.lanes[k].width;\n            cols = createColumn(shape.lanes[k].width);\n            if (k === shape.lanes.length - 1 && totalWidth < object.width) {\n                cols.width += object.width - totalWidth;\n            }\n            columns.push(cols);\n        }\n    }\n    else {\n        cols = createColumn(object.width);\n        columns.push(cols);\n    }\n}\n/** @private */\nexport function getConnectors(diagram, grid, rowIndex, isRowUpdate) {\n    var connectors = [];\n    var conn = 0;\n    var childNode;\n    var node;\n    var k;\n    var i;\n    var j;\n    var canvas;\n    var row;\n    var length = grid.rowDefinitions().length;\n    var edges;\n    for (var i_1 = 0; i_1 < length; i_1++) {\n        row = grid.rows[i_1];\n        for (j = 0; j < row.cells.length; j++) {\n            canvas = row.cells[j].children[0];\n            if (canvas && canvas.children && canvas.children.length) {\n                for (k = 1; k < canvas.children.length; k++) {\n                    childNode = canvas.children[k];\n                    node = diagram.getObject(childNode.id);\n                    if (node && (node.inEdges.length > 0 || node.outEdges.length > 0)) {\n                        edges = node.inEdges.concat(node.outEdges);\n                        for (conn = 0; conn < edges.length; conn++) {\n                            if (connectors.indexOf(edges[conn]) === -1) {\n                                connectors.push(edges[conn]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return connectors;\n}\n/** @private */\nexport function swimLaneMeasureAndArrange(obj) {\n    var canvas = obj.wrapper;\n    canvas.measure(new Size(obj.width, obj.height));\n    if (canvas.children[0] instanceof GridPanel) {\n        var grid = canvas.children[0];\n        var isMeasure = false;\n        if (grid.width && grid.width < grid.desiredSize.width) {\n            isMeasure = true;\n            grid.width = grid.desiredSize.width;\n        }\n        if (grid.height && grid.height < grid.desiredSize.height) {\n            isMeasure = true;\n            grid.height = grid.desiredSize.height;\n        }\n        if (isMeasure) {\n            grid.measure(new Size(grid.width, grid.height));\n        }\n    }\n    canvas.arrange(canvas.desiredSize);\n}\n/** @private */\nexport function ChangeLaneIndex(diagram, obj, startRowIndex) {\n    var container = obj.wrapper.children[0];\n    var i;\n    var j;\n    var k;\n    var object;\n    var subChild;\n    var row;\n    var cell;\n    var child;\n    for (i = startRowIndex; i < container.rows.length; i++) {\n        row = container.rows[i];\n        for (j = 0; j < row.cells.length; j++) {\n            cell = row.cells[j];\n            if (cell.children && cell.children.length > 0) {\n                for (k = 0; k < cell.children.length; k++) {\n                    child = cell.children[k];\n                    object = diagram.nameTable[child.id];\n                    if (object.isLane && child.children.length > 1) {\n                        subChild = diagram.nameTable[child.children[1].id];\n                        if (subChild && subChild.isLane) {\n                            subChild.rowIndex = i;\n                            subChild.columnIndex = j;\n                        }\n                    }\n                    object.rowIndex = i;\n                    object.columnIndex = j;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChildNodesInSwimLane(diagram, obj) {\n    var grid = obj.wrapper.children[0];\n    var shape = obj.shape;\n    var padding = shape.padding;\n    var lanes = shape.lanes;\n    var top = grid.bounds.y;\n    var rowvalue;\n    var columnValue;\n    var phaseCount = (shape.phaseSize > 0) ? shape.phases.length : 0;\n    var node;\n    var canvas;\n    var cell;\n    var i;\n    var j;\n    var k;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var col = orientation ? shape.phases.length || 1 : lanes.length + 1;\n    var row = orientation ? ((shape.header && shape.hasHeader) ? 1 : 0) +\n        (shape.phases.length > 0 ? 1 : 0) + (shape.lanes.length)\n        : (shape.header && shape.hasHeader ? 1 : 0) + shape.phases.length;\n    if (phaseCount === 0 && !orientation && shape.lanes.length) {\n        row += 1;\n    }\n    if (orientation) {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0) + (phaseCount > 0 ? 1 : 0);\n        columnValue = 0;\n    }\n    else {\n        rowvalue = (shape.header && shape.hasHeader ? 1 : 0);\n        columnValue = phaseCount > 0 ? 1 : 0;\n    }\n    if (lanes.length > 0) {\n        top += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n        for (i = 0; i < lanes.length; i++) {\n            for (j = 0; j < lanes[i].children.length; j++) {\n                node = lanes[i].children[j];\n                node.offsetX = lanes[i].width;\n                node.offsetY = lanes[i].height;\n                diagram.initObject(node);\n                diagram.nodes.push(node);\n                canvas = node.wrapper;\n                if (orientation) {\n                    for (k = columnValue; k < col; k++) {\n                        cell = grid.rows[rowvalue].cells[k];\n                        if (canvas.margin.left < (cell.bounds.right - grid.bounds.x)) {\n                            node.parentId = cell.children[0].id;\n                            if (k > columnValue) {\n                                canvas.margin.left = canvas.margin.left - (cell.bounds.left - grid.bounds.left);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.width + padding) >= canvas.margin.left) {\n                                    canvas.margin.left = cell.children[0].children[1].actualSize.width + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n                else {\n                    for (var k_1 = rowvalue; k_1 < row; k_1++) {\n                        cell = grid.rows[k_1].cells[columnValue];\n                        if (canvas.margin.top < (cell.bounds.bottom - top)) {\n                            node.parentId = cell.children[0].id;\n                            if (k_1 > rowvalue) {\n                                canvas.margin.top = canvas.margin.top - (cell.bounds.top - top);\n                            }\n                            else {\n                                if ((cell.children[0].children[1].actualSize.height + padding) >= canvas.margin.top) {\n                                    canvas.margin.top = cell.children[0].children[1].actualSize.height + padding;\n                                }\n                            }\n                            if (canvas.margin.left < padding) {\n                                canvas.margin.left = padding;\n                            }\n                            if (canvas.margin.top < padding) {\n                                canvas.margin.top = padding;\n                            }\n                            addChildToLane(canvas, node, diagram);\n                            break;\n                        }\n                    }\n                }\n            }\n            orientation ? rowvalue++ : columnValue++;\n        }\n    }\n    grid.measure(new Size(obj.width, obj.height));\n    grid.arrange(grid.desiredSize);\n    updateChildOuterBounds(grid, obj);\n    obj.width = obj.wrapper.width = grid.width;\n    obj.height = obj.wrapper.height = grid.height;\n    updateHeaderMaxWidth(diagram, obj);\n    obj.wrapper.measure(new Size(obj.width, obj.height));\n    obj.wrapper.arrange(grid.desiredSize);\n    checkLaneChildrenOffset(obj);\n    checkPhaseOffset(obj, diagram);\n    checkLaneSize(obj);\n}\nfunction addChildToLane(canvas, node, diagram) {\n    canvas.measure(new Size(node.width, node.height));\n    canvas.arrange(canvas.desiredSize);\n    var parent = diagram.getObject(node.parentId);\n    diagram.addChild(parent, node.id);\n}\n/** @private */\nexport function updateChildOuterBounds(grid, obj) {\n    var columnDefinitions = grid.columnDefinitions();\n    var rowDefinitions = grid.rowDefinitions();\n    var i;\n    var k;\n    var j;\n    var cell;\n    var child;\n    var row;\n    var rowIndex = findStartLaneIndex(obj);\n    if (obj.shape.orientation === 'Vertical') {\n        if (rowIndex === 0) {\n            rowIndex = (obj.shape.header && obj.shape.hasHeader) ? 1 : 0;\n        }\n    }\n    var padding = obj.shape.padding;\n    for (i = 0; i < columnDefinitions.length; i++) {\n        grid.updateColumnWidth(i, columnDefinitions[i].width, true, padding);\n    }\n    for (i = rowIndex; i < rowDefinitions.length; i++) {\n        grid.updateRowHeight(i, rowDefinitions[i].height, true, padding);\n    }\n    for (k = 0; k < rowDefinitions.length; k++) {\n        row = grid.rows[k];\n        for (i = 0; i < columnDefinitions.length; i++) {\n            cell = row.cells[i];\n            if (cell.children && cell.children.length > 0) {\n                for (j = 0; j < cell.children.length; j++) {\n                    child = cell.children[j];\n                    if (child.maxWidth) {\n                        child.maxWidth = cell.actualSize.width;\n                    }\n                    if (child.maxHeight) {\n                        child.maxHeight = cell.actualSize.height;\n                    }\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkLaneSize(obj) {\n    if (obj.shape.type === 'SwimLane' && !obj.shape.isLane && !obj.shape.isPhase) {\n        var lane = void 0;\n        var i = void 0;\n        var columns = void 0;\n        var size = void 0;\n        var laneCount = 0;\n        var lanes = obj.shape.lanes;\n        var laneIndex = findStartLaneIndex(obj);\n        var rows = obj.wrapper.children[0].rowDefinitions();\n        for (i = 0; i < lanes.length; i++, laneIndex++) {\n            lane = lanes[i];\n            if (obj.shape.orientation === 'Horizontal') {\n                size = rows[laneIndex].height;\n                if (lane.height !== size) {\n                    lane.height = size;\n                }\n            }\n            else {\n                columns = obj.wrapper.children[0].columnDefinitions();\n                size = columns[laneIndex].width;\n                if (lane.width !== size) {\n                    lane.width = size;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function checkPhaseOffset(obj, diagram) {\n    var shape = obj.shape;\n    var phases = shape.phases;\n    var i;\n    var offset;\n    var phaseRow;\n    var phase;\n    var gridRowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n    var grid = obj.wrapper.children[0];\n    var top = grid.bounds.y + ((shape.header && shape.hasHeader) ? shape.header.height : 0);\n    if (obj.shape.type === 'SwimLane') {\n        obj = diagram.getObject(obj.id) || obj;\n        if (phases.length > 0) {\n            grid = obj.wrapper.children[0];\n            if (shape.orientation === 'Horizontal') {\n                phaseRow = (shape.header && shape.hasHeader) ? grid.rows[1] : grid.rows[0];\n                for (i = 0; i < phases.length; i++) {\n                    phase = phaseRow.cells[i].children[0];\n                    offset = phase.bounds.right - grid.bounds.x;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n            else {\n                for (i = 0; i < phases.length; i++) {\n                    phase = grid.rows[gridRowIndex + i].cells[0].children[0];\n                    offset = phase.bounds.bottom - top;\n                    if (phases[i].offset !== offset) {\n                        phases[i].offset = offset;\n                    }\n                    diagram.nameTable[phase.id].maxWidth = phase.maxWidth;\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function updateConnectorsProperties(connectors, diagram) {\n    if (connectors && connectors.length > 0) {\n        var edges = void 0;\n        for (var i = 0; i < connectors.length; i++) {\n            edges = diagram.getObject(connectors[i]);\n            diagram.connectorPropertyChange(edges, {}, {\n                sourceID: edges.sourceID, targetID: edges.targetID\n            });\n        }\n    }\n}\n/** @private */\nexport function laneInterChanged(diagram, obj, target, position) {\n    var index;\n    var undoElement;\n    var entry;\n    var redoElement;\n    var sourceIndex;\n    var targetIndex;\n    var temp;\n    var sourceLaneIndex;\n    var targetLaneIndex;\n    var rowIndex;\n    var swimLane = (diagram.getObject(obj.parentId));\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var lanes = shape.lanes;\n    var connectors = getConnectors(diagram, grid, obj.rowIndex, true);\n    if ((shape.orientation === 'Horizontal' && obj.rowIndex !== target.rowIndex) ||\n        (shape.orientation === 'Vertical' && obj.columnIndex !== target.columnIndex)) {\n        if (shape.orientation === 'Horizontal') {\n            sourceIndex = obj.rowIndex;\n            targetIndex = target.rowIndex;\n            index = ((shape.header && shape.hasHeader) ? 1 : 0) + (shape.phases.length && shape.phaseSize ? 1 : 0);\n            sourceLaneIndex = obj.rowIndex - index;\n            targetLaneIndex = target.rowIndex - index;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetY > position.y) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetY < position.y) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                grid.updateRowIndex(sourceIndex, targetIndex);\n            }\n        }\n        else {\n            sourceIndex = obj.columnIndex;\n            targetIndex = target.columnIndex;\n            index = (shape.phases.length && shape.phaseSize) ? 1 : 0;\n            sourceLaneIndex = obj.columnIndex - index;\n            targetLaneIndex = target.columnIndex - index;\n            rowIndex = (shape.header && shape.hasHeader) ? 1 : 0;\n            if (sourceLaneIndex < targetLaneIndex) {\n                if (position && target.wrapper.offsetX > position.x) {\n                    targetIndex += (targetLaneIndex > 0) ? -1 : 1;\n                    targetLaneIndex += (targetLaneIndex > 0) ? -1 : 1;\n                }\n            }\n            else {\n                if (position && target.wrapper.offsetX < position.x) {\n                    targetIndex += 1;\n                    targetLaneIndex += 1;\n                }\n            }\n            if (sourceIndex !== targetIndex) {\n                if (shape.phaseSize === 0 && targetIndex === 0) {\n                    if (shape.header && shape.hasHeader) {\n                        grid.rows[0].cells[sourceIndex].children = grid.rows[0].cells[0].children;\n                        grid.rows[0].cells[sourceIndex].columnSpan = grid.rows[0].cells[0].columnSpan;\n                        grid.rows[0].cells[0].children = [];\n                    }\n                }\n                grid.updateColumnIndex(0, sourceIndex, targetIndex);\n            }\n        }\n        if (sourceIndex !== targetIndex) {\n            undoElement = {\n                target: cloneObject(target), source: cloneObject(obj)\n            };\n            temp = lanes[sourceLaneIndex];\n            lanes.splice(sourceLaneIndex, 1);\n            lanes.splice(targetLaneIndex, 0, temp);\n            redoElement = {\n                target: cloneObject(undoElement.source), source: cloneObject(undoElement.target)\n            };\n            entry = {\n                type: 'LanePositionChanged', redoObject: redoElement,\n                undoObject: undoElement, category: 'Internal'\n            };\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.commandHandler.addHistoryEntry(entry);\n            }\n            ChangeLaneIndex(diagram, swimLane, 0);\n            updateConnectorsProperties(connectors, diagram);\n            swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n            swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n            diagram.updateDiagramObject(swimLane);\n        }\n    }\n}\n/** @private */\nexport function updateSwimLaneObject(diagram, obj, swimLane, helperObject) {\n    var parentNode = diagram.getObject(swimLane.id);\n    var shape = parentNode.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    var lanes = shape.lanes;\n    var phases = shape.phases;\n    var helperWidth = helperObject.wrapper.actualSize.width;\n    var helperHeight = helperObject.wrapper.actualSize.height;\n    var objWidth = obj.wrapper.actualSize.width;\n    var objHeight = obj.wrapper.actualSize.height;\n    if (parentNode.shape.type === 'SwimLane') {\n        if (shape.orientation === 'Horizontal') {\n            if (obj.isPhase) {\n                phases[obj.columnIndex].offset += (helperWidth - objWidth);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? index + 1 : index;\n                lanes[(obj.rowIndex - index)].height += (helperHeight - objHeight);\n            }\n        }\n        else {\n            if (obj.isPhase) {\n                phases[(obj.rowIndex - index)].offset += (helperHeight - objHeight);\n            }\n            else {\n                index = (shape.phaseSize && shape.phases.length > 0) ? 1 : 0;\n                lanes[(obj.columnIndex - index)].width += (helperWidth - objWidth);\n            }\n        }\n    }\n}\n/** @private */\nexport function findLaneIndex(swimLane, laneObj) {\n    var laneIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    if (shape.orientation === 'Horizontal') {\n        index += shape.phases.length > 0 ? 1 : 0;\n        laneIndex = laneObj.rowIndex - index;\n    }\n    else {\n        laneIndex = laneObj.columnIndex - (shape.phaseSize && shape.phases.length > 0 ? 1 : 0);\n    }\n    return laneIndex;\n}\n/** @private */\nexport function findPhaseIndex(phase, swimLane) {\n    var phaseIndex;\n    var shape = swimLane.shape;\n    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n    phaseIndex = (shape.orientation === 'Horizontal') ? phase.columnIndex : phase.rowIndex - index;\n    return phaseIndex;\n}\n/** @private */\nexport function findStartLaneIndex(swimLane) {\n    var index = 0;\n    var shape = swimLane.shape;\n    if (shape.orientation === 'Horizontal') {\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n    }\n    if (shape.phases.length > 0 && shape.phaseSize) {\n        index += 1;\n    }\n    return index;\n}\n/** @private */\nexport function updatePhaseMaxWidth(parent, diagram, wrapper, columnIndex) {\n    var shape = parent.shape;\n    if (shape.phases.length > 0) {\n        var node = diagram.nameTable[shape.phases[columnIndex].header.id];\n        if (node && node.maxWidth < wrapper.outerBounds.width) {\n            node.maxWidth = wrapper.outerBounds.width;\n            node.wrapper.maxWidth = wrapper.outerBounds.width;\n        }\n    }\n}\n/** @private */\nexport function updateHeaderMaxWidth(diagram, swimLane) {\n    if (swimLane.shape.header && swimLane.shape.hasHeader) {\n        var grid = swimLane.wrapper.children[0];\n        var id = grid.rows[0].cells[0].children[0].id;\n        var headerNode = diagram.nameTable[id];\n        if (headerNode && headerNode.isHeader && headerNode.maxWidth < swimLane.width) {\n            headerNode.maxWidth = swimLane.width;\n            headerNode.wrapper.maxWidth = swimLane.width;\n        }\n    }\n}\n/** @private */\nexport function addLane(diagram, parent, lane, count) {\n    var swimLane = diagram.nameTable[parent.id];\n    if (swimLane.shape.type === 'SwimLane') {\n        diagram.protectPropertyChange(true);\n        var grid = swimLane.wrapper.children[0];\n        var bounds = grid.bounds;\n        var shape = swimLane.shape;\n        var redoObj = void 0;\n        var orientation_1 = false;\n        var connectors = void 0;\n        var entry = void 0;\n        var index = void 0;\n        var laneObj = void 0;\n        var laneIndex = void 0;\n        var children = void 0;\n        var j = void 0;\n        var i = void 0;\n        var k = void 0;\n        var cell = void 0;\n        var child = void 0;\n        var point = void 0;\n        laneObj = new Lane(shape, 'lanes', lane, true);\n        index = (shape.header && shape.hasHeader) ? 1 : 0;\n        if (shape.orientation === 'Horizontal') {\n            orientation_1 = true;\n            index = shape.phases.length > 0 ? index + 1 : index;\n        }\n        connectors = getConnectors(diagram, grid, 0, true);\n        laneIndex = (count !== undefined) ? count : shape.lanes.length;\n        index += laneIndex;\n        if (orientation_1) {\n            var rowDef = new RowDefinition();\n            rowDef.height = lane.height;\n            grid.addRow(index, rowDef, false);\n            swimLane.height = (swimLane.height !== undefined) ? swimLane.height + lane.height : swimLane.height;\n            swimLane.wrapper.height = grid.height = swimLane.height;\n        }\n        else {\n            var colDef = new ColumnDefinition();\n            colDef.width = lane.width;\n            grid.addColumn(laneIndex + 1, colDef, false);\n            if (swimLane.width) {\n                swimLane.width += lane.width;\n                swimLane.wrapper.width = grid.width = swimLane.width;\n            }\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                grid.rows[0].cells[0].columnSpan += 1;\n            }\n        }\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            laneObj.id += randomId();\n        }\n        if (count !== undefined) {\n            shape.lanes.splice(count, 0, laneObj);\n        }\n        else {\n            shape.lanes.push(laneObj);\n        }\n        laneCollection(grid, diagram, swimLane, index, laneIndex, orientation_1);\n        redoObj = (shape.orientation === 'Horizontal') ?\n            diagram.nameTable[grid.rows[index].cells[0].children[0].id] :\n            ((shape.header && shape.hasHeader) ? diagram.nameTable[grid.rows[1].cells[index].children[0].id] :\n                diagram.nameTable[grid.rows[0].cells[index].children[0].id]);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            entry = {\n                type: 'LaneCollectionChanged', changeType: 'Insert', undoObject: cloneObject(laneObj),\n                redoObject: cloneObject(redoObj), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        var startRowIndex = (shape.orientation === 'Horizontal') ?\n            index : ((shape.header && shape.hasHeader) ? 1 : 0);\n        ChangeLaneIndex(diagram, swimLane, startRowIndex);\n        swimLaneMeasureAndArrange(swimLane);\n        updateHeaderMaxWidth(diagram, swimLane);\n        children = lane.children;\n        if (children && children.length > 0) {\n            for (j = 0; j < children.length; j++) {\n                child = children[j];\n                point = { x: child.wrapper.offsetX, y: child.wrapper.offsetY };\n                if (shape.orientation === 'Horizontal') {\n                    cell = grid.rows[index].cells[i];\n                    for (i = 0; i < grid.rows[index].cells.length; i++) {\n                        addChildNodeToNewLane(diagram, grid.rows[index].cells[i], point, child);\n                    }\n                }\n                else {\n                    for (k = 0; k < grid.rows.length; k++) {\n                        cell = grid.rows[k].cells[index];\n                        addChildNodeToNewLane(diagram, cell, point, child);\n                    }\n                }\n            }\n        }\n        updateConnectorsProperties(connectors, diagram);\n        diagram.drag(swimLane, bounds.x - grid.bounds.x, bounds.y - grid.bounds.y);\n        diagram.protectPropertyChange(false);\n    }\n}\nfunction addChildNodeToNewLane(diagram, cell, point, child) {\n    if (cell.children && cell.children.length > 0) {\n        var canvas = cell.children[0];\n        var parent_1 = diagram.nameTable[canvas.id];\n        if (canvas.bounds.containsPoint(point)) {\n            diagram.addChild(parent_1, child);\n        }\n    }\n}\nexport function addPhase(diagram, parent, newPhase) {\n    if (parent.shape.type === 'SwimLane') {\n        var gridRowIndex = void 0;\n        var gridColIndex = void 0;\n        var phaseNode = void 0;\n        var phase = void 0;\n        var previousPhase = void 0;\n        var nextPhase = void 0;\n        var phaseIndex = void 0;\n        var laneHeaderSize = void 0;\n        var i = void 0;\n        var x = parent.wrapper.bounds.x;\n        var y = parent.wrapper.bounds.y;\n        var shape = parent.shape;\n        var padding = shape.padding;\n        var phasesCollection = shape.phases;\n        var width = void 0;\n        var grid = parent.wrapper.children[0];\n        var orientation_2 = shape.orientation === 'Horizontal' ? true : false;\n        gridRowIndex = (shape.header && shape.hasHeader) ? 0 : -1;\n        if (shape.phases.length > 0) {\n            gridRowIndex += 1;\n            gridColIndex = 0;\n        }\n        laneHeaderSize = (orientation_2) ? shape.lanes[0].header.width : shape.lanes[0].header.height;\n        if (newPhase.offset > laneHeaderSize) {\n            for (i = 0; i < phasesCollection.length; i++) {\n                phase = phasesCollection[i];\n                previousPhase = (i > 0) ? phasesCollection[i - 1] : phase;\n                if (phase.offset > newPhase.offset) {\n                    width = (i > 0) ? newPhase.offset - previousPhase.offset : newPhase.offset;\n                    if (orientation_2) {\n                        var nextCol = grid.columnDefinitions()[i];\n                        nextCol.width -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        nextPhase.maxWidth = nextPhase.wrapper.maxWidth = nextCol.width;\n                        grid.updateColumnWidth(i, nextCol.width, false);\n                        var addPhase_1 = new ColumnDefinition();\n                        addPhase_1.width = width;\n                        phaseIndex = i;\n                        grid.addColumn(i, addPhase_1, false);\n                        break;\n                    }\n                    else {\n                        var nextRow = grid.rowDefinitions()[i + gridRowIndex];\n                        nextRow.height -= width;\n                        nextPhase = diagram.nameTable[shape.phases[i].header.id];\n                        grid.updateRowHeight(i + gridRowIndex, nextRow.height, false);\n                        var addPhase_2 = new RowDefinition();\n                        addPhase_2.height = width;\n                        phaseIndex = i;\n                        grid.addRow(i + gridRowIndex, addPhase_2, false);\n                        break;\n                    }\n                }\n            }\n            if (diagram.diagramActions & DiagramAction.UndoRedo && phaseIndex === undefined) {\n                var entry = diagram.historyManager.currentEntry.next;\n                if (entry.isLastPhase) {\n                    phaseIndex = phasesCollection.length;\n                    addLastPhase(phaseIndex, parent, entry, grid, orientation_2, newPhase);\n                }\n            }\n            var phaseObj = new Phase((parent.shape), 'phases', newPhase, true);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                phaseObj.id += randomId();\n            }\n            shape.phases.splice(phaseIndex, 0, phaseObj);\n            phaseDefine(grid, diagram, parent, gridRowIndex, orientation_2, phaseIndex);\n            if (orientation_2) {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex].children[0].id];\n                if (phaseIndex === 0 && shape.header && shape.hasHeader) {\n                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                    grid.rows[0].cells[1].children = [];\n                    var fristRow = grid.rows[0];\n                    for (var i_2 = 0; i_2 < fristRow.cells.length; i_2++) {\n                        fristRow.cells[i_2].minWidth = undefined;\n                        if (i_2 === 0) {\n                            fristRow.cells[i_2].columnSpan = grid.rows[0].cells.length;\n                        }\n                        else {\n                            fristRow.cells[i_2].columnSpan = 1;\n                        }\n                    }\n                }\n                addHorizontalPhase(diagram, parent, grid, phaseIndex, orientation_2);\n                var col = grid.columnDefinitions();\n                grid.updateColumnWidth(phaseIndex, col[phaseIndex].width, true, padding);\n                phaseNode.maxWidth = phaseNode.wrapper.maxWidth = col[phaseIndex].width;\n                if (col.length > phaseIndex + 1) {\n                    var nextPhaseNode = diagram.nameTable[grid.rows[gridRowIndex].cells[phaseIndex + 1].children[0].id];\n                    grid.updateColumnWidth(phaseIndex + 1, col[phaseIndex + 1].width, true, padding);\n                    nextPhaseNode.maxWidth = nextPhaseNode.wrapper.maxWidth = col[phaseIndex + 1].width;\n                }\n                parent.width = parent.wrapper.width = parent.wrapper.children[0].width = grid.width;\n            }\n            else {\n                phaseNode = diagram.nameTable[grid.rows[gridRowIndex + phaseIndex].cells[0].children[0].id];\n                var row = grid.rowDefinitions();\n                var size = row[gridRowIndex + phaseIndex].height;\n                addVerticalPhase(diagram, parent, grid, gridRowIndex + phaseIndex, orientation_2);\n                grid.updateRowHeight(gridRowIndex + phaseIndex, size, true, padding);\n                if (row.length > gridRowIndex + phaseIndex + 1) {\n                    size = row[gridRowIndex + phaseIndex + 1].height;\n                    grid.updateRowHeight(gridRowIndex + phaseIndex + 1, size, true, padding);\n                }\n                parent.height = parent.wrapper.height = parent.wrapper.children[0].height = grid.actualSize.height;\n            }\n            swimLaneMeasureAndArrange(parent);\n            parent.width = parent.wrapper.actualSize.width;\n            updateHeaderMaxWidth(diagram, parent);\n            diagram.drag(parent, x - parent.wrapper.bounds.x, y - parent.wrapper.bounds.y);\n            checkPhaseOffset(parent, diagram);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                var entry = {\n                    type: 'PhaseCollectionChanged', changeType: 'Insert', undoObject: cloneObject(phaseObj),\n                    redoObject: cloneObject(phaseNode), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n            }\n            diagram.updateDiagramObject(parent);\n        }\n    }\n}\nexport function addLastPhase(phaseIndex, parent, entry, grid, orientation, newPhase) {\n    var shape = parent.shape;\n    var prevPhase = shape.phases[phaseIndex - 2];\n    var prevOffset = entry.previousPhase.offset;\n    if (orientation) {\n        var nextCol = grid.columnDefinitions()[phaseIndex - 1];\n        var addPhase_3 = new ColumnDefinition();\n        if (phaseIndex > 1) {\n            addPhase_3.width = (nextCol.width) - (prevOffset - prevPhase.offset);\n            nextCol.width = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_3.width = nextCol.width - prevOffset;\n            nextCol.width = prevOffset;\n        }\n        grid.updateColumnWidth(phaseIndex - 1, nextCol.width, false);\n        grid.addColumn(phaseIndex, addPhase_3, false);\n    }\n    else {\n        var nextCol = grid.rowDefinitions()[phaseIndex];\n        var addPhase_4 = new RowDefinition();\n        if (phaseIndex > 1) {\n            addPhase_4.height = entry.undoObject.offset - prevOffset;\n            nextCol.height = prevOffset - prevPhase.offset;\n        }\n        else {\n            addPhase_4.height = nextCol.height - prevOffset;\n            nextCol.height = prevOffset;\n        }\n        grid.updateRowHeight(phaseIndex, nextCol.height, false);\n        grid.addRow(1 + phaseIndex, addPhase_4, false);\n    }\n}\nexport function addHorizontalPhase(diagram, node, grid, index, orientation) {\n    var shape = node.shape;\n    var nextCell;\n    var i;\n    var prevCell;\n    var gridCell;\n    var row;\n    var laneIndex = findStartLaneIndex(node);\n    if (shape.header && shape.hasHeader) {\n        grid.rows[0].cells[0].columnSpan = grid.rows[0].cells.length;\n    }\n    for (i = laneIndex; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        prevCell = row.cells[index - 1];\n        gridCell = row.cells[index];\n        nextCell = row.cells[index + 1];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, i, index);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nexport function addVerticalPhase(diagram, node, grid, rowIndex, orientation) {\n    var prevCell;\n    var gridCell;\n    var nextCell;\n    var row = grid.rows[rowIndex];\n    var nextRow = grid.rows[rowIndex + 1];\n    var prevRow = grid.rows[rowIndex - 1];\n    for (var i = 1; i < row.cells.length; i++) {\n        gridCell = row.cells[i];\n        nextCell = (nextRow) ? nextRow.cells[i] : undefined;\n        prevCell = prevRow.cells[i];\n        addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, i);\n    }\n    ChangeLaneIndex(diagram, node, 1);\n}\nfunction addSwimlanePhases(diagram, node, prevCell, gridCell, nextCell, rowIndex, columnIndex) {\n    var x;\n    var y;\n    var shape = node.shape;\n    var orientation = shape.orientation === 'Horizontal' ? true : false;\n    var grid = node.wrapper.children[0];\n    var width = gridCell.desiredCellWidth;\n    var height = gridCell.desiredCellHeight;\n    var col = (orientation) ? rowIndex : columnIndex;\n    var rect;\n    var canvas;\n    var parentWrapper;\n    var j;\n    var i = (orientation) ? rowIndex : columnIndex;\n    if (prevCell) {\n        x = orientation ? prevCell.bounds.x + prevCell.bounds.width : prevCell.bounds.x;\n        y = orientation ? prevCell.bounds.y : prevCell.bounds.y + prevCell.bounds.height;\n    }\n    else {\n        x = grid.bounds.x;\n        y = nextCell.bounds.y;\n    }\n    rect = new Rect(x, y, width, height);\n    canvas = {\n        id: node.id + ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).id + randomId()[0],\n        rowIndex: rowIndex, columnIndex: columnIndex,\n        width: gridCell.minWidth, height: gridCell.minHeight,\n        style: ((orientation) ? shape.lanes[i - 2] : shape.lanes[i - 1]).style,\n        constraints: NodeConstraints.Default | NodeConstraints.AllowDrop,\n        container: { type: 'Canvas', orientation: orientation ? 'Horizontal' : 'Vertical' }\n    };\n    parentWrapper = addObjectToGrid(diagram, grid, node, canvas, false, false, true);\n    parentWrapper.children[0].isCalculateDesiredSize = false;\n    grid.addObject(parentWrapper, rowIndex, columnIndex);\n    if (nextCell && nextCell.children && nextCell.children.length) {\n        for (j = 0; j < nextCell.children.length; j++) {\n            if (orientation) {\n                diagram.nameTable[nextCell.children[j].id].columnIndex += 1;\n            }\n            else {\n                diagram.nameTable[nextCell.children[j].id].rowIndex += 1;\n            }\n        }\n    }\n    arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell);\n}\nexport function arrangeChildInGrid(diagram, nextCell, gridCell, rect, parentWrapper, orientation, prevCell) {\n    var child;\n    var point;\n    var childNode;\n    var parent = diagram.nameTable[parentWrapper.id];\n    var changeCell = (!nextCell) ? prevCell : nextCell;\n    var swimLane = diagram.nameTable[parent.parentId];\n    var padding = swimLane.shape.padding;\n    if (changeCell.children && changeCell.children[0].children.length > 1) {\n        for (var j = 1; j < changeCell.children[0].children.length; j++) {\n            child = changeCell.children[0].children[j];\n            childNode = diagram.nameTable[child.id];\n            point = (orientation) ? { x: child.bounds.x, y: child.bounds.center.y } :\n                { x: child.bounds.center.x, y: child.bounds.top };\n            if (rect.containsPoint(point)) {\n                gridCell.children[0].children.push(child);\n                changeCell.children[0].children.splice(j, 1);\n                j--;\n                diagram.deleteChild(childNode);\n                if (!childNode.isLane) {\n                    childNode.parentId = parentWrapper.id;\n                }\n                if (!parent.children) {\n                    parent.children = [];\n                }\n                if (!nextCell) {\n                    if (orientation) {\n                        childNode.margin.left = childNode.wrapper.bounds.x - changeCell.children[0].bounds.right;\n                    }\n                    else {\n                        childNode.margin.top = childNode.wrapper.bounds.y - changeCell.children[0].bounds.bottom;\n                    }\n                }\n                parent.children.push(child.id);\n                childNode.zIndex = parent.zIndex + 1;\n                diagram.removeElements(childNode);\n            }\n            else if (nextCell) {\n                if (orientation) {\n                    childNode.margin.left -= gridCell.desiredCellWidth;\n                    if (padding > childNode.margin.left) {\n                        childNode.margin.left = padding;\n                    }\n                }\n                else {\n                    childNode.margin.top -= gridCell.desiredCellHeight;\n                    if (padding > childNode.margin.top) {\n                        childNode.margin.top = padding;\n                    }\n                }\n            }\n        }\n    }\n}\nexport function swimLaneSelection(diagram, node, corner) {\n    if (node.shape.type === 'SwimLane' && (corner === 'ResizeSouth' || corner === 'ResizeEast')) {\n        var shape = node.shape;\n        var wrapper = node.wrapper.children[0];\n        var child = void 0;\n        var index = void 0;\n        if (corner === 'ResizeSouth') {\n            if (shape.orientation === 'Vertical') {\n                child = wrapper.rows[wrapper.rows.length - 1].cells[0];\n            }\n            else {\n                index = wrapper.rows.length - 1;\n                child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n            }\n        }\n        else {\n            index = (shape.header && shape.hasHeader) ? 1 : 0;\n            child = wrapper.rows[index].cells[wrapper.rows[index].cells.length - 1];\n        }\n        diagram.commandHandler.select(diagram.nameTable[child.children[0].id]);\n    }\n}\nexport function pasteSwimLane(swimLane, diagram, clipboardData, laneNode, isLane, isUndo) {\n    var i;\n    var j;\n    var lane;\n    var phase;\n    var node;\n    var ranId = randomId();\n    var cloneLane;\n    var childX;\n    var childY;\n    var shape = swimLane.shape;\n    var lanes;\n    var phases = shape.phases;\n    var nodeX = swimLane.offsetX - swimLane.wrapper.actualSize.width / 2;\n    var nodeY = swimLane.offsetY - swimLane.wrapper.actualSize.height / 2;\n    if (shape.orientation === 'Vertical') {\n        nodeY += (shape.header && shape.hasHeader) ? shape.header.height : 0;\n    }\n    if (!isUndo) {\n        if (!isLane) {\n            swimLane.id += ranId;\n            if (shape && shape.header && shape.hasHeader) {\n                shape.header.id += ranId;\n            }\n            else {\n                shape.header = undefined;\n            }\n        }\n        for (i = 0; phases && i < phases.length; i++) {\n            phase = phases[i];\n            phase.id += ranId;\n        }\n    }\n    lanes = (isLane) ? [clipboardData.childTable[laneNode.id]] : shape.lanes;\n    for (i = 0; lanes && i < lanes.length; i++) {\n        lane = lanes[i];\n        if (!isUndo) {\n            lane.id += ranId;\n        }\n        for (j = 0; lane.children && j < lane.children.length; j++) {\n            node = lane.children[j];\n            childX = node.wrapper.offsetX - node.width / 2;\n            childY = node.wrapper.offsetY - node.height / 2;\n            node.zIndex = -1;\n            node.inEdges = node.outEdges = [];\n            if (isUndo || (clipboardData && (clipboardData.pasteIndex === 1 || clipboardData.pasteIndex === 0))) {\n                if (shape.orientation === 'Vertical') {\n                    node.margin.top = childY - nodeY;\n                }\n                else {\n                    node.margin.left = childX - nodeX;\n                }\n            }\n            if (!isUndo) {\n                node.id += ranId;\n            }\n        }\n    }\n    if (!isUndo) {\n        if (isLane) {\n            var newShape = {\n                lanes: lanes,\n                phases: phases, phaseSize: shape.phaseSize,\n                type: 'SwimLane', orientation: shape.orientation,\n                header: { annotation: { content: 'Title' }, height: 50 },\n            };\n            cloneLane = { shape: newShape };\n            if (shape.orientation === 'Horizontal') {\n                cloneLane.width = swimLane.wrapper.actualSize.width;\n                cloneLane.height = laneNode.wrapper.actualSize.height + shape.header.height + shape.phaseSize;\n                cloneLane.offsetX = swimLane.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = laneNode.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            else {\n                cloneLane.width = laneNode.wrapper.actualSize.width;\n                cloneLane.height = swimLane.wrapper.actualSize.height;\n                cloneLane.offsetX = laneNode.wrapper.offsetX + (clipboardData.pasteIndex * 10);\n                cloneLane.offsetY = swimLane.wrapper.offsetY + (clipboardData.pasteIndex * 10);\n            }\n            swimLane = cloneLane;\n        }\n        if (clipboardData.pasteIndex !== 0) {\n            swimLane.offsetX += 10;\n            swimLane.offsetY += 10;\n        }\n        swimLane.zIndex = -1;\n        swimLane = diagram.add(swimLane);\n        if (!isLane) {\n            for (var _i = 0, _a = Object.keys(clipboardData.childTable); _i < _a.length; _i++) {\n                var i_3 = _a[_i];\n                var connector = clipboardData.childTable[i_3];\n                connector.id += ranId;\n                connector.sourceID += ranId;\n                connector.targetID += ranId;\n                connector.zIndex = -1;\n                diagram.add(connector);\n            }\n        }\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n        diagram.select([swimLane]);\n    }\n    return swimLane;\n}\nexport function gridSelection(diagram, selectorModel, id, isSymbolDrag) {\n    var canvas;\n    var node = selectorModel.nodes[0];\n    if (isSymbolDrag || checkParentAsContainer(diagram, node, true)) {\n        var targetnode = void 0;\n        var wrapper = void 0;\n        var parentNode = void 0;\n        var bounds = void 0;\n        var swimLaneId = void 0;\n        var element = new DiagramElement();\n        if (id) {\n            swimLaneId = (diagram.nameTable[id].parentId);\n            targetnode = node = diagram.nameTable[id];\n        }\n        wrapper = !id ? node.wrapper : targetnode.wrapper;\n        parentNode = diagram.nameTable[swimLaneId || node.parentId];\n        if (parentNode && parentNode.container.type === 'Grid') {\n            canvas = new Canvas();\n            canvas.children = [];\n            if (isSymbolDrag || !(node.isHeader)) {\n                if ((parentNode.container.orientation === 'Horizontal' && node.isPhase) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        (node.rowIndex > 0 && node.columnIndex > 0 || node.isLane))) {\n                    bounds = findBounds(parentNode, (targetnode) ? targetnode.columnIndex : node.columnIndex, (parentNode.shape.header && parentNode.shape.hasHeader) ? true : false);\n                    canvas.offsetX = bounds.center.x;\n                    canvas.offsetY = bounds.center.y;\n                    element.width = bounds.width;\n                    element.height = bounds.height;\n                }\n                else {\n                    canvas.offsetX = parentNode.offsetX;\n                    canvas.offsetY = wrapper.offsetY;\n                    element.width = parentNode.wrapper.actualSize.width;\n                    element.height = wrapper.actualSize.height;\n                }\n            }\n            canvas.children.push(element);\n            canvas.measure(new Size());\n            canvas.arrange(canvas.desiredSize);\n        }\n    }\n    return canvas;\n}\nexport function removeLaneChildNode(diagram, swimLaneNode, currentObj, isChildNode) {\n    var laneIndex = findLaneIndex(swimLaneNode, currentObj);\n    var preventHistory = false;\n    var lanenode = swimLaneNode.shape.lanes[laneIndex];\n    for (var j = lanenode.children.length - 1; j >= 0; j--) {\n        if (isChildNode) {\n            if (isChildNode.id === lanenode.children[j].id) {\n                lanenode.children.splice(j, 1);\n            }\n        }\n        else {\n            diagram.removeDependentConnector(lanenode.children[j]);\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n                diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n                preventHistory = true;\n            }\n            diagram.remove(lanenode.children[j]);\n            lanenode.children.splice(j, 1);\n            if (preventHistory) {\n                diagram.diagramActions = diagram.diagramActions & ~DiagramAction.UndoRedo;\n            }\n        }\n    }\n}\nexport function getGridChildren(obj) {\n    var children = obj.children[0];\n    return children;\n}\nexport function removeSwimLane(diagram, obj) {\n    var rows = obj.wrapper.children[0].rows;\n    var preventHistory = false;\n    var node;\n    var i;\n    var j;\n    var k;\n    var child;\n    var removeNode;\n    for (i = 0; i < rows.length; i++) {\n        for (j = 0; j < rows[i].cells.length; j++) {\n            child = getGridChildren(rows[i].cells[j]);\n            if (child && child.children) {\n                for (k = 0; k < child.children.length; k++) {\n                    if (child.children[k].children) {\n                        removeNode = diagram.nameTable[child.children[k].id];\n                        if (removeNode) {\n                            if (removeNode.isLane) {\n                                deleteNode(diagram, removeNode);\n                            }\n                            else {\n                                diagram.removeDependentConnector(removeNode);\n                                diagram.diagramActions |= DiagramAction.PreventHistory;\n                                diagram.remove(removeNode);\n                                diagram.diagramActions &= ~DiagramAction.PreventHistory;\n                                k--;\n                            }\n                        }\n                    }\n                }\n            }\n            if (child) {\n                node = diagram.nameTable[child.id];\n                if (node) {\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n}\nfunction deleteNode(diagram, node) {\n    diagram.nodes.splice(diagram.nodes.indexOf(node), 1);\n    diagram.removeFromAQuad(node);\n    diagram.removeObjectsFromLayer(node);\n    delete diagram.nameTable[node.id];\n    diagram.removeElements(node);\n}\nexport function removeLane(diagram, lane, swimLane) {\n    var shape = swimLane.shape;\n    if (shape.lanes.length === 1) {\n        diagram.remove(swimLane);\n    }\n    else {\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        var row = void 0;\n        var i = void 0;\n        var cell = void 0;\n        var j = void 0;\n        var child = void 0;\n        var grid = swimLane.wrapper.children[0];\n        var laneIndex = findLaneIndex(swimLane, lane);\n        var undoObj = cloneObject(shape.lanes[laneIndex]);\n        removeLaneChildNode(diagram, swimLane, lane);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'LaneCollectionChanged', changeType: 'Remove', undoObject: undoObj,\n                redoObject: cloneObject(lane), category: 'Internal'\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        shape.lanes.splice(laneIndex, 1);\n        if (shape.orientation === 'Horizontal') {\n            row = grid.rows[lane.rowIndex];\n            for (i = 0; i < row.cells.length; i++) {\n                cell = row.cells[i];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeRow(lane.rowIndex);\n        }\n        else {\n            swimLane.width = (swimLane.width !== undefined) ?\n                swimLane.width - grid.rows[0].cells[lane.columnIndex].actualSize.width : swimLane.width;\n            for (i = 0; i < grid.rows.length; i++) {\n                cell = grid.rows[i].cells[lane.columnIndex];\n                if (cell && cell.children.length > 0) {\n                    for (j = 0; j < cell.children.length; j++) {\n                        child = cell.children[j];\n                        removeChildren(diagram, child);\n                    }\n                }\n            }\n            grid.removeColumn(lane.columnIndex);\n        }\n        swimLane.width = swimLane.wrapper.width = grid.width;\n        swimLane.height = swimLane.wrapper.height = grid.height;\n        swimLaneMeasureAndArrange(swimLane);\n        ChangeLaneIndex(diagram, swimLane, lane.rowIndex);\n        diagram.drag(swimLane, x - swimLane.wrapper.bounds.x, y - swimLane.wrapper.bounds.y);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeChildren(diagram, canvas) {\n    var i;\n    var node;\n    if (canvas instanceof Canvas) {\n        if (canvas.children.length > 0) {\n            for (i = 0; i < canvas.children.length; i++) {\n                if (canvas.children[i] instanceof Canvas) {\n                    removeChildren(diagram, canvas.children[i]);\n                }\n            }\n        }\n        node = diagram.getObject(canvas.id);\n        deleteNode(diagram, node);\n    }\n}\nexport function removePhase(diagram, phase, swimLane) {\n    diagram.protectPropertyChange(true);\n    var x = swimLane.wrapper.bounds.x;\n    var y = swimLane.wrapper.bounds.y;\n    var isLastPhase = false;\n    var previousPhase;\n    var shape = swimLane.shape;\n    var grid = swimLane.wrapper.children[0];\n    var phaseIndex = findPhaseIndex(phase, swimLane);\n    var phaseLength = shape.phases.length;\n    if (shape.phases.length > 1) {\n        if (phaseIndex === phaseLength - 1) {\n            isLastPhase = true;\n            previousPhase = cloneObject(shape.phases[phaseIndex - 1]);\n        }\n        var undoObj = cloneObject(shape.phases[phaseIndex]);\n        shape.phases.splice(phaseIndex, 1);\n        if (!(diagram.diagramActions & DiagramAction.UndoRedo)) {\n            var entry = {\n                type: 'PhaseCollectionChanged', changeType: 'Remove', undoObject: undoObj, previousPhase: previousPhase,\n                redoObject: cloneObject(phase), category: 'Internal', isLastPhase: isLastPhase\n            };\n            diagram.addHistoryEntry(entry);\n        }\n        if (shape.orientation === 'Horizontal') {\n            removeHorizontalPhase(diagram, grid, phase);\n        }\n        else {\n            removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane);\n        }\n        updateHeaderMaxWidth(diagram, swimLane);\n        ChangeLaneIndex(diagram, swimLane, 1);\n        checkPhaseOffset(swimLane, diagram);\n        diagram.protectPropertyChange(false);\n        diagram.updateDiagramObject(swimLane);\n    }\n}\nexport function removeHorizontalPhase(diagram, grid, phase) {\n    var row;\n    var cell;\n    var prevCell;\n    var actualChild;\n    var prevChild;\n    var prevCanvas;\n    var width;\n    var i;\n    var j;\n    var k;\n    var child;\n    var node;\n    var object;\n    for (i = 0; i < grid.rows.length; i++) {\n        row = grid.rows[i];\n        if (row.cells.length > 1) {\n            cell = row.cells[phase.columnIndex];\n            prevCell = (row.cells.length - 1 === phase.columnIndex) ? row.cells[phase.columnIndex - 1] :\n                row.cells[phase.columnIndex + 1];\n            prevCanvas = prevCell.children[0];\n            if (cell.children.length > 0) {\n                actualChild = cell.children[0];\n                node = diagram.nameTable[actualChild.id];\n                if (prevCell.children.length === 0 && cell.children.length > 0) {\n                    prevCell.children = cell.children;\n                    prevCell.columnSpan = cell.columnSpan - 1;\n                }\n                else {\n                    for (j = 0; j < actualChild.children.length; j++) {\n                        child = actualChild.children[j];\n                        if (child instanceof Canvas) {\n                            object = diagram.nameTable[child.id];\n                            if (!object.isLane) {\n                                object.parentId = prevCanvas.id;\n                            }\n                            if ((row.cells.length - 1 === phase.columnIndex)) {\n                                object.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                                child.margin.left = object.wrapper.bounds.x - prevCanvas.bounds.x;\n                            }\n                            prevCanvas.children.push(child);\n                            if (diagram.nameTable[prevCanvas.id]) {\n                                var parentNode = diagram.nameTable[prevCanvas.id];\n                                if (!parentNode.children) {\n                                    parentNode.children = [];\n                                }\n                                parentNode.children.push(child.id);\n                            }\n                            actualChild.children.splice(j, 1);\n                            j--;\n                            if (node && node.children && node.children.indexOf(object.id) !== -1) {\n                                node.children.splice(node.children.indexOf(object.id), 1);\n                            }\n                        }\n                        if ((row.cells.length - 1 !== phase.columnIndex)) {\n                            for (k = 0; k < prevCanvas.children.length; k++) {\n                                var prevChild_1 = prevCanvas.children[k];\n                                if (prevChild_1 instanceof Canvas) {\n                                    var prevNode = diagram.nameTable[prevChild_1.id];\n                                    prevNode.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                    prevChild_1.margin.left = prevNode.wrapper.bounds.x - actualChild.bounds.x;\n                                }\n                            }\n                        }\n                    }\n                    if (node && node.isPhase) {\n                        var object_1 = diagram.nameTable[prevCanvas.id];\n                        if (object_1) {\n                            prevCanvas.maxWidth = object_1.wrapper.maxWidth = object_1.wrapper.maxWidth += node.wrapper.maxWidth;\n                        }\n                    }\n                    deleteNode(diagram, node);\n                }\n            }\n        }\n    }\n    grid.removeColumn(phase.columnIndex);\n    if ((phase.columnIndex < grid.columnDefinitions().length)) {\n        width = grid.columnDefinitions()[phase.columnIndex].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex, width, true);\n    }\n    else {\n        width = grid.columnDefinitions()[phase.columnIndex - 1].width;\n        width += phase.wrapper.actualSize.width;\n        grid.updateColumnWidth(phase.columnIndex - 1, width, true);\n    }\n}\nexport function removeVerticalPhase(diagram, grid, phase, phaseIndex, swimLane) {\n    var row;\n    var cell;\n    var prevRow;\n    var height;\n    var i;\n    var j;\n    var k;\n    row = grid.rows[phase.rowIndex];\n    var prevCell;\n    var prevChild;\n    var shape = swimLane.shape;\n    var child;\n    var object;\n    var top = swimLane.wrapper.bounds.y;\n    var phaseCount = shape.phases.length;\n    if (shape.header !== undefined && shape.hasHeader) {\n        top += grid.rowDefinitions()[0].height;\n    }\n    prevRow = (phaseIndex === phaseCount) ? grid.rows[phase.rowIndex - 1] : grid.rows[phase.rowIndex + 1];\n    for (i = 0; i < row.cells.length; i++) {\n        cell = row.cells[i];\n        prevCell = prevRow.cells[i];\n        prevChild = prevCell.children[0];\n        if (cell.children.length > 0) {\n            var children = cell.children[0];\n            var node = diagram.nameTable[children.id];\n            if (phaseIndex < phaseCount) {\n                for (k = 0; k < prevChild.children.length; k++) {\n                    child = prevChild.children[k];\n                    if (child instanceof Canvas) {\n                        object = diagram.nameTable[child.id];\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : children.bounds.y);\n                    }\n                }\n            }\n            for (j = 0; j < children.children.length; j++) {\n                child = children.children[j];\n                if (child instanceof Canvas) {\n                    object = diagram.nameTable[child.id];\n                    object.parentId = prevChild.id;\n                    if (phaseIndex === phaseCount) {\n                        object.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                        child.margin.top = object.wrapper.bounds.y - (phaseIndex === 0 ? top : prevChild.bounds.y);\n                    }\n                    prevChild.children.push(child);\n                    children.children.splice(j, 1);\n                    j--;\n                    if (node.children && node.children.indexOf(object.id) !== -1) {\n                        node.children.splice(node.children.indexOf(object.id), 1);\n                    }\n                }\n            }\n            deleteNode(diagram, node);\n        }\n    }\n    grid.removeRow(phase.rowIndex);\n    if ((phase.rowIndex < grid.rowDefinitions().length)) {\n        height = grid.rowDefinitions()[phase.rowIndex].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex, height, true);\n    }\n    else {\n        height = grid.rowDefinitions()[phase.rowIndex - 1].height;\n        height += phase.wrapper.actualSize.height;\n        grid.updateRowHeight(phase.rowIndex - 1, height, true);\n    }\n}\n/**\n * @private\n */\nexport function considerSwimLanePadding(diagram, node, padding) {\n    var lane = diagram.nameTable[node.parentId];\n    if (lane && lane.isLane) {\n        var swimLane = diagram.nameTable[lane.parentId];\n        var grid = swimLane.wrapper.children[0];\n        var x = swimLane.wrapper.bounds.x;\n        var y = swimLane.wrapper.bounds.y;\n        grid.updateColumnWidth(lane.columnIndex, grid.columnDefinitions()[lane.columnIndex].width, true, padding);\n        grid.updateRowHeight(lane.rowIndex, grid.rowDefinitions()[lane.rowIndex].height, true, padding);\n        var canvas = lane.wrapper;\n        var laneHeader = void 0;\n        var isConsiderHeader = false;\n        if (node.margin.left < padding) {\n            node.margin.left = padding;\n        }\n        if (node.margin.top < padding) {\n            node.margin.top = padding;\n        }\n        for (var i = 0; i < canvas.children.length; i++) {\n            var child = canvas.children[i];\n            if (child instanceof Canvas) {\n                var childNode = diagram.nameTable[child.id];\n                if (childNode.isLane) {\n                    laneHeader = childNode.wrapper;\n                    isConsiderHeader = true;\n                    break;\n                }\n            }\n        }\n        if (laneHeader) {\n            if (swimLane.shape.orientation === 'Horizontal') {\n                if (node.margin.left < padding + laneHeader.actualSize.width) {\n                    node.margin.left = padding + laneHeader.actualSize.width;\n                }\n            }\n            else {\n                if (node.margin.top < padding + laneHeader.actualSize.height) {\n                    node.margin.top = padding + laneHeader.actualSize.height;\n                }\n            }\n        }\n        swimLane.wrapper.measure(new Size(swimLane.width, swimLane.height));\n        swimLane.wrapper.arrange(swimLane.wrapper.desiredSize);\n        node.offsetX = node.wrapper.offsetX;\n        node.offsetY = node.wrapper.offsetY;\n        diagram.nodePropertyChange(node, {}, { margin: { left: node.margin.left, top: node.margin.top } });\n        grid.measure(new Size(grid.width, grid.height));\n        grid.arrange(grid.desiredSize);\n        swimLane.width = swimLane.wrapper.width = swimLane.wrapper.children[0].actualSize.width;\n        swimLane.height = swimLane.wrapper.height = swimLane.wrapper.children[0].actualSize.height;\n    }\n}\n/**\n * @private\n */\nexport function checkLaneChildrenOffset(swimLane) {\n    if (swimLane.shape.type === 'SwimLane') {\n        var lanes = swimLane.shape.lanes;\n        var lane = void 0;\n        var child = void 0;\n        for (var i = 0; i < lanes.length; i++) {\n            lane = lanes[i];\n            for (var j = 0; j < lane.children.length; j++) {\n                child = lane.children[j];\n                child.offsetX = child.wrapper.offsetX;\n                child.offsetY = child.wrapper.offsetY;\n            }\n        }\n    }\n}\n","import { createHtmlElement, removeElement } from '../utility/dom-util';\nimport { Ruler } from '../../ruler/index';\nimport { Size } from '../primitives/size';\nimport { getFunction } from '../utility/base-util';\n/**\n * defines the helper methods for the ruler\n */\n/**\n * @private\n */\nexport function renderOverlapElement(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var attributes = {\n        'id': diagram.element.id + '_overlapRuler',\n        style: 'height:' + rulerSize.height + 'px;width:' + rulerSize.width + 'px;position:absolute;left:0;top:0',\n        class: 'e-ruler-overlap'\n    };\n    var overlap = createHtmlElement('div', attributes);\n    diagram.element.insertBefore(overlap, diagram.element.firstChild);\n}\n/**\n * @private\n */\nexport function renderRuler(diagram, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var margin = isHorizontal ? ('margin-left:' + rulerSize.width + 'px;') : ('margin-top:' + rulerSize.height + 'px;');\n    if (!div) {\n        var style = 'height:' + (isHorizontal ? rulerSize.height : (rulerGeometry.height + 100)) + 'px;overflow:hidden;width:' +\n            (isHorizontal ? (rulerGeometry.width + 100) : rulerSize.width) + 'px;position:absolute;font-size:11px;' + margin;\n        var attributes = {\n            'id': diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'),\n            style: style\n        };\n        div = createHtmlElement('div', attributes);\n    }\n    diagram.element.insertBefore(div, diagram.element.firstChild);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    var ruler = new Ruler(diagramRuler);\n    ruler.orientation = isHorizontal ? 'Horizontal' : 'Vertical';\n    ruler.length = (isHorizontal ? rulerGeometry.width : rulerGeometry.height) + diagramRuler.segmentWidth;\n    ruler.appendTo('#' + diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler = ruler : diagram.vRuler = ruler;\n    var rulerObj = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    isHorizontal ? diagram.hRuler.element = rulerObj : diagram.vRuler.element = rulerObj;\n}\n/**\n * @private\n */\nexport function updateRuler(diagram) {\n    var hOffset = -diagram.scroller.horizontalOffset;\n    var vOffset = -diagram.scroller.verticalOffset;\n    if (diagram && diagram.rulerSettings.showRulers) {\n        diagram.hRuler.length = 0;\n        diagram.vRuler.length = 0;\n        if (hOffset !== undefined && diagram.hRuler.element) {\n            updateRulerDimension(diagram, diagram.hRuler, hOffset, true);\n        }\n        if (vOffset !== undefined && diagram.vRuler.element) {\n            updateRulerDimension(diagram, diagram.vRuler, vOffset, false);\n        }\n    }\n    else {\n        removeRulerElements(diagram);\n    }\n}\n/**\n * @private\n */\nexport function removeRulerElements(diagram) {\n    removeElement(diagram.element.id + '_hRuler');\n    removeElement(diagram.element.id + '_vRuler');\n    removeElement(diagram.element.id + '_overlapRuler');\n}\n/** @private */\nexport function getRulerSize(diagram) {\n    var top = 0;\n    var left = 0;\n    if (diagram.rulerSettings.showRulers) {\n        top = diagram.rulerSettings.horizontalRuler.thickness;\n        left = diagram.rulerSettings.verticalRuler.thickness;\n    }\n    return new Size(left, top);\n}\n/** @private */\nexport function getRulerGeometry(diagram) {\n    var rulerSize = getRulerSize(diagram);\n    var height = diagram.scroller.viewPortHeight;\n    var width = diagram.scroller.viewPortWidth;\n    if (width < diagram.element.clientWidth - rulerSize.width) {\n        width = diagram.element.clientWidth - rulerSize.width;\n    }\n    if (height < diagram.element.clientHeight - rulerSize.height) {\n        height = diagram.element.clientHeight - rulerSize.height;\n    }\n    if (diagram.hRuler && diagram.hRuler.length) {\n        width = diagram.hRuler.length;\n    }\n    if (diagram.vRuler && diagram.vRuler.length) {\n        height = diagram.vRuler.length;\n    }\n    return new Size(width, height);\n}\n/**\n * @private\n */\nexport function removeRulerMarkers() {\n    var markers = document.getElementsByClassName('e-d-ruler-marker');\n    var marker;\n    var i;\n    if (markers && markers.length > 0) {\n        for (i = markers.length - 1; i >= 0; i--) {\n            marker = markers[i];\n            if (marker) {\n                marker.parentNode.removeChild(marker);\n            }\n        }\n    }\n}\nexport function drawRulerMarkers(diagram, currentPoint) {\n    if (diagram.rulerSettings.showRulers) {\n        diagram.hRuler.drawRulerMarker(diagram.hRuler.element, currentPoint, diagram.scroller.horizontalOffset);\n        diagram.vRuler.drawRulerMarker(diagram.vRuler.element, currentPoint, diagram.scroller.verticalOffset);\n    }\n}\nfunction updateRulerDimension(diagram, ruler, offset, isHorizontal) {\n    var rulerSize = getRulerSize(diagram);\n    var rulerGeometry = getRulerGeometry(diagram);\n    var diagramRuler = isHorizontal ? diagram.rulerSettings.horizontalRuler : diagram.rulerSettings.verticalRuler;\n    updateRulerDiv(diagram, rulerGeometry, isHorizontal);\n    updateRulerSpace(diagram, rulerGeometry, isHorizontal);\n    ruler.offset = offset;\n    ruler.scale = diagram.scroller.currentZoom;\n    ruler.length = rulerGeometry.width + 100;\n    ruler.arrangeTick = getFunction(diagramRuler.arrangeTick);\n    ruler.dataBind();\n    var rulerObj = isHorizontal ? diagram.hRuler.element : diagram.vRuler.element;\n    if (isHorizontal) {\n        rulerObj.style.marginLeft = (rulerSize.width - ruler.hRulerOffset) + 'px';\n    }\n    else {\n        rulerObj.style.marginTop = (rulerSize.height - ruler.vRulerOffset) + 'px';\n    }\n}\nfunction updateRulerSpace(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler_ruler_space' : '_vRuler_ruler_space'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + (ruler.segmentWidth * 2)) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + (ruler.segmentWidth * 2))) + 'px';\n    }\n}\nfunction updateRulerDiv(diagram, rulerGeometry, isHorizontal) {\n    var div = document.getElementById(diagram.element.id + (isHorizontal ? '_hRuler' : '_vRuler'));\n    var ruler = isHorizontal ? diagram.hRuler : diagram.vRuler;\n    if (div && diagram && rulerGeometry) {\n        div.style.width = (isHorizontal ? (rulerGeometry.width + ruler.segmentWidth) : ruler.thickness) + 'px';\n        div.style.height = (isHorizontal ? ruler.thickness : (rulerGeometry.height + ruler.segmentWidth)) + 'px';\n        div = document.getElementById(diagram.element.id + '_overlapRuler');\n        if (div) {\n            isHorizontal ? (div.style.height = ruler.thickness + 'px') : (div.style.width = ruler.thickness + 'px');\n        }\n    }\n}\n","/**\n * UMLActivityShapeDictionary defines the shape of the built-in uml activity shapes\n */\n/** @private */\nexport function getUMLActivityShape(shape) {\n    return umlActivityShapes[shape.toString()];\n}\nvar umlActivityShapes = {\n    // Action,\n    'Action': 'M 90 82.895 C 90 86.819 86.776 90 82.8 90 H 7.2 C 3.224 90 0 86.819 0 82.895' +\n        ' V 7.105 C 0 3.181 3.224 0 7.2 0 h 75.6 C 86.776 0 90 3.181 90 7.105 V 82.895 Z',\n    // Decision,\n    'Decision': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // MergeNode,\n    'MergeNode': 'M10,19.707L0.293,10L10,0.293L19.707,10L10,19.707z',\n    // InitialNode,\n    'InitialNode': 'M10,19.5c-5.238,0-9.5-4.262-9.5-9.5S4.762,0.5,10,0.5s9.5,4.262,9.5,9.5S15.238,19.5,10,19.5z',\n    // ForkNode,\n    'ForkNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // JoinNode,\n    'JoinNode': 'm0.75,0.75l636.00002,0l0,290l-636.00002,0l0,-290z',\n    // TimeEvent,\n    'TimeEvent': 'M50.001,0.00286865 L25.001,25.0029 L0.000976562,0.00286865 L50.001,0.00286865 z' +\n        ' M0.000976562,50.0029 L25.001,25.0029 L50.001,50.0029 L0.000976562,50.0029 z',\n    // AcceptingEvent,\n    'AcceptingEvent': 'M17.8336 32.164 L29.64 24 L17.32 16 L48.1664 16 L48.5 32 Z',\n    // SendSignal,\n    'SendSignal': 'M48.164 31.8336 L56 23.832 L47.836 16 L16.168 16 L16.1668 31.8336 Z',\n    // ReceiveSignal,\n    'ReceiveSignal': 'M48.1664 31.8336 L39.836 24 L47.836 16 L16.168 16 L16.168 31.836 Z',\n    // StructuredNode,\n    'StructuredNode': 'M0,0 L50,0 L50,50 L0,50 z',\n    // Note,\n    'Note': 'M20 12 L4 12 L4 22 L22 22 L22 14 L20 14 L20 12 L22 14 Z',\n};\n","import { Size } from './../primitives/size';\nimport { Rect } from './../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Container } from './../core/containers/container';\nimport { StrokeStyle, Stop } from './../core/appearance';\nimport { Point } from './../primitives/point';\nimport { ConnectorConstraints, NodeConstraints, PortConstraints, DiagramConstraints, DiagramTools } from './../enum/enum';\nimport { SelectorConstraints, ThumbsConstraints } from './../enum/enum';\nimport { PathElement } from './../core/elements/path-element';\nimport { DiagramNativeElement } from './../core/elements/native-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { PathAnnotation, ShapeAnnotation } from './../objects/annotation';\nimport { Node, FlowShape, BasicShape, Native, Html, UmlActivityShape, BpmnGateway, BpmnDataObject, BpmnEvent, BpmnSubEvent, BpmnActivity, BpmnAnnotation, MethodArguments, UmlClassAttribute, UmlClassMethod, UmlClass, UmlInterface, UmlEnumerationMember, UmlEnumeration, Lane, Phase, ChildContainer, SwimLane, Path, Image, Text, BpmnShape, UmlClassifierShape, Header } from './../objects/node';\nimport { Connector, bezierPoints, BezierSegment, StraightSegment, OrthogonalSegment } from './../objects/connector';\nimport { getBasicShape } from './../objects/dictionary/basic-shapes';\nimport { getFlowShape } from './../objects/dictionary/flow-shapes';\nimport { Diagram } from './../diagram';\nimport { getContent, removeElement, hasClass, getDiagramElement } from './dom-util';\nimport { getBounds, cloneObject, rotatePoint, getFunction } from './base-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { getRulerSize } from '../ruler/ruler';\nimport { canResize } from './constraints-util';\nimport { UserHandle } from '../interaction/selector';\nimport { getUMLActivityShape } from '../objects/dictionary/umlactivity-shapes';\nimport { Canvas } from '../core/containers/canvas';\nimport { PointPort } from '../objects/port';\nimport { Command } from '../diagram/keyboard-commands';\nimport { pasteSwimLane } from './swim-lane-util';\n/** @private */\nexport function completeRegion(region, selectedObjects) {\n    var collection = [];\n    for (var i = 0; i < selectedObjects.length; i++) {\n        var obj = selectedObjects[i];\n        if (region.containsRect(obj.wrapper.bounds)) {\n            collection.push(obj);\n        }\n    }\n    return collection;\n}\n/** @private */\nexport function findNodeByName(nodes, name) {\n    for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id === name) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @private\n */\nexport function findObjectType(drawingObject) {\n    var type;\n    if (drawingObject) {\n        if (drawingObject.type) {\n            type = 'Connector';\n        }\n        else if (drawingObject.shape && !drawingObject.type) {\n            type = 'Node';\n        }\n    }\n    return type;\n}\n/**\n * @private\n */\nexport function setSwimLaneDefaults(child, node) {\n    if (node instanceof Node) {\n        if (!child.shape.header) {\n            node.shape.hasHeader = false;\n        }\n    }\n}\n/**\n * @private\n */\nexport function setUMLActivityDefaults(child, node) {\n    if (node instanceof Node) {\n        switch (child.shape.shape) {\n            case 'JoinNode':\n                if (!child.width) {\n                    node.width = 20;\n                }\n                if (!child.height) {\n                    node.height = 90;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'ForkNode':\n                if (!child.width) {\n                    node.width = 90;\n                }\n                if (!child.height) {\n                    node.height = 20;\n                }\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'InitialNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n            case 'FinalNode':\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'black';\n                }\n                break;\n        }\n    }\n    else {\n        switch (child.shape.flow) {\n            case 'Object':\n                if (!child.style || !child.style.strokeDashArray) {\n                    node.style.strokeDashArray = '8 4';\n                }\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                break;\n            case 'Control':\n                if (!child.style || !child.style.strokeWidth) {\n                    node.style.strokeWidth = 2;\n                }\n                if (!child.targetDecorator || !child.targetDecorator.shape) {\n                    node.targetDecorator.shape = 'OpenArrow';\n                }\n                if (!child.sourceDecorator || !child.sourceDecorator.shape) {\n                    node.sourceDecorator.shape = 'None';\n                }\n                break;\n        }\n    }\n}\n/** @private */\nexport function findNearestPoint(reference, start, end) {\n    var shortestPoint;\n    var shortest = Point.findLength(start, reference);\n    var shortest1 = Point.findLength(end, reference);\n    if (shortest > shortest1) {\n        shortestPoint = end;\n    }\n    else {\n        shortestPoint = start;\n    }\n    var angleBWStAndEnd = Point.findAngle(start, end);\n    var angleBWStAndRef = Point.findAngle(shortestPoint, reference);\n    var r = Point.findLength(shortestPoint, reference);\n    var vaAngle = angleBWStAndRef + ((angleBWStAndEnd - angleBWStAndRef) * 2);\n    return {\n        x: (shortestPoint.x + r * Math.cos(vaAngle * Math.PI / 180)),\n        y: (shortestPoint.y + r * Math.sin(vaAngle * Math.PI / 180))\n    };\n}\nfunction pointsForBezier(connector) {\n    var points = [];\n    if (connector.type === 'Bezier') {\n        var k = 0;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var tolerance = 1.5;\n            var segment = connector.segments[i];\n            var pt = { x: 0, y: 0 };\n            var point1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n            var point2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n            var max = Number((connector.distance(point1, segment.points[0]) +\n                connector.distance(point2, point1) +\n                connector.distance(segment.points[1], point2)) / tolerance);\n            for (var j = 0; j < max - 1; j = j + 10) {\n                points[k] =\n                    bezierPoints(connector, segment.points[0], !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, segment.points[1], j, max);\n                k++;\n            }\n        }\n    }\n    return points;\n}\n/** @private */\nexport function isDiagramChild(htmlLayer) {\n    var element = htmlLayer.parentElement;\n    do {\n        if (hasClass(element, 'e-diagram')) {\n            return true;\n        }\n        element = element.parentElement;\n    } while (element);\n    return false;\n}\n/** @private */\nexport function groupHasType(node, type, nameTable) {\n    var contains = false;\n    if (node && node.children && node.children.length > 0) {\n        var child = void 0;\n        var i = 0;\n        for (; i < node.children.length; i++) {\n            child = nameTable[node.children[i]];\n            if (child.shape.type === type) {\n                return true;\n            }\n            return groupHasType(child, type, nameTable);\n        }\n    }\n    return contains;\n}\n/** @private */\nexport function isPointOverConnector(connector, reference) {\n    var intermediatePoints;\n    intermediatePoints = connector.type === 'Bezier' ? pointsForBezier(connector) :\n        connector.intermediatePoints;\n    for (var i = 0; i < intermediatePoints.length - 1; i++) {\n        var start = intermediatePoints[i];\n        var end = intermediatePoints[i + 1];\n        var rect = Rect.toBounds([start, end]);\n        rect.Inflate(connector.hitPadding);\n        if (rect.containsPoint(reference)) {\n            var intersectinPt = findNearestPoint(reference, start, end);\n            var segment1 = { x1: start.x, x2: end.x, y1: start.y, y2: end.y };\n            var segment2 = { x1: reference.x, x2: intersectinPt.x, y1: reference.y, y2: intersectinPt.y };\n            var intersectDetails = intersect3(segment1, segment2);\n            if (intersectDetails.enabled) {\n                var distance = Point.findLength(reference, intersectDetails.intersectPt);\n                if (Math.abs(distance) < connector.hitPadding) {\n                    return true;\n                }\n            }\n            else {\n                var rect_1 = Rect.toBounds([reference, reference]);\n                rect_1.Inflate(3);\n                if (rect_1.containsPoint(start) || rect_1.containsPoint(end)) {\n                    return true;\n                }\n            }\n            if (Point.equals(reference, intersectinPt)) {\n                return true;\n            }\n        }\n    }\n    if (connector.annotations.length > 0) {\n        var container = connector.wrapper.children;\n        for (var i = 3; i < container.length; i++) {\n            var textElement = container[i];\n            if (textElement.bounds.containsPoint(reference)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n/** @private */\nexport function intersect3(lineUtil1, lineUtil2) {\n    var point = { x: 0, y: 0 };\n    var l1 = lineUtil1;\n    var l2 = lineUtil2;\n    var d = (l2.y2 - l2.y1) * (l1.x2 - l1.x1) - (l2.x2 - l2.x1) * (l1.y2 - l1.y1);\n    var na = (l2.x2 - l2.x1) * (l1.y1 - l2.y1) - (l2.y2 - l2.y1) * (l1.x1 - l2.x1);\n    var nb = (l1.x2 - l1.x1) * (l1.y1 - l2.y1) - (l1.y2 - l1.y1) * (l1.x1 - l2.x1);\n    if (d === 0) {\n        return { enabled: false, intersectPt: point };\n    }\n    var ua = na / d;\n    var ub = nb / d;\n    if (ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1) {\n        point.x = l1.x1 + (ua * (l1.x2 - l1.x1));\n        point.y = l1.y1 + (ua * (l1.y2 - l1.y1));\n        return { enabled: true, intersectPt: point };\n    }\n    return { enabled: false, intersectPt: point };\n}\n/** @private */\nexport function intersect2(start1, end1, start2, end2) {\n    var point = { x: 0, y: 0 };\n    var lineUtil1 = getLineSegment(start1.x, start1.y, end1.x, end1.y);\n    var lineUtil2 = getLineSegment(start2.x, start2.y, end2.x, end2.y);\n    var line3 = intersect3(lineUtil1, lineUtil2);\n    if (line3.enabled) {\n        return line3.intersectPt;\n    }\n    else {\n        return point;\n    }\n}\n/** @private */\nexport function getLineSegment(x1, y1, x2, y2) {\n    return { 'x1': Number(x1) || 0, 'y1': Number(y1) || 0, 'x2': Number(x2) || 0, 'y2': Number(y2) || 0 };\n}\n/** @private */\nexport function getPoints(element, corners, padding) {\n    var line = [];\n    padding = padding || 0;\n    var left = { x: corners.topLeft.x - padding, y: corners.topLeft.y };\n    var right = { x: corners.topRight.x + padding, y: corners.topRight.y };\n    var top = { x: corners.bottomRight.x, y: corners.bottomRight.y - padding };\n    var bottom = { x: corners.bottomLeft.x, y: corners.bottomLeft.y + padding };\n    line.push(left);\n    line.push(right);\n    line.push(top);\n    line.push(bottom);\n    return line;\n}\n/**\n * @private\n * sets the offset of the tooltip.\n * @param diagram\n * @param mousePosition\n * @param node\n */\nexport function getTooltipOffset(diagram, mousePosition, node) {\n    var offset;\n    var inheritTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.InheritTooltip)\n        : (node.constraints & ConnectorConstraints.InheritTooltip);\n    var objectTooltip = (node instanceof Node) ? (node.constraints & NodeConstraints.Tooltip)\n        : (node.constraints & ConnectorConstraints.Tooltip);\n    var isMouseBased = ((!inheritTooltip && objectTooltip ? node.tooltip.relativeMode\n        : diagram.tooltip.relativeMode) === 'Mouse') ? true : false;\n    offset = tooltipOffset(node, mousePosition, diagram, isMouseBased);\n    var rulerSize = getRulerSize(diagram);\n    return { x: offset.x + rulerSize.width, y: offset.y + rulerSize.height };\n}\nfunction tooltipOffset(node, mousePosition, diagram, isMouseBased) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var element = document.getElementById(diagram.element.id);\n    var bounds = node.wrapper.bounds;\n    var rect = element.getBoundingClientRect();\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    switch (diagram.tooltipObject.position) {\n        case 'BottomCenter':\n            point = offsetPoint(mousePosition, bounds.bottomCenter, diagram, isMouseBased, (rect.width / 2), rect.height);\n            break;\n        case 'BottomLeft':\n        case 'LeftBottom':\n            point = offsetPoint(mousePosition, bounds.bottomLeft, diagram, isMouseBased, 0, rect.height);\n            break;\n        case 'BottomRight':\n        case 'RightBottom':\n            point = offsetPoint(mousePosition, bounds.bottomRight, diagram, isMouseBased, rect.width, rect.height);\n            break;\n        case 'LeftCenter':\n            point = offsetPoint(mousePosition, bounds.middleLeft, diagram, isMouseBased, 0, (rect.height / 2));\n            break;\n        case 'LeftTop':\n        case 'TopLeft':\n            point = offsetPoint(mousePosition, bounds.topLeft, diagram, isMouseBased, 0, 0);\n            break;\n        case 'RightCenter':\n            point = offsetPoint(mousePosition, bounds.middleRight, diagram, isMouseBased, rect.width, (rect.height / 2));\n            break;\n        case 'RightTop':\n        case 'TopRight':\n            point = offsetPoint(mousePosition, bounds.topRight, diagram, isMouseBased, rect.width, 0);\n            break;\n        case 'TopCenter':\n            point = offsetPoint(mousePosition, bounds.topCenter, diagram, isMouseBased, (rect.width / 2), 0);\n            break;\n    }\n    return point;\n}\nfunction offsetPoint(mousePosition, bound, diagram, isMouseBased, x, y) {\n    var point = {};\n    var scale = diagram.scroller.transform.scale;\n    var horizontalOffset = diagram.scroller.horizontalOffset;\n    var verticalOffset = diagram.scroller.verticalOffset;\n    point.x = (isMouseBased ? mousePosition.x : bound.x) * scale + horizontalOffset - x;\n    point.y = (isMouseBased ? mousePosition.y : bound.y) * scale + verticalOffset - y;\n    return point;\n}\n/** @private */\nexport function sort(objects, option) {\n    var i = 0;\n    var j = 0;\n    var temp;\n    for (i = 0; i < objects.length; i++) {\n        var b = getBounds(objects[i].wrapper);\n        for (j = 0; j < objects.length; j++) {\n            var bounds = getBounds(objects[j].wrapper);\n            if (option === 'Top' || option === 'Bottom' || option === 'BottomToTop' || option === 'Middle') {\n                if (b.center.y > bounds.center.y) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n            else {\n                if (b.center.x > bounds.center.x) {\n                    temp = objects[i];\n                    objects[i] = objects[j];\n                    objects[j] = temp;\n                }\n            }\n        }\n    }\n    return objects;\n}\n/** @private */\nexport function getAnnotationPosition(pts, annotation, bound) {\n    var angle;\n    var getloop;\n    var point;\n    getloop = getOffsetOfConnector(pts, annotation, bound);\n    angle = Point.findAngle(pts[getloop.index], pts[getloop.index + 1]);\n    var alignednumber = getAlignedPosition(annotation);\n    point = Point.transform(getloop.point, angle + 45, alignednumber);\n    getloop.point = point;\n    getloop.angle = angle;\n    return getloop;\n}\n/** @private */\nexport function getOffsetOfConnector(points, annotation, bounds) {\n    var length = 0;\n    var offset = annotation.offset;\n    var point;\n    var angle;\n    var offsetLength;\n    var lengths = [];\n    var prevLength;\n    var kCount;\n    for (var j = 0; j < points.length - 1; j++) {\n        length += Point.distancePoints(points[j], points[j + 1]);\n        lengths.push(length);\n    }\n    offsetLength = offset * length;\n    for (var k = 0; k < lengths.length; k++) {\n        if (lengths[k] >= offsetLength) {\n            angle = Point.findAngle(points[k], points[k + 1]);\n            point = Point.transform(points[k], angle, offsetLength - (prevLength || 0));\n            kCount = k;\n            return { point: point, index: kCount };\n        }\n        prevLength = lengths[k];\n    }\n    return { point: point, index: kCount };\n}\n/** @private */\nexport function getAlignedPosition(annotation) {\n    var cnst = annotation.content === undefined ? 10 : 0;\n    var state = 0;\n    switch (annotation.alignment) {\n        case 'Center':\n            state = 0;\n            break;\n        case 'Before':\n            state = -((0) / 2 + cnst);\n            break;\n        case 'After':\n            state = ((0) / 2 + cnst);\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function alignLabelOnSegments(obj, ang, pts) {\n    var angle = ang % 360;\n    ang %= 360;\n    var fourty5 = 45;\n    var one35 = 135;\n    var two25 = 225;\n    var three15 = 315;\n    var vAlign;\n    var hAlign;\n    switch (obj.alignment) {\n        case 'Before':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'bottom';\n                hAlign = (obj.offset === 0.5) ? 'center' : 'left';\n            }\n            break;\n        case 'After':\n            if (ang >= fourty5 && ang <= one35) {\n                hAlign = 'left';\n                vAlign = obj.offset === 0.5 ? 'center' : 'top';\n            }\n            else if (ang >= two25 && ang <= three15) {\n                hAlign = 'right';\n                vAlign = obj.offset === 0.5 ? 'center' : 'bottom';\n            }\n            else if (ang > fourty5 && ang < two25) {\n                vAlign = 'bottom';\n                hAlign = obj.offset === 0.5 ? 'center' : 'right';\n            }\n            else {\n                vAlign = 'top';\n                hAlign = obj.offset === 0.5 ? 'center' : 'left';\n            }\n            break;\n        case 'Center':\n            hAlign = 'center';\n            vAlign = 'center';\n            break;\n    }\n    if (obj.offset === 0 || obj.offset === 1) {\n        var direction = void 0;\n        direction = getBezierDirection(pts[0], pts[1]);\n        switch (direction) {\n            case 'left':\n                hAlign = obj.offset === 0 ? 'right' : 'left';\n                break;\n            case 'right':\n                hAlign = obj.offset === 0 ? 'left' : 'right';\n                break;\n            case 'bottom':\n                vAlign = obj.offset === 0 ? 'top' : 'bottom';\n                break;\n            case 'top':\n                vAlign = obj.offset === 0 ? 'bottom' : 'top';\n                break;\n        }\n    }\n    return { hAlign: hAlign, vAlign: vAlign };\n}\n/** @private */\nexport function getBezierDirection(src, tar) {\n    if (Math.abs(tar.x - src.x) > Math.abs(tar.y - src.y)) {\n        return src.x < tar.x ? 'right' : 'left';\n    }\n    else {\n        return src.y < tar.y ? 'bottom' : 'top';\n    }\n}\n/** @private */\nexport function removeChildNodes(node, diagram) {\n    if (node instanceof Node && node.children) {\n        for (var i = 0; i < node.children.length; i++) {\n            if (diagram.nameTable[node.children[i]].children) {\n                removeChildNodes(node, diagram);\n            }\n            diagram.removeFromAQuad(diagram.nameTable[node.children[i]]);\n            diagram.removeObjectsFromLayer(diagram.nameTable[node.children[i]]);\n            delete diagram.nameTable[node.children[i]];\n        }\n    }\n}\nfunction getChild(child, children) {\n    if (child && child.children && child.children.length > 0) {\n        for (var j = 0; j < child.children.length; j++) {\n            var subChild = child.children[j];\n            if (subChild instanceof Canvas) {\n                getChild(subChild, children);\n            }\n        }\n    }\n    if (children.indexOf(child.id) === -1) {\n        children.push(child.id);\n    }\n    return children;\n}\nfunction getSwimLaneChildren(nodes) {\n    var children = [];\n    var node;\n    var grid;\n    var childTable;\n    var child;\n    var gridChild = 'childTable';\n    for (var i = 0; i < nodes.length; i++) {\n        node = nodes[i];\n        if (node.shape.type === 'SwimLane') {\n            grid = node.wrapper.children[0];\n            childTable = grid[gridChild];\n            for (var _i = 0, _a = Object.keys(childTable); _i < _a.length; _i++) {\n                var key = _a[_i];\n                child = childTable[key];\n                children = getChild(child, children);\n            }\n        }\n    }\n    return children;\n}\nfunction removeUnnecessaryNodes(children, diagram) {\n    var nodes = diagram.nodes;\n    if (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            if (children.indexOf(nodes[i].id) !== -1) {\n                nodes.splice(i, 1);\n                i--;\n            }\n        }\n    }\n}\n/** @private */\nexport function serialize(model) {\n    var removeNodes = getSwimLaneChildren(model.nodes);\n    var clonedObject = cloneObject(model, model.getCustomProperty);\n    clonedObject.selectedItems.nodes = [];\n    clonedObject.selectedItems.connectors = [];\n    clonedObject.selectedItems.wrapper = null;\n    if (model.serializationSettings.preventDefaults) {\n        clonedObject = preventDefaults(clonedObject, model);\n    }\n    removeUnnecessaryNodes(removeNodes, clonedObject);\n    return JSON.stringify(clonedObject);\n}\nfunction preventDefaults(clonedObject, model, defaultObject, isNodeShape) {\n    defaultObject = getConstructor(model, defaultObject);\n    var properties = [];\n    properties = properties.concat(Object.keys(clonedObject));\n    for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n        var property = properties_1[_i];\n        if (model instanceof Node) {\n            isNodeShape = (property === 'shape') ? true : false;\n        }\n        if (clonedObject[property] instanceof Array) {\n            preventArrayDefaults(clonedObject, defaultObject, model, property);\n        }\n        else if (clonedObject[property] instanceof Object) {\n            if (property !== 'wrapper') {\n                clonedObject[property] = preventDefaults(clonedObject[property], model[property], defaultObject[property], isNodeShape);\n            }\n        }\n        else if ((defaultObject && clonedObject[property] === defaultObject[property]) || clonedObject[property] === undefined) {\n            if (!(isNodeShape && property === 'type') && !(model instanceof SwimLane && property === 'orientation')) {\n                delete clonedObject[property];\n            }\n        }\n        if (JSON.stringify(clonedObject[property]) === '[]' ||\n            JSON.stringify(clonedObject[property]) === '{}' ||\n            clonedObject[property] === undefined) {\n            delete clonedObject[property];\n        }\n    }\n    return clonedObject;\n}\nfunction preventArrayDefaults(clonedObject, defaultObject, model, property) {\n    if (clonedObject[property].length === 0) {\n        delete clonedObject[property];\n        // tslint:disable-next-line:no-any\n    }\n    else if (clonedObject[property].every(function (element) { return typeof element === 'number'; })) {\n        var i = void 0;\n        var isSameArray = true;\n        for (i = 0; i < clonedObject[property].length; i++) {\n            if (isSameArray && clonedObject[property][i] === defaultObject[property][i]) {\n                isSameArray = true;\n            }\n            else {\n                isSameArray = false;\n            }\n        }\n        if (isSameArray) {\n            delete clonedObject[property];\n        }\n    }\n    else {\n        var i = void 0;\n        if (property === 'layers') {\n            clonedObject[property].splice(0, 1);\n            if (clonedObject[property].length === 0) {\n                delete clonedObject[property];\n            }\n        }\n        if (clonedObject[property]) {\n            for (i = clonedObject[property].length - 1; i >= 0; i--) {\n                if (property === 'nodes' || property === 'connectors') {\n                    clonedObject[property][i].wrapper = null;\n                }\n                if (property !== 'dataManager') {\n                    clonedObject[property][i] = preventDefaults(clonedObject[property][i], model[property][i], (defaultObject[property] !== undefined ? defaultObject[property][i] : undefined));\n                    if (JSON.stringify(clonedObject[property][i]) === '[]' ||\n                        JSON.stringify(clonedObject[property][i]) === '{}' ||\n                        clonedObject[property][i] === undefined) {\n                        clonedObject[property].splice(i, 1);\n                    }\n                }\n            }\n        }\n    }\n}\n/* tslint:disable */\nfunction getConstructor(model, defaultObject) {\n    var obj = [];\n    var constructor;\n    var parent = new Diagram();\n    var getClassName = 'getClassName';\n    if (model[getClassName]) {\n        switch (model[getClassName]()) {\n            case 'Diagram':\n                constructor = new Diagram();\n                break;\n            case 'Node':\n                constructor = new Node(parent, '', obj);\n                break;\n            case 'Path':\n                constructor = new Path(parent, '', obj);\n                break;\n            case 'Native':\n                constructor = new Native(parent, '', obj);\n                break;\n            case 'Html':\n                constructor = new Html(parent, '', obj);\n                break;\n            case 'Image':\n                constructor = new Image(parent, '', obj);\n                break;\n            case 'Text':\n                constructor = new Text(parent, '', obj);\n                break;\n            case 'BasicShape':\n                constructor = new BasicShape(parent, '', obj);\n                break;\n            case 'FlowShape':\n                constructor = new FlowShape(parent, '', obj);\n                break;\n            case 'BpmnShape':\n                constructor = new BpmnShape(parent, '', obj);\n                break;\n            case 'UmlActivityShape':\n                constructor = new UmlActivityShape(parent, '', obj);\n                break;\n            case 'UmlClassifierShape':\n                constructor = new UmlClassifierShape(parent, '', obj);\n                break;\n            case 'SwimLane':\n                constructor = new SwimLane(parent, '', obj);\n                if (model.header) {\n                    constructor.header = new Header(parent, '', obj);\n                    constructor.header.style.fill = '';\n                }\n                break;\n            case 'ShapeAnnotation':\n                constructor = new ShapeAnnotation(parent, '', obj);\n                break;\n            case 'PointPort':\n                constructor = new PointPort(parent, '', obj);\n                break;\n            case 'BpmnGateway':\n                constructor = new BpmnGateway(parent, '', obj);\n                break;\n            case 'BpmnDataObject':\n                constructor = new BpmnDataObject(parent, '', obj);\n                break;\n            case 'BpmnEvent':\n                constructor = new BpmnEvent(parent, '', obj);\n                break;\n            case 'BpmnSubEvent':\n                constructor = new BpmnSubEvent(parent, '', obj);\n                break;\n            case 'BpmnActivity':\n                constructor = new BpmnActivity(parent, '', obj);\n                break;\n            case 'BpmnAnnotation':\n                constructor = new BpmnAnnotation(parent, '', obj);\n                break;\n            case 'MethodArguments':\n                constructor = new MethodArguments(parent, '', obj);\n                break;\n            case 'UmlClassAttribute':\n                constructor = new UmlClassAttribute(parent, '', obj);\n                break;\n            case 'UmlClassMethod':\n                constructor = new UmlClassMethod(parent, '', obj);\n                break;\n            case 'UmlClass':\n                constructor = new UmlClass(parent, '', obj);\n                break;\n            case 'UmlInterface':\n                constructor = new UmlInterface(parent, '', obj);\n                break;\n            case 'UmlEnumerationMember':\n                constructor = new UmlEnumerationMember(parent, '', obj);\n                break;\n            case 'UmlEnumeration':\n                constructor = new UmlEnumeration(parent, '', obj);\n                break;\n            case 'Lane':\n                constructor = new Lane(parent, '', obj);\n                break;\n            case 'Phase':\n                constructor = new Phase(parent, '', obj);\n                break;\n            case 'ChildContainer':\n                constructor = new ChildContainer();\n                break;\n            case 'Connector':\n                constructor = new Connector(parent, '', obj);\n                break;\n            case 'StraightSegment':\n                constructor = new StraightSegment(parent, '', obj);\n                break;\n            case 'BezierSegment':\n                constructor = new BezierSegment(parent, '', obj);\n                break;\n            case 'OrthogonalSegment':\n                constructor = new OrthogonalSegment(parent, '', obj);\n                break;\n            case 'PathAnnotation':\n                constructor = new PathAnnotation(parent, '', obj);\n                break;\n            case 'Stop':\n                constructor = new Stop(parent, '', obj);\n                break;\n            case 'Point':\n                if (!defaultObject) {\n                    constructor = new Point(parent, '', obj);\n                }\n                else {\n                    constructor = defaultObject;\n                }\n                break;\n            case 'UserHandle':\n                constructor = new UserHandle(parent, '', obj);\n                break;\n            case 'Command':\n                constructor = new Command(parent, '', obj);\n                break;\n        }\n    }\n    else {\n        constructor = defaultObject;\n    }\n    return constructor;\n}\n/* tslint:enable */\n/** @private */\nexport function deserialize(model, diagram) {\n    diagram.clear();\n    diagram.protectPropertyChange(true);\n    var map = diagram.dataSourceSettings.doBinding;\n    var nodeTemp = diagram.setNodeTemplate;\n    var getDescription = diagram.getDescription;\n    var getCustomProperty = diagram.getCustomProperty;\n    var commands = {};\n    for (var _i = 0, _a = diagram.commandManager.commands; _i < _a.length; _i++) {\n        var command = _a[_i];\n        commands[command.name] = { execute: command.execute, canExecute: command.canExecute };\n    }\n    var arrangeTickHorizontal = diagram.rulerSettings.horizontalRuler.arrangeTick;\n    var arrangeTickVertical = diagram.rulerSettings.verticalRuler.arrangeTick;\n    var getLayoutInfo = diagram.layout.getLayoutInfo;\n    var getBranch = diagram.layout.getBranch;\n    var nodeDefaults = diagram.getNodeDefaults;\n    var connectorDefaults = diagram.getConnectorDefaults;\n    var dataObj = JSON.parse(model);\n    dataObj = upgrade(dataObj);\n    diagram.contextMenuSettings = dataObj.contextMenuSettings || {};\n    diagram.constraints = dataObj.constraints || DiagramConstraints.Default;\n    diagram.tool = dataObj.tool || DiagramTools.Default;\n    diagram.bridgeDirection = dataObj.bridgeDirection || 'Top';\n    diagram.pageSettings = dataObj.pageSettings || {};\n    diagram.drawingObject = dataObj.drawingObject || undefined;\n    diagram.tooltip = dataObj.tooltip || {};\n    diagram.addInfo = dataObj.addInfo || undefined;\n    diagram.getDescription = getDescription;\n    diagram.scrollSettings = dataObj.scrollSettings || {};\n    diagram.commandManager = dataObj.commandManager || {};\n    diagram.layers = dataObj.layers || [];\n    diagram.rulerSettings.horizontalRuler.arrangeTick = arrangeTickHorizontal;\n    diagram.rulerSettings.verticalRuler.arrangeTick = arrangeTickVertical;\n    for (var _b = 0, _c = diagram.commandManager.commands; _b < _c.length; _b++) {\n        var cmd = _c[_b];\n        if (commands[cmd.name]) {\n            cmd.execute = commands[cmd.name].execute;\n            cmd.canExecute = commands[cmd.name].canExecute;\n        }\n    }\n    diagram.backgroundColor = dataObj.backgroundColor || 'transparent';\n    diagram.basicElements = dataObj.basicElements || [];\n    diagram.connectors = dataObj.connectors || [];\n    diagram.dataSourceSettings = dataObj.dataSourceSettings || {};\n    diagram.dataSourceSettings.doBinding = map;\n    diagram.height = dataObj.height || '100%';\n    diagram.setNodeTemplate = nodeTemp;\n    diagram.getConnectorDefaults = connectorDefaults;\n    diagram.getNodeDefaults = nodeDefaults;\n    diagram.getCustomProperty = getCustomProperty;\n    diagram.mode = dataObj.mode || 'SVG';\n    if (dataObj.nodes.length) {\n        for (var i = 0; i < dataObj.nodes.length; i++) {\n            if (dataObj.nodes[i].shape && dataObj.nodes[i].shape.type === 'SwimLane') {\n                pasteSwimLane(dataObj.nodes[i], undefined, undefined, undefined, undefined, true);\n            }\n        }\n    }\n    diagram.nodes = dataObj.nodes || [];\n    diagram.rulerSettings = dataObj.rulerSettings || {};\n    diagram.snapSettings = dataObj.snapSettings || {};\n    diagram.width = dataObj.width || '100%';\n    diagram.layout = dataObj.layout || {};\n    diagram.layout.getLayoutInfo = getFunction(getLayoutInfo);\n    diagram.layout.getBranch = getFunction(getBranch);\n    diagram.diagramActions = 0;\n    diagram.isLoading = true;\n    diagram.protectPropertyChange(false);\n    var key = 'refresh';\n    var component;\n    for (var i = 0; i < diagram.views.length; i++) {\n        component = diagram.views[diagram.views[i]];\n        component.refresh();\n        if (component instanceof Diagram) {\n            diagram.element.classList.add('e-diagram');\n        }\n    }\n    if (dataObj.selectedItems) {\n        dataObj.selectedItems.nodes = [];\n        dataObj.selectedItems.connectors = [];\n    }\n    diagram.selectedItems = dataObj.selectedItems;\n    return dataObj;\n}\n/** @private */\nexport function upgrade(dataObj) {\n    if (dataObj && (dataObj.version === undefined || (dataObj.version < 17.1))) {\n        var nodes = dataObj.nodes;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node && node.ports.length > 0) {\n                for (var _a = 0, _b = node.ports; _a < _b.length; _a++) {\n                    var port = _b[_a];\n                    if (port && port.constraints && port.constraints === PortConstraints.None) {\n                        port.constraints = PortConstraints.Default;\n                    }\n                }\n            }\n        }\n    }\n    return dataObj;\n}\n/** @private */\nexport function updateStyle(changedObject, target) {\n    //since text style model is the super set of shape style model, we used text style model\n    var style = target.style;\n    var textElement = target;\n    target.canApplyStyle = true;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'fill':\n                style.fill = changedObject.fill;\n                if (style instanceof StrokeStyle) {\n                    /* tslint:disable:no-string-literal */\n                    style['fill'] = 'transparent';\n                }\n                break;\n            case 'textOverflow':\n                style.textOverflow = changedObject.textOverflow;\n                break;\n            case 'opacity':\n                style.opacity = changedObject.opacity;\n                break;\n            case 'strokeColor':\n                style.strokeColor = changedObject.strokeColor;\n                break;\n            case 'strokeDashArray':\n                style.strokeDashArray = changedObject.strokeDashArray;\n                break;\n            case 'strokeWidth':\n                style.strokeWidth = changedObject.strokeWidth;\n                break;\n            case 'bold':\n                style.bold = changedObject.bold;\n                break;\n            case 'color':\n                style.color = changedObject.color;\n                break;\n            case 'textWrapping':\n                style.textWrapping = changedObject.textWrapping;\n                break;\n            case 'fontFamily':\n                style.fontFamily = changedObject.fontFamily;\n                break;\n            case 'fontSize':\n                style.fontSize = changedObject.fontSize;\n                break;\n            case 'italic':\n                style.italic = changedObject.italic;\n                break;\n            case 'textAlign':\n                style.textAlign = changedObject.textAlign;\n                break;\n            case 'whiteSpace':\n                style.whiteSpace = changedObject.whiteSpace;\n                break;\n            case 'textDecoration':\n                style.textDecoration = changedObject.textDecoration;\n                break;\n            case 'gradient':\n                updateGradient(changedObject.gradient, style.gradient);\n                break;\n        }\n    }\n    if (target instanceof TextElement) {\n        textElement.refreshTextElement();\n    }\n}\nfunction updateGradient(changedGradient, targetGradient) {\n    for (var _i = 0, _a = Object.keys(changedGradient); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'type':\n                targetGradient.type = changedGradient.type;\n                break;\n            case 'x1':\n                targetGradient.x1 = changedGradient.x1;\n                break;\n            case 'x2':\n                targetGradient.x2 = changedGradient.x2;\n                break;\n            case 'y1':\n                targetGradient.y1 = changedGradient.y1;\n                break;\n            case 'y2':\n                targetGradient.y2 = changedGradient.y2;\n                break;\n            case 'cx':\n                targetGradient.cx = changedGradient.cx;\n                break;\n            case 'cy':\n                targetGradient.cy = changedGradient.cy;\n                break;\n            case 'fx':\n                targetGradient.fx = changedGradient.fx;\n                break;\n            case 'fy':\n                targetGradient.fy = changedGradient.fy;\n                break;\n            case 'r':\n                targetGradient.r = changedGradient.r;\n                break;\n            case 'stops':\n                targetGradient.stops = changedGradient.stops;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateHyperlink(changedObject, target, actualAnnotation) {\n    var textElement = target;\n    var hyperlink = textElement.hyperlink;\n    for (var _i = 0, _a = Object.keys(changedObject); _i < _a.length; _i++) {\n        var key = _a[_i];\n        switch (key) {\n            case 'color':\n                textElement.style.color = hyperlink.color = changedObject.color;\n                break;\n            case 'content':\n                textElement.content = hyperlink.content = changedObject.content || hyperlink.link;\n                break;\n            case 'link':\n                var labelStyle = actualAnnotation.style;\n                textElement.style.color = changedObject.link ? hyperlink.color : labelStyle.color;\n                textElement.style.textDecoration = changedObject.link ? hyperlink.textDecoration : actualAnnotation.style.textDecoration;\n                textElement.content = changedObject.link ? hyperlink.content || changedObject.link : actualAnnotation.content;\n                hyperlink.link = changedObject.link;\n                break;\n            case 'textDecoration':\n                textElement.style.textDecoration = hyperlink.textDecoration = changedObject.textDecoration;\n                break;\n        }\n    }\n}\n/** @private */\nexport function updateShapeContent(content, actualObject, diagram) {\n    content.width = actualObject.width;\n    content.height = actualObject.height;\n    content.minHeight = actualObject.minHeight;\n    content.maxHeight = actualObject.maxHeight;\n    content.minWidth = actualObject.minWidth;\n    content.maxWidth = actualObject.maxWidth;\n    content.horizontalAlignment = actualObject.wrapper.children[0].horizontalAlignment;\n    content.verticalAlignment = actualObject.wrapper.children[0].verticalAlignment;\n    content.relativeMode = actualObject.wrapper.children[0].relativeMode;\n    content.visible = actualObject.wrapper.children[0].visible;\n    if (actualObject.shape instanceof Text) {\n        content.margin = actualObject.shape.margin;\n    }\n    content.id = actualObject.wrapper.children[0].id;\n    content.style = actualObject.style;\n    var view;\n    for (var _i = 0, _a = diagram.views; _i < _a.length; _i++) {\n        var elementId = _a[_i];\n        removeElement(actualObject.id + '_groupElement', elementId);\n        removeElement(actualObject.id + '_content_groupElement', elementId);\n        removeElement(actualObject.id + '_content_html_element', elementId);\n    }\n    actualObject.wrapper.children.splice(0, 1);\n    actualObject.wrapper.children.splice(0, 0, content);\n}\n/** @private */\nexport function updateShape(node, actualObject, oldObject, diagram) {\n    var content = new DiagramElement();\n    var i;\n    var textStyle;\n    var nodeStyle;\n    switch (node.shape.type) {\n        case 'Path':\n            var pathContent = new PathElement();\n            pathContent.data = actualObject.shape.data;\n            content = pathContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Image':\n            var imageContent = new ImageElement();\n            imageContent.source = actualObject.shape.source;\n            imageContent.imageAlign = actualObject.shape.align;\n            imageContent.imageScale = actualObject.shape.scale;\n            content = imageContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Text':\n            //issue\n            var textContent = new TextElement();\n            //  (textContent as TextElement).content = (node.shape as TextModel).content;\n            content = textContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Basic':\n            var element = void 0;\n            element = actualObject.shape.shape === 'Rectangle' ? new DiagramElement() : new PathElement();\n            if (actualObject.shape.shape === 'Polygon') {\n                element.data = getPolygonPath(actualObject.shape.points);\n            }\n            else {\n                element.data = getBasicShape(actualObject.shape.shape);\n            }\n            updateShapeContent(content, actualObject, diagram);\n            if (actualObject.shape.shape === 'Rectangle') {\n                element.cornerRadius = actualObject.shape.cornerRadius;\n            }\n            content = element;\n            break;\n        case 'Flow':\n            var flowShapeElement = new PathElement();\n            flowShapeElement.data = getFlowShape(actualObject.shape.shape);\n            content = flowShapeElement;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'Native':\n            var nativeContent = new DiagramNativeElement(node.id, diagram.element.id);\n            nativeContent.content = actualObject.shape.content;\n            nativeContent.scale = actualObject.shape.scale;\n            content = nativeContent;\n            updateShapeContent(content, actualObject, diagram);\n            break;\n        case 'HTML':\n            var htmlContent = new DiagramHtmlElement(node.id, diagram.element.id);\n            htmlContent.content = actualObject.shape.content;\n            content = htmlContent;\n            updateShapeContent(content, actualObject, diagram);\n    }\n    if (node.shape.type === undefined || node.shape.type === oldObject.shape.type) {\n        updateContent(node, actualObject, diagram);\n    }\n    else {\n        content.width = actualObject.wrapper.children[0].width;\n        content.height = actualObject.wrapper.children[0].height;\n        if (actualObject.shape instanceof Text) {\n            content.margin = actualObject.shape.margin;\n        }\n        content.style = actualObject.style;\n        actualObject.wrapper.children[0] = content;\n    }\n}\n/** @private */\nexport function updateContent(newValues, actualObject, diagram) {\n    if (Object.keys(newValues.shape).length > 0) {\n        if (actualObject.shape.type === 'Path' && newValues.shape.data !== undefined) {\n            actualObject.wrapper.children[0].data = newValues.shape.data;\n        }\n        else if (actualObject.shape.type === 'Text' && newValues.shape.content !== undefined) {\n            actualObject.wrapper.children[0].content = newValues.shape.content;\n        }\n        else if (actualObject.shape.type === 'Image' && newValues.shape.source !== undefined) {\n            actualObject.wrapper.children[0].source = newValues.shape.source;\n        }\n        else if (actualObject.shape.type === 'Native') {\n            var nativeElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                nativeElement = getDiagramElement(actualObject.wrapper.children[0].id + '_native_element', diagram.views[i]);\n                if (newValues.shape.content !== undefined && nativeElement) {\n                    nativeElement.removeChild(nativeElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    nativeElement.appendChild(getContent(actualObject.wrapper.children[0], false));\n                }\n            }\n            actualObject.wrapper.children[0].scale = newValues.shape.scale ?\n                newValues.shape.scale : actualObject.wrapper.children[0].scale;\n        }\n        else if (actualObject.shape.type === 'HTML') {\n            var htmlElement = void 0;\n            for (var i = 0; i < diagram.views.length; i++) {\n                htmlElement = getDiagramElement(actualObject.wrapper.children[0].id + '_html_element', diagram.views[i]);\n                if (htmlElement) {\n                    htmlElement.removeChild(htmlElement.children[0]);\n                    actualObject.wrapper.children[0].content = newValues.shape.content;\n                    htmlElement.appendChild(getContent(actualObject.wrapper.children[0], true));\n                }\n            }\n        }\n        else if (actualObject.shape.type === 'Flow' && newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var flowshapedata = getFlowShape(shapes.toString());\n            actualObject.wrapper.children[0].data = flowshapedata;\n        }\n        else if (actualObject.shape.type === 'UmlActivity' && newValues.shape.shape !== undefined) {\n            updateUmlActivityNode(actualObject, newValues);\n        }\n        else if (newValues.shape.cornerRadius !== undefined) {\n            actualObject.wrapper.children[0].cornerRadius = newValues.shape.cornerRadius;\n        }\n        else if (newValues.shape.shape !== undefined) {\n            actualObject.shape.shape = newValues.shape.shape;\n            var shapes = actualObject.shape.shape;\n            var basicShapeData = getBasicShape(shapes.toString());\n            actualObject.wrapper.children[0].data = basicShapeData;\n            actualObject.wrapper.children[0].canMeasurePath = true;\n        }\n    }\n}\n/** @private */\nexport function updateUmlActivityNode(actualObject, newValues) {\n    actualObject.shape.shape = newValues.shape.shape;\n    var shapes = actualObject.shape.shape;\n    var umlActivityShapeData = getUMLActivityShape(shapes.toString());\n    if (actualObject.shape.shape === 'InitialNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'ForkNode' ||\n        actualObject.shape.shape === 'JoinNode') {\n        actualObject.wrapper.children[0].style.fill = 'black';\n    }\n    else if (actualObject.shape.shape === 'FinalNode') {\n        if (actualObject instanceof Node) {\n            actualObject.wrapper = getUMLFinalNode(actualObject);\n        }\n        actualObject.wrapper.children[0].data = umlActivityShapeData;\n    }\n}\n/** @private */\nexport function getUMLFinalNode(node) {\n    var finalNodeShape = new Canvas();\n    finalNodeShape.style.fill = 'transparent';\n    //childNode0\n    var pathData = 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25' +\n        ' C 50 38.79 38.78 50 25 50';\n    var innerFinalNode = new PathElement();\n    innerFinalNode.data = pathData;\n    innerFinalNode.id = node.id + '_0_finalNode';\n    innerFinalNode.horizontalAlignment = 'Center';\n    innerFinalNode.verticalAlignment = 'Center';\n    innerFinalNode.relativeMode = 'Object';\n    innerFinalNode.style.strokeColor = node.style.strokeColor;\n    innerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //childNode1\n    var outerFinalNode = new PathElement();\n    outerFinalNode.data = pathData;\n    outerFinalNode.id = node.id + '_1_finalNode';\n    outerFinalNode.horizontalAlignment = 'Center';\n    outerFinalNode.verticalAlignment = 'Center';\n    outerFinalNode.relativeMode = 'Object';\n    outerFinalNode.style.fill = node.style.fill;\n    outerFinalNode.style.strokeColor = node.style.strokeColor;\n    outerFinalNode.style.strokeWidth = node.style.strokeWidth;\n    //append child and set style\n    finalNodeShape.children = [innerFinalNode, outerFinalNode];\n    finalNodeShape.children[0].width = node.width;\n    finalNodeShape.children[0].height = node.height;\n    finalNodeShape.children[1].height = node.height / 1.5;\n    finalNodeShape.children[1].width = node.width / 1.5;\n    finalNodeShape.style.strokeWidth = 0;\n    finalNodeShape.style.strokeColor = 'transparent';\n    return finalNodeShape;\n}\n/** @private */\nexport function getUMLActivityShapes(umlActivityShape, content, node) {\n    var umlActivityShapeData = getUMLActivityShape(node.shape.shape);\n    umlActivityShape.data = umlActivityShapeData;\n    content = umlActivityShape;\n    switch (node.shape.shape) {\n        case 'StructuredNode':\n            if (node.annotations) {\n                for (var i = 0; i < node.annotations.length; i++) {\n                    node.annotations[i].content = '<<' + node.annotations[i].content + '>>';\n                }\n            }\n            content = umlActivityShape;\n            break;\n        case 'FinalNode':\n            content = getUMLFinalNode(node);\n            break;\n    }\n    return content;\n}\n/**   @private  */\nexport function removeGradient(svgId) {\n    removeElement(svgId + '_linear');\n    removeElement(svgId + '_radial');\n}\n/** @private */\nexport function removeItem(array, item) {\n    var index = array.indexOf(item);\n    if (index >= 0) {\n        array.splice(index, 1);\n    }\n}\n/** @private */\nexport function updateConnector(connector, points) {\n    var srcPoint;\n    var anglePoint;\n    var srcDecorator;\n    var tarDecorator;\n    var targetPoint;\n    connector.intermediatePoints = points;\n    connector.updateSegmentElement(connector, points, connector.wrapper.children[0]);\n    srcPoint = connector.sourcePoint;\n    srcDecorator = connector.sourceDecorator;\n    if (connector.type === 'Bezier') {\n        var firstSegment = connector.segments[0];\n        var lastSegment = connector.segments[connector.segments.length - 1];\n        anglePoint = [!Point.isEmptyPoint(lastSegment.point2) ? lastSegment.point2 : lastSegment.bezierPoint2,\n            !Point.isEmptyPoint(firstSegment.point1) ? firstSegment.point1 : firstSegment.bezierPoint1];\n    }\n    else {\n        anglePoint = connector.intermediatePoints;\n    }\n    points = connector.clipDecorators(connector, points);\n    var element = connector.wrapper.children[0];\n    element.canMeasurePath = true;\n    element = connector.wrapper.children[1];\n    connector.updateDecoratorElement(element, points[0], anglePoint[1], srcDecorator);\n    targetPoint = connector.targetPoint;\n    tarDecorator = connector.targetDecorator;\n    element = connector.wrapper.children[2];\n    connector.updateDecoratorElement(element, points[points.length - 1], anglePoint[anglePoint.length - 2], tarDecorator);\n    connector.updateShapeElement(connector);\n}\n/** @private */\nexport function getUserHandlePosition(selectorItem, handle, transform) {\n    var wrapper = selectorItem.wrapper;\n    var positionPoints;\n    var bounds = wrapper.bounds;\n    var offset = handle.offset;\n    var size = handle.size / transform.scale;\n    var margin = handle.margin;\n    var point;\n    var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n    var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n    point = { x: 0, y: 0 };\n    if (selectorItem.nodes.length > 0) {\n        switch (handle.side) {\n            case 'Top':\n                point.x += left + bounds.width * offset;\n                point.y += top - size;\n                break;\n            case 'Bottom':\n                point.x += left + offset * bounds.width;\n                point.y += top + wrapper.actualSize.height + size;\n                break;\n            case 'Left':\n                point.x += left - size;\n                point.y += top + offset * bounds.height;\n                break;\n            case 'Right':\n                point.x += left + wrapper.actualSize.width + size;\n                point.y += top + offset * bounds.height;\n                break;\n        }\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n    }\n    else if (selectorItem.connectors.length > 0) {\n        var connector = selectorItem.connectors[0];\n        var annotation = { offset: offset };\n        var connectorOffset = getOffsetOfConnector(connector.intermediatePoints, annotation, bounds);\n        var index = connectorOffset.index;\n        point = connectorOffset.point;\n        var getPointloop = getAnnotationPosition(connector.intermediatePoints, annotation, bounds);\n        var points = connector.intermediatePoints;\n        var offsetLength = void 0;\n        var angle = getPointloop.angle;\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, -angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n        point.x += (margin.left - margin.right) +\n            (size / 2) * (handle.horizontalAlignment === 'Center' ? 0 : (handle.horizontalAlignment === 'Right' ? -1 : 1));\n        point.y += (margin.top - margin.bottom) +\n            (size / 2) * (handle.verticalAlignment === 'Center' ? 0 : (handle.verticalAlignment === 'Top' ? -1 : 1));\n        matrix = identityMatrix();\n        rotateMatrix(matrix, angle, connector.intermediatePoints[index].x, connector.intermediatePoints[index].y);\n        point = transformPointByMatrix(matrix, point);\n    }\n    if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n        point = transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function canResizeCorner(selectorConstraints, action, thumbsConstraints, selectedItems) {\n    if (selectedItems.annotation) {\n        if (canResize(selectedItems.annotation)) {\n            return true;\n        }\n    }\n    else if ((SelectorConstraints[action] & selectorConstraints) && (ThumbsConstraints[action] & thumbsConstraints)) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function canShowCorner(selectorConstraints, action) {\n    if (SelectorConstraints[action] & selectorConstraints) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function checkPortRestriction(port, portVisibility) {\n    return port.visibility & portVisibility;\n}\n/** @private */\nexport function findAnnotation(node, id) {\n    var annotation;\n    if (node.shape.type === 'Text') {\n        annotation = (node.shape);\n    }\n    else {\n        var annotationId = id.split('_');\n        id = annotationId[annotationId.length - 1];\n        for (var i = 0; i < node.annotations.length; i++) {\n            if (id === node.annotations[i].id) {\n                annotation = node.annotations[i];\n            }\n        }\n    }\n    return annotation;\n}\n/** @private */\nexport function findPort(node, id) {\n    var port;\n    var portId = id.split('_');\n    id = portId[portId.length - 1];\n    for (var i = 0; i < node.ports.length; i++) {\n        if (id === node.ports[i].id) {\n            return node.ports[i];\n        }\n    }\n    return port;\n}\n/** @private */\nexport function getInOutConnectPorts(node, isInConnect) {\n    var port = {};\n    var i = 0;\n    if (node.ports) {\n        var ports = node.ports;\n        for (i = 0; i < ports.length; i++) {\n            if (isInConnect) {\n                if ((ports[i].constraints & PortConstraints.InConnect)) {\n                    port = ports[i];\n                }\n            }\n            else {\n                if ((ports[i].constraints & PortConstraints.OutConnect)) {\n                    port = ports[i];\n                }\n            }\n        }\n    }\n    return port;\n}\n/** @private */\nexport function findObjectIndex(node, id, annotation) {\n    var index;\n    var collection = (annotation) ? node.annotations : node.ports;\n    for (var i = 0; i < collection.length; i++) {\n        if (collection[i].id === id) {\n            return (i).toString();\n        }\n    }\n    return null;\n}\n/** @private */\nexport function getObjectFromCollection(obj, id) {\n    var i;\n    for (i = 0; i < obj.length; i++) {\n        if (id === obj[i].id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function scaleElement(element, sw, sh, refObject) {\n    if (element.width !== undefined && element.height !== undefined) {\n        element.width *= sw;\n        element.height *= sh;\n    }\n    if (element instanceof Container) {\n        var matrix = identityMatrix();\n        var width = refObject.width || refObject.actualSize.width;\n        var height = refObject.height || refObject.actualSize.height;\n        if (width !== undefined && height !== undefined) {\n            var x = refObject.offsetX - width * refObject.pivot.x;\n            var y = refObject.offsetY - height * refObject.pivot.y;\n            var refPoint = {\n                x: x + width * refObject.pivot.x,\n                y: y + height * refObject.pivot.y\n            };\n            refPoint = rotatePoint(refObject.rotateAngle, refObject.offsetX, refObject.offsetY, refPoint);\n            rotateMatrix(matrix, -refObject.rotateAngle, refPoint.x, refPoint.y);\n            scaleMatrix(matrix, sw, sh, refPoint.x, refPoint.y);\n            rotateMatrix(matrix, refObject.rotateAngle, refPoint.x, refPoint.y);\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.width !== undefined && child.height !== undefined) {\n                    var newPosition = transformPointByMatrix(matrix, { x: child.offsetX, y: child.offsetY });\n                    child.offsetX = newPosition.x;\n                    child.offsetY = newPosition.y;\n                    scaleElement(child, sw, sh, refObject);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function arrangeChild(obj, x, y, nameTable, drop, diagram) {\n    var child = obj.children;\n    var node;\n    for (var i = 0; i < child.length; i++) {\n        node = nameTable[child[i]];\n        if (node) {\n            if (node.children) {\n                arrangeChild(node, x, y, nameTable, drop, diagram);\n            }\n            else {\n                node.offsetX -= x;\n                node.offsetY -= y;\n                if (!drop) {\n                    var content = void 0;\n                    var container = void 0;\n                    nameTable[node.id] = node;\n                    container = node.initContainer();\n                    if (!container.children) {\n                        container.children = [];\n                    }\n                    content = node.init(diagram);\n                    container.children.push(content);\n                    container.measure(new Size(node.width, node.height));\n                    container.arrange(container.desiredSize);\n                }\n            }\n        }\n    }\n}\n/** @private */\nexport function insertObject(obj, key, collection) {\n    if (collection.length === 0) {\n        collection.push(obj);\n    }\n    else if (collection.length === 1) {\n        if (collection[0][key] > obj[key]) {\n            collection.splice(0, 0, obj);\n        }\n        else {\n            collection.push(obj);\n        }\n    }\n    else if (collection.length > 1) {\n        var low = 0;\n        var high = collection.length - 1;\n        var mid = Math.floor((low + high) / 2);\n        while (mid !== low) {\n            if (collection[mid][key] < obj[key]) {\n                low = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n            else if (collection[mid][key] > obj[key]) {\n                high = mid;\n                mid = Math.floor((low + high) / 2);\n            }\n        }\n        if (collection[high][key] < obj[key]) {\n            collection.push(obj);\n        }\n        else if (collection[low][key] > obj[key]) {\n            collection.splice(low, 0, obj);\n        }\n        else if ((collection[low][key] < obj[key]) && collection[high][key] > obj[key]) {\n            collection.splice(high, 0, obj);\n        }\n    }\n}\n/** @private */\nexport function getElement(element) {\n    var diagramElement = document.getElementById(element.diagramId);\n    var instance = 'ej2_instances';\n    var node = {};\n    var nodes = diagramElement[instance][0].nodes;\n    if (nodes === undefined) {\n        nodes = getPaletteSymbols(diagramElement[instance][0]);\n    }\n    var length = 'length';\n    for (var i = 0; nodes && i < nodes[length]; i++) {\n        if (nodes[i].id === element.nodeId) {\n            return getAnnotation(nodes[i], element);\n        }\n    }\n    var connectors = diagramElement[instance][0].connectors;\n    for (var i = 0; connectors && i < connectors[length]; i++) {\n        if (connectors[i].id === element.nodeId) {\n            return getAnnotation(connectors[i], element);\n        }\n    }\n    var enterObject = diagramElement[instance][0].enterObject;\n    if (enterObject && (enterObject['id'] === element.nodeId || enterObject['children'])) {\n        if (enterObject['children'] && groupHasType(enterObject, 'HTML', diagramElement[instance][0].enterTable)) {\n            return diagramElement[instance][0].enterTable[element.nodeId];\n        }\n        else {\n            return enterObject;\n        }\n    }\n    return null;\n}\nfunction getAnnotation(obj, element) {\n    var annotations = obj.annotations;\n    var length = 'length';\n    var j;\n    for (j = 0; annotations && j < annotations[length]; j++) {\n        if (element.annotationId && annotations[j].id === element.annotationId) {\n            return annotations[j];\n        }\n    }\n    return obj;\n}\n/** @private */\nfunction getPaletteSymbols(symbolPalette) {\n    var nodes = [];\n    for (var i = 0; i < symbolPalette.palettes.length; i++) {\n        var symbols = symbolPalette.palettes[i].symbols;\n        for (var j = 0; j < symbols.length; j++) {\n            if (symbols[j] instanceof Node) {\n                nodes.push(symbols[j]);\n            }\n        }\n    }\n    return nodes;\n}\n/** @private */\nexport function getPoint(x, y, w, h, angle, offsetX, offsetY, cornerPoint) {\n    var pivot = { x: 0, y: 0 };\n    var trans = identityMatrix();\n    rotateMatrix(trans, angle, offsetX, offsetY);\n    switch (cornerPoint.x) {\n        case 0:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x, y: y + h }));\n                    break;\n            }\n            break;\n        case 0.5:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w / 2, y: y + h }));\n                    break;\n            }\n            break;\n        case 1:\n            switch (cornerPoint.y) {\n                case 0:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y }));\n                    break;\n                case 0.5:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h / 2 }));\n                    break;\n                case 1:\n                    pivot = transformPointByMatrix(trans, ({ x: x + w, y: y + h }));\n                    break;\n            }\n            break;\n    }\n    return { x: pivot.x, y: pivot.y };\n}\n/**\n * Get the object as Node | Connector\n * @param obj\n */\nexport var getObjectType = function (obj) {\n    if (obj) {\n        if (obj.sourceID !== undefined || obj.sourcePoint !== undefined ||\n            obj.targetID !== undefined || obj.targetPoint !== undefined ||\n            obj.type !== undefined) {\n            obj = Connector;\n        }\n        else {\n            obj = Node;\n        }\n    }\n    return obj;\n};\n/** @private */\nexport var flipConnector = function (connector) {\n    if (!connector.sourceID && !connector.targetID) {\n        var source = { x: connector.sourcePoint.x, y: connector.sourcePoint.y };\n        var target = { x: connector.targetPoint.x, y: connector.targetPoint.y };\n        if (connector.flip === 'Horizontal') {\n            connector.sourcePoint.x = target.x;\n            connector.targetPoint.x = source.x;\n        }\n        else if (connector.flip === 'Vertical') {\n            connector.sourcePoint.y = target.y;\n            connector.targetPoint.y = source.y;\n        }\n        else if (connector.flip === 'Both') {\n            connector.sourcePoint = target;\n            connector.targetPoint = source;\n        }\n    }\n};\n/** @private */\nexport var updatePortEdges = function (portContent, flip, port) {\n    var offsetX = port.offset.x;\n    var offsetY = port.offset.y;\n    if (flip === 'Horizontal') {\n        offsetX = 1 - port.offset.x;\n        offsetY = port.offset.y;\n    }\n    else if (flip === 'Vertical') {\n        offsetX = port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    else if (flip === 'Both') {\n        offsetX = 1 - port.offset.x;\n        offsetY = 1 - port.offset.y;\n    }\n    portContent.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n    return portContent;\n};\n/** @private */\nexport var alignElement = function (element, offsetX, offsetY, diagram, flip) {\n    if (element.hasChildren()) {\n        for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childX = ((offsetX - child.offsetX) + offsetX);\n            var childY = ((offsetY - child.offsetY) + offsetY);\n            if (flip === 'Horizontal' || flip === 'Both') {\n                child.offsetX = childX;\n                child.flipOffset.x = childX - child.desiredSize.width / 2;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                child.offsetY = childY;\n                child.flipOffset.y = childY - child.desiredSize.height / 2;\n            }\n            if (child instanceof Canvas || child instanceof Container) {\n                alignElement(child, offsetX, offsetY, diagram, flip);\n            }\n            child.measure(new Size(child.bounds.width, child.bounds.height));\n            child.arrange(child.desiredSize);\n            var node = diagram.nameTable[child.id];\n            if (node) {\n                diagram.updateConnectorEdges(node);\n            }\n        }\n    }\n};\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { processPathData, splitArrayCollection, transformPath } from './path-util';\nimport { whiteSpaceToString, wordBreakToString, textAlignToString, bBoxText } from './base-util';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { compile, createElement, Browser } from '@syncfusion/ej2-base';\nimport { getElement } from './diagram-util';\n/**\n * Defines the functionalities that need to access DOM\n */\n/** @private */\nexport function findSegmentPoints(element) {\n    var pts = [];\n    var sample;\n    var sampleLength;\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var pathNode = getChildNode(svg)[0];\n    pathNode.setAttributeNS(null, 'd', element.data);\n    var pathBounds = element.absoluteBounds; // || pathNode.getBBox();\n    var pathData = updatePath(element, pathBounds, element);\n    pathNode.setAttributeNS(null, 'd', pathData);\n    var pathLength = pathNode.getTotalLength();\n    for (sampleLength = 0; sampleLength <= pathLength; sampleLength += 10) {\n        sample = pathNode.getPointAtLength(sampleLength);\n        pts.push({ x: sample.x, y: sample.y });\n    }\n    window[measureElement].style.visibility = 'hidden';\n    return pts;\n}\nexport function getChildNode(node) {\n    var child;\n    var collection = [];\n    if (Browser.info.name === 'msie' || Browser.info.name === 'edge') {\n        for (var i = 0; i < node.childNodes.length; i++) {\n            child = node.childNodes[i];\n            if (child.nodeType === 1) {\n                collection.push(child);\n            }\n        }\n    }\n    else {\n        collection = node.children;\n    }\n    return collection;\n}\nexport function translatePoints(element, points) {\n    var translatedPts = [];\n    for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n        var point = points_1[_i];\n        var pt1 = {\n            x: element.offsetX - element.actualSize.width * element.pivot.x + point.x,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + point.y\n        };\n        var matrix = void 0;\n        var angle = element.rotateAngle + element.parentTransform;\n        if (angle) {\n            matrix = identityMatrix();\n            rotateMatrix(matrix, angle, element.offsetX, element.offsetY);\n        }\n        if (matrix) {\n            pt1 = transformPointByMatrix(matrix, pt1);\n        }\n        translatedPts.push(pt1);\n    }\n    return translatedPts;\n}\n/** @private */\nexport function measurePath(data) {\n    if (data) {\n        var measureElement = 'measureElement';\n        window[measureElement].style.visibility = 'visible';\n        var svg = window[measureElement].children[2];\n        var element = getChildNode(svg)[0];\n        element.setAttribute('d', data);\n        var bounds = element.getBBox();\n        var svgBounds = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        window[measureElement].style.visibility = 'hidden';\n        return svgBounds;\n    }\n    return new Rect(0, 0, 0, 0);\n}\nfunction getTextOptions(element, maxWidth) {\n    var options = {\n        fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n        pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n        dashArray: element.style.strokeDashArray, opacity: element.style.opacity, shadow: element.shadow,\n        gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n        width: maxWidth || element.actualSize.width, height: element.actualSize.height,\n        x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n        y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5\n    };\n    options.fontSize = element.style.fontSize;\n    options.fontFamily = element.style.fontFamily;\n    options.textOverflow = element.style.textOverflow;\n    options.textDecoration = element.style.textDecoration;\n    options.doWrap = element.doWrap;\n    options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n    options.content = element.content;\n    options.textWrapping = element.style.textWrapping;\n    options.breakWord = wordBreakToString(element.style.textWrapping);\n    options.textAlign = textAlignToString(element.style.textAlign);\n    options.color = element.style.color;\n    options.italic = element.style.italic;\n    options.bold = element.style.bold;\n    options.dashArray = '';\n    options.strokeWidth = 0;\n    options.fill = '';\n    return options;\n}\nfunction wrapSvgText(text, textValue, laneWidth) {\n    var childNodes = [];\n    var k = 0;\n    var txtValue;\n    var bounds1;\n    var content = textValue || text.content;\n    if (text.whiteSpace !== 'nowrap' && text.whiteSpace !== 'pre') {\n        if (text.breakWord === 'breakall') {\n            txtValue = '';\n            txtValue += content[0];\n            for (k = 0; k < content.length; k++) {\n                bounds1 = bBoxText(txtValue, text);\n                if (bounds1 >= text.width && txtValue.length > 0) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: bounds1 };\n                    txtValue = '';\n                }\n                else {\n                    txtValue = txtValue + (content[k + 1] || '');\n                    if (txtValue.indexOf('\\n') > -1) {\n                        txtValue = txtValue.replace('\\n', '');\n                    }\n                    var width = bBoxText(txtValue, text);\n                    if (Math.ceil(width) + 2 >= text.width && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                    if (k === content.length - 1 && txtValue.length > 0) {\n                        childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                        txtValue = '';\n                    }\n                }\n            }\n        }\n        else {\n            childNodes = wordWrapping(text, textValue, laneWidth);\n        }\n    }\n    else {\n        childNodes[childNodes.length] = { text: content, x: 0, dy: 0, width: bBoxText(content, text) };\n    }\n    return childNodes;\n}\nfunction wordWrapping(text, textValue, laneWidth) {\n    var childNodes = [];\n    var txtValue = '';\n    var j = 0;\n    var i = 0;\n    var wrap = text.whiteSpace !== 'nowrap' ? true : false;\n    var content = textValue || text.content;\n    var eachLine = content.split('\\n');\n    var txt;\n    var words;\n    var newText;\n    var existingWidth;\n    var existingText;\n    for (j = 0; j < eachLine.length; j++) {\n        txt = '';\n        words = text.textWrapping !== 'NoWrap' ? eachLine[j].split(' ') : eachLine;\n        for (i = 0; i < words.length; i++) {\n            txtValue += (((i !== 0 || words.length === 1) && wrap && txtValue.length > 0) ? ' ' : '') + words[i];\n            newText = txtValue + (words[i + 1] || '');\n            var width = bBoxText(newText, text);\n            if (Math.floor(width) > (laneWidth || text.width) - 2 && txtValue.length > 0) {\n                childNodes[childNodes.length] = {\n                    text: txtValue, x: 0, dy: 0,\n                    width: newText === txtValue ? width : (txtValue === existingText) ? existingWidth : bBoxText(txtValue, text)\n                };\n                txtValue = '';\n            }\n            else {\n                if (i === words.length - 1) {\n                    childNodes[childNodes.length] = { text: txtValue, x: 0, dy: 0, width: width };\n                    txtValue = '';\n                }\n            }\n            existingText = newText;\n            existingWidth = width;\n        }\n    }\n    return childNodes;\n}\nfunction wrapSvgTextAlign(text, childNodes) {\n    var wrapBounds = { x: 0, width: 0 };\n    var k = 0;\n    var txtWidth;\n    var width;\n    for (k = 0; k < childNodes.length; k++) {\n        txtWidth = childNodes[k].width;\n        width = txtWidth;\n        if (text.textAlign === 'left') {\n            txtWidth = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (txtWidth > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                txtWidth = 0;\n            }\n            else {\n                txtWidth = -txtWidth / 2;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            txtWidth = -txtWidth;\n        }\n        else {\n            txtWidth = childNodes.length > 1 ? 0 : -txtWidth / 2;\n        }\n        childNodes[k].dy = text.fontSize * 1.2;\n        childNodes[k].x = txtWidth;\n        if (!wrapBounds) {\n            wrapBounds = {\n                x: txtWidth,\n                width: width\n            };\n        }\n        else {\n            wrapBounds.x = Math.min(wrapBounds.x, txtWidth);\n            wrapBounds.width = Math.max(wrapBounds.width, width);\n        }\n    }\n    return wrapBounds;\n}\nexport function measureHtmlText(style, content, width, height, maxWidth) {\n    var bounds = new Size();\n    var text = createHtmlElement('span', { 'style': 'display:inline-block; line-height: normal' });\n    if (style.bold) {\n        text.style.fontWeight = 'bold';\n    }\n    if (style.italic) {\n        text.style.fontStyle = 'italic';\n    }\n    if (width !== undefined) {\n        text.style.width = width.toString() + 'px';\n    }\n    if (height !== undefined) {\n        text.style.height = height.toString() + 'px';\n    }\n    if (maxWidth !== undefined) {\n        text.style.maxWidth = maxWidth.toString() + 'px';\n    }\n    text.style.fontFamily = style.fontFamily;\n    text.style.fontSize = style.fontSize + 'px';\n    text.style.color = style.color;\n    text.textContent = content;\n    text.style.whiteSpace = whiteSpaceToString(style.whiteSpace, style.textWrapping);\n    if (maxWidth !== undefined) {\n        text.style.wordBreak = 'break-word';\n    }\n    else {\n        text.style.wordBreak = wordBreakToString(style.textWrapping);\n    }\n    document.body.appendChild(text);\n    bounds.width = text.offsetWidth;\n    bounds.height = text.offsetHeight;\n    document.body.removeChild(text);\n    return bounds;\n}\n/** @private */\nexport function measureText(text, style, content, maxWidth, textValue) {\n    var bounds = new Size(0, 0);\n    var childNodes;\n    var wrapBounds;\n    var options = getTextOptions(text, maxWidth);\n    text.childNodes = childNodes = wrapSvgText(options, textValue, text.isLaneOrientation ? maxWidth : undefined);\n    text.wrapBounds = wrapBounds = wrapSvgTextAlign(options, childNodes);\n    bounds.width = wrapBounds.width;\n    if (text.wrapBounds.width >= maxWidth && options.textOverflow !== 'Wrap') {\n        bounds.width = maxWidth;\n    }\n    bounds.height = childNodes.length * text.style.fontSize * 1.2;\n    return bounds;\n}\n/** @private */\nexport function measureImage(source, contentSize) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var imageElement = window[measureElement].children[1];\n    imageElement.setAttribute('src', source);\n    var bounds = imageElement.getBoundingClientRect();\n    var width = bounds.width;\n    var height = bounds.height;\n    contentSize = new Size(width, height);\n    window[measureElement].style.visibility = 'hidden';\n    return contentSize;\n}\n/** @private */\nexport function measureNativeContent(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var bounds = nativeContent.getBoundingClientRect();\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    var rect = bounds;\n    rect.x = bounds.left - svgBounds.left;\n    rect.y = bounds.top - svgBounds.top;\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return rect;\n}\n/**\n * @private\n */\nexport function measureNativeSvg(nativeContent) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var nativeSVG = window[measureElement].children[2];\n    nativeSVG.appendChild(nativeContent);\n    var svgBounds = nativeSVG.getBoundingClientRect();\n    nativeSVG.removeChild(nativeContent);\n    window[measureElement].style.visibility = 'hidden';\n    return svgBounds;\n}\n/** @private */\nexport function updatePath(element, bounds, child, options) {\n    var initX = 0;\n    var initY = 0;\n    var scaleX = 0;\n    var scaleY = 0;\n    var isScale = false;\n    var bBox;\n    var isInit;\n    var isResizing = true;\n    var newPathString = '';\n    var arrayCollection = [];\n    bBox = bounds;\n    if (initX !== bBox.x || initY !== bBox.y) {\n        scaleX = initX - Number(bBox.x);\n        scaleY = initY - Number(bBox.y);\n    }\n    if (element.actualSize.width !== bBox.width || element.actualSize.height !== bBox.height || options) {\n        scaleX = (options && options.width || element.actualSize.width) / Number(bBox.width ? bBox.width : 1);\n        scaleY = (options && options.height || element.actualSize.height) / Number(bBox.height ? bBox.height : 1);\n        isScale = true;\n    }\n    arrayCollection = processPathData(element.data);\n    arrayCollection = splitArrayCollection(arrayCollection);\n    newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bBox.x, bBox.y, initX, initY);\n    isScale = false;\n    return newPathString;\n}\n/** @private */\nexport function getDiagramLayerSvg(diagramId) {\n    var diagramLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-diagram-layer');\n    diagramLayerSvg = elementcoll[0];\n    return diagramLayerSvg;\n}\n/** @private */\nexport function getDiagramElement(elementId, contentId) {\n    var diagramElement;\n    var element;\n    if (contentId) {\n        element = document.getElementById(contentId);\n    }\n    diagramElement = (element) ? element.querySelector('#' + elementId) : document.getElementById(elementId);\n    return diagramElement;\n}\n/** @private */\nexport function getDomIndex(viewId, elementId, layer) {\n    var index = undefined;\n    var parentElement;\n    var postId = '';\n    if (layer === 'native') {\n        parentElement = getNativeLayer(viewId);\n        postId = '_content_groupElement';\n    }\n    else if (layer === 'html') {\n        parentElement = getHTMLLayer(viewId).childNodes[0];\n        postId = '_content_html_element';\n    }\n    else {\n        parentElement = getDiagramLayer(viewId);\n        postId = '_groupElement';\n    }\n    var childElement;\n    for (var i = 0; parentElement.childNodes && i < parentElement.childNodes.length; i++) {\n        childElement = parentElement.childNodes[i];\n        if (childElement && childElement.id === elementId + postId) {\n            index = i;\n            break;\n        }\n    }\n    return index;\n}\n/**\n * @private\n */\nexport function getAdornerLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-adorner-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getSelectorElement(diagramId) {\n    var adornerLayer = null;\n    var adornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = adornerSvg.getElementById(diagramId + '_SelectorElement');\n    return adornerLayer;\n}\n/**\n * @private\n */\nexport function getAdornerLayer(diagramId) {\n    var adornerLayer = null;\n    var diagramAdornerSvg = getAdornerLayerSvg(diagramId);\n    adornerLayer = diagramAdornerSvg.getElementById(diagramId + '_diagramAdorner');\n    return adornerLayer;\n}\n/** @private */\nexport function getDiagramLayer(diagramId) {\n    var diagramLayer;\n    var diagramLayerSvg = getDiagramLayerSvg(diagramId);\n    diagramLayer = diagramLayerSvg.getElementById(diagramId + '_diagramLayer');\n    return diagramLayer;\n}\n/** @private */\nexport function getPortLayerSvg(diagramId) {\n    var adornerLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-ports-expand-layer');\n    adornerLayerSvg = elementcoll[0];\n    return adornerLayerSvg;\n}\n/** @private */\nexport function getNativeLayerSvg(diagramId) {\n    var nativeLayerSvg;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-native-layer');\n    nativeLayerSvg = elementcoll[0];\n    return nativeLayerSvg;\n}\n/** @private */\nexport function getGridLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-grid-layer');\n    gridLayerSvg = elementcoll[0];\n    return gridLayerSvg;\n}\n/** @private */\nexport function getBackgroundLayerSvg(diagramId) {\n    var gridLayerSvg = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    return elementcoll[0].parentNode;\n}\n/** @private */\nexport function getBackgroundImageLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-image-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getBackgroundLayer(diagramId) {\n    var imageLayer = null;\n    var diagramElement = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = diagramElement.getElementsByClassName('e-background-layer');\n    imageLayer = elementcoll[0];\n    return imageLayer;\n}\n/** @private */\nexport function getGridLayer(diagramId) {\n    var expandCollapse = null;\n    var diagramGridSvg = getGridLayerSvg(diagramId);\n    expandCollapse = diagramGridSvg.getElementById(diagramId + '_gridline');\n    return expandCollapse;\n}\n// /** @private */\n// export function getExpandCollapseLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramExpander') as SVGElement;\n//     return expandCollapse;\n// }\n// /** @private */\n// export function getPortsLayer(diagramId: string): SVGElement {\n//     let expandCollapse: SVGElement = null;\n//     let diagramPortSvg: SVGSVGElement = getPortLayerSvg(diagramId);\n//     expandCollapse = diagramPortSvg.getElementById(diagramId + '_diagramPorts') as SVGElement;\n//     return expandCollapse;\n// }\n/** @private */\nexport function getNativeLayer(diagramId) {\n    var nativeLayer = null;\n    var nativeLayerSvg = getNativeLayerSvg(diagramId);\n    nativeLayer = nativeLayerSvg.getElementById(diagramId + '_nativeLayer');\n    return nativeLayer;\n}\n/** @private */\nexport function getHTMLLayer(diagramId) {\n    var htmlLayer = null;\n    var element = getDiagramElement(diagramId);\n    var elementcoll;\n    elementcoll = element.getElementsByClassName('e-html-layer');\n    htmlLayer = elementcoll[0];\n    return htmlLayer;\n}\n/** @private */\nexport function createHtmlElement(elementType, attribute) {\n    var element = createElement(elementType);\n    setAttributeHtml(element, attribute);\n    return element;\n}\n/** @private */\nexport function createSvgElement(elementType, attribute) {\n    var element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    setAttributeSvg(element, attribute);\n    return element;\n}\n/** @hidden */\nexport function parentsUntil(elem, selector, isID) {\n    var parent = elem;\n    while (parent) {\n        if (isID ? parent.id === selector : hasClass(parent, selector)) {\n            break;\n        }\n        parent = parent.parentNode;\n    }\n    return parent;\n}\nexport function hasClass(element, className) {\n    var eClassName = (typeof element.className === 'object') ? element.className.animVal : element.className;\n    return ((' ' + eClassName + ' ').indexOf(' ' + className + ' ') > -1) ? true : false;\n}\n/** @hidden */\nexport function getScrollerWidth() {\n    var outer = createHtmlElement('div', { 'style': 'visibility:hidden; width: 100px' });\n    document.body.appendChild(outer);\n    var widthNoScroll = outer.getBoundingClientRect().width;\n    // force scrollbars\n    outer.style.overflow = 'scroll';\n    // add innerdiv\n    var inner = createHtmlElement('div', { 'style': 'width:100%' });\n    outer.appendChild(inner);\n    var widthWithScroll = inner.getBoundingClientRect().width;\n    // remove divs\n    outer.parentNode.removeChild(outer);\n    return widthNoScroll - widthWithScroll;\n}\n/**\n * Handles the touch pointer.\n * @return {boolean}\n * @private\n */\nexport function addTouchPointer(touchList, e, touches) {\n    touchList = [];\n    for (var i = 0, length_1 = touches.length; i < length_1; i++) {\n        touchList.push({ pageX: touches[i].clientX, pageY: touches[i].clientY, pointerId: null });\n    }\n    return touchList;\n}\n/**\n * removes the element from dom\n * @param elementId\n */\nexport function removeElement(elementId, contentId) {\n    var div = getDiagramElement(elementId, contentId);\n    if (div) {\n        div.parentNode.removeChild(div);\n    }\n}\nexport function getContent(element, isHtml) {\n    var div;\n    if (isHtml) {\n        var attr = { 'style': 'height: 100%; width: 100%' };\n        div = createHtmlElement('div', attr);\n    }\n    else {\n        div = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n    }\n    var node = getElement(element);\n    var item;\n    if (typeof element.content === 'string') {\n        var compiledString = void 0;\n        compiledString = compile(element.content);\n        for (var _i = 0, _a = compiledString(node); _i < _a.length; _i++) {\n            item = _a[_i];\n            div.appendChild(item);\n        }\n    }\n    else {\n        div.appendChild(element.content);\n    }\n    return isHtml ? div.cloneNode(true) : div.cloneNode(true);\n}\n/** @private */\nexport function setAttributeSvg(svg, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        svg.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function setAttributeHtml(element, attributes) {\n    var keys = Object.keys(attributes);\n    for (var i = 0; i < keys.length; i++) {\n        element.setAttribute(keys[i], attributes[keys[i]]);\n    }\n}\n/** @private */\nexport function createMeasureElements() {\n    var measureElement = 'measureElement';\n    if (!window[measureElement]) {\n        var divElement = createHtmlElement('div', {\n            id: 'measureElement',\n            style: 'visibility:hidden ; height: 0px ; width: 0px; overflow: hidden;'\n        });\n        var text = createHtmlElement('span', { 'style': 'display:inline-block ; line-height: normal' });\n        divElement.appendChild(text);\n        var imageElement = void 0;\n        imageElement = createHtmlElement('img', {});\n        divElement.appendChild(imageElement);\n        var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n        divElement.appendChild(svg);\n        var element = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        svg.appendChild(element);\n        var data = document.createTextNode('');\n        var tSpan = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n        svg.appendChild(tSpan);\n        window[measureElement] = divElement;\n        window[measureElement].usageCount = 1;\n        document.body.appendChild(divElement);\n    }\n    else {\n        window[measureElement].usageCount += 1;\n    }\n}\n","import { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getValue } from '@syncfusion/ej2-base';\nimport { getChildNode } from './dom-util';\n/**\n * Implements the basic functionalities\n */\n/** @private */\nexport function randomId() {\n    var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz';\n    var id = '';\n    var num;\n    for (var i = 0; i < 5; i++) {\n        if ('crypto' in window && 'getRandomValues' in crypto) {\n            var count = new Uint16Array(1);\n            // tslint:disable-next-line:no-any\n            var intCrypto = window.msCrypto || window.crypto;\n            num = intCrypto.getRandomValues(count)[0] % (chars.length - 1);\n        }\n        else {\n            num = Math.floor(Math.random() * chars.length);\n        }\n        if (i === 0 && num < 10) {\n            i--;\n            continue;\n        }\n        id += chars.substring(num, num + 1);\n    }\n    return id;\n}\n/** @private */\nexport function cornersPointsBeforeRotation(ele) {\n    var bounds = new Rect();\n    var top = ele.offsetY - ele.actualSize.height * ele.pivot.y;\n    var bottom = ele.offsetY + ele.actualSize.height * (1 - ele.pivot.y);\n    var left = ele.offsetX - ele.actualSize.width * ele.pivot.x;\n    var right = ele.offsetX + ele.actualSize.width * (1 - ele.pivot.x);\n    var topLeft = { x: left, y: top };\n    var topCenter = { x: (left + right) / 2, y: top };\n    var topRight = { x: right, y: top };\n    var middleLeft = { x: left, y: (top + bottom) / 2 };\n    var middleRight = { x: right, y: (top + bottom) / 2 };\n    var bottomLeft = { x: left, y: bottom };\n    var bottomCenter = { x: (left + right) / 2, y: bottom };\n    var bottomRight = { x: right, y: bottom };\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    return bounds;\n}\n/** @private */\nexport function getBounds(element) {\n    var bounds = new Rect();\n    var corners;\n    corners = cornersPointsBeforeRotation(element);\n    var middleLeft = corners.middleLeft;\n    var topCenter = corners.topCenter;\n    var bottomCenter = corners.bottomCenter;\n    var middleRight = corners.middleRight;\n    var topLeft = corners.topLeft;\n    var topRight = corners.topRight;\n    var bottomLeft = corners.bottomLeft;\n    var bottomRight = corners.bottomRight;\n    element.corners = {\n        topLeft: topLeft, topCenter: topCenter, topRight: topRight, middleLeft: middleLeft,\n        middleRight: middleRight, bottomLeft: bottomLeft, bottomCenter: bottomCenter, bottomRight: bottomRight\n    };\n    if (element.rotateAngle !== 0 || element.parentTransform !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n        element.corners.topLeft = topLeft = transformPointByMatrix(matrix, topLeft);\n        element.corners.topCenter = topCenter = transformPointByMatrix(matrix, topCenter);\n        element.corners.topRight = topRight = transformPointByMatrix(matrix, topRight);\n        element.corners.middleLeft = middleLeft = transformPointByMatrix(matrix, middleLeft);\n        element.corners.middleRight = middleRight = transformPointByMatrix(matrix, middleRight);\n        element.corners.bottomLeft = bottomLeft = transformPointByMatrix(matrix, bottomLeft);\n        element.corners.bottomCenter = bottomCenter = transformPointByMatrix(matrix, bottomCenter);\n        element.corners.bottomRight = bottomRight = transformPointByMatrix(matrix, bottomRight);\n        //Set corners based on rotate angle\n    }\n    bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    element.corners.left = bounds.left;\n    element.corners.right = bounds.right;\n    element.corners.top = bounds.top;\n    element.corners.bottom = bounds.bottom;\n    element.corners.center = bounds.center;\n    element.corners.width = bounds.width;\n    element.corners.height = bounds.height;\n    return bounds;\n}\n/** @private */\nexport function cloneObject(obj, additionalProp, key) {\n    var newObject = {};\n    var keys = 'properties';\n    var prop = 'propName';\n    if (obj) {\n        key = obj[prop];\n        var sourceObject = obj[keys] || obj;\n        var properties = [];\n        properties = properties.concat(Object.keys(sourceObject));\n        var customProperties = [];\n        properties.push('version');\n        if (key) {\n            var propAdditional = getFunction(additionalProp);\n            if (propAdditional) {\n                customProperties = propAdditional(key);\n            }\n            else {\n                customProperties = [];\n            }\n            properties = properties.concat(customProperties);\n        }\n        var internalProp = getInternalProperties(key);\n        properties = properties.concat(internalProp);\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var property = properties_1[_i];\n            if (property !== 'historyManager') {\n                if (property !== 'wrapper') {\n                    var constructorId = 'constructor';\n                    var name_1 = 'name';\n                    var isEventEmmitter = obj[property] && obj.hasOwnProperty('observers') ? true : false;\n                    if (!isEventEmmitter) {\n                        if (obj[property] instanceof Array) {\n                            newObject[property] = cloneArray((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property], additionalProp, property);\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof HTMLElement) {\n                            newObject[property] = obj[property].cloneNode(true).innerHtml;\n                        }\n                        else if (obj[property] instanceof Array === false && obj[property] instanceof Object) {\n                            newObject[property] = cloneObject((internalProp.indexOf(property) === -1 && obj[keys]) ? obj[keys][property] : obj[property]);\n                        }\n                        else {\n                            newObject[property] = obj[property];\n                        }\n                    }\n                }\n                else {\n                    if (obj[property]) {\n                        newObject[property] = {\n                            actualSize: {\n                                width: obj[property].actualSize.width, height: obj[property].actualSize.height\n                            }, offsetX: obj[property].offsetX, offsetY: obj[property].offsetY\n                        };\n                    }\n                }\n            }\n        }\n    }\n    return newObject;\n}\n/** @private */\nexport function getInternalProperties(propName) {\n    switch (propName) {\n        case 'nodes':\n        case 'children':\n            return ['inEdges', 'outEdges', 'parentId', 'processId', 'nodeId', 'umlIndex', 'isPhase', 'isLane'];\n        case 'connectors':\n            return ['parentId'];\n        case 'annotation':\n            return ['nodeId'];\n        case 'annotations':\n            return ['nodeId'];\n        case 'shape':\n            return ['hasHeader'];\n    }\n    return [];\n}\n/** @private */\nexport function cloneArray(sourceArray, additionalProp, key) {\n    var clonedArray;\n    if (sourceArray) {\n        clonedArray = [];\n        for (var i = 0; i < sourceArray.length; i++) {\n            if (sourceArray[i] instanceof Array) {\n                clonedArray.push(sourceArray[i]);\n            }\n            else if (sourceArray[i] instanceof Object) {\n                clonedArray.push(cloneObject(sourceArray[i], additionalProp, key));\n            }\n            else {\n                clonedArray.push(sourceArray[i]);\n            }\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function extendObject(options, childObject) {\n    var properties = 'properties';\n    if (options) {\n        if (!childObject) {\n            childObject = { properties: {} };\n        }\n        var target = childObject;\n        for (var _i = 0, _a = Object.keys(options); _i < _a.length; _i++) {\n            var property = _a[_i];\n            if (options[property] instanceof Array) {\n                var extendeArray = extendArray(options[property], childObject[properties][property]);\n                if (!childObject[properties][property] || !childObject[properties][property].length) {\n                    childObject[property] = extendeArray;\n                }\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof HTMLElement) {\n                childObject[property] = options[property].cloneNode(true).innerHtml;\n            }\n            else if (options[property] instanceof Array === false && options[property] instanceof Object) {\n                var extendedObject = extendObject(options[property], childObject[properties][property]);\n                if (extendedObject[properties] && !Object.keys(extendedObject[properties]).length) {\n                    delete extendedObject[properties];\n                }\n                childObject[property] = extendedObject;\n            }\n            else {\n                childObject[property] = childObject[properties][property] !== undefined ?\n                    childObject[property] : options[property];\n            }\n        }\n    }\n    return childObject;\n}\n/** @private */\nexport function extendArray(sourceArray, childArray) {\n    var clonedArray = [];\n    var reset = false;\n    if (!childArray) {\n        childArray = [];\n    }\n    if (!childArray.length) {\n        reset = true;\n    }\n    for (var i = 0; i < sourceArray.length; i++) {\n        if (sourceArray[i] instanceof Array) {\n            var extendedArray = extendArray(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendArray);\n            }\n        }\n        else if (sourceArray[i] instanceof Object) {\n            var extendedObject = extendObject(sourceArray[i], childArray[i]);\n            if (reset) {\n                clonedArray.push(extendedObject);\n            }\n        }\n        else {\n            clonedArray.push(sourceArray[i]);\n        }\n    }\n    return clonedArray;\n}\n/** @private */\nexport function textAlignToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Center':\n            state = 'center';\n            break;\n        case 'Left':\n            state = 'left';\n            break;\n        case 'Right':\n            state = 'right';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function wordBreakToString(value) {\n    var state = '';\n    switch (value) {\n        case 'Wrap':\n            state = 'breakall';\n            break;\n        case 'NoWrap':\n            state = 'keepall';\n            break;\n        case 'WrapWithOverflow':\n            state = 'normal';\n            break;\n        case 'LineThrough':\n            state = 'line-through';\n            break;\n    }\n    return state;\n}\nexport function bBoxText(textContent, options) {\n    var measureElement = 'measureElement';\n    window[measureElement].style.visibility = 'visible';\n    var svg = window[measureElement].children[2];\n    var text = getChildNode(svg)[1];\n    text.textContent = textContent;\n    text.setAttribute('style', 'font-size:' + options.fontSize + 'px; font-family:'\n        + options.fontFamily + ';font-weight:' + (options.bold ? 'bold' : 'normal'));\n    var bBox = text.getBBox().width;\n    window[measureElement].style.visibility = 'hidden';\n    return bBox;\n}\n/** @private */\nexport function middleElement(i, j) {\n    var m = 0;\n    m = (i + j) / 2;\n    return m;\n}\n/** @private */\nexport function overFlow(text, options) {\n    var i = 0;\n    var j = 0;\n    var middle = 0;\n    var bounds = 0;\n    var temp = '';\n    j = text.length;\n    var t = 0;\n    do {\n        if (bounds > 0) {\n            i = middle;\n        }\n        middle = Math.floor(middleElement(i, j));\n        temp += text.substr(i, middle);\n        bounds = bBoxText(temp, options);\n    } while (bounds <= options.width);\n    temp = temp.substr(0, i);\n    for (t = i; t < j; t++) {\n        temp += text[t];\n        bounds = bBoxText(temp, options);\n        if (bounds >= options.width) {\n            text = text.substr(0, temp.length - 1);\n            break;\n        }\n    }\n    if (options.textOverflow === 'Ellipsis') {\n        text = text.substr(0, text.length - 3);\n        text += '...';\n    }\n    else {\n        text = text.substr(0, text.length);\n    }\n    return text;\n}\n/** @private */\nexport function whiteSpaceToString(value, wrap) {\n    if (wrap === 'NoWrap' && value === 'PreserveAll') {\n        return 'pre';\n    }\n    var state = '';\n    switch (value) {\n        case 'CollapseAll':\n            state = 'nowrap';\n            break;\n        case 'CollapseSpace':\n            state = 'pre-line';\n            break;\n        case 'PreserveAll':\n            state = 'pre-wrap';\n            break;\n    }\n    return state;\n}\n/** @private */\nexport function rotateSize(size, angle) {\n    var matrix = identityMatrix();\n    rotateMatrix(matrix, angle, 0, 0);\n    var topLeft = transformPointByMatrix(matrix, { x: 0, y: 0 });\n    var topRight = transformPointByMatrix(matrix, { x: size.width, y: 0 });\n    var bottomLeft = transformPointByMatrix(matrix, { x: 0, y: size.height });\n    var bottomRight = transformPointByMatrix(matrix, { x: size.width, y: size.height });\n    var minX = Math.min(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var minY = Math.min(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    var maxX = Math.max(topLeft.x, topRight.x, bottomLeft.x, bottomRight.x);\n    var maxY = Math.max(topLeft.y, topRight.y, bottomLeft.y, bottomRight.y);\n    return new Size(maxX - minX, maxY - minY);\n}\n/** @private */\nexport function rotatePoint(angle, pivotX, pivotY, point) {\n    if (angle !== 0) {\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivotX, pivotY);\n        return transformPointByMatrix(matrix, point);\n    }\n    return point;\n}\n/** @private */\nexport function getOffset(topLeft, obj) {\n    var offX = topLeft.x + obj.desiredSize.width * obj.pivot.x;\n    var offY = topLeft.y + obj.desiredSize.height * obj.pivot.y;\n    return {\n        x: offX, y: offY\n    };\n}\n/**\n * Get function\n */\nexport function getFunction(value) {\n    if (value !== undefined) {\n        if (typeof value === 'string') {\n            value = getValue(value, window);\n        }\n    }\n    return value;\n}\n","import { Connector } from '../objects/connector';\nimport { Node } from '../objects/node';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, transformPointByMatrix, rotateMatrix } from '../primitives/matrix';\nimport { getUserHandlePosition, checkPortRestriction } from '../utility/diagram-util';\nimport { canMove, canDragSourceEnd, canDragTargetEnd, canContinuousDraw, canDragSegmentThumb } from '../utility/constraints-util';\nimport { canZoomPan, defaultTool, canDrawOnce, canDrag, canDraw, canSelect, canRotate } from '../utility/constraints-util';\nimport { canShowCorner, canResizeCorner } from '../utility/diagram-util';\nimport { Point } from '../primitives/point';\nimport { TextElement } from '../core/elements/text-element';\nimport { PortConstraints, DiagramTools, PortVisibility, ThumbsConstraints } from '../enum/enum';\nimport { Selector } from './selector';\nimport { PointPort } from './../objects/port';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { checkParentAsContainer } from '../interaction/container-interaction';\n/**\n * Finds the action to be taken for the object under mouse\n *\n */\n/** @private */\nexport function findToolToActivate(obj, wrapper, position, diagram, touchStart, touchMove, target) {\n    var conn = diagram.selectedItems.connectors[0];\n    if (touchMove && touchMove.length > 1 && touchStart && touchStart.length > 1) {\n        return 'PinchZoom';\n    }\n    if (diagram.currentSymbol) {\n        return 'Drag';\n    }\n    var eventHandler = 'eventHandler';\n    if (diagram[eventHandler].action === 'PortDraw') {\n        diagram.tool &= ~DiagramTools.DrawOnce;\n    }\n    //Drawing Tools\n    if ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && diagram.drawingObject) {\n        return 'Draw';\n    }\n    if (hasSelection(diagram)) {\n        var handle = diagram.selectedItems;\n        if (handle.wrapper && canShowCorner(handle.constraints, 'UserHandle')) {\n            for (var _i = 0, _a = handle.userHandles; _i < _a.length; _i++) {\n                var obj_1 = _a[_i];\n                if (obj_1.visible) {\n                    var paddedBounds = getUserHandlePosition(handle, obj_1, diagram.scroller.transform);\n                    if (contains(position, paddedBounds, obj_1.size / 2)) {\n                        return obj_1.name;\n                    }\n                }\n            }\n        }\n    }\n    if (hasSelection(diagram)) {\n        var element = (diagram.selectedItems.annotation) ?\n            diagram.selectedItems.wrapper.children[0] : diagram.selectedItems.wrapper;\n        var selectorBnds = element.bounds;\n        var handle = diagram.selectedItems;\n        var paddedBounds = new Rect(selectorBnds.x, selectorBnds.y, selectorBnds.width, selectorBnds.height);\n        if (hasSingleConnection(diagram) && !diagram.selectedItems.annotation) {\n            var conn_1 = diagram.selectedItems.connectors[0];\n            var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n            if (canShowCorner(handle.constraints, 'ResizeAll')) {\n                if ((canShowCorner(handle.constraints, 'ConnectorSourceThumb'))\n                    && canDragSourceEnd(conn_1) && contains(position, conn_1.sourcePoint, sourcePaddingValue)) {\n                    return 'ConnectorSourceEnd';\n                }\n                if ((canShowCorner(handle.constraints, 'ConnectorTargetThumb'))\n                    && canDragTargetEnd(conn_1) && contains(position, conn_1.targetPoint, targetPaddingValue)) {\n                    return 'ConnectorTargetEnd';\n                }\n                var action = checkForConnectorSegment(conn_1, handle, position, diagram);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n        else {\n            var ten = 10 / diagram.scroller.currentZoom;\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, element.rotateAngle + element.parentTransform, element.offsetX, element.offsetY);\n            //check for resizing tool\n            var x = element.offsetX - element.pivot.x * element.actualSize.width;\n            var y = element.offsetY - element.pivot.y * element.actualSize.height;\n            var rotateThumb = {\n                x: x + ((element.pivot.x === 0.5 ? element.pivot.x * 2 : element.pivot.x) * element.actualSize.width / 2),\n                y: y - 30 / diagram.scroller.currentZoom\n            };\n            rotateThumb = transformPointByMatrix(matrix, rotateThumb);\n            var labelSelection = diagram.selectedItems.annotation ? true : false;\n            var labelRotate = (labelSelection && (canRotate(diagram.selectedItems.annotation))) ? true : false;\n            if (canShowCorner(handle.constraints, 'Rotate') && contains(position, rotateThumb, ten) &&\n                (diagram.selectedItems.thumbsConstraints & ThumbsConstraints.Rotate)) {\n                if (labelSelection && labelRotate) {\n                    return 'LabelRotate';\n                }\n                else if (!labelSelection) {\n                    return 'Rotate';\n                }\n            }\n            paddedBounds.Inflate(ten);\n            if (paddedBounds.containsPoint(position)) {\n                var action = checkResizeHandles(diagram, element, position, matrix, x, y);\n                if (action) {\n                    return action;\n                }\n            }\n        }\n    }\n    //Panning\n    if (canZoomPan(diagram) && !obj) {\n        return 'Pan';\n    }\n    if (target instanceof PointPort && (!canZoomPan(diagram))) {\n        var action = findPortToolToActivate(diagram, target);\n        if (action !== 'None') {\n            return action;\n        }\n    }\n    if ((target instanceof ShapeAnnotation || target instanceof PathAnnotation) && (!canZoomPan(diagram) && (canSelect(target)))) {\n        if (isSelected(diagram, target, undefined, wrapper) && canMove(target)) {\n            return 'LabelDrag';\n        }\n        return 'LabelSelect';\n    }\n    if (obj !== null) {\n        if (obj instanceof Node || obj instanceof Connector) {\n            if (wrapper && wrapper.id) {\n                var id = wrapper.id.split(obj.id)[1];\n                if (id && id.match('^_icon')) {\n                    return 'LayoutAnimation';\n                }\n            }\n            if (canMove(obj) && wrapper instanceof TextElement && wrapper.hyperlink.link) {\n                return 'Hyperlink';\n            }\n            if (canMove(obj) && isSelected(diagram, obj, false) && diagram.selectedItems.annotation === undefined) {\n                if ((obj instanceof Connector && !(contains(position, obj.sourcePoint, obj.hitPadding) ||\n                    contains(position, obj.targetPoint, obj.hitPadding))) ||\n                    !(obj instanceof Connector)) {\n                    return 'Drag';\n                }\n            }\n            else if (obj && canZoomPan(diagram) && !defaultTool(diagram)) {\n                return 'Pan';\n            }\n            else if (diagram.selectedItems.nodes.length && diagram.selectedItems.nodes[0].isLane &&\n                diagram.selectedItems.wrapper && diagram.selectedItems.wrapper.bounds.containsPoint(position)) {\n                return 'Drag';\n            }\n            else {\n                return 'Select';\n            }\n        }\n        else {\n            return 'Select';\n        }\n    }\n    return 'Select';\n}\nfunction checkResizeHandles(diagram, element, position, matrix, x, y) {\n    var action;\n    if ((diagram.selectedItems.nodes.length === 1 && diagram.selectedItems.connectors.length === 0)\n        && diagram.selectedItems.nodes[0].container) {\n        action = checkResizeHandleForContainer(diagram, element, position, x, y);\n    }\n    if (!action && (!diagram.selectedItems.nodes[0] || (!diagram.selectedItems.nodes[0].isPhase &&\n        !diagram.selectedItems.nodes[0].isLane && diagram.selectedItems.nodes[0].shape.type !== 'SwimLane'))) {\n        action = checkForResizeHandles(diagram, element, position, matrix, x, y);\n    }\n    if (action) {\n        return action;\n    }\n    return null;\n}\nfunction checkForConnectorSegment(conn, handle, position, diagram) {\n    var targetPaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    var sourcePaddingValue = 10 / diagram.scrollSettings.currentZoom;\n    if (conn.type === 'Bezier') {\n        for (var i = 0; i < conn.segments.length; i++) {\n            var segment = (conn.segments)[i];\n            if (contains(position, !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1, sourcePaddingValue)) {\n                return 'BezierSourceThumb';\n            }\n            if (contains(position, !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2, targetPaddingValue)) {\n                return 'BezierTargetThumb';\n            }\n        }\n    }\n    if (diagram.connectorEditingToolModule && canDragSegmentThumb(conn)) {\n        if (conn.type === 'Straight' || conn.type === 'Bezier') {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                segment = (conn.segments)[i];\n                if (contains(position, segment.point, 10)) {\n                    return 'SegmentEnd';\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < conn.segments.length; i++) {\n                var segment = void 0;\n                var segPoint = { x: 0, y: 0 };\n                segment = (conn.segments)[i];\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var length_1 = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n                    if (length_1 >= 50) {\n                        segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                        segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                        if (contains(position, segPoint, 30)) {\n                            return 'OrthoThumb';\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return null;\n}\n/** @private */\nexport function findPortToolToActivate(diagram, target, touchStart, touchMove) {\n    if (canDrag(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if ((target.constraints & PortConstraints.Drag)) {\n            return 'PortDrag';\n        }\n    }\n    else if (canDraw(target, diagram) && (checkPortRestriction(target, PortVisibility.Hover)\n        || (checkPortRestriction(target, PortVisibility.Visible)))) {\n        if (target.constraints & PortConstraints.Draw) {\n            diagram.drawingObject = {};\n            var connector = { type: 'Orthogonal', sourcePortID: target.id };\n            diagram.drawingObject = connector;\n            diagram.tool |= DiagramTools.DrawOnce;\n            diagram.currentDrawingObject = connector;\n            return 'PortDraw';\n        }\n    }\n    return 'None';\n}\n/**\n * Resize handle for container and also object.\n * @private\n */\nfunction checkResizeHandleForContainer(diagram, element, position, x, y) {\n    var ten = 10 / diagram.scroller.currentZoom;\n    var forty = 40 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var width = element.actualSize.width;\n    var height = element.actualSize.height;\n    var left = new Rect(x, y + 20, element.style.strokeWidth, height - 40);\n    var right = new Rect(x + width, y + 20, element.style.strokeWidth, height - 40);\n    var top = new Rect(x + 20, y, width - 40, element.style.strokeWidth);\n    var bottom = new Rect(x + 20, y + height, width - 40, element.style.strokeWidth);\n    var container = checkParentAsContainer(diagram, diagram.selectedItems.nodes[0], true) ?\n        diagram.nameTable[diagram.selectedItems.nodes[0].parentId] : diagram.selectedItems.nodes[0];\n    if (width >= forty && height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) &&\n            right.containsPoint(position, ten)) {\n            return 'ResizeEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) &&\n            bottom.containsPoint(position, ten)) {\n            return 'ResizeSouth';\n        }\n        if (container.container.type !== 'Grid') {\n            if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n                left.containsPoint(position, ten)) {\n                return 'ResizeWest';\n            }\n            if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n                top.containsPoint(position, ten)) {\n                return 'ResizeNorth';\n            }\n        }\n    }\n    return null;\n}\nfunction checkForResizeHandles(diagram, element, position, matrix, x, y) {\n    var forty = 40 / diagram.scroller.currentZoom;\n    var ten = 10 / diagram.scroller.currentZoom;\n    var selectedItems = diagram.selectedItems;\n    var labelSelection = (selectedItems.annotation) ? true : false;\n    if (element.actualSize.width >= forty && element.actualSize.height >= forty) {\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthEast' : 'ResizeSouthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeSouthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height }), ten)) {\n            return (labelSelection) ? 'LabelResizeSouthWest' : 'ResizeSouthWest';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthEast', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthEast' : 'ResizeNorthEast';\n        }\n        if (canResizeCorner(selectedItems.constraints, 'ResizeNorthWest', selectedItems.thumbsConstraints, selectedItems) &&\n            contains(position, transformPointByMatrix(matrix, { x: x, y: y }), ten)) {\n            return (labelSelection) ? 'LabelResizeNorthWest' : 'ResizeNorthWest';\n        }\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeEast', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeEast' : 'ResizeEast';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeWest', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x, y: y + element.actualSize.height / 2 }), ten)) {\n        return (labelSelection) ? 'LabelResizeWest' : 'ResizeWest';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeSouth', selectedItems.thumbsConstraints, selectedItems) && contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y + element.actualSize.height }), ten)) {\n        return (labelSelection) ? 'LabelResizeSouth' : 'ResizeSouth';\n    }\n    if (canResizeCorner(selectedItems.constraints, 'ResizeNorth', selectedItems.thumbsConstraints, selectedItems) &&\n        contains(position, transformPointByMatrix(matrix, { x: x + element.actualSize.width / 2, y: y }), ten)) {\n        return (labelSelection) ? 'LabelResizeNorth' : 'ResizeNorth';\n    }\n    return null;\n}\n/** @private */\nexport function contains(mousePosition, corner, padding) {\n    if (mousePosition.x >= corner.x - padding && mousePosition.x <= corner.x + padding) {\n        if (mousePosition.y >= corner.y - padding && mousePosition.y <= corner.y + padding) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function hasSelection(diagram) {\n    if (diagram.selectedItems.nodes.length > 0 || diagram.selectedItems.connectors.length > 0) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function hasSingleConnection(diagram) {\n    if (diagram.selectedItems.connectors.length === 1 && !diagram.selectedItems.nodes.length) {\n        return true;\n    }\n    return false;\n}\n/** @private */\nexport function isSelected(diagram, element, firstLevel, wrapper) {\n    if (firstLevel === void 0) { firstLevel = true; }\n    if (element instanceof Selector) {\n        return true;\n    }\n    if (element instanceof Node) {\n        while (element) {\n            if (diagram.selectedItems.nodes.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n                return true;\n            }\n            if (!firstLevel) {\n                element = diagram.nameTable[element.parentId];\n            }\n            else {\n                break;\n            }\n        }\n    }\n    else if (element instanceof Connector) {\n        if (diagram.selectedItems.connectors.indexOf(element) !== -1 && diagram.selectedItems.annotation === undefined) {\n            return true;\n        }\n    }\n    else if (element instanceof ShapeAnnotation || element instanceof PathAnnotation) {\n        if (diagram.selectedItems.annotation && diagram.selectedItems.wrapper.children[0].id === wrapper.id) {\n            return true;\n        }\n    }\n    return false;\n}\n/** @private */\nexport function getCursor(cursor, angle) {\n    //to avoid angles less than 0 & angles greater than 360\n    angle += 360;\n    angle %= 360;\n    if (cursor.indexOf('Resize') === -1) {\n        return cursors[cursor];\n    }\n    else {\n        var dir = cursors[cursor];\n        if ((angle >= 0 && angle < 25) || (angle >= 160 && angle <= 205) || (angle >= 340 && angle <= 360)) {\n            return dir;\n        }\n        else if ((angle >= 25 && angle <= 70) || (angle >= 205 && angle <= 250)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'n-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'nw-resize';\n            }\n            else {\n                return 'e-resize';\n            }\n        }\n        else if ((angle >= 70 && angle <= 115) || (angle >= 250 && angle <= 295)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'ne-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'n-resize';\n            }\n            else {\n                return 'nw-resize';\n            }\n        }\n        else if ((angle >= 115 && angle <= 155) || (angle >= 295 && angle <= 340)) {\n            if (dir === 'n-resize' || dir === 's-resize') {\n                return 'nw-resize';\n            }\n            else if (dir === 'nw-resize' || dir === 'se-resize') {\n                return 'e-resize';\n            }\n            else if (dir === 'e-resize' || dir === 'w-resize') {\n                return 'ne-resize';\n            }\n        }\n        else {\n            return 'n-resize';\n        }\n    }\n    return cursors[cursor];\n}\nvar cursors = {\n    'None': 'default',\n    'Rotate': 'crosshair',\n    'Select': 'default',\n    'Drag': 'move',\n    'ResizeWest': 'w-resize',\n    'ResizeEast': 'e-resize',\n    'ResizeSouth': 's-resize',\n    'ResizeNorth': 'n-resize',\n    'Draw': 'crosshair',\n    'PortDraw': 'crosshair',\n    'ResizeNorthEast': 'ne-resize',\n    'ResizeNorthWest': 'nw-resize',\n    'ResizeSouthEast': 'se-resize',\n    'ResizeSouthWest': 'sw-resize',\n    'ConnectorSourceEnd': 'move',\n    'ConnectorTargetEnd': 'move',\n    'BezierSourceThumb': 'move',\n    'BezierTargetThumb': 'move',\n    'OrthoThumb': 'move',\n    'SegmentEnd': 'move',\n    'Pan': 'pointer',\n    'Hyperlink': 'pointer',\n    'PortDrag': 'pointer',\n    'LabelSelect': 'pointer',\n    'LabelDrag': 'move',\n    'LabelRotate': 'crosshair',\n    'LabelResizeWest': 'w-resize',\n    'LabelResizeEast': 'e-resize',\n    'LabelResizeSouth': 's-resize',\n    'LabelResizeNorth': 'n-resize',\n    'LabelResizeNorthEast': 'ne-resize',\n    'LabelResizeNorthWest': 'nw-resize',\n    'LabelResizeSouthEast': 'se-resize',\n    'LabelResizeSouthWest': 'sw-resize',\n};\n","import { Node } from './../objects/node';\nimport { DiagramElement } from './../core/elements/diagram-element';\nimport { Canvas } from './../core/containers/canvas';\nimport { Container } from './../core/containers/container';\nimport { PathElement } from './../core/elements/path-element';\nimport { TextElement } from './../core/elements/text-element';\nimport { updateStyle } from './../../diagram/utility/diagram-util';\nimport { randomId, cloneObject } from './../utility/base-util';\nimport { Connector } from './../objects/connector';\nimport { BpmnAnnotation } from './../objects/node';\nimport { Transform, DiagramAction } from '../enum/enum';\nimport { findAngle, getIntersectionPoints, getPortDirection } from '../utility/connector';\nimport { Point } from '../primitives/point';\nimport { NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { Size } from '../primitives/size';\nimport { getDiagramElement } from '../utility/dom-util';\n/**\n * BPMN Diagrams contains the BPMN functionalities\n */\nvar BpmnDiagrams = /** @class */ (function () {\n    //End size region\n    /**\n     * Constructor for the BpmnDiagrams module\n     * @private\n     */\n    function BpmnDiagrams() {\n        //Code conversion for Bpmn Shapes\n        //Start Region\n        /**   @private  */\n        this.annotationObjects = {};\n        //constructs the BpmnDiagrams module\n    }\n    Object.defineProperty(BpmnDiagrams.prototype, \"textAnnotationConnectors\", {\n        /**   @private  */\n        get: function () {\n            var connectors = [];\n            for (var _i = 0, _a = Object.keys(this.annotationObjects); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var entry = this.annotationObjects[key];\n                for (var _b = 0, _c = Object.keys(entry); _b < _c.length; _b++) {\n                    var annotation = _c[_b];\n                    var key_1 = 'connector';\n                    connectors.push(entry[annotation][key_1]);\n                }\n            }\n            return connectors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationConn = function (obj) {\n        var connectors = [];\n        if (obj.shape.type === 'Bpmn' && obj.shape.annotations.length !== 0) {\n            var entry = this.annotationObjects[obj.id];\n            for (var _i = 0, _a = Object.keys(entry); _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                var key = 'connector';\n                connectors.push(entry[annotation][key]);\n            }\n        }\n        return connectors;\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.getSize = function (node, content) {\n        var size = new Size(node.width, node.height);\n        if (size.width === undefined || size.height === undefined) {\n            if (!(content instanceof PathElement)) {\n                size.width = size.width || 50;\n                size.height = size.height || 50;\n            }\n            if (content.actualSize.width && content.actualSize.height) {\n                return content.actualSize;\n            }\n            else {\n                content.measure(new Size());\n                size.width = size.width || content.desiredSize.width;\n                size.height = size.height || content.desiredSize.height;\n            }\n            if (node.maxWidth !== undefined) {\n                size.width = Math.min(size.width, node.maxWidth);\n            }\n            if (node.maxHeight !== undefined) {\n                size.height = Math.min(size.height, node.maxHeight);\n            }\n            if (node.minWidth !== undefined) {\n                size.width = Math.max(size.width, node.minWidth);\n            }\n            if (node.minHeight !== undefined) {\n                size.height = Math.max(size.height, node.minHeight);\n            }\n        }\n        return size;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.initBPMNContent = function (content, node, diagram) {\n        var shape = node.shape;\n        if (shape.shape === 'Event') {\n            content = this.getBPMNEventShape(node, shape.event);\n        }\n        if (shape.shape === 'Gateway') {\n            content = this.getBPMNGatewayShape(node);\n        }\n        if (shape.shape === 'DataObject') {\n            content = this.getBPMNDataObjectShape(node);\n        }\n        if (shape.shape === 'Message' || shape.shape === 'DataSource') {\n            content = this.getBPMNShapes(node);\n        }\n        // if (shape.shape === 'Group') {\n        //     content = this.getBPMNGroup(node, diagram);\n        //     content.style.strokeDashArray = '2 2 6 2';\n        //     content.horizontalAlignment = 'Center';\n        //     content.verticalAlignment = 'Center';\n        // }\n        if (shape.shape === 'Activity') {\n            content = this.getBPMNActivityShape(node);\n        }\n        if (shape.shape === 'TextAnnotation') {\n            content = this.renderBPMNTextAnnotation(diagram, node, content);\n        }\n        var annotations = {};\n        if (shape.annotations.length > 0) {\n            for (var i = 0; i < shape.annotations.length && shape.annotations[i].text; i++) {\n                content.children.push(this.getBPMNTextAnnotation(node, diagram, shape.annotations[i], content));\n            }\n            content.style.strokeDashArray = '2 2 6 2';\n        }\n        return content;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNShapes = function (node) {\n        var bpmnShape = new PathElement();\n        //set style\n        this.setStyle(bpmnShape, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            bpmnShape.shadow = node.shadow;\n        }\n        var bpmnShapeData = getBpmnShapePathData(node.shape.shape);\n        bpmnShape.data = bpmnShapeData;\n        bpmnShape.id = node.id + '_' + node.shape.shape;\n        if (node.width !== undefined && node.height !== undefined) {\n            bpmnShape.width = node.width;\n            bpmnShape.height = node.height;\n        }\n        return bpmnShape;\n    };\n    /** @private */\n    // public getBPMNGroup(node: Node, diagram: Diagram): Container {\n    //     let group: Container = new Container();\n    //     group.id = node.id + '_group';\n    //     //group.style.strokeDashArray = '2 2 6 2';\n    //     if (!group.children) { group.children = []; }\n    //     let grp: BpmnGroup = ((node.shape as BpmnShape).group as BpmnGroup);\n    //     if ((node.shape as BpmnShape).group as BpmnGroup) {\n    //         for (let i: number = 0; i < grp.children.length; i++) {\n    //             let b: Node | Connector = diagram.nameTable[grp.children[i]];\n    //             group.children.push(b.wrapper);\n    //         }\n    //     }\n    //     return group;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNGatewayShape = function (node) {\n        var gatewayshape = new Canvas();\n        //childNode0\n        var gatewayNode = new PathElement();\n        gatewayNode.id = node.id + '_0_gateway';\n        gatewayNode.offsetX = node.offsetX;\n        gatewayNode.offsetY = node.offsetY;\n        gatewayNode.data = 'M 40 20 L 20 40 L 0 20 L 20 0 L 40 20 Z';\n        this.setStyle(gatewayNode, node);\n        //childNode1\n        var gatewayTypeNode = new PathElement();\n        gatewayTypeNode.id = node.id + '_1_gatewayType';\n        //set style - opacity\n        gatewayTypeNode.style.opacity = node.style.opacity;\n        gatewayTypeNode.horizontalAlignment = 'Center';\n        gatewayTypeNode.verticalAlignment = 'Center';\n        gatewayTypeNode.relativeMode = 'Object';\n        var shapeType = node.shape.gateway;\n        var gatewayTypeNodeShapeData;\n        gatewayTypeNodeShapeData = getBpmnGatewayShapePathData(shapeType.type);\n        if (shapeType.type === 'EventBased' || shapeType.type === 'ExclusiveEventBased' || shapeType.type === 'ParallelEventBased') {\n            gatewayTypeNode.style.fill = 'white';\n        }\n        else {\n            gatewayTypeNode.style.fill = 'black';\n        }\n        gatewayTypeNode.data = gatewayTypeNodeShapeData;\n        // append child and set style\n        gatewayshape.style.fill = 'transparent';\n        gatewayshape.style.strokeColor = 'transparent';\n        gatewayshape.style.strokeWidth = 0;\n        gatewayshape.children = [gatewayNode, gatewayTypeNode];\n        var size = this.getSize(node, gatewayNode);\n        this.setSizeForBPMNGateway(node.shape.gateway, gatewayshape, size.width, size.height);\n        return gatewayshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNDataObjectShape = function (node) {\n        var dataObjectshape = new Canvas();\n        var shape = node.shape.dataObject;\n        //childNode0\n        var dataobjNode = new PathElement();\n        dataobjNode.id = node.id + '_0_dataobj';\n        dataobjNode.data = 'M29.904,5 L7.853,5 L7.853,45 L42.147,45 L42.147,17.242,L29.932,5,L29.932,17.242,L42.147,17.242';\n        var size = this.getSize(node, dataobjNode);\n        dataobjNode.width = size.width;\n        dataobjNode.height = size.height;\n        this.setStyle(dataobjNode, node);\n        //childNode1\n        var dataobjTypeNode = new PathElement();\n        dataobjTypeNode.id = node.id + '_1_type';\n        dataobjTypeNode.width = 25;\n        dataobjTypeNode.height = 20;\n        dataobjTypeNode.margin.left = 5;\n        dataobjTypeNode.margin.top = 5;\n        dataobjTypeNode.data = 'M 3 9.4 l 6 0 v 2.4 l 3.6 -4 L 9 4 v 2.5 H 3 V 9.4 Z';\n        //set style - opacity\n        dataobjTypeNode.style.opacity = node.style.opacity;\n        //childNode2\n        var dataobjCollectionNode = new PathElement();\n        dataobjCollectionNode.id = node.id + '_2_collection';\n        dataobjCollectionNode.width = 7.5;\n        dataobjCollectionNode.height = 15;\n        dataobjCollectionNode.style.fill = 'black';\n        dataobjCollectionNode.visible = true;\n        dataobjCollectionNode.horizontalAlignment = 'Center';\n        dataobjCollectionNode.verticalAlignment = 'Bottom';\n        dataobjCollectionNode.relativeMode = 'Object';\n        //set style - opacity\n        dataobjCollectionNode.style.opacity = node.style.opacity;\n        dataobjCollectionNode.data = 'M 0 0 L 0.1 0 L 0.1 2 L 0 2 Z M 0.4 0 L 0.6 0 L 0.6 2 L0.4 2 Z M 0.9 0 L 1 0 L 1 2 L 0.9 2 Z';\n        switch (shape.type) {\n            case 'None':\n                dataobjTypeNode.visible = false;\n                break;\n            case 'Input':\n                dataobjTypeNode.style.fill = 'white';\n                break;\n            case 'Output':\n                dataobjTypeNode.style.fill = 'black';\n                break;\n        }\n        if (shape.collection === false) {\n            dataobjCollectionNode.visible = false;\n        }\n        //append child and set style\n        dataObjectshape.style.fill = 'transparent';\n        dataObjectshape.style.strokeColor = 'transparent';\n        dataObjectshape.style.strokeWidth = 0;\n        dataObjectshape.children = [dataobjNode, dataobjTypeNode, dataobjCollectionNode];\n        return dataObjectshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTaskShape = function (node) {\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var taskShapes = new Canvas();\n        //childNode0\n        var taskNode = new DiagramElement();\n        taskNode.cornerRadius = 10;\n        var size = this.getSize(node, taskNode);\n        taskNode.id = node.id + '_0_task';\n        taskNode.width = size.width;\n        taskNode.height = size.height;\n        this.setStyle(taskNode, node);\n        // if task as call \n        if ((task.call !== undefined) && task.call === true) {\n            taskNode.style.strokeWidth = 4;\n        }\n        taskShapes.width = size.width;\n        taskShapes.height = size.height;\n        var childCount = this.getTaskChildCount(node);\n        var x;\n        var childSpace = childCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (childCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (childCount - 1) * 8;\n        }\n        //childNode1\n        var taskTypeNode = new PathElement();\n        var taskTypeNodeData;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            taskTypeNode.width = 18;\n            taskTypeNode.height = 16;\n        }\n        else {\n            taskTypeNode.width = 20;\n            taskTypeNode.height = 20;\n        }\n        taskTypeNode.id = node.id + '_1_tasktType';\n        taskTypeNode.margin.left = 5;\n        taskTypeNode.margin.top = 5;\n        taskTypeNodeData = getBpmnTaskShapePathData(task.type);\n        taskTypeNode.data = taskTypeNodeData;\n        taskTypeNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        // append child and set style\n        taskShapes.style.fill = 'transparent';\n        taskShapes.style.strokeColor = 'transparent';\n        taskShapes.style.strokeWidth = 0;\n        taskShapes.children = [taskNode, taskTypeNode];\n        //childnode for service\n        if (task.type === 'Service') {\n            var taskTypeNodeService = new PathElement();\n            taskTypeNodeService.id = node.id + '_1_taskTypeService';\n            taskTypeNodeService.data = taskTypeNodeData;\n            taskTypeNodeService.margin.left = taskTypeNode.margin.left + 9;\n            taskTypeNodeService.margin.top = taskTypeNode.margin.top + 9;\n            taskTypeNodeService.style.fill = 'white';\n            taskTypeNodeService.style.opacity = node.style.opacity;\n            taskShapes.children.push(taskTypeNodeService);\n        }\n        // if task as loop\n        var loopType = task.loop;\n        var taskLoopNode = new PathElement();\n        var childNode2data;\n        childNode2data = getBpmnLoopShapePathData(loopType);\n        taskLoopNode.data = childNode2data;\n        taskLoopNode.style.fill = 'black';\n        if (loopType !== 'None') {\n            taskLoopNode.visible = true;\n        }\n        else {\n            taskLoopNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskLoopNode.margin.left = x;\n        if (taskLoopNode.visible === true) {\n            x += 12 + 8;\n        }\n        taskLoopNode.width = 12;\n        taskLoopNode.height = 12;\n        taskLoopNode.margin.bottom = 5;\n        taskLoopNode.id = node.id + '_2_loop';\n        taskLoopNode.horizontalAlignment = 'Left';\n        taskLoopNode.verticalAlignment = 'Bottom';\n        taskLoopNode.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        taskLoopNode.relativeMode = 'Point';\n        taskLoopNode.style.fill = 'transparent';\n        taskTypeNode.style.opacity = node.style.opacity;\n        taskShapes.children.push(taskLoopNode);\n        //if task as compensation\n        var taskCompNode = new PathElement();\n        taskCompNode = this.getBPMNCompensationShape(node, taskCompNode);\n        if (task.compensation === true) {\n            taskCompNode.visible = true;\n        }\n        else {\n            taskCompNode.visible = false;\n        }\n        if (childCount === 1) {\n            x = area + 9;\n        }\n        taskCompNode.margin.left = x - 3;\n        x += 12 + 6;\n        taskShapes.children.push(taskCompNode);\n        return taskShapes;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNEventShape = function (node, subEvent, sub, id) {\n        var eventshape = new Canvas();\n        var event;\n        var trigger;\n        var width;\n        var height;\n        id = id || node.id;\n        var pathdata = 'M164.1884,84.6909000000001C156.2414,84.6909000000001,149.7764,78.2259000000001,149.7764,70.2769000000001' +\n            'C149.7764,62.3279000000001,156.2414,55.8629000000001,164.1884,55.8629000000001C172.1354,55.8629000000001,178.6024,' +\n            '62.3279000000001,178.6024,70.2769000000001C178.6024,78.2259000000001,172.1354,84.6909000000001,164.1884,84.6909000000001';\n        var shapeEvent = node.shape.event;\n        if (node.shape.shape === 'Event') {\n            event = shapeEvent.event;\n            trigger = shapeEvent.trigger;\n        }\n        width = subEvent.width;\n        height = subEvent.height;\n        if (sub) {\n            width = width || 20;\n            height = height || 20;\n        }\n        else if (subEvent.width === undefined || subEvent.height === undefined) {\n            var pathElement = new PathElement();\n            pathElement.data = pathdata;\n            var size = this.getSize(node, pathElement);\n            width = size.width;\n            height = size.height;\n        }\n        var shapeActivity = node.shape.activity;\n        if (node.shape.shape === 'Activity') {\n            var subProcess = shapeActivity.subProcess;\n            event = subEvent.event;\n            trigger = subEvent.trigger;\n        }\n        //childNode0\n        var innerEvtNode = new PathElement();\n        innerEvtNode.data = pathdata;\n        innerEvtNode.id = id + '_0_event';\n        innerEvtNode.width = width;\n        innerEvtNode.height = height;\n        innerEvtNode.horizontalAlignment = 'Center';\n        innerEvtNode.verticalAlignment = 'Center';\n        innerEvtNode.relativeMode = 'Object';\n        this.setStyle(innerEvtNode, node);\n        //childNode1\n        var outerEvtNode = new PathElement();\n        outerEvtNode.data = pathdata;\n        outerEvtNode.id = id + '_1_event';\n        outerEvtNode.style.gradient = node.style.gradient;\n        outerEvtNode.horizontalAlignment = 'Center';\n        outerEvtNode.verticalAlignment = 'Center';\n        outerEvtNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        outerEvtNode.style.strokeColor = node.style.strokeColor;\n        outerEvtNode.style.opacity = node.style.opacity;\n        //childNode2\n        var triggerNode = new PathElement();\n        var triggerNodeData = getBpmnTriggerShapePathData(trigger);\n        triggerNode.data = triggerNodeData;\n        triggerNode.id = id + '_2_trigger';\n        triggerNode.horizontalAlignment = 'Center';\n        triggerNode.verticalAlignment = 'Center';\n        triggerNode.relativeMode = 'Object';\n        // set style opacity & strokeColor\n        triggerNode.style.strokeColor = node.style.strokeColor;\n        triggerNode.style.opacity = node.style.opacity;\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n            case 'Intermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                break;\n            case 'NonInterruptingIntermediate':\n                innerEvtNode.style.fill = 'white';\n                innerEvtNode.style.gradient = null;\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.style.strokeDashArray = '2 3';\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                innerEvtNode.style.fill = event !== 'End' ? 'white' : 'black';\n                innerEvtNode.style.gradient = null;\n                triggerNode.style.fill = 'black';\n                triggerNode.style.strokeColor = node.style.fill;\n                break;\n        }\n        //append child and set style\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        eventshape.children = [innerEvtNode, outerEvtNode, triggerNode];\n        this.setSizeForBPMNEvents(shapeEvent, eventshape, width, height);\n        return eventshape;\n    };\n    BpmnDiagrams.prototype.setEventVisibility = function (node, canvas) {\n        var event = node.shape.event.event;\n        var innerEvtNode = canvas[0];\n        var outerEvtNode = canvas[1];\n        var triggerNode = canvas[2];\n        switch (event) {\n            case 'Start':\n                outerEvtNode.visible = false;\n                break;\n            case 'NonInterruptingStart':\n                innerEvtNode.style.strokeDashArray = '2 3';\n                outerEvtNode.visible = false;\n                break;\n        }\n    };\n    BpmnDiagrams.prototype.setSubProcessVisibility = function (node) {\n        var subProcess = node.shape.activity.subProcess;\n        var eventLength = subProcess.events.length;\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index + eventLength].visible = false;\n        }\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index + eventLength].visible = false;\n        }\n        if (eventLength > 0) {\n            for (var i = 0; i < eventLength; i++) {\n                this.setEventVisibility(node, elementWrapper.children[2 + i].children);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessShape = function (node) {\n        var subProcessShapes = new Canvas();\n        var loopType;\n        var events;\n        var event;\n        var subprocessAdhoc = new PathElement();\n        var subProcessEventsShapes = new Canvas();\n        var subProcessLoopShapes = new PathElement();\n        var shape = node.shape.activity;\n        var subProcess = shape.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var subprocessNode = new DiagramElement();\n        subprocessNode.id = node.id + '_0_Subprocess';\n        subprocessNode.style.fill = 'transparent';\n        subprocessNode.cornerRadius = 10;\n        var size = this.getSize(node, subprocessNode);\n        subprocessNode.width = size.width;\n        subprocessNode.height = size.height;\n        subProcessShapes.children = [subprocessNode];\n        if (shape.subProcess.type === 'Transaction') {\n            this.getBPMNSubProcessTransaction(node, node.shape, subProcessShapes);\n        }\n        var iconSpace = 4;\n        var subChildSpace = 12;\n        var childSpace = subChildCount * subChildSpace;\n        var area = size.width / 2;\n        if (subChildCount === 1) {\n            x = area - (subChildSpace * 0.5);\n        }\n        else {\n            x = area - (childSpace / 2) - ((subChildCount - 1) * iconSpace) / 2;\n        }\n        //set style\n        this.setStyle(subprocessNode, node);\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            subProcessShapes.shadow = node.shadow;\n        }\n        var collapsedShape = new PathElement();\n        collapsedShape.id = node.id + '_0_collapsed';\n        collapsedShape.width = 12;\n        collapsedShape.height = 12;\n        collapsedShape.style.fill = 'black';\n        collapsedShape.margin.bottom = 5;\n        collapsedShape.horizontalAlignment = 'Left';\n        collapsedShape.verticalAlignment = 'Bottom';\n        collapsedShape.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        collapsedShape.relativeMode = 'Point';\n        collapsedShape.data = getBpmnShapePathData('collapsedShape');\n        collapsedShape.margin.left = x;\n        if (subProcess.collapsed === true && !subProcess.processes) {\n            collapsedShape.visible = true;\n        }\n        else {\n            collapsedShape.visible = false;\n        }\n        if (collapsedShape.visible === true) {\n            x += 12 + 6;\n        }\n        subProcessShapes.children.push(collapsedShape);\n        if (subProcess.type === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n            events = subProcess.events;\n            for (var i = 0; i < events.length; i++) {\n                event = events[i];\n                this.getBPMNSubEvent(event, node, subProcessShapes);\n            }\n        }\n        // set loop for subprocess\n        subProcessLoopShapes = this.getBPMNSubProcessLoopShape(node);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subProcessLoopShapes.margin.left = x;\n        if (subProcessLoopShapes.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subProcessLoopShapes);\n        // set boundary for subprocess\n        subprocessNode.id = node.id + '_boundary';\n        if (subProcess.boundary === 'Default') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            subprocessNode.style.strokeWidth = 4;\n            subprocessNode.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            subprocessNode.style.strokeWidth = 1;\n            subprocessNode.style.strokeDashArray = '2 2';\n        }\n        //set adhoc for subprocess\n        subprocessAdhoc = this.getBPMNAdhocShape(node, subprocessAdhoc, subProcess);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessAdhoc.margin.left = x;\n        if (subprocessAdhoc.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessAdhoc);\n        //set compensation for subprocess\n        var subprocessComp = new PathElement();\n        if (subProcess.compensation === true) {\n            subprocessComp.visible = true;\n        }\n        else {\n            subprocessComp.visible = false;\n        }\n        subprocessComp = this.getBPMNCompensationShape(node, subprocessComp);\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        subprocessComp.margin.left = x;\n        if (subprocessComp.visible === true) {\n            x += subChildSpace + iconSpace;\n        }\n        subProcessShapes.children.push(subprocessComp);\n        //set style for subprocess\n        subProcessShapes.style.strokeColor = 'transparent';\n        subProcessShapes.style.strokeWidth = 0;\n        subProcessShapes.style.fill = 'transparent';\n        return subProcessShapes;\n    };\n    BpmnDiagrams.prototype.getBPMNSubEvent = function (event, node, container, id) {\n        container.children = container.children || [];\n        var eventContainer;\n        eventContainer = this.getBPMNEventShape(node, event, true, id);\n        this.getBPMNSubprocessEvent(node, eventContainer, event);\n        eventContainer.id = id || (node.id + '_subprocessEvents');\n        eventContainer.width = event.width || 20;\n        eventContainer.height = event.height || 20;\n        // set offset for subevents\n        eventContainer.setOffsetWithRespectToBounds(event.offset.x, event.offset.y, 'Fraction');\n        eventContainer.relativeMode = 'Point';\n        //set margin for subevents\n        eventContainer.margin = event.margin;\n        //set alignment for subevents\n        eventContainer.horizontalAlignment = event.horizontalAlignment;\n        eventContainer.verticalAlignment = event.verticalAlignment;\n        // set style for subevent\n        eventContainer.style.fill = 'transparent';\n        eventContainer.style.strokeColor = 'transparent';\n        eventContainer.style.strokeWidth = 0;\n        container.children.push(eventContainer);\n    };\n    BpmnDiagrams.prototype.getBPMNSubProcessTransaction = function (node, shape, container) {\n        var shapeWidth = container.children[0].width;\n        var shapeHeight = container.children[0].height;\n        var innerRect = new DiagramElement();\n        innerRect.margin = { left: 3, right: 0, top: 3, bottom: 0 };\n        innerRect.id = node.id + '_0_Subprocess_innnerRect';\n        innerRect.cornerRadius = 10;\n        innerRect.width = shapeWidth - 6;\n        innerRect.height = shapeHeight - 6;\n        container.children.push(innerRect);\n        var transactionEvents = new Canvas();\n        transactionEvents.id = node.id + '_transaction_events';\n        transactionEvents.style.gradient = node.style.gradient;\n        var transaction = shape.activity.subProcess.transaction;\n        this.getBPMNSubEvent(transaction.success, node, transactionEvents, node.id + '_success');\n        this.getBPMNSubEvent(transaction.cancel, node, transactionEvents, node.id + '_cancel');\n        this.getBPMNSubEvent(transaction.failure, node, transactionEvents, node.id + '_failure');\n        this.updateDiagramContainerVisibility(transactionEvents.children[0], transaction.success.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[1], transaction.cancel.visible);\n        this.updateDiagramContainerVisibility(transactionEvents.children[2], transaction.failure.visible);\n        transactionEvents.float = true;\n        transactionEvents.width = shapeWidth;\n        transactionEvents.height = shapeHeight;\n        transactionEvents.style.fill = transactionEvents.style.strokeColor = 'transparent';\n        container.children.push(transactionEvents);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubProcessLoopShape = function (node) {\n        var shape = node.shape.activity;\n        var loopType;\n        var subprocessLoop = new PathElement();\n        var subprocessLoopData;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        subprocessLoopData = getBpmnLoopShapePathData(loopType);\n        if (loopType !== 'None') {\n            subprocessLoop.visible = true;\n        }\n        else {\n            subprocessLoop.visible = false;\n        }\n        subprocessLoop.id = node.id + '_loop';\n        subprocessLoop.data = subprocessLoopData;\n        subprocessLoop.style.fill = 'black';\n        subprocessLoop.width = 12;\n        subprocessLoop.height = 12;\n        subprocessLoop.horizontalAlignment = 'Left';\n        subprocessLoop.verticalAlignment = 'Bottom';\n        subprocessLoop.setOffsetWithRespectToBounds(0, 1, 'Fraction');\n        subprocessLoop.relativeMode = 'Point';\n        subprocessLoop.margin.bottom = 5;\n        subprocessLoop.style.fill = 'transparent';\n        return subprocessLoop;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.drag = function (obj, tx, ty, diagram) {\n        var node = diagram.nameTable[(obj).processId];\n        if (obj.margin.top + ty >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { top: obj.margin.top + ty } });\n        }\n        if (obj.margin.left + tx >= 0) {\n            diagram.nodePropertyChange(obj, {}, { margin: { left: obj.margin.left + tx } });\n        }\n        var diffX = 0;\n        var diffY = 0;\n        var bound = this.getChildrenBound(node, obj.id, diagram);\n        this.updateSubProcessess(bound, obj, diagram);\n        node.wrapper.measure(new Size(undefined, undefined));\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        diagram.refreshCanvasLayers();\n        diagram.updateSelector();\n        this.updateDocks(obj, diagram);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.dropBPMNchild = function (target, source, diagram) {\n        if (source && source.shape.type === 'Bpmn' && target.shape.type === 'Bpmn'\n            && source.shape.shape !== 'TextAnnotation') {\n            var subProcess = diagram.nameTable[target.id].shape.activity.subProcess;\n            if (diagram.currentSymbol && target.shape.type === 'Bpmn' && !subProcess.collapsed) {\n                source.processId = target.id;\n                return;\n            }\n            subProcess.processes = subProcess.processes || [];\n            if (subProcess.processes && subProcess.processes.indexOf(source.id) === -1 && !subProcess.collapsed) {\n                subProcess.processes.push(source.id);\n                var redoElement = cloneObject(source);\n                var sources = diagram.nameTable[source.id].wrapper;\n                var targetWrapper = diagram.nameTable[target.id].wrapper;\n                sources.margin.top = (sources.offsetY - (sources.actualSize.height / 2))\n                    - (target.offsetY - (target.actualSize.height / 2));\n                sources.margin.left = (sources.offsetX - (sources.actualSize.width / 2))\n                    - (target.offsetX - (target.actualSize.width / 2));\n                sources.margin.top = (sources.margin.top < 0) ? 0 : sources.margin.top;\n                sources.margin.left = (sources.margin.left < 0) ? 0 : sources.margin.left;\n                diagram.nameTable[source.id].processId = target.id;\n                targetWrapper.children.push(diagram.nameTable[source.id].wrapper);\n                var bound = this.getChildrenBound(target, source.id, diagram);\n                this.updateSubProcessess(bound, source, diagram);\n                targetWrapper.measure(new Size(undefined, undefined));\n                targetWrapper.arrange(targetWrapper.desiredSize);\n                diagram.refreshCanvasLayers();\n                diagram.updateSelector();\n                var edges = [];\n                edges = edges.concat(source.outEdges, source.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    if (diagram.bpmnModule.textAnnotationConnectors.indexOf(diagram.nameTable[edges[i]]) === -1) {\n                        diagram.remove(diagram.nameTable[edges[i]]);\n                    }\n                }\n                var obj = cloneObject(source);\n                var entry = {\n                    type: 'PositionChanged', undoObject: { nodes: [redoElement] },\n                    redoObject: { nodes: [obj] }, category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry);\n                if (diagram.mode === 'SVG') {\n                    if (source.zIndex < target.zIndex) {\n                        diagram.updateProcesses(source);\n                    }\n                }\n                this.updateDocks(source, diagram);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateDocks = function (obj, diagram) {\n        if (obj.shape.type === 'Bpmn' && obj.shape.activity.subProcess.processes &&\n            !obj.shape.activity.subProcess.collapsed) {\n            var processTable = obj.shape.activity.subProcess.processes;\n            for (var _i = 0, processTable_1 = processTable; _i < processTable_1.length; _i++) {\n                var i = processTable_1[_i];\n                var actualObject = diagram.nameTable[i];\n                if (actualObject) {\n                    diagram.updateConnectorEdges(actualObject);\n                    actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                    actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                    if (actualObject.shape.activity.subProcess.processes\n                        && actualObject.shape.activity.subProcess.processes.length) {\n                        this.updateDocks(actualObject, diagram);\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeBpmnProcesses = function (currentObj, diagram) {\n        var element = diagram.nameTable[currentObj.processId];\n        if (currentObj.shape.type === 'Bpmn' && currentObj.shape.activity.subProcess.processes &&\n            currentObj.shape.activity.subProcess.processes.length > 0) {\n            var processes = currentObj.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                diagram.remove(diagram.nameTable[processes[j]]);\n            }\n        }\n        if (element) {\n            diagram.removeDependentConnector(currentObj);\n            var processes = element.shape.activity.subProcess.processes;\n            this.removeChildFromBPMN(element.wrapper, currentObj.id);\n            var processIndex = processes.indexOf(currentObj.id);\n            processes.splice(processIndex, 1);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeChildFromBPMN = function (wrapper, name) {\n        for (var _i = 0, _a = wrapper.children; _i < _a.length; _i++) {\n            var i = _a[_i];\n            if (i.id === name) {\n                wrapper.children.splice(wrapper.children.indexOf(i), 1);\n            }\n            else if (i.children) {\n                this.removeChildFromBPMN(i, name);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.removeProcess = function (id, diagram) {\n        var node = diagram.nameTable[id];\n        if (node) {\n            var parent_1 = diagram.nameTable[node.processId];\n            if (parent_1 && parent_1.shape.type === 'Bpmn') {\n                var processes = parent_1.shape.activity.subProcess.processes;\n                diagram.removeDependentConnector(node);\n                this.removeChildFromBPMN(parent_1.wrapper, id);\n                var processIndex = processes.indexOf(id);\n                processes.splice(processIndex, 1);\n                node.processId = '';\n                diagram.refreshDiagramLayer();\n                diagram.updateSelector();\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addProcess = function (process, parentId, diagram) {\n        var id;\n        process.id = process.id || randomId();\n        id = process.id;\n        var node = diagram.nameTable[id];\n        if (!node) {\n            diagram.add(process);\n        }\n        process.processId = parentId;\n        var parentNode = diagram.nameTable[parentId];\n        var subProcess = parentNode.shape.activity.subProcess;\n        if (node && parentNode && parentNode.shape.type === 'Bpmn' && node.shape.type === 'Bpmn' &&\n            subProcess.processes) {\n            node.processId = parentId;\n            var processes = parentNode.shape.activity.subProcess.processes;\n            if (processes.indexOf(id) < 0) {\n                processes.push(id);\n            }\n            parentNode.wrapper.children.push(node.wrapper);\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n            diagram.bpmnModule.updateDocks(parentNode, diagram);\n            diagram.refreshDiagramLayer();\n            if (diagram.mode === 'SVG' && (node.shape && node.shape.activity\n                && !node.shape.activity.subProcess.processes)) {\n                var child = getDiagramElement(parentId + '_groupElement');\n                child.appendChild(getDiagramElement(process.id + '_groupElement'));\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getChildrenBound = function (node, excludeChild, diagram) {\n        var processes = node.shape.activity.subProcess.processes;\n        var bound;\n        if (processes && processes.length) {\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                if (excludeChild !== i) {\n                    if (!bound) {\n                        bound = diagram.nameTable[i].wrapper.bounds;\n                    }\n                    else {\n                        bound = diagram.nameTable[i].wrapper.bounds.uniteRect(bound);\n                    }\n                }\n            }\n        }\n        return bound || diagram.nameTable[excludeChild].wrapper.bounds;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateSubProcessess = function (bound, obj, diagram) {\n        var diffX;\n        var diffY;\n        var node = diagram.nameTable[obj.processId];\n        var right;\n        var bottom;\n        var pivot = { x: 0.5, y: 0.5 };\n        if ((node.wrapper.bounds.left + obj.margin.left + obj.width) > (node.wrapper.bounds.right)) {\n            right = true;\n        }\n        if ((node.wrapper.bounds.top + obj.margin.top + obj.height) > (node.wrapper.bounds.bottom)) {\n            bottom = true;\n        }\n        if (right) {\n            pivot.x = 0;\n        }\n        if (bottom) {\n            pivot.y = 0;\n        }\n        var actualSize = node.wrapper.actualSize;\n        if (right) {\n            diffX = (obj.wrapper.margin.left + obj.wrapper.bounds.width) / actualSize.width;\n        }\n        if (bottom) {\n            diffY = (obj.wrapper.margin.top + obj.wrapper.bounds.height) / actualSize.height;\n        }\n        if (diffX > 0 || diffY > 0) {\n            diagram.commandHandler.scale(diagram.nameTable[obj.processId], diffX || 1, diffY || 1, pivot);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNCompensationShape = function (node, compensationNode) {\n        compensationNode.id = node.id + '_0_compensation';\n        compensationNode.width = 12;\n        compensationNode.height = 12;\n        compensationNode.margin.bottom = 5;\n        compensationNode.style.fill = 'transparent';\n        compensationNode.horizontalAlignment = 'Left';\n        compensationNode.verticalAlignment = 'Bottom';\n        compensationNode.relativeMode = 'Object';\n        compensationNode.data = 'M 22.462 18.754 l -6.79 3.92 l 6.79 3.92 V 22.89 l 6.415 3.705 v -7.841 l -6.415 3.705 V 18.754 Z' +\n            ' M 28.331 19.701 v 5.947 l -5.149 -2.973 L 28.331 19.701 Z M 21.916 25.647 l -5.15 -2.973 l 5.15 -2.973 V 25.647 Z' +\n            ' M 22.275 12.674 c -5.513 0 -9.999 4.486 -9.999 9.999 c 0 5.514 4.486 10.001 9.999 10.001' +\n            ' c 5.514 0 9.999 -4.486 9.999 -10.001 C 32.274 17.16 27.789 12.674 22.275 12.674 Z M 22.275 32.127 ' +\n            ' c -5.212 0 -9.453 -4.241 -9.453 -9.454 c 0 -5.212 4.241 -9.453 9.453 -9.453 c 5.212 0 9.453 4.241 9.453 9.453' +\n            ' C 31.728 27.887 27.487 32.127 22.275 32.127 Z';\n        return compensationNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNActivityShape = function (node) {\n        var eventshape = new Canvas();\n        var content;\n        var shape = node.shape.activity;\n        var task = shape.activity;\n        var subProcess = shape.subProcess;\n        var activityType = shape.activity;\n        if (task === 'Task') {\n            content = this.getBPMNTaskShape(node);\n        }\n        if (task === 'SubProcess' && subProcess) {\n            content = this.getBPMNSubProcessShape(node);\n        }\n        eventshape.children = [content];\n        eventshape.style.fill = 'transparent';\n        eventshape.style.strokeColor = 'transparent';\n        eventshape.style.strokeWidth = 0;\n        return eventshape;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNSubprocessEvent = function (node, subProcessEventsShapes, events) {\n        var annotations;\n        var ports;\n        if (events.annotations.length !== 0) {\n            for (var i = 0; i < events.annotations.length; i++) {\n                var annot = events.annotations[i];\n                annotations = node.initAnnotationWrapper(annot);\n                annotations.width = events.width;\n                annotations.height = events.height;\n                subProcessEventsShapes.children.push(annotations);\n            }\n        }\n        if (events.ports.length !== 0) {\n            for (var i = 0; i < events.ports.length; i++) {\n                var port = events.ports[i];\n                ports = node.initPortWrapper(port);\n                subProcessEventsShapes.children.push(ports);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNAdhocShape = function (node, adhocNode, subProcess) {\n        adhocNode.id = node.id + '_0_adhoc';\n        adhocNode.width = 12;\n        adhocNode.height = 8;\n        adhocNode.style.fill = 'black';\n        adhocNode.margin.bottom = 5;\n        adhocNode.horizontalAlignment = 'Left';\n        adhocNode.verticalAlignment = 'Bottom';\n        adhocNode.relativeMode = 'Object';\n        adhocNode.data = 'M 49.832 76.811 v -2.906 c 0 0 0.466 -1.469 1.931 -1.5 c 1.465 -0.031 2.331 1.219 2.897 1.688 ' +\n            's 1.06 0.75 1.526 0.75 c 0.466 0 1.548 -0.521 1.682 -1.208 s 0.083 3.083 0.083 3.083 s -0.76 0.969 -1.859 0.969 ' +\n            'c -1.066 0 -1.865 -0.625 -2.464 -1.438 s -1.359 -0.998 -2.064 -0.906 C 50.598 75.467 49.832 76.811 49.832 76.811 Z';\n        if (subProcess && subProcess.adhoc === true) {\n            adhocNode.visible = true;\n        }\n        else {\n            adhocNode.visible = false;\n        }\n        return adhocNode;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getBPMNTextAnnotation = function (node, diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        annotation.nodeId = node.id;\n        var annotationContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textElement = new TextElement();\n        var margin = 10;\n        annotationPath.id = node.id + '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textElement.id = node.id + '_' + annotation.id + '_text';\n        textElement.content = annotation.text;\n        var style = node.style;\n        textElement.style = {\n            fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n            bold: style.bold, textWrapping: style.textWrapping, color: style.color, fill: 'white',\n            fontFamily: style.fontFamily, whiteSpace: style.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textDecoration: style.textDecoration\n        };\n        textElement.horizontalAlignment = 'Center';\n        textElement.verticalAlignment = 'Center';\n        textElement.relativeMode = 'Object';\n        textElement.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationContainer.offsetX = node.offsetX + annotation.length *\n            Math.cos(annotation.angle * (Math.PI / 180));\n        annotationContainer.offsetY = node.offsetY + annotation.length *\n            Math.sin(annotation.angle * (Math.PI / 180));\n        annotationContainer.float = true;\n        annotationContainer.transform = Transform.Self;\n        annotationContainer.id = node.id + '_textannotation_' + annotation.id;\n        annotationContainer.style.strokeColor = 'transparent';\n        annotationContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationContainer.relativeMode = 'Object';\n        annotationContainer.rotateAngle = 0;\n        annotationContainer.children = [annotationPath, textElement];\n        var annotationNode = new Node(node.shape, 'annotations', { id: annotationContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationNode.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationNode.offsetX = annotationContainer.offsetX;\n        annotationNode.offsetY = annotationContainer.offsetY;\n        annotationNode.text = annotation.text;\n        annotationNode.angle = annotation.angle;\n        annotationNode.length = annotation.length;\n        annotationNode.width = annotation.width;\n        annotationNode.height = annotation.height;\n        annotationNode.wrapper = annotationContainer;\n        annotationContainer.children.push(annotationNode.initPortWrapper(annotationNode.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = node.width || node.minWidth || 0;\n        var height = node.height || node.minHeight || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(node.offsetX - width / 2, node.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationContainer, { x: annotationNode.offsetX, y: annotationNode.offsetY }, annotationNode, annotation.length, annotation.angle);\n        var connector = {\n            id: node.id + '_' + annotation.id + '_connector',\n            constraints: ConnectorConstraints.Default & ~(ConnectorConstraints.DragTargetEnd | ConnectorConstraints.Drag),\n            sourceID: node.id, targetID: annotationContainer.id,\n            targetDecorator: { shape: 'None' }\n        };\n        var annotationConnector = new Connector(node.shape, 'annotations', connector, true);\n        annotationConnector.targetPortID = annotationNode.ports[0].id;\n        annotationConnector.init(diagram);\n        annotationConnector.wrapper.float = false;\n        annotationConnector.wrapper.transform = Transform.Self;\n        content.children.push(annotationConnector.wrapper);\n        annotationConnector.zIndex = 10000;\n        var entry = this.annotationObjects[node.id];\n        if (!entry) {\n            entry = {};\n        }\n        if (!entry[annotation.id]) {\n            entry[annotation.id] = {};\n        }\n        var nodeKey = 'node';\n        var connKey = 'connector';\n        entry[annotation.id][nodeKey] = annotationNode;\n        entry[annotation.id][connKey] = annotationConnector;\n        this.annotationObjects[node.id] = entry;\n        diagram.initObject(annotationNode, undefined, false);\n        annotationNode.zIndex = 10000;\n        return annotationContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.renderBPMNTextAnnotation = function (diagram, annotation, content) {\n        annotation.id = annotation.id || randomId();\n        var annotationsContainer = new Canvas();\n        var annotationPath = new PathElement();\n        var textObject = new TextElement();\n        var margin = 10;\n        annotationPath.id = '_' + annotation.id + '_path';\n        annotationPath.width = annotation.width;\n        annotationPath.height = annotation.height;\n        annotationPath.relativeMode = 'Object';\n        textObject.id = annotation.id + '_text';\n        textObject.content = annotation.shape.annotation.text;\n        var textStyle = annotation.style;\n        textObject.style = {\n            fontSize: textStyle.fontSize, italic: textStyle.italic, gradient: null, opacity: textStyle.opacity,\n            bold: textStyle.bold, textWrapping: textStyle.textWrapping, color: textStyle.color, fill: 'white',\n            fontFamily: textStyle.fontFamily, whiteSpace: textStyle.whiteSpace, textOverflow: 'Wrap',\n            strokeColor: 'none', strokeWidth: 0,\n            strokeDashArray: textStyle.strokeDashArray, textAlign: textStyle.textAlign, textDecoration: textStyle.textDecoration\n        };\n        textObject.horizontalAlignment = 'Left';\n        textObject.verticalAlignment = 'Center';\n        textObject.relativeMode = 'Object';\n        textObject.margin = { left: 5, right: 5, top: 5, bottom: 5 };\n        annotationsContainer.offsetX = annotation.offsetX + annotation.shape.annotation.length *\n            Math.cos(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.offsetY = annotation.offsetY + annotation.shape.annotation.length *\n            Math.sin(annotation.shape.annotation.angle * (Math.PI / 180));\n        annotationsContainer.float = true;\n        //    annotationContainer.transform = Transform.Self;\n        annotationsContainer.id = annotation.id + '_textannotation_' + annotation.id;\n        annotationsContainer.style.strokeColor = 'transparent';\n        annotationsContainer.margin = { left: margin, right: margin, top: margin, bottom: margin };\n        annotationsContainer.relativeMode = 'Object';\n        annotationsContainer.rotateAngle = 0;\n        annotationsContainer.children = [annotationPath, textObject];\n        var annotationObject = new Node(annotation.shape, 'annotations', { id: annotationsContainer.id, shape: { type: 'Bpmn', shape: 'TextAnnotation' } }, true);\n        annotationObject.ports = [\n            {\n                id: annotationPath.id + '_port', shape: 'Square',\n                offset: { x: 0, y: 0.5 },\n            }\n        ];\n        annotationObject.offsetX = annotationsContainer.offsetX;\n        annotationObject.offsetY = annotationsContainer.offsetY;\n        if (annotationObject.shape && annotationObject.shape.annotation) {\n            annotationObject.text = annotation.shape.annotation.text;\n            annotationObject.angle = annotation.shape.annotation.angle;\n            annotationObject.length = annotation.shape.annotation.length;\n        }\n        annotationObject.width = annotation.width;\n        annotationObject.height = annotation.height;\n        annotationObject.wrapper = annotationsContainer;\n        annotationsContainer.children.push(annotationObject.initPortWrapper(annotationObject.ports[0]));\n        var bounds = new Rect(0, 0, 0, 0);\n        var width = annotation.width || 0;\n        var height = annotation.height || 0;\n        if (width !== undefined && height !== undefined) {\n            bounds = new Rect(annotation.offsetX - width / 2, annotation.offsetY - height / 2, width, height);\n        }\n        this.setAnnotationPath(bounds, annotationsContainer, { x: annotationObject.offsetX, y: annotationObject.offsetY }, annotationObject, annotation.length, annotation.angle);\n        return annotationsContainer;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTextAnnotationWrapper = function (node, id) {\n        if (node && node.shape.type === 'Bpmn') {\n            var shape = node.shape;\n            if (shape.shape === 'TextAnnotation') {\n                return node.wrapper.children[1];\n            }\n            else if (this.annotationObjects[node.id] && this.annotationObjects[node.id][id]) {\n                var annotationNode = this.annotationObjects[node.id][id].node;\n                return this.getTextAnnotationWrapper(annotationNode, id);\n            }\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.addAnnotation = function (node, annotation, diagram) {\n        var bpmnShapeContent = node.wrapper.children[0];\n        var shape = node.shape;\n        annotation.nodeId = node.id;\n        var annotationObj = new BpmnAnnotation(shape, 'annotations', annotation, true);\n        shape.annotations.push(annotationObj);\n        bpmnShapeContent.children.push(this.getBPMNTextAnnotation(node, diagram, annotation, bpmnShapeContent));\n        node.wrapper.measure(new Size());\n        node.wrapper.arrange(node.wrapper.desiredSize);\n        return this.annotationObjects[node.id][annotation.id].connector;\n    };\n    BpmnDiagrams.prototype.clearAnnotations = function (obj, diagram) {\n        var bpmnShape = obj.shape;\n        if (bpmnShape.annotations.length) {\n            for (var i = bpmnShape.annotations.length - 1; i >= 0; i--) {\n                var annotation = bpmnShape.annotations[i];\n                this.removeAnnotationObjects(obj, annotation, diagram);\n            }\n        }\n        delete this.annotationObjects[obj.id];\n    };\n    /** @private */\n    BpmnDiagrams.prototype.checkAndRemoveAnnotations = function (node, diagram) {\n        //remove connector path\n        //remove annotation node wrapper\n        //remove from a quad\n        if (node.shape.type === 'Bpmn') {\n            if (node.shape.shape === 'TextAnnotation') {\n                var id = node.id.split('_');\n                var annotationId = id[id.length - 1];\n                var nodeId = id[id.length - 3] || id[0];\n                var parentNode = diagram.nameTable[nodeId];\n                var bpmnShape = parentNode.shape;\n                for (var _i = 0, _a = bpmnShape.annotations; _i < _a.length; _i++) {\n                    var annotation = _a[_i];\n                    if (annotation.id === annotationId) {\n                        var index = bpmnShape.annotations.indexOf(annotation);\n                        if (index !== -1) {\n                            diagram.removeDependentConnector(node);\n                            this.removeAnnotationObjects(parentNode, annotation, diagram);\n                            return true;\n                        }\n                    }\n                }\n            }\n            else if (node.shape.annotations && node.shape.annotations.length) {\n                this.clearAnnotations(node, diagram);\n            }\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.removeAnnotationObjects = function (parentNode, annotation, diagram) {\n        var bpmnShape = parentNode.shape;\n        var index = bpmnShape.annotations.indexOf(annotation);\n        if (index !== -1) {\n            if (!(diagram.diagramActions & DiagramAction.UndoRedo) && !(diagram.diagramActions & DiagramAction.Group)) {\n                var entry_1 = {\n                    type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                diagram.addHistoryEntry(entry_1);\n            }\n            bpmnShape.annotations.splice(index, 1);\n            var entry = this.annotationObjects[parentNode.id];\n            if (entry && entry[annotation.id]) {\n                var annotationNode = entry[annotation.id].node;\n                var annotationConnector = entry[annotation.id].connector;\n                diagram.removeElements(annotationNode);\n                diagram.removeElements(annotationConnector);\n                var nodeContent = parentNode.wrapper.children[0];\n                index = nodeContent.children.indexOf(annotationNode.wrapper);\n                nodeContent.children.splice(index, 1);\n                index = nodeContent.children.indexOf(annotationConnector.wrapper);\n                nodeContent.children.splice(index, 1);\n                diagram.removeFromAQuad(annotationNode);\n                diagram.removeFromAQuad(annotationConnector);\n                delete diagram.nameTable[annotationNode.id];\n                delete diagram.nameTable[annotationConnector.id];\n                delete entry[annotation.id];\n            }\n        }\n    };\n    BpmnDiagrams.prototype.setAnnotationPath = function (parentBounds, wrapper, position, node, length, angle) {\n        var rotateAngle = this.getAnnotationPathAngle(position, parentBounds);\n        var data = '';\n        var pathElement = wrapper.children[0];\n        var portElement = wrapper.children[2];\n        var textElement = wrapper.children[1];\n        pathElement.horizontalAlignment = 'Stretch';\n        pathElement.verticalAlignment = 'Stretch';\n        textElement.margin.left = textElement.margin.right = 5;\n        textElement.margin.top = textElement.margin.bottom = 5;\n        var point;\n        var segment;\n        if (rotateAngle === 0) {\n            data = 'M10,20 L0,20 L0,0 L10,0';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Left';\n            portElement.setOffsetWithRespectToBounds(0, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleRight;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.right, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 180) {\n            data = 'M0,0 L10,0 L10,20 L0,20';\n            pathElement.width = 10;\n            pathElement.horizontalAlignment = 'Right';\n            portElement.setOffsetWithRespectToBounds(1, 0.5, 'Fraction');\n            textElement.margin.top = textElement.margin.bottom = 10;\n            point = parentBounds.middleLeft;\n            segment = {\n                x1: parentBounds.left, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else if (rotateAngle === 90) {\n            data = 'M20,10 L20,0 L0,0 L0,10';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Top';\n            portElement.setOffsetWithRespectToBounds(0.5, 0, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.bottomCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.bottom,\n                x2: parentBounds.left, y2: parentBounds.bottom\n            };\n        }\n        else {\n            data = 'M0,0 L0,10 L20,10 L20,0';\n            pathElement.height = 10;\n            pathElement.verticalAlignment = 'Bottom';\n            portElement.setOffsetWithRespectToBounds(0.5, 1, 'Fraction');\n            textElement.margin.left = textElement.margin.right = 10;\n            point = parentBounds.topCenter;\n            segment = {\n                x1: parentBounds.right, y1: parentBounds.top,\n                x2: parentBounds.left, y2: parentBounds.top,\n            };\n        }\n        var center = parentBounds.center;\n        var endPoint = Point.transform(position, angle, Math.max(parentBounds.width, parentBounds.height));\n        point = getIntersectionPoints(segment, [center, endPoint], false, center);\n        pathElement.data = data;\n        if (length !== undefined && angle !== undefined) {\n            point = Point.transform(point, angle, length);\n            wrapper.offsetX = node.offsetX = point.x;\n            wrapper.offsetY = node.offsetY = point.y;\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.isBpmnTextAnnotation = function (activeLabel, diagram) {\n        if (this.annotationObjects) {\n            var parentNodeId = activeLabel.parentId;\n            var annotationId = activeLabel.id;\n            var parentNode = diagram.nameTable[parentNodeId];\n            if (parentNode && parentNode.shape.type === 'Bpmn' && this.annotationObjects[parentNodeId] &&\n                this.annotationObjects[parentNodeId][annotationId]) {\n                return parentNode;\n            }\n            return null;\n        }\n        return null;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationContent = function (parentNode, activeLabel, text, diagram) {\n        var parentNodeId = activeLabel.parentId;\n        var annotationId = activeLabel.id;\n        if (this.annotationObjects[parentNodeId] && this.annotationObjects[parentNodeId][annotationId]) {\n            for (var _i = 0, _a = parentNode.shape.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                if (annotation.id === annotationId) {\n                    annotation.text = text;\n                    var wrapper = this.annotationObjects[parentNodeId][annotationId].node.wrapper.children[1];\n                    wrapper.content = text;\n                    wrapper.visible = true;\n                    parentNode.wrapper.measure(new Size());\n                    parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    BpmnDiagrams.prototype.updateQuad = function (actualObject, diagram) {\n        var annotation = actualObject.shape.annotations;\n        var annotationNode;\n        if (annotation && annotation.length > 0) {\n            for (var i = 0; i < annotation.length; i++) {\n                annotationNode = this.annotationObjects[actualObject.id][annotation[i].id].node;\n                diagram.updateQuad(annotationNode);\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateTextAnnotationProp = function (actualObject, oldObject, diagram) {\n        if (actualObject.shape.type === 'Bpmn') {\n            var annotation = actualObject.shape.annotations;\n            if (annotation && annotation.length > 0) {\n                for (var i = 0; i < actualObject.wrapper.children[0].children.length; i++) {\n                    for (var j = 0; j < annotation.length; j++) {\n                        var annotationId = actualObject.wrapper.children[0].children[i].id.split('_');\n                        var id = annotationId[annotationId.length - 1];\n                        if (id === annotation[j].id) {\n                            var annotationNode = this.annotationObjects[actualObject.id][annotation[j].id].node;\n                            var connector = this.annotationObjects[actualObject.id][annotation[j].id].connector;\n                            var direction = getPortDirection(connector.targetPoint, actualObject.wrapper.bounds, actualObject.wrapper.bounds, false);\n                            var position = connector.sourcePoint;\n                            position = {\n                                x: connector.sourcePoint.x + actualObject.offsetX - (oldObject.offsetX),\n                                y: connector.sourcePoint.y + actualObject.offsetY - (oldObject.offsetY)\n                            };\n                            position = Point.transform(position, annotation[j].angle, annotation[j].length);\n                            actualObject.wrapper.children[0].children[i].offsetX =\n                                annotationNode.offsetX = position.x;\n                            actualObject.wrapper.children[0].children[i].offsetY =\n                                annotationNode.offsetY = position.y;\n                            diagram.updateQuad(annotationNode);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    // /** @private */\n    // public findInteractableObject(obj: ConnectorModel, diagram: Diagram): NodeModel | ConnectorModel {\n    //     if (obj.targetID) {\n    //         let targetNode: NodeModel = diagram.nameTable[obj.targetID];\n    //         if (targetNode.shape.type === 'Bpmn' && (targetNode.shape as BpmnShape).shape === 'TextAnnotation') {\n    //             return targetNode;\n    //         }\n    //     }\n    //     return obj;\n    // }\n    /** @private */\n    BpmnDiagrams.prototype.getSubprocessChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var loopType;\n        var subProcess = shape.subProcess;\n        loopType = subProcess.loop;\n        if (loopType !== undefined && loopType !== 'None') {\n            count++;\n        }\n        if ((subProcess.compensation !== undefined) &&\n            subProcess.compensation === true) {\n            count++;\n        }\n        if ((subProcess.collapsed !== undefined) &&\n            subProcess.collapsed === true) {\n            count++;\n        }\n        if ((subProcess.adhoc !== undefined) &&\n            subProcess.adhoc === true) {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getTaskChildCount = function (node) {\n        var count = 0;\n        var shape = node.shape.activity;\n        var task = shape.task;\n        var loopType;\n        if ((task.compensation !== undefined) &&\n            task.compensation === true) {\n            count++;\n        }\n        if ((task.loop !== undefined) &&\n            task.loop !== 'None') {\n            count++;\n        }\n        return count;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.setStyle = function (child, node) {\n        //set style\n        child.style.fill = node.style.fill;\n        child.style.strokeColor = node.style.strokeColor;\n        child.style.strokeWidth = node.style.strokeWidth;\n        child.style.strokeDashArray = node.style.strokeDashArray;\n        child.style.opacity = node.style.opacity;\n        child.style.gradient = node.style.gradient;\n        if ((node.constraints & NodeConstraints.Shadow) !== 0) {\n            child.shadow = node.shadow;\n        }\n    };\n    //End code conversion region\n    //Update BPMN Shapes on NodePropertyChange\n    //Start region\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMN = function (changedProp, oldObject, actualObject, diagram) {\n        var newShape = changedProp.shape || {};\n        var elementWrapper = actualObject.wrapper.children[0];\n        var actualShape = actualObject.shape.shape;\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (newShape.shape === 'Gateway' && newShape.gateway) {\n            actualObject.wrapper.children[0] = this.getBPMNGatewayShape(actualObject);\n        }\n        else if (newShape.shape === 'DataObject' && newShape.dataObject) {\n            actualObject.wrapper.children[0] = this.getBPMNDataObjectShape(actualObject);\n        }\n        else if (newShape.shape === 'Activity' && newShape.activity) {\n            actualObject.wrapper.children[0] = this.getBPMNActivityShape(actualObject);\n        }\n        else if (newShape.shape === 'Event' && newShape.event) {\n            var shapeEvent = newShape.event;\n            actualObject.wrapper.children[0] = this.getBPMNEventShape(actualObject, shapeEvent);\n        }\n        else if (newShape.shape === 'Message' || newShape.shape === 'DataSource') {\n            actualObject.wrapper.children[0] = this.getBPMNShapes(actualObject);\n            //} \n            // else if (newShape.shape === 'Group') {\n            //     actualObject.wrapper.children[0] = this.getBPMNGroup(actualObject, diagram);\n        }\n        else if (newShape.gateway !== undefined || (actualShape === 'Gateway' && sizeChanged)) {\n            this.updateBPMNGateway(actualObject, changedProp);\n        }\n        else if (newShape.dataObject !== undefined || (actualShape === 'DataObject' && sizeChanged)) {\n            this.updateBPMNDataObject(actualObject, changedProp, oldObject);\n        }\n        else if (newShape.activity !== undefined || (actualShape === 'Activity' && sizeChanged)) {\n            this.updateBPMNActivity(actualObject, changedProp, oldObject, diagram);\n        }\n        else if (newShape.event !== undefined || (actualShape === 'Event' && sizeChanged)) {\n            this.updateBPMNEvent(actualObject, changedProp, oldObject);\n        }\n        if (changedProp.style) {\n            updateStyle(changedProp.style, elementWrapper instanceof Container ? (actualObject.shape.shape === 'Activity') ?\n                elementWrapper.children[0].children[0] :\n                elementWrapper.children[0] : elementWrapper);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNGateway = function (node, changedProp) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            updateStyle(node.style, elementWrapper.children[0]);\n            var bpmnshapeGatewaydata = getBpmnGatewayShapePathData(bpmnShape.gateway.type);\n            elementWrapper.children[1].data = bpmnshapeGatewaydata;\n        }\n        if (changedProp.width !== undefined || changedProp.height !== undefined) {\n            this.setSizeForBPMNGateway(node.shape.gateway, elementWrapper, changedProp.width || node.width, changedProp.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNDataObject = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            if (newObject.style !== undefined) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n                elementWrapperChild1.style.opacity = node.style.opacity;\n                elementWrapperChild2.style.opacity = node.style.opacity;\n            }\n            if (bpmnShape.dataObject) {\n                switch (bpmnShape.dataObject.type) {\n                    case 'None':\n                        elementWrapperChild1.visible = false;\n                        break;\n                    case 'Input':\n                        elementWrapperChild1.style.fill = 'white';\n                        break;\n                    case 'Output':\n                        elementWrapperChild1.style.fill = 'black';\n                        break;\n                }\n                if (oldObject.shape.dataObject.type === 'None') {\n                    elementWrapperChild1.visible = true;\n                }\n                if (newObject.shape.dataObject.collection !== undefined) {\n                    elementWrapperChild2.visible = bpmnShape.dataObject.collection;\n                }\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNDataObjects(node.shape.dataObject, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEvent = function (node, oldObject, event, child0, child1, child2) {\n        switch (event) {\n            case 'Start':\n                child1.visible = false;\n                child0.style.strokeDashArray = '';\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.fill = 'white';\n                break;\n            case 'NonInterruptingStart':\n                child0.style.strokeDashArray = '2 3';\n                child2.style.fill = 'white';\n                child0.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child1.visible = false;\n                break;\n            case 'Intermediate':\n                child0.style.strokeDashArray = '';\n                child0.style.fill = 'white';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'NonInterruptingIntermediate':\n                child0.style.fill = 'white';\n                child0.style.gradient = null;\n                child2.style.fill = 'white';\n                child2.style.strokeColor = 'black';\n                child0.style.strokeDashArray = '2 3';\n                child1.style.strokeDashArray = '2 3';\n                this.updateEventVisibility(oldObject, child1);\n                break;\n            case 'ThrowingIntermediate':\n            case 'End':\n                child0.style.fill = event !== 'End' ? 'white' : 'black';\n                child0.style.strokeDashArray = '';\n                child1.style.strokeDashArray = '';\n                child0.style.gradient = null;\n                child2.style.fill = 'black';\n                this.updateEventVisibility(oldObject, child1);\n                child2.style.strokeColor = node.style.fill;\n                break;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateEventVisibility = function (oldObject, child1) {\n        if (oldObject.shape.activity && oldObject.shape.activity.subProcess &&\n            oldObject.shape.activity.subProcess.events &&\n            oldObject.shape.activity.subProcess.events[0] !== undefined &&\n            oldObject.shape.activity.subProcess.events[0].event !== undefined) {\n            if (oldObject.shape.activity.subProcess.events[0].event === 'NonInterruptingStart' ||\n                oldObject.shape.activity.subProcess.events[0].event === 'Start') {\n                child1.visible = true;\n            }\n        }\n        else if (oldObject.shape.event !== undefined) {\n            if (oldObject.shape.event.event === 'NonInterruptingStart' ||\n                oldObject.shape.event.event === 'Start') {\n                child1.visible = true;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEvent = function (node, newObject, oldObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        if (bpmnShape) {\n            var elementWrapperChild0 = elementWrapper.children[0];\n            var elementWrapperChild1 = elementWrapper.children[1];\n            var elementWrapperChild2 = elementWrapper.children[2];\n            var event_1;\n            var trigger = void 0;\n            if (newObject.style !== undefined) {\n                updateStyle(node.style, elementWrapper.children[0]);\n                if (newObject.style.opacity !== undefined || newObject.style.strokeColor !== undefined) {\n                    elementWrapperChild1.style.opacity = node.style.opacity;\n                    elementWrapperChild1.style.strokeColor = node.style.strokeColor;\n                }\n            }\n            event_1 = bpmnShape.event.event;\n            trigger = bpmnShape.event.trigger;\n            if (event_1 !== undefined) {\n                this.getEvent(node, oldObject, event_1, elementWrapperChild0, elementWrapperChild1, elementWrapperChild2);\n            }\n            if (trigger !== undefined) {\n                this.updateBPMNEventTrigger(node, newObject);\n            }\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNEvents(node.shape.event, elementWrapper, newObject.width || node.width, newObject.height || node.height);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNEventTrigger = function (node, newObject) {\n        var bpmnShape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[2];\n        if (newObject.style &&\n            (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined)) {\n            updateStyle(node.style, elementWrapper);\n        }\n        var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(bpmnShape.event.trigger);\n        elementWrapper.data = bpmnshapeTriggerdata;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivity = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        if (bpmnShape) {\n            var oldProp = oldObject.shape.activity.activity;\n            var actualObjectProp = node.shape.activity.activity;\n            if ((oldProp === 'SubProcess' || oldProp === 'Task') && (actualObjectProp === 'SubProcess' || actualObjectProp === 'Task')) {\n                diagram.removeElements(node);\n                node.wrapper.children[0] = this.getBPMNActivityShape(node);\n            }\n            else {\n                if (actualObjectProp === 'Task' && bpmnShape.activity.task !== undefined) {\n                    this.updateBPMNActivityTask(node, newObject);\n                    var subChildCount = this.getTaskChildCount(node);\n                    var x = void 0;\n                    var childSpace = subChildCount * 12;\n                    var area = size.width / 2 - childSpace;\n                    if (subChildCount === 1) {\n                        x = area + 8;\n                    }\n                    else {\n                        x = area + (subChildCount - 1) * 8;\n                    }\n                    if (bpmnShape.activity.task.loop !== undefined) {\n                        this.updateBPMNActivityTaskLoop(node, newObject, x, subChildCount, area, 2);\n                    }\n                }\n                if (actualObjectProp === 'SubProcess' && bpmnShape.activity.subProcess !== undefined) {\n                    this.updateBPMNActivitySubProcess(node, newObject, oldObject, diagram);\n                }\n            }\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n        if (newObject.width !== undefined || newObject.height !== undefined) {\n            this.setSizeForBPMNActivity(node.shape.activity, elementWrapper, newObject.width || size.width, newObject.height || size.height, node);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTask = function (node, newObject) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var task = bpmnShape.activity.task;\n        if (task.type === 'Receive' || task.type === 'Send') {\n            elementWrapper.children[1].height = 14;\n        }\n        else {\n            elementWrapper.children[1].height = 20;\n        }\n        if (task.type !== undefined) {\n            var bpmnshapeTaskdata = getBpmnTaskShapePathData(task.type);\n            elementWrapper.children[1].data = bpmnshapeTaskdata;\n        }\n        if (bpmnShape.activity.task.call !== undefined) {\n            if (bpmnShape.activity.task.call !== false) {\n                elementWrapper.children[0].style.strokeWidth = 4;\n            }\n            else {\n                elementWrapper.children[0].style.strokeWidth = 1;\n            }\n        }\n        if (bpmnShape.activity.task.compensation !== undefined) {\n            if (bpmnShape.activity.task.compensation === true) {\n                elementWrapper.children[3].visible = true;\n            }\n            else {\n                elementWrapper.children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivityTaskLoop = function (node, newObject, x, subChildCount, area, start) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var activity = bpmnShape.activity;\n        var loop;\n        var index = 0;\n        var bpmnshapeLoopdata;\n        if (activity.subProcess !== undefined) {\n            var subProcess = activity.subProcess;\n            index = (activity.subProcess.type === 'Transaction') ? 2 : 0;\n            loop = subProcess.loop;\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(loop);\n            elementWrapper.children[2 + index].data = bpmnshapeLoopdata;\n            elementWrapper.children[2 + index].visible = (loop === 'None') ? false : true;\n        }\n        else if (activity.task !== undefined && activity.task.loop !== undefined) {\n            bpmnshapeLoopdata = getBpmnLoopShapePathData(activity.task.loop);\n            elementWrapper.children[2].data = bpmnshapeLoopdata;\n            elementWrapper.children[2].visible = (activity.task.loop === 'None') ? false : true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, start + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateChildMargin = function (elementWrapper, subChildCount, area, x, start) {\n        if (subChildCount === 1) {\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x = area + 8;\n                }\n            }\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n            for (var i = start; i < elementWrapper.children.length; i++) {\n                if (i !== 2 && elementWrapper.children[i].visible === true) {\n                    elementWrapper.children[i].margin.left = x;\n                    x += 12 + 8;\n                }\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNActivitySubProcess = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var size = this.getSize(node, elementWrapper.children[0].children[0]);\n        var subProcess = bpmnShape.activity.subProcess;\n        var subChildCount = this.getSubprocessChildCount(node);\n        var x;\n        var childSpace = subChildCount * 12;\n        var area = size.width / 2 - childSpace;\n        if (subChildCount === 1) {\n            x = area + 8;\n        }\n        else {\n            x = area + (subChildCount - 1) * 8;\n        }\n        updateStyle(node.style, elementWrapper.children[0].children[0]);\n        if (subProcess.events !== undefined) {\n            this.updateBPMNSubProcessEvent(node, newObject, oldObject, diagram);\n        }\n        if (subProcess.adhoc !== undefined) {\n            this.updateBPMNSubProcessAdhoc(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.boundary !== undefined) {\n            this.updateBPMNSubProcessBoundary(node, subProcess);\n        }\n        if (subProcess.collapsed !== undefined) {\n            this.updateBPMNSubProcessCollapsed(node, oldObject, subProcess, x, subChildCount, area, diagram);\n        }\n        if (subProcess.compensation !== undefined) {\n            this.updateBPMNSubProcessCompensation(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.loop !== undefined) {\n            this.updateBPMNSubProcessLoop(node, oldObject, subProcess, x, subChildCount, area);\n        }\n        if (subProcess.transaction !== undefined) {\n            this.updateBPMNSubProcessTransaction(node, newObject, oldObject, diagram);\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessEvent = function (node, newObject, oldObject, diagram) {\n        var bpmnShape = newObject.shape;\n        var elementWrapper = node.wrapper.children[0];\n        var nodeContent = elementWrapper.children[0];\n        var index;\n        var j = 0;\n        var elementWrapperChildLen = elementWrapper.children[0].children.length;\n        var subProcess = bpmnShape.activity.subProcess;\n        var events;\n        var start = 2;\n        for (var _i = 0, _a = Object.keys(subProcess.events); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var eventIndex = Number(key);\n            var eventWrapper = nodeContent.children[eventIndex + start];\n            var actualEvent = node.shape.activity.subProcess.events[eventIndex];\n            this.updateBPMNSubEvent(node, subProcess.events[eventIndex], actualEvent, eventWrapper, newObject, oldObject, diagram);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubEvent = function (node, newEvent, actualEvent, eventWrapper, newObject, oldObject, diagram) {\n        var elementWrapper = node.wrapper.children[0];\n        var bpmnShape = newObject.shape;\n        var child0 = eventWrapper.children[0];\n        var child1 = eventWrapper.children[1];\n        var child2 = eventWrapper.children[2];\n        var eventType;\n        var trigger;\n        if (newObject.style) {\n            if (newObject.style.strokeColor !== undefined || newObject.style.opacity !== undefined) {\n                elementWrapper.children[0].children[1].style.strokeColor = newObject.style.strokeColor;\n                elementWrapper.children[0].children[1].style.opacity = newObject.style.opacity;\n            }\n        }\n        if (bpmnShape.activity.subProcess !== undefined) {\n            eventType = newEvent.event;\n            trigger = newEvent.trigger;\n        }\n        if (eventType !== undefined) {\n            this.getEvent(newObject, oldObject, eventType, child0, child1, child2);\n        }\n        if (trigger !== undefined) {\n            if (newObject.style) {\n                updateStyle(newObject.style, elementWrapper.children[0]);\n            }\n            var bpmnshapeTriggerdata = getBpmnTriggerShapePathData(trigger);\n            eventWrapper.children[2].data = bpmnshapeTriggerdata;\n        }\n        if (newEvent.height !== undefined || newEvent.width !== undefined) {\n            this.getEventSize(newEvent, eventWrapper);\n        }\n        if (newEvent.id !== undefined) {\n            eventWrapper.id = newEvent.id;\n        }\n        if (newEvent.margin !== undefined) {\n            eventWrapper.margin = newEvent.margin;\n        }\n        if (newEvent.horizontalAlignment !== undefined) {\n            eventWrapper.horizontalAlignment = newEvent.horizontalAlignment;\n        }\n        if (newEvent.verticalAlignment !== undefined) {\n            eventWrapper.verticalAlignment = newEvent.verticalAlignment;\n        }\n        if (newEvent.offset !== undefined) {\n            eventWrapper.setOffsetWithRespectToBounds(actualEvent.offset.x, actualEvent.offset.y, 'Fraction');\n            eventWrapper.relativeMode = 'Point';\n        }\n        if (newEvent.annotations !== undefined) {\n            var annotations = void 0;\n            var annotation = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[3] && eventWrapper.children.length > 3) {\n                annotations = eventWrapper.children[3];\n                diagram.updateAnnotation(newEvent.annotations[0], annotations, annotation);\n            }\n        }\n        if (newEvent.ports !== undefined) {\n            var ports = void 0;\n            var port = elementWrapper.children[0].children[2];\n            if (eventWrapper.children[4] && eventWrapper.children.length > 4) {\n                ports = eventWrapper.children[4];\n                diagram.updatePort(newEvent.ports[0], ports, port);\n            }\n        }\n        if (newEvent.visible !== undefined) {\n            this.updateDiagramContainerVisibility(eventWrapper, newEvent.visible);\n        }\n    };\n    BpmnDiagrams.prototype.updateBPMNSubProcessTransaction = function (node, newObject, oldObject, diagram) {\n        var transaction = newObject.shape.activity.subProcess.transaction;\n        var eventContainer = node.wrapper.children[0].children[0].children[2];\n        var actualEvent;\n        if (transaction.success !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.success;\n            this.updateBPMNSubEvent(node, transaction.success, actualEvent, eventContainer.children[0], newObject, oldObject, diagram);\n        }\n        if (transaction.cancel !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.cancel;\n            this.updateBPMNSubEvent(node, transaction.cancel, actualEvent, eventContainer.children[1], newObject, oldObject, diagram);\n        }\n        if (transaction.failure !== undefined) {\n            actualEvent = node.shape.activity.subProcess.transaction.failure;\n            this.updateBPMNSubEvent(node, transaction.failure, actualEvent, eventContainer.children[2], newObject, oldObject, diagram);\n        }\n        for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            var connector = diagram.nameTable[edge];\n            switch (connector.sourcePortID) {\n                case 'success':\n                    if (transaction.success && transaction.success.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'success' });\n                    }\n                    break;\n                case 'cancel':\n                    if (transaction.cancel && transaction.cancel.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'cancel' });\n                    }\n                    break;\n                case 'failure':\n                    if (transaction.failure && transaction.failure.visible !== undefined) {\n                        diagram.connectorPropertyChange(connector, {}, { sourcePortID: 'failure' });\n                    }\n                    break;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getEventSize = function (events, wrapperChild) {\n        if (events.height !== undefined) {\n            wrapperChild.height = events.height;\n            wrapperChild.children[0].height = events.height;\n            wrapperChild.children[1].height = events.height * 0.85;\n            wrapperChild.children[2].height = events.height * 0.54;\n        }\n        if (events.width !== undefined) {\n            wrapperChild.width = events.width;\n            wrapperChild.children[0].width = events.width;\n            wrapperChild.children[1].width = events.width * 0.85;\n            wrapperChild.children[2].width = events.width * 0.54;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessAdhoc = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var shape = node.shape;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.adhoc === false) {\n            elementWrapper.children[3 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[3 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessBoundary = function (node, subProcess) {\n        var shape = node.shape;\n        var elementWrapper = (node.wrapper.children[0].children[0].children[0]);\n        if (subProcess.boundary === 'Default') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Call') {\n            elementWrapper.style.strokeWidth = 4;\n            elementWrapper.style.strokeDashArray = '1 0';\n        }\n        if (subProcess.boundary === 'Event') {\n            elementWrapper.style.strokeWidth = 1;\n            elementWrapper.style.strokeDashArray = '2 2';\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateElementVisibility = function (node, visible, diagram) {\n        if (node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var j = processes.length - 1; j >= 0; j--) {\n                var currentNode = diagram.nameTable[processes[j]];\n                currentNode.visible = visible;\n                diagram.updateElementVisibility(currentNode.wrapper, currentNode, visible);\n                if (visible) {\n                    if (currentNode.shape.shape === 'Event') {\n                        this.setEventVisibility(currentNode, currentNode.wrapper.children[0].children);\n                    }\n                    if (currentNode.shape.activity.activity === 'SubProcess') {\n                        this.setSubProcessVisibility(currentNode);\n                    }\n                }\n                var connectors = currentNode.inEdges.concat(currentNode.outEdges);\n                for (var i = connectors.length - 1; i >= 0; i--) {\n                    var connector = diagram.nameTable[connectors[i]];\n                    connector.visible = visible;\n                    diagram.updateElementVisibility(connector.wrapper, connector, visible);\n                }\n            }\n        }\n        if (visible) {\n            if (node.shape.shape === 'Event') {\n                this.setEventVisibility(node, node.wrapper.children[0].children);\n            }\n            if (node.shape.activity.activity === 'SubProcess') {\n                this.setSubProcessVisibility(node);\n            }\n            if (node.shape.activity.activity === 'Task' &&\n                node.shape.shape === 'Activity' && node.shape.activity.subProcess.loop === 'None') {\n                node.wrapper.children[0].children[0].children[3].visible = false;\n            }\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCollapsed = function (node, oldObject, subProcess, x, subChildCount, area, diagram) {\n        var eventLength = node.shape.activity.subProcess.events.length;\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 3 : 1;\n        if (subProcess.collapsed === false) {\n            this.updateElementVisibility(node, true, diagram);\n            elementWrapper.children[index + eventLength].visible = false;\n        }\n        else {\n            this.updateElementVisibility(node, false, diagram);\n            elementWrapper.children[index + eventLength].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 3 + eventLength);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessCompensation = function (node, oldObject, subProcess, x, subChildCount, area) {\n        var elementWrapper = node.wrapper.children[0].children[0];\n        var index = (node.shape.activity.subProcess.type === 'Transaction') ? 2 : 0;\n        if (subProcess.compensation === false) {\n            elementWrapper.children[4 + index].visible = false;\n        }\n        else {\n            elementWrapper.children[4 + index].visible = true;\n        }\n        this.updateChildMargin(elementWrapper, subChildCount, area, x, 4 + index);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNSubProcessLoop = function (node, oldObject, subProcess, x, subChildCount, area) {\n        this.updateBPMNActivityTaskLoop(node, node, x, subChildCount, area, 1);\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateBPMNConnector = function (actualObject, oldObject, connection, diagram) {\n        var flowType = connection.shape;\n        if (flowType.sequence !== undefined) {\n            actualObject = this.getSequence(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.association !== undefined) {\n            actualObject = this.getAssociation(actualObject, oldObject, connection, diagram);\n        }\n        if (flowType.message !== undefined) {\n            actualObject = this.getMessage(actualObject, oldObject, connection, diagram);\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getSequence = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.sequence) === 'Normal') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        if ((connection.shape.sequence) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n            var segment = new PathElement();\n            var pathseq = new PathElement();\n            var pathseqData = void 0;\n            segment = actualObject.getSegmentElement(actualObject, segment);\n            var anglePoints = actualObject.intermediatePoints;\n            for (var j = 0; j < anglePoints.length - 1; j++) {\n                length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                pathseqData = actualObject.findPath(anglePoints[j], anglePoints[j + 1]);\n            }\n            actualObject.wrapper.children[3].data = pathseqData[0];\n            actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.sequence);\n            actualObject.wrapper.children[3].offsetX = pathseqData[1].x;\n            actualObject.wrapper.children[3].offsetY = pathseqData[1].y;\n            actualObject.wrapper.children[3].rotateAngle = 45;\n            actualObject.wrapper.children[3].transform = Transform.Self;\n        }\n        if ((connection.shape.sequence) === 'Conditional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight',\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Diamond', width: 20, height: 10, style: { fill: 'white' } }\n            });\n            actualObject.wrapper.children[3].visible = false;\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getAssociation = function (actualObject, oldObject, connection, diagram) {\n        if ((connection.shape.association) === 'Default') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: 'None' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'Directional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'None' }\n            });\n        }\n        if ((connection.shape.association) === 'BiDirectional') {\n            diagram.connectorPropertyChange(actualObject, oldObject, {\n                type: 'Straight', style: { strokeDashArray: '2 2' },\n                targetDecorator: { shape: 'Arrow', style: { fill: 'black' } },\n                sourceDecorator: { shape: 'Arrow', width: 5, height: 10, style: { fill: 'white' } }\n            });\n        }\n        return actualObject;\n    };\n    /** @private */\n    BpmnDiagrams.prototype.getMessage = function (actualObject, oldObject, connection, diagram) {\n        var segmentOffset = 0.5;\n        var angle;\n        var pt;\n        if ((oldObject.shape.message) === 'Default') {\n            if ((connection.shape.message) !== undefined) {\n                if (((connection.shape.message) === 'InitiatingMessage') ||\n                    ((connection.shape.message) === 'NonInitiatingMessage')) {\n                    var segment = new PathElement();\n                    segment = actualObject.getSegmentElement(actualObject, segment);\n                    var anglePoints = actualObject.intermediatePoints;\n                    for (var j = 0; j < anglePoints.length - 1; j++) {\n                        length = length + actualObject.distance(anglePoints[j], anglePoints[j + 1]);\n                        var offLength = length * segmentOffset;\n                        if (length >= offLength) {\n                            angle = findAngle(anglePoints[j], anglePoints[j + 1]);\n                            pt = Point.transform(anglePoints[j], angle, offLength);\n                        }\n                    }\n                }\n                actualObject.wrapper.children[3].id = actualObject.id + '_' + (connection.shape.message);\n                actualObject.wrapper.children[3].width = 25;\n                actualObject.wrapper.children[3].height = 15;\n                actualObject.wrapper.children[3].data = 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0';\n                actualObject.wrapper.children[3].horizontalAlignment = 'Center';\n                actualObject.wrapper.children[3].verticalAlignment = 'Center';\n                actualObject.wrapper.children[3].transform = Transform.Self;\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n                actualObject.wrapper.children[3].offsetX = pt.x;\n                actualObject.wrapper.children[3].offsetY = pt.y;\n            }\n        }\n        else if ((oldObject.shape.message) !== 'NonInitiatingMessage' ||\n            (oldObject.shape.message) !== 'InitiatingMessage') {\n            if ((connection.shape.message) !== 'Default') {\n                actualObject.wrapper.children[3].style.fill = (connection.shape.message) === 'NonInitiatingMessage' ?\n                    'lightgrey' : 'white';\n            }\n            else {\n                actualObject.wrapper.children[3].visible = false;\n            }\n        }\n        return actualObject;\n    };\n    //End update Region\n    //size updation\n    BpmnDiagrams.prototype.setSizeForBPMNEvents = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        //child node 1 - event node\n        var eventNode = wrapper.children[1];\n        eventNode.width = width * 0.85;\n        eventNode.height = height * 0.85;\n        var triggerNode = wrapper.children[2];\n        if (event.trigger === 'Message') {\n            triggerNode.width = width * 0.54;\n            triggerNode.height = height * 0.4;\n        }\n        else {\n            triggerNode.width = width * 0.5;\n            triggerNode.height = height * 0.5;\n        }\n    };\n    /** @private */\n    BpmnDiagrams.prototype.updateAnnotationDrag = function (node, diagram, tx, ty) {\n        var checkAnnotation = node.id.split('_');\n        if (checkAnnotation[1] === 'textannotation') {\n            var parentNode = void 0;\n            for (var j = 0; j < node.inEdges.length; j++) {\n                var connector = diagram.nameTable[node.inEdges[j]];\n                if (connector) {\n                    parentNode = diagram.nameTable[connector.sourceID];\n                }\n                var start = { x: node.offsetX + tx, y: node.offsetY + ty };\n                var end = connector.sourcePoint;\n                var length_1 = Point.findLength(start, end);\n                var angle = Point.findAngle(end, start);\n                if (parentNode.shape.annotations) {\n                    for (var x = 0; x < (parentNode.shape.annotations).length; x++) {\n                        if ((parentNode.shape.annotations)[x].id === checkAnnotation[checkAnnotation.length - 1]) {\n                            (parentNode.shape.annotations[x]).length = length_1;\n                            (parentNode.shape.annotations[x]).angle = angle;\n                            this.setAnnotationPath(parentNode.wrapper.bounds, node.wrapper, start, node);\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        if (node.processId) {\n            this.drag(node, tx, ty, diagram);\n            return true;\n        }\n        return false;\n    };\n    BpmnDiagrams.prototype.getAnnotationPathAngle = function (point, bounds) {\n        var direction = getPortDirection(point, bounds, bounds, false);\n        var rotateAngle = 0;\n        switch (direction) {\n            case 'Right':\n                rotateAngle = 0;\n                break;\n            case 'Left':\n                rotateAngle = 180;\n                break;\n            case 'Bottom':\n                rotateAngle = 90;\n                break;\n            case 'Top':\n                rotateAngle = 270;\n                break;\n        }\n        return rotateAngle;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNGateway = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[1].width = width * 0.45;\n        wrapper.children[1].height = height * 0.45;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNDataObjects = function (event, wrapper, width, height) {\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n    };\n    BpmnDiagrams.prototype.setSizeForBPMNActivity = function (activity, wrapper, width, height, node) {\n        //child node 1 - event node\n        wrapper.children[0].width = width;\n        wrapper.children[0].height = height;\n        wrapper.children[0].children[0].width = width;\n        wrapper.children[0].children[0].height = height;\n        if (activity.subProcess.type === 'Transaction') {\n            wrapper.children[0].children[1].width = Math.max(width - 6, 1);\n            wrapper.children[0].children[1].height = Math.max(height - 6, 1);\n            wrapper.children[0].children[2].width = width;\n            wrapper.children[0].children[2].height = height;\n        }\n        var taskNode = new DiagramElement();\n        var x;\n        var size = this.getSize(node, taskNode);\n        var childCount;\n        var iconSpace = 4;\n        if (activity.activity === 'Task') {\n            childCount = this.getTaskChildCount(node);\n        }\n        else {\n            childCount = this.getSubprocessChildCount(node);\n        }\n        var childSpace = childCount * 12;\n        var area = (width || size.width) / 2;\n        if (childCount === 1) {\n            x = area - 6;\n        }\n        else {\n            x = area - (childSpace / 2) - ((childCount - 1) * iconSpace) / 2;\n        }\n        for (var i = 0; i < wrapper.children[0].children.length; i++) {\n            if (wrapper.children[0].children[i].visible &&\n                (wrapper.children[0].children[i].id.indexOf('_loop') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_compensation') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_adhoc') > -1 ||\n                    wrapper.children[0].children[i].id.indexOf('_0_collapsed') > -1)) {\n                wrapper.children[0].children[i].margin.left = x;\n                x += wrapper.children[0].children[i].actualSize.width + iconSpace;\n            }\n        }\n    };\n    BpmnDiagrams.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * To destroy the BpmnDiagrams module\n     * @return {void}\n     * @private\n     */\n    BpmnDiagrams.prototype.destroy = function () {\n        /**\n         * Destroys the BpmnDiagrams module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    BpmnDiagrams.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bpmn';\n    };\n    return BpmnDiagrams;\n}());\nexport { BpmnDiagrams };\nexport function getBpmnShapePathData(shape) {\n    return bpmnShapes[shape.toString()];\n}\nexport function getBpmnTriggerShapePathData(shape) {\n    return bpmnTriggerShapes[shape.toString()];\n}\nexport function getBpmnGatewayShapePathData(shape) {\n    return bpmnGatewayShapes[shape.toString()];\n}\nexport function getBpmnTaskShapePathData(shape) {\n    return bpmnTaskShapes[shape.toString()];\n}\nexport function getBpmnLoopShapePathData(shape) {\n    return bpmnLoopShapes[shape.toString()];\n}\nvar bpmnShapes = {\n    'Event': 'M80.5,12.5 C80.5,19.127417 62.59139,24.5 40.5,24.5 C18.40861,24.5 0.5,19.127417 0.5,12.5' +\n        'C0.5,5.872583 18.40861,0.5 40.5,0.5 C62.59139,0.5 80.5,5.872583 80.5,12.5 z',\n    'Message': 'M0,0L19.8,12.8L40,0L0,0L0,25.5L40,25.5L40,0z',\n    'DataSource': 'M 0 10.6 c 0 5.9 16.8 10.6 37.5 10.6 S 75 16.4 75 10.6 v 0 v 68.9 v -0.1 C 75 85.3 58.2 90 37.5 90 ' +\n        'S 0 85.3 0 79.4 l 0 0.1 V 56 V 40.6 L 0 10.6 C 0 4.7 16.8 0 37.5 0 S 75 4.7 75 10.6 S 58.2 21.2 37.5 21.2' +\n        'S 0 16.5 0 10.6 l 0 6.7 v -0.2 c 0 5.9 16.8 10.6 37.5 10.6 S 75 22.9 75 17.1 v 6.8 v -0.1 ' +\n        'c 0 5.9 -16.8 10.6 -37.5 10.6 S 0 29.6 0 23.8',\n    'SubProcess': 'M100,100 h200 a20,20 0 0 1 20,20 v200 a20,20 0 0 1 -20,20 h-200 ' +\n        'a20,20 0 0 1 -20,-20 v-200 a20,20 0 0 1 20,-20 z',\n    'collapsedShape': 'M 8.13789 15 H 0 V 0 H 8.13789 V 15 Z M 0.625991 13.75 H 7.51189 V 1.25 H 0.625991 V 13.75 Z ' +\n        'M 2.18095 7.03125 L 5.95631 7.03125 L 5.95631 7.46875 L 2.18095 7.46875 Z M 3.8342 3.73 ' +\n        'L 4.30369 3.73 L 4.30369 11.2687 L 3.8342 11.2687 Z',\n};\nvar bpmnTriggerShapes = {\n    // 'None': '',\n    'Message': 'M0,0 L19.8,12.8 L40,0 L0, 0 L0, 25.5 L40, 25.5 L 40, 0',\n    'Timer': 'M40,20c0,8.654-5.496,16.024-13.189,18.81' +\n        'C24.685,39.58,22.392,40,20,40C8.954,40,0,31.046,0,20S8.954,0,20,0S40,8.954,40,20z M20,0 L20,2.583 L20,5.283 M10.027,2.681' +\n        'L11.659,5.507 L12.669,7.257 M2.731,9.989 L6.014,11.885 L7.307,12.631 M0.067,19.967 L2.667,19.967 L5.35,19.967' +\n        'M2.748,29.939 L5.731,28.217 L7.323,27.298 M10.056,37.236 L11.292,35.095 L12.698,32.66 M20.033,39.9 L20.033,36.417 L20.033,34.617' +\n        'M30.006,37.219 L28.893,35.292 L27.364,32.643 M37.302,29.911 L34.608,28.355 L32.727,27.269' +\n        'M39.967,19.933 L37.417,19.933 L34.683,19.933 M37.286,9.961 L34.583,11.521 L32.71,12.602 M29.977,2.664 L28.653,4.957 L27.336,' +\n        '7.24 M22.104,8.5 L19.688,20 L24.75,20 L31.604,20 L24.75,20 L19.688,20z',\n    'Error': 'M 23.77 18.527 l -7.107 27.396 l 8.507 -17.247 L 36.94 40.073 l 6.394 -25.997 l -8.497 15.754 L 23.77 18.527 Z',\n    'Escalation': 'M 30.001 8.098 L 11.842 43.543 l 18.159 -18.882 l 18.162 18.882 L 30.001 8.098 Z ',\n    'Cancel': 'M 3.5 16 L 0 12.6 L 4.6 8 L 0 3.5 L 3.4 0 L 8 4.6 l 4.5 -4.5 L 16 3.5 L 11.5 8 l 4.5 4.5 l -3.4 3.5 L 8 11.4 L 3.5 16 Z',\n    'Compensation': 'M 25.7086 0 L 0 25 L 25.7086 50 V 26.3752 L 50 50 V 0 L 25.7086 23.6248 V 0 Z ',\n    'Conditional': 'M 0 0 H 16 V 16 H 0 z M 1.14 3.2 H 14.85 M 1.14 6.4 H 14.85 M 1.14 9.6 H 14.85 M 1.14 12.8 H 14.85',\n    'Link': 'M 32.014 19.258 v 5.992 H 9.373 v 9.504 h 22.641 v 5.988 L 50.622 30 L 32.014 19.258 Z',\n    'Signal': 'M 50 50 H 0 L 25.0025 0 L 50 50 Z',\n    'Terminate': 'M 25 50 C 11.21 50 0 38.79 0 25 C 0 11.21 11.21 0 25 0 C 38.78 0 50 11.21 50 25 C 50 38.79 38.78 50 25 50',\n    'Multiple': 'M 17.784 48.889 H 42.21 l 7.548 -23.23 L 29.997 11.303 L 10.236 25.658 L 17.784 48.889 Z',\n    'Parallel': 'M 27.276 49.986 h 5.58 v -17.15 h 17.146 V 27.17 h -17.15 l 0.004 -17.15 h -5.58 l -0.004 17.15 ' +\n        'H 9.994 v 5.666 h 17.278 L 27.276 49.986 Z',\n};\nvar bpmnGatewayShapes = {\n    'None': '',\n    //exclusive\n    'Exclusive': 'M 11.196 29.009 l 6.36 -9.712 l -5.764 -8.899 h 4.393 l 3.732 5.979 l 3.656 -5.979 h 4.354 l -5.789 9.039' +\n        'l 6.36 9.572 h -4.532 l -4.126 -6.437 l -4.139 6.437 H 11.196 Z',\n    //inclusive\n    'Inclusive': 'M 20.323 31.333 c -6.625 0 -12.015 -5.39 -12.015 -12.015 s 5.39 -12.015 12.015 -12.015 ' +\n        's 12.016 5.39 12.016 12.015 S 26.948 31.333 20.323 31.333 Z M 20.323 9.303 c -5.522 0 -10.015 4.493 -10.015 10.015 ' +\n        's 4.492 10.015 10.015 10.015 s 10.016 -4.493 10.016 -10.015 S 25.846 9.303 20.323 9.303 Z',\n    //parallel\n    'Parallel': 'M 18.394 29.542 v -8.833 H 9.626 v -3.691 h 8.768 V 8.251 h 3.734 v 8.767 h 8.768 v 3.691 h -8.768 v 8.833 H 18.394 Z',\n    //complex\n    'Complex': 'M29.198,19.063L23.089,19.063L27.794,14.358L26.38,12.944L21.223,18.101L21.223,10.443L19.223,10.443L19.223,17.976' +\n        'L14.022,12.776L12.608,14.19L17.48,19.063L10.365,19.063L10.365,21.063L18.261,21.063L12.392,26.932L13.806,28.346' +\n        'L19.223,22.929L19.223,30.225L21.223,30.225L21.223,22.805L25.925,27.507L27.339,26.093L22.309,21.063L29.198,21.063z',\n    //eventbased\n    'EventBased': 'M 20.322 29.874 c -5.444 0 -9.873 -4.43 -9.873 -9.874 s 4.429 -9.874 9.873 -9.874 s 9.874 4.429 9.874 9.874 ' +\n        'S 25.767 29.874 20.322 29.874 Z M 20.322 32.891 c -7.107 0 -12.89 -5.783 -12.89 -12.891 c 0 -7.107 5.782 -12.89 12.89 -12.89 ' +\n        'c 7.108 0 12.891 5.783 12.891 12.89 C 33.213 27.108 27.431 32.891 20.322 32.891 Z M 24.191 25.386 ' +\n        'h -7.984 l -2.469 -7.595 l 6.461 -4.693 l 6.461 4.693 L 24.191 25.386 Z',\n    //exclusive event based\n    'ExclusiveEventBased': 'M 30 15 C 30 23.28 23.28 30 15 30 S 0 23.28 0 15 S 6.72 0 15 0 S 30 6.72 30 15 z M 15 5 ' +\n        'L 5 12.5 L 8 22.5 H 22 L 25 12.5 z',\n    //parallel event based\n    'ParallelEventBased': 'M 35 17.5 C 35 27.16 27.16 35 17.5 35 S 0 27.16 0 17.5 S 7.84 0 17.5 0 S 35 7.84 35 17.5 z M 14.58 5.83 ' +\n        'V 14.58 H 5.83 V 20.42 H 14.58 V 29.17 H 20.42 V 20.42 H 29.17 V 14.58 H 20.42 V 5.83 z',\n};\nvar bpmnTaskShapes = {\n    'None': '',\n    'Service': 'M 32.699 20.187 v -4.005 h -3.32 c -0.125 -0.43 -0.292 -0.83 -0.488 -1.21 l 2.373 -2.375 ' +\n        'l -2.833 -2.83 l -2.333 2.333 c -0.44 -0.253 -0.9 -0.448 -1.387 -0.595 v -3.32 h -4.003 v 3.32 c -0.46 0.137 -0.89' +\n        '0.322 -1.3 0.537 l -2.285 -2.275 l -2.833 2.83 l 2.285 2.278 c -0.235 0.42 -0.41 0.847 -0.547 1.307 h -3.33 v 4.005 h 3.33 ' +\n        'c 0.148 0.488 0.343 0.955 0.588 1.395 l -2.325 2.325 l 2.822 2.832 l 2.373 -2.382 c 0.392 0.205 0.792 0.37 1.212 0.497 v 3.33 ' +\n        'h 4.003 v -3.33 c 0.46 -0.138 0.89 -0.323 1.3 -0.547 l 2.43 2.432 l 2.822 -2.832 l -2.42 -2.422 c 0.222 -0.41 0.4 -0.85 0.535' +\n        '-1.297 H 32.699 Z M 22.699 21.987 c -2.1 0 -3.803 -1.703 -3.803 -3.803 c 0 -2.1 1.703 -3.803 3.803 -3.803 c 2.1 0 3.803 ' +\n        '1.703 3.803 3.803 C 26.502 20.285 24.8 21.987 22.699 21.987 Z',\n    'Receive': 'M 12.217 12.134 v 13.334 h 20 V 12.134 H 12.217 Z M 30.44 13.007 l -8.223 5.35 l -8.223 -5.35 H 30.44 Z M 13.09' +\n        ' 24.594 V 13.459 l 9.127 5.94 l 9.127 -5.94 v 11.135 H 13.09 Z',\n    'Send': 'M 45.7256 3.16055 L 25 23.4017 L 4.27442 3.16055 H 45.7256 Z M 47.8963 46.8413 H 2.10375 V 4.80813' +\n        ' L 25 27.1709 L 47.8963 4.80813 V 46.8413 Z',\n    'InstantiatingReceive': 'M 16.306 17.39 v 8.79 h 13.198 v -8.79 H 16.306 Z M 28.375 17.946 l -5.47 3.558 l -5.47 -3.558 ' +\n        'H 28.375 Z M 28.948 25.625 H 16.861 v -7.389 l 6.043 3.931 l 6.043 -3.931 V 25.625 Z M 22.905 11.785' +\n        'c -5.514 0 -9.999 4.486 -9.999 10 c 0 5.514 4.485 10 9.999 10 s 9.999 -4.486 9.999 -10 ' +\n        'C 32.904 16.272 28.419 11.785 22.905 11.785 Z M 22.905 31.239 c -5.212 0 -9.453 -4.241 -9.453 -9.454' +\n        'c 0 -5.212 4.241 -9.453 9.453 -9.453 s 9.452 4.241 9.452 9.453 C 32.357 26.998 28.117 31.239 22.905 31.239 Z',\n    'Manual': 'M 13.183 15.325 h 2.911 c 0.105 0 0.207 -0.043 0.281 -0.117 c 0.078 -0.074 0.117 -0.176 0.117 -0.281' +\n        'c 0 -0.753 0.718 -1.362 1.596 -1.362 h 2.579 c -0.117 0.227 -0.191 0.48 -0.195 0.757 c 0 0.433 0.168 0.851 0.46 1.144 ' +\n        'c 0.008 0.004 0.015 0.011 0.019 0.015 c -0.289 0.285 -0.475 0.691 -0.479 1.148 c 0 0.433 0.168 0.846 0.46 1.139 ' +\n        'c 0.011 0.012 0.023 0.02 0.035 0.032 c -0.301 0.281 -0.491 0.694 -0.495 1.155 c 0 0.432 0.168 0.847 0.46 1.143' +\n        'c 0.265 0.266 0.612 0.414 0.975 0.414 h 0.839 c 0.027 0.004 0.051 0.012 0.074 0.012 h 8.443 ' +\n        'c 0.352 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.285 0.753 -0.636 0.753 h -6.687 c -0.019 0 -0.035 -0.008 -0.051 -0.008' +\n        'h -2.27 c -0.121 -0.835 -0.667 -1.187 -1.795 -1.187 h -2.158 c -0.223 0 -0.402 0.18 -0.402 0.403' +\n        'c 0 0.219 0.179 0.398 0.402 0.398 h 2.158 c 0.972 0 1.019 0.203 1.019 0.784 c 0 0.219 0.179 0.399 0.402 0.399 ' +\n        'c 0.008 0 0.016 -0.004 0.027 -0.004 c 0.028 0.004 0.055 0.016 0.082 0.016 h 2.56 c 0.34 0.015 0.616 0.343 0.616 0.752' +\n        'c 0 0.418 -0.285 0.757 -0.636 0.761 h -0.004 h -6.442 c -0.878 0 -1.595 -0.639 -1.595 -1.427 v -0.683 ' +\n        'c 0 -0.109 -0.043 -0.211 -0.114 -0.285 c -0.078 -0.074 -0.179 -0.117 -0.285 -0.117 h -0.004 l -2.989 0.027 ' +\n        'c -0.223 0 -0.398 0.184 -0.398 0.402 c 0 0.219 0.179 0.395 0.398 0.395 h 0.004 l 2.591 -0.02 v 0.282 ' +\n        'c 0 1.229 1.073 2.223 2.391 2.223 h 3.895 c 0.004 0 0.007 0.004 0.011 0.004 h 2.536 c 0.792 0 1.436 -0.698 1.436 -1.561 ' +\n        'c 0 -0.273 -0.07 -0.53 -0.188 -0.752 h 5.49 c 0.792 0 1.436 -0.695 1.436 -1.553 c 0 -0.858 -0.644 -1.557 -1.436 -1.557' +\n        'h -3.566 c 0.121 -0.226 0.199 -0.487 0.199 -0.768 c 0 -0.468 -0.195 -0.882 -0.495 -1.167' +\n        'c 0.301 -0.285 0.495 -0.698 0.495 -1.163 c 0 -0.456 -0.191 -0.866 -0.483 -1.152 c 0.293 -0.285 0.483 -0.694 0.483 -1.151' +\n        'c 0 -0.858 -0.647 -1.557 -1.439 -1.557 h -8.373 c -1.167 0 -2.142 0.757 -2.352 1.76 l -2.548 -0.004 ' +\n        'c -0.219 0 -0.399 0.18 -0.399 0.403 C 12.784 15.145 12.964 15.325 13.183 15.325 L 13.183 15.325 Z M 21.907 19.707 ' +\n        'c -0.191 0 -0.328 -0.094 -0.41 -0.176 c -0.144 -0.145 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.418 0.289 -0.753 0.643 -0.753 ' +\n        'h 4.468 c 0.008 0 0.015 -0.004 0.027 -0.008 h 0.051 c 0.351 0 0.636 0.344 0.636 0.761 c 0 0.414 -0.286 0.753 -0.636 0.753 ' +\n        'H 21.907 Z M 27.097 16.629 c 0 0.414 -0.286 0.753 -0.64 0.753 h -4.464 c -0.004 0 -0.004 0 -0.004 0 h -0.082' +\n        'c -0.191 0 -0.328 -0.098 -0.414 -0.18 c -0.14 -0.145 -0.222 -0.352 -0.222 -0.573 c 0 -0.413 0.285 -0.749 0.631 -0.753' +\n        'h 3.434 c 0 0 0 0 0.004 0 h 1.116 c 0.008 0 0.012 -0.004 0.02 -0.004 C 26.819 15.887 27.097 16.215 27.097 16.629' +\n        'L 27.097 16.629 Z M 27.097 14.322 c 0 0.41 -0.278 0.737 -0.62 0.749 c -0.008 0 -0.012 0 -0.016 0 h -3.637 ' +\n        'c -0.008 0 -0.015 0.004 -0.023 0.004 h -0.886 c -0.004 0 -0.008 0 -0.012 0 c -0.187 0 -0.324 -0.094 -0.406 -0.176' +\n        'c -0.144 -0.144 -0.226 -0.355 -0.226 -0.577 c 0.003 -0.414 0.293 -0.753 0.643 -0.753 h 4.468 ' +\n        'c 0.008 0 0.015 -0.004 0.027 -0.004 h 0.051 C 26.811 13.565 27.097 13.905 27.097 14.322 L 27.097 14.322 Z M 27.097 14.322',\n    'BusinessRule': 'M 32.844 13.245 h -0.089 v 0 H 13.764 v -0.015 h -1.009 v 16.989 h 0.095 v 0.011 h 19.716 v -0.011 h 0.278 ' +\n        'V 13.245 Z M 31.844 14.229 v 4.185 h -18.08 v -4.185 H 31.844 Z M 18.168 25.306 v 3.938 h -4.404 v -3.938 H 18.168 Z ' +\n        'M 13.764 24.322 v -4.923 h 4.404 v 4.923 H 13.764 Z M 19.177 25.306 h 12.667 v 3.938 H 19.177 V 25.306 Z M 19.177 24.322' +\n        'v -4.923 h 12.667 v 4.923 H 19.177 Z',\n    'User': 'M 21.762 21.935 c 2.584 0 4.687 -2.561 4.687 -5.703 c 0 -3.147 -2.103 -5.703 -4.687 -5.703 c -1.279 0 -2.475 0.61' +\n        '-3.363 1.721 c -0.855 1.071 -1.327 2.484 -1.324 3.983 C 17.075 19.374 19.178 21.935 21.762 21.935 L 21.762 21.935 Z' +\n        'M 21.762 11.779 c 1.894 0 3.436 1.995 3.436 4.452 c 0 2.453 -1.541 4.452 -3.436 4.452 c -1.895 0 -3.44 -1.999 -3.44 -4.452' +\n        'C 18.323 13.774 19.864 11.779 21.762 11.779 L 21.762 11.779 Z M 25.699 21.309 c -0.348 0 -0.626 0.277 -0.626 0.626 ' +\n        'c 0 0.344 0.277 0.622 0.626 0.622 c 2.136 0 3.875 1.74 3.875 3.879 c 0 0.272 -0.227 0.498 -0.501 0.498 H 14.447 c -0.274 0 ' +\n        '-0.497 -0.223 -0.497 -0.498 c 0 -2.139 1.736 -3.879 3.872 -3.879 c 0.344 0 0.625 -0.277 0.625 -0.622 c 0 -0.348 -0.28 -0.626' +\n        '-0.625 -0.626 c -2.826 0 -5.124 2.297 -5.124 5.126 c 0 0.965 0.784 1.749 1.748 1.749 h 14.626 c 0.964 0 1.748 -0.784' +\n        '1.748 -1.749 C 30.822 23.606 28.524 21.309 25.699 21.309 L 25.699 21.309 Z M 22.217 9.832 c 0.448 -0.263 0.924 -0.396 ' +\n        '1.419 -0.396 c 1.895 0 3.436 1.995 3.436 4.452 c 0 0.439 -0.048 0.873 -0.143 1.284 c -0.08 0.336 0.128 0.672 0.464 0.751 ' +\n        'c 0.048 0.012 0.098 0.019 0.143 0.019 c 0.284 0 0.541 -0.195 0.608 -0.483 c 0.119 -0.506 0.18 -1.034 0.18 -1.571' +\n        'c 0 -3.147 -2.102 -5.703 -4.687 -5.703 c -0.711 0 -1.419 0.198 -2.054 0.573 c -0.296 0.174 -0.397 0.559 -0.219 0.855' +\n        'C 21.536 9.911 21.921 10.009 22.217 9.832 L 22.217 9.832 Z M 27.697 18.81 c -0.345 0 -0.626 0.277 -0.626 0.622 ' +\n        'c 0 0.348 0.281 0.626 0.626 0.626 c 2.137 0 3.75 1.782 3.75 3.918 c 0 0.07 -0.013 0.141 -0.043 0.205 c -0.14 0.314 0.003' +\n        '0.684 0.318 0.823 c 0.082 0.037 0.167 0.055 0.253 0.055 c 0.241 0 0.466 -0.141 0.57 -0.373 c 0.101 -0.226 0.153 -0.464 0.153' +\n        '-0.714 C 32.699 21.15 30.523 18.81 27.697 18.81 L 27.697 18.81 Z M 27.697 18.81',\n    'Script': 'M 22.453 15.04 c 0 0 -1.194 -3.741 2.548 -3.774 c 0 0 2.497 0.126 1.766 4.321 c -0.008 0.043 -0.015 0.086 -0.024 0.13' +\n        'c -0.806 4.323 -2.516 8.42 -3.193 10.581 h 3.904 c 0 0 0.983 4.581 -2.549 4.968 H 13.292 c 0 0 -3.097 -1.42 -1.517 -5.323 l ' +\n        '3 -10.839 H 11.84 c 0 0 -1.129 -2.902 1.709 -3.806 l 11.425 -0.032 l -0.73 0.355 l -1.193 1.726 L 22.453 15.04 Z M 22.409 ' +\n        '12.597 c 0 0 -0.242 0.483 -0.278 0.98 h -9.098 c 0 0 -0.06 -0.871 0.714 -1.041 L 22.409 12.597 Z M 26.341 27.734' +\n        'c 0 0 -0.13 2.678 -2.226 1.871 c 0 0 -0.823 -0.565 -0.758 -1.855 L 26.341 27.734 Z M 22.905 15.008 c 0 0 0.653 -0.258 0.709' +\n        '-1.501 c 0 0 0.145 -1.144 1.483 -0.693 c 0 0 0.808 0.355 0.259 2.404 c 0 0 -2.226 8.5 -3.032 10.339 c 0 0 -1.064 2.646 ' +\n        '0.096 4.226 h -8.581 c 0 0 -1.806 -0.452 -0.741 -3.613 c 0 0 2.935 -9.549 3.193 -11.162 L 22.905 15.008 Z',\n};\nvar bpmnLoopShapes = {\n    'None': '',\n    'Standard': 'M 52.002 73.379 c -2.494 -2.536 -6.55 -2.534 -9.043 0 c -1.208 1.228 -1.874 2.861 -1.874 4.598 ' +\n        'c 0 1.225 0.337 2.395 0.957 3.411 l -1.167 1.186 l 2.071 0.458 l 2.071 0.458 l -0.45 -2.106 l -0.45 -2.106 l -1.292 1.314' +\n        'c -1.119 -2.065 -0.842 -4.709 0.877 -6.458 c 2.084 -2.119 5.475 -2.117 7.557 0 c 2.083 2.119 2.083 5.565 0 7.685' +\n        'c -0.976 0.992 -2.272 1.557 -3.65 1.59 l 0.025 1.068 c 1.65 -0.041 3.2 -0.716 4.368 -1.903 ' +\n        'c 1.208 -1.228 1.874 -2.861 1.874 -4.597 C 53.875 76.24 53.209 74.607 52.002 73.379 Z',\n    'ParallelMultiInstance': 'M 51.5,69.5 L52.5,69.5 L52.5,84.5 L51.5 84.5 Z M 46.5,69.5 L47.5,69.5 L47.5,84.5 L46.5 84.5 Z' +\n        ' M 41.5,69.5 L42.5,69.5 L42.5,84.5 L41.5 84.5 Z  ',\n    'SequenceMultiInstance': 'M 40.375,71.5 L 55.375,71.5 L 55.375,72.5 L 40.375,72.5 Z M 40.375,76.5 L 55.375,76.5 ' +\n        'L 55.375,77.5 L 40.375,77.5 Z M 40.375,76.5 L 55.375,76.5 L 55.375,77.5 L 40.375,77.5 Z M 40.375,81.5 L 55.375,81.5' +\n        'L 55.375,82.5 L 40.375,82.5 Z'\n};\n","import { Rect } from '../primitives/rect';\nimport { cloneObject } from '../utility/base-util';\nvar GraphForceNode = /** @class */ (function () {\n    function GraphForceNode(gnNode) {\n        /**\n         * @private\n         */\n        this.velocityX = 0;\n        /**\n         * @private\n         */\n        this.velocityY = 0;\n        /**\n         * @private\n         */\n        this.nodes = [];\n        this.graphNode = gnNode;\n        var nNode = this.graphNode;\n        var bounds = getGraphBounds(nNode);\n        this.location = bounds.center;\n        this.nodes = [];\n        if (!gnNode.treeInfo.parents) {\n            gnNode.treeInfo.parents = [];\n        }\n        if (!gnNode.treeInfo.children) {\n            gnNode.treeInfo.children = [];\n        }\n        this.nodes = (gnNode.treeInfo.parents).concat(gnNode.treeInfo.children);\n    }\n    /**\n     * @private\n     */\n    GraphForceNode.prototype.applyChanges = function () {\n        this.graphNode.treeInfo.center = this.location;\n    };\n    return GraphForceNode;\n}());\nexport { GraphForceNode };\n/**\n * SymmetricalLayout\n */\nvar SymmetricLayout = /** @class */ (function () {\n    function SymmetricLayout() {\n        this.cdCOEF = 0.442;\n        this.cfMAXVELOCITY = 50;\n        this.cnMAXITERACTION = 1000;\n        this.cnSPRINGLENGTH = 100;\n        this.mszMaxForceVelocity = { width: this.cfMAXVELOCITY, height: this.cfMAXVELOCITY };\n        /**\n         * @private\n         */\n        this.springLength = 0;\n        /**\n         * @private\n         */\n        this.springFactor = this.cdCOEF;\n        /**\n         * @private\n         */\n        this.maxIteration = this.cnMAXITERACTION;\n        this.springLength = this.cnSPRINGLENGTH;\n    }\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.destroy = function () {\n        /**\n         * Destroys symmetricLayout\n         */\n    };\n    SymmetricLayout.prototype.getModuleName = function () {\n        return 'SymmetricalLayout';\n    };\n    SymmetricLayout.prototype.doGraphLayout = function (graphLayoutManager) {\n        var graph = this.selectedNode;\n        graph.treeInfo.Bounds = graphLayoutManager.getModelBounds(graphLayoutManager.nodes);\n        var lstGraphNodes = graph.treeInfo.GraphNodes;\n        var lstNodes = this.convertGraphNodes(lstGraphNodes);\n        var count = lstNodes.length;\n        count = Math.min(this.maxIteration, count * count * count);\n        this.preLayoutNodes(lstNodes, graph.treeInfo.Bounds);\n        for (var i = 0, nLenght = count; i < nLenght; i++) {\n            this.makeSymmetricLayout(lstNodes);\n            this.appendForces(lstNodes);\n        }\n        this.resetGraphPosition(lstNodes, graph);\n    };\n    SymmetricLayout.prototype.preLayoutNodes = function (lstNodes, rcBounds) {\n        var fMaxSize = Math.max(rcBounds ? rcBounds.width : 25, rcBounds ? rcBounds.height : 25);\n        var ptCenter = { x: fMaxSize / 2, y: fMaxSize / 2 };\n        var dRotateAngle = 2 * Math.PI / lstNodes.length;\n        var dAngle = dRotateAngle;\n        for (var i = 0; i < lstNodes.length; i++) {\n            var gnNode = lstNodes[i];\n            var forceNode = this.getForceNode(gnNode);\n            forceNode.location = {\n                x: ptCenter.x + fMaxSize * Number((Math.cos(dAngle)).toFixed(2)),\n                y: ptCenter.y + fMaxSize * Number(Math.sin(dAngle).toFixed(2))\n            };\n            dAngle -= dRotateAngle;\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.doLayout = function (graphLayoutManager) {\n        this.selectedNode = graphLayoutManager.selectedNode;\n        this.doGraphLayout(graphLayoutManager);\n    };\n    SymmetricLayout.prototype.makeSymmetricLayout = function (lstNodes) {\n        var forceNode;\n        var force;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            forceNode = this.getForceNode(gnNode);\n            var nodes = forceNode.nodes;\n            for (var l = 0; l < nodes.length; l++) {\n                var gnChild = nodes[l];\n                if (collectionContains(gnChild.id, lstNodes)) {\n                    this.calcNodesForce(forceNode, this.getForceNode(gnChild));\n                }\n            }\n            for (var i = 0, length_1 = nodes.length; i < length_1; i++) {\n                if (length_1 < 2) {\n                    break;\n                }\n                var vtx1 = this.getForceNode(nodes[i]);\n                var vtx2 = (i + 1 >= length_1) ? this.getForceNode(nodes[0]) : this.getForceNode((nodes[i + 1]));\n                var angle = (360 / nodes.length / 2) * Math.PI / 180;\n                var normalDistance = 2 * this.springLength * Math.sin(angle);\n                this.calcRelatesForce(vtx1, vtx2, normalDistance);\n            }\n            for (var s = 0; s < lstNodes.length; s++) {\n                var gnChild = lstNodes[s];\n                if (!collectionContains(gnChild.id, nodes) && gnChild.id !== gnNode.id) {\n                    force = this.getForceNode(gnChild);\n                    this.updateNeigbour(forceNode, force);\n                }\n            }\n        }\n    };\n    SymmetricLayout.prototype.appendForces = function (lstNodes) {\n        var gfnNode = null;\n        for (var k = 0; k < lstNodes.length; k++) {\n            var gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptPoint = gfnNode.location;\n            ptPoint.x += Math.min(gfnNode.velocityX, this.mszMaxForceVelocity.width);\n            ptPoint.y += Math.min(gfnNode.velocityY, this.mszMaxForceVelocity.height);\n            gfnNode.velocityX = 0;\n            gfnNode.velocityY = 0;\n            gfnNode.location = ptPoint;\n        }\n    };\n    SymmetricLayout.prototype.resetGraphPosition = function (lstNodes, graph) {\n        var szMin = { width: Number.MAX_VALUE, height: Number.MAX_VALUE };\n        var gfnNode = null;\n        var gnNode;\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = {\n                x: gfnNode.location.x - gnNode.actualSize.width / 2,\n                y: gfnNode.location.y - gnNode.actualSize.height / 2\n            };\n            szMin.width = Math.min(szMin.width, ptLocation.x);\n            szMin.height = Math.min(szMin.height, ptLocation.y);\n        }\n        for (var k = 0; k < lstNodes.length; k++) {\n            gnNode = lstNodes[k];\n            gfnNode = this.getForceNode(gnNode);\n            var ptLocation = gfnNode.location;\n            ptLocation.x -= szMin.width - (graph.treeInfo.location ? graph.treeInfo.location.x : 0);\n            ptLocation.y -= szMin.height - (graph.treeInfo.location ? graph.treeInfo.location.y : 0);\n            gfnNode.location = ptLocation;\n            gfnNode.applyChanges();\n        }\n    };\n    SymmetricLayout.prototype.convertGraphNodes = function (lstNodes) {\n        var lstToReturn = [];\n        var keys = Object.keys(lstNodes);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var k = keys_1[_i];\n            if (lstNodes[k]) {\n                var gnNode = lstNodes[k];\n                var forceNode = new GraphForceNode(gnNode);\n                gnNode.treeInfo.tag = forceNode;\n                lstToReturn.push(gnNode);\n            }\n        }\n        return lstToReturn;\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.getForceNode = function (gnNode) {\n        return gnNode.treeInfo.tag;\n    };\n    SymmetricLayout.prototype.updateNeigbour = function (vtSource, vtTarget) {\n        if (vtTarget == null || vtSource == null) {\n            return;\n        }\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        var normalDistance = (this.springLength * 0.9);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.lineAngle = function (pt1, pt2) {\n        var radians = 0;\n        var vx = pt2.x - pt1.x;\n        var vy = pt2.y - pt1.y;\n        if (vx === 0) {\n            if (vy <= 0) {\n                radians = (3.0 * Math.PI) / 2.0;\n            }\n            else {\n                radians = Math.PI / 2.0;\n            }\n        }\n        else if (vy === 0) {\n            if (vx < 0) {\n                radians = Math.PI;\n            }\n            else {\n                radians = 0;\n            }\n        }\n        else {\n            radians = Math.atan(vy / vx);\n            if (vx < 0 && vy > 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx < 0 && vy < 0) {\n                radians = Math.PI + radians;\n            }\n            else if (vx > 0 && vy < 0) {\n                radians = 2.0 * Math.PI + radians;\n            }\n        }\n        return radians;\n    };\n    SymmetricLayout.prototype.pointDistance = function (pt1, pt2) {\n        var d = 0;\n        var dx = pt2.x - pt1.x;\n        var dy = pt2.y - pt1.y;\n        var t = (dx * dx) + (dy * dy);\n        if (t > 0) {\n            d = Math.sqrt(t);\n        }\n        return d;\n    };\n    SymmetricLayout.prototype.calcRelatesForce = function (vtSource, vtTarget, normalDistance) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance < normalDistance) {\n            this.calcForce(distance, normalDistance, angle, vtTarget);\n        }\n    };\n    /**\n     * @private\n     */\n    SymmetricLayout.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        var layoutManager = new GraphLayoutManager();\n        layoutManager.updateLayout(nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort);\n    };\n    SymmetricLayout.prototype.calcNodesForce = function (vtSource, vtTarget) {\n        var distance = this.pointDistance(vtSource.location, vtTarget.location);\n        var angle = this.lineAngle(vtSource.location, vtTarget.location);\n        if (distance > this.springLength || distance < this.springLength) {\n            this.calcForce(distance, this.springLength, angle, vtTarget);\n        }\n    };\n    SymmetricLayout.prototype.calcForce = function (distance, minDist, angle, vtTarget) {\n        var count = vtTarget.nodes.length;\n        var length = distance - minDist;\n        var factor = this.springFactor / (count * count) * Math.sqrt(count);\n        if (length !== 0) {\n            var fVelocity = length * factor;\n            var fOffset = fVelocity;\n            var offsetX = Math.cos(angle) * fOffset;\n            var offsetY = Math.sin(angle) * fOffset;\n            vtTarget.velocityX -= offsetX;\n            vtTarget.velocityY -= offsetY;\n        }\n    };\n    return SymmetricLayout;\n}());\nexport { SymmetricLayout };\nvar GraphLayoutManager = /** @class */ (function () {\n    function GraphLayoutManager() {\n        this.visitedStack = [];\n        this.cycleEdgesCollection = [];\n        this.graphObjects = [];\n        this.passedNodes = [];\n    }\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.updateLayout = function (nodeCollection, connectors, symmetricLayout, nameTable, layout, viewPort) {\n        this.nameTable = nameTable;\n        this.nodes = nodeCollection;\n        this.connectors = connectors;\n        var selectionList = nodeCollection;\n        if (selectionList.length > 0) {\n            this.mhelperSelectedNode = cloneObject(selectionList[0]);\n        }\n        for (var _i = 0, nodeCollection_1 = nodeCollection; _i < nodeCollection_1.length; _i++) {\n            var node = nodeCollection_1[_i];\n            var nodeGraphObject = void 0;\n            nodeGraphObject = node;\n            nodeGraphObject.treeInfo = {};\n            nodeGraphObject.treeInfo.graphType = 'Node';\n            this.graphObjects.push(nodeGraphObject);\n        }\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            var connectorGraphObject = void 0;\n            connectorGraphObject = connector;\n            connectorGraphObject.treeInfo = {};\n            connectorGraphObject.treeInfo.graphType = 'Connector';\n            this.graphObjects.push(connectorGraphObject);\n        }\n        this.updateLayout1(this.graphObjects, symmetricLayout);\n        var modelBounds = this.getModelBounds(selectionList);\n        for (var i = 0; i < selectionList.length; i++) {\n            var node = selectionList[i];\n            var trnsX = (viewPort.x - modelBounds.width) / 2;\n            var margin = layout.margin || {};\n            var marginX = void 0;\n            var marginY = void 0;\n            margin.left = margin.left || 0;\n            margin.right = margin.right || 0;\n            margin.top = margin.top || 0;\n            margin.bottom = margin.bottom || 0;\n            if (layout.margin.left) {\n                margin.left = layout.margin.left;\n            }\n            if (layout.margin.top) {\n                margin.top = layout.margin.top;\n            }\n            var dx = (node.treeInfo.tag.location.x - (node.offsetX - (node.actualSize.width / 2)) -\n                modelBounds.x + trnsX + margin.left);\n            var dy = (node.treeInfo.tag.location.y - (node.offsetY - (node.actualSize.height / 2)) - modelBounds.y + margin.top);\n            node.offsetX += dx;\n            node.offsetY += dy;\n            delete node.treeInfo;\n        }\n        return true;\n    };\n    /**\n     * @private\n     */\n    GraphLayoutManager.prototype.getModelBounds = function (lNodes) {\n        lNodes = lNodes.slice();\n        var rect = null;\n        var rect1 = null;\n        var node;\n        for (var i = 0; i < lNodes.length; i++) {\n            node = lNodes[i];\n            var bounds = getGraphBounds(node);\n            rect = new Rect(node.treeInfo.tag ? node.treeInfo.tag.location.x : bounds.x, node.treeInfo.tag ? node.treeInfo.tag.location.y : bounds.y, node.actualSize.width, node.actualSize.height);\n            if (rect1) {\n                rect1 = rect1.uniteRect(rect);\n            }\n            else {\n                rect1 = rect;\n            }\n        }\n        return rect1;\n    };\n    GraphLayoutManager.prototype.updateLayout1 = function (nodesToLayout, symmetricLayout) {\n        this.detectCyclesInGraph(nodesToLayout);\n        var nodesCount = nodesToLayout.length;\n        if (nodesCount > 0) {\n            var cycleConnColln = [];\n            var nodes = [];\n            var nodeSymbols = [];\n            for (var s = 0; s < nodesToLayout.length; s++) {\n                var nd = nodesToLayout[s];\n                if (nd.treeInfo.isCycleEdge === undefined) {\n                    nd.treeInfo.isCycleEdge = false;\n                }\n                if (nd.treeInfo.graphType === 'Connector' && !nd.treeInfo.isCycleEdge) {\n                    nodes.push(nd);\n                }\n                else if (nd.treeInfo.graphType === 'Connector') {\n                    cycleConnColln.push(nd);\n                }\n                else {\n                    nodeSymbols.push(nd);\n                }\n            }\n            nodes = nodes.concat(nodeSymbols);\n            nodes = cycleConnColln.concat(nodes);\n            while (nodesCount > this.dictionaryLength(this.passedNodes)) {\n                this.getNodesToPosition(nodes);\n                if (this.selectedNode == null) {\n                    continue;\n                }\n                symmetricLayout.doLayout(this);\n                this.selectedNode = null;\n                this.visitedStack = [];\n                for (var _i = 0, _a = this.cycleEdgesCollection; _i < _a.length; _i++) {\n                    var connector = _a[_i];\n                    connector.treeInfo.isCycleEdge = false;\n                }\n            }\n            this.passedNodes = null;\n            this.selectedNode = null;\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.getNodesToPosition = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            if (!collectionContains(node.id, this.passedNodes)) {\n                if (node) {\n                    this.selectNodes(node);\n                }\n                break;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectNodes = function (node) {\n        var nodeGraph = node;\n        if (node.treeInfo.graphType === 'Connector') {\n            this.exploreGraphEdge(node);\n        }\n        else if (nodeGraph != null) {\n            if (this.addNode(node, 'passed')) {\n                this.addNode(node, 'selected');\n                if (this.isConnectedToAnotherNode(nodeGraph)) {\n                    this.selectedNode = { treeInfo: {} };\n                    this.selectedNode.treeInfo.LeftMargin = 10;\n                    this.selectedNode.treeInfo.TopMargin = 10;\n                    this.selectConnectedNodes(nodeGraph);\n                }\n                else {\n                    this.selectedNode = node;\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.selectConnectedNodes = function (nodeGraph) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var node = nodeGraph;\n        if (node != null && this.addNode(node, 'passed')) {\n            var nodeName = node.id;\n            if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                var gnNode = this.addGraphNode(node);\n                this.getConnectedRelatives(gnNode);\n                this.exploreRelatives(nodeGraph);\n            }\n            else {\n                var graphNode = graph.treeInfo.GraphNodes[nodeName];\n                if (graphNode.treeInfo.Added) {\n                    graphNode.treeInfo.Added = false;\n                    this.getConnectedRelatives(graphNode);\n                    this.exploreRelatives(nodeGraph);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.exploreRelatives = function (nodeGraph) {\n        this.exploreRelatives1(nodeGraph, 'Parents');\n        this.exploreRelatives1(nodeGraph, 'Children');\n    };\n    GraphLayoutManager.prototype.exploreRelatives1 = function (nodeGraph, relativesToExplore) {\n        var edges = [];\n        if (relativesToExplore === 'Parents') {\n            edges = nodeGraph.inEdges;\n        }\n        else if (relativesToExplore === 'Children') {\n            edges = nodeGraph.outEdges;\n        }\n        for (var i = 0; i < edges.length; i++) {\n            var edge = this.nameTable[edges[i]];\n            if (this.addNode(edge, 'passed')) {\n                var fromNode = this.nameTable[edge.sourceID];\n                var toNode = this.nameTable[edge.targetID];\n                if (relativesToExplore === 'Parents' && fromNode != null &&\n                    collectionContains(fromNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.sourceID]);\n                }\n                else if (relativesToExplore === 'Children' && toNode != null &&\n                    collectionContains(toNode.id, this.nodes)) {\n                    this.selectConnectedNodes(this.nameTable[edge.targetID]);\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedRelatives = function (graphNode) {\n        this.getConnectedParents(graphNode);\n        this.getConnectedChildren(graphNode);\n    };\n    GraphLayoutManager.prototype.dictionaryContains = function (obj, keyObj) {\n        var keys = Object.keys(obj);\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === keyObj.id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    GraphLayoutManager.prototype.dictionaryLength = function (obj) {\n        var keys = Object.keys(obj);\n        return keys.length;\n    };\n    GraphLayoutManager.prototype.getConnectedChildren = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.outEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.outEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.targetID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNodeChildren = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNodeChildren = this.addGraphNode(node);\n                        gnNodeChildren.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNodeChildren = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.children) {\n                        graphNode.treeInfo.children = [];\n                    }\n                    if (!gnNodeChildren.treeInfo.parents) {\n                        gnNodeChildren.treeInfo.parents = [];\n                    }\n                    this.setNode(gnNodeChildren.treeInfo.parents, graphNode);\n                    if (this.findNode(graphNode.treeInfo.children, gnNodeChildren.id) < 0) {\n                        graphNode.treeInfo.children.push(gnNodeChildren);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getConnectedParents = function (graphNode) {\n        var graph = this.selectedNode;\n        var nodeGraph = graphNode;\n        for (var s = 0; s < nodeGraph.inEdges.length; s++) {\n            var edge = this.nameTable[nodeGraph.inEdges[s]];\n            if (!edge.treeInfo.isCycleEdge) {\n                var node = this.nameTable[edge.sourceID];\n                if (collectionContains(node.id, this.nodes) && node != null && node.visible) {\n                    var gnNode = void 0;\n                    if (!this.dictionaryContains(graph.treeInfo.GraphNodes, node)) {\n                        gnNode = this.addGraphNode(node);\n                        gnNode.treeInfo.Added = true;\n                    }\n                    else {\n                        gnNode = graph.treeInfo.GraphNodes[node.id];\n                    }\n                    if (!graphNode.treeInfo.parents) {\n                        graphNode.treeInfo.parents = [];\n                    }\n                    if (!gnNode.treeInfo.children) {\n                        gnNode.treeInfo.children = [];\n                    }\n                    this.setNode(gnNode.treeInfo.children, graphNode);\n                    if (this.findNode(graphNode.treeInfo.parents, gnNode.id) < 0) {\n                        graphNode.treeInfo.parents.push(gnNode);\n                    }\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.setNode = function (list, node) {\n        var nIndex = this.findNode(list, node.id);\n        if (nIndex >= 0 && nIndex < list.length) {\n            list[nIndex] = node;\n        }\n        else {\n            list.push(node);\n        }\n    };\n    GraphLayoutManager.prototype.findNode = function (list, fullName) {\n        var nIndex = -1;\n        if (list != null && fullName !== '') {\n            for (var i = 0, nLength = list.length; i < nLength; i++) {\n                var gnNode = list[i];\n                if (typeof (gnNode) === 'string' && gnNode === fullName) {\n                    nIndex = i;\n                    break;\n                }\n                else if (gnNode != null && gnNode.id === fullName) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    };\n    GraphLayoutManager.prototype.addGraphNode = function (node) {\n        var graph = this.selectedNode;\n        if (!graph.treeInfo.GraphNodes) {\n            graph.treeInfo.GraphNodes = {};\n        }\n        var gnNode = node;\n        if (graph != null) {\n            graph.treeInfo.GraphNodes[gnNode.id] = gnNode;\n            var nodeHelper = this.mhelperSelectedNode;\n            if (nodeHelper != null && node.id === nodeHelper.id) {\n                this.mhelperSelectedNode = gnNode;\n            }\n        }\n        return gnNode;\n    };\n    GraphLayoutManager.prototype.isConnectedToAnotherNode = function (gnNode) {\n        var bFoundConnectedNode = false;\n        var edges = (gnNode.inEdges).concat(gnNode.outEdges);\n        if (edges.length > 0) {\n            if ((gnNode.inEdges != null) && (gnNode.inEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.inEdges, 'FromNode');\n            }\n            if ((!bFoundConnectedNode) && (gnNode.outEdges != null) && (gnNode.outEdges.length > 0)) {\n                bFoundConnectedNode = this.searchEdgeCollection(gnNode.outEdges, 'ToNode');\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.searchEdgeCollection = function (edgesToSearchThrough, connectionDirection) {\n        var bFoundConnectedNode = false;\n        for (var i = 0; i < edgesToSearchThrough.length - 1; i++) {\n            var edge = this.nameTable[edgesToSearchThrough[i]];\n            if (!this.addNode(edge, 'passed')) {\n                continue;\n            }\n            if (!edge.treeInfo.isCycleEdge && ((connectionDirection === 'FromNode' && this.nameTable[edge.sourceID] != null)\n                || (connectionDirection === 'ToNode' && this.nameTable[edge.targetID] != null))) {\n                bFoundConnectedNode = true;\n                break;\n            }\n        }\n        return bFoundConnectedNode;\n    };\n    GraphLayoutManager.prototype.exploreGraphEdge = function (node) {\n        var nodeLink = node;\n        if (nodeLink != null && !nodeLink.treeInfo.isCycleEdge && this.addNode(node, 'passed')) {\n            this.addNode(node, 'selected');\n            var fromNode = this.nameTable[nodeLink.sourceID];\n            var toNode = this.nameTable[nodeLink.targetID];\n            if (fromNode != null) {\n                this.selectNodes(fromNode);\n            }\n            else if (toNode != null) {\n                this.selectNodes(toNode);\n            }\n            else {\n                this.selectedNode = node;\n            }\n        }\n    };\n    GraphLayoutManager.prototype.addNode = function (nodeToAdd, collectionToAdd) {\n        var bResult = true;\n        var node = nodeToAdd;\n        if (collectionToAdd === 'passed' || !node.visible) {\n            if (!this.dictionaryContains(this.passedNodes, node)) {\n                this.passedNodes[node.id] = node;\n            }\n        }\n        if (!node.visible) {\n            return false;\n        }\n        return bResult;\n    };\n    GraphLayoutManager.prototype.detectCyclesInGraph = function (nodes) {\n        var vertex = [];\n        var currentStack = [];\n        for (var k = 0; k < nodes.length; k++) {\n            if (!(nodes[k].treeInfo.graphType === 'Connector')) {\n                vertex.push(nodes[k]);\n            }\n        }\n        if (vertex.length > 0) {\n            currentStack.push(vertex[0]);\n            this.visitedStack.push(vertex[0]);\n            while (currentStack.length > 0) {\n                var top_1 = currentStack[currentStack.length - 1];\n                var childNodes = this.getUnVisitedChildNodes(top_1);\n                if (childNodes.length > 0) {\n                    var child = childNodes[0];\n                    var currentEdge = childNodes[childNodes.length - 1];\n                    if (collectionContains(child.id, this.visitedStack)) {\n                        currentEdge.treeInfo.isCycleEdge = true;\n                        this.cycleEdgesCollection.push(currentEdge);\n                    }\n                    else {\n                        currentStack.push(child);\n                        this.visitedStack.splice(0, 0, child);\n                    }\n                }\n                else {\n                    currentStack.pop();\n                }\n            }\n        }\n    };\n    GraphLayoutManager.prototype.getUnVisitedChildNodes = function (top) {\n        var childNodes = [];\n        if (top.outEdges.length > 0) {\n            for (var i = 0; i < top.outEdges.length; i++) {\n                var con = this.nameTable[top.outEdges[i]];\n                if (!collectionContains(con.id, this.visitedStack)) {\n                    var toNode = this.nameTable[con.targetID];\n                    if (toNode != null) {\n                        childNodes.push(toNode);\n                    }\n                    childNodes.push(con);\n                    this.visitedStack.splice(0, 0, con);\n                    return childNodes;\n                }\n            }\n            return childNodes;\n        }\n        return childNodes;\n    };\n    return GraphLayoutManager;\n}());\nexport { GraphLayoutManager };\nfunction getGraphBounds(node) {\n    var x = node.offsetX - node.actualSize.width * node.pivot.x;\n    var y = node.offsetY - node.actualSize.height * node.pivot.y;\n    return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n}\nfunction collectionContains(id, coll) {\n    for (var i = 0; i < coll.length; i++) {\n        if (coll[i].id === id) {\n            return true;\n        }\n    }\n    return false;\n}\n","/**\n * Size defines and processes the size(width/height) of the objects\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    /**   @private  */\n    Size.prototype.isEmpty = function () {\n        return this.height === 0 && this.width === 0;\n    };\n    // public static get empty(): Size {\n    //     return new Size();\n    // }\n    // public get isEmpty(): boolean {\n    //     return this.equals(Size.empty);\n    // }\n    // public equals(size2: Size): boolean {\n    //     return this.width === size2.width && this.height === size2.height;\n    // }\n    // public union(size: Size): void {\n    //     size.width = Math.max(size.width, this.width);\n    //     size.height = Math.max(size.height, this.height);\n    // }\n    /**   @private  */\n    Size.prototype.clone = function () {\n        return new Size(this.width, this.height);\n    };\n    return Size;\n}());\nexport { Size };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines and processes coordinates\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    function Point() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**   @private  */\n    Point.equals = function (point1, point2) {\n        if (point1 === point2) {\n            return true;\n        }\n        if (!point1 || !point2) {\n            return false;\n        }\n        return !point1 || !point2 || point1.x === point2.x && point1.y === point2.y;\n    };\n    /**\n     * check whether the points are given\n     */\n    Point.isEmptyPoint = function (point) {\n        if (point.x && point.y) {\n            return false;\n        }\n        return true;\n    };\n    // public add(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x + point2.x, y: point1.y + point2.y };\n    // }\n    // public subtract(point1: PointModel, point2: PointModel): PointModel {\n    //     return { x: point1.x - point2.x, y: point1.y - point2.y };\n    // }\n    // public multiply(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.x, y: point1.y * point2.y\n    //     };\n    // }\n    // public crossProduct(point1: PointModel, point2: PointModel): PointModel {\n    //     return {\n    //         x: point1.x * point2.y, y: point2.x * point1.y\n    //     };\n    // }\n    // public offset(offsetX: number, offsetY: number): void {\n    //     this.x += offsetX;\n    //     this.y += offsetY;\n    // }\n    // public rotate(angle: number): PointModel {\n    //     let c: number = Math.cos(angle);\n    //     let s: number = Math.sin(angle);\n    //     return {\n    //         x: c * this.x - s * this.y, y: s * this.x + c * this.y\n    //     };\n    // }\n    // public distance(point2: PointModel): number {\n    //     return Math.sqrt(Math.pow(this.x - point2.x, 2) + Math.pow(this.y - point2.y, 2));\n    // }\n    /**   @private  */\n    Point.transform = function (point, angle, length) {\n        var pt = { x: 0, y: 0 };\n        pt.x = Math.round((point.x + length * Math.cos(angle * Math.PI / 180)) * 100) / 100;\n        pt.y = Math.round((point.y + length * Math.sin(angle * Math.PI / 180)) * 100) / 100;\n        return pt;\n    };\n    /**   @private  */\n    Point.findLength = function (s, e) {\n        var length = Math.sqrt(Math.pow((s.x - e.x), 2) + Math.pow((s.y - e.y), 2));\n        return length;\n    };\n    /**   @private  */\n    Point.findAngle = function (point1, point2) {\n        var angle = Math.atan2(point2.y - point1.y, point2.x - point1.x);\n        angle = (180 * angle / Math.PI);\n        angle %= 360;\n        if (angle < 0) {\n            angle += 360;\n        }\n        return angle;\n    };\n    /**   @private  */\n    Point.distancePoints = function (pt1, pt2) {\n        return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**   @private  */\n    Point.getLengthFromListOfPoints = function (points) {\n        var length = 0;\n        for (var j = 0; j < points.length - 1; j++) {\n            length += this.distancePoints(points[j], points[j + 1]);\n        }\n        return length;\n    };\n    /**   @private  */\n    Point.adjustPoint = function (source, target, isStart, length) {\n        var pt = isStart ? { x: source.x, y: source.y } : { x: target.x, y: target.y };\n        var angle;\n        if (source.x === target.x) {\n            if (source.y < target.y && isStart || source.y > target.y && !isStart) {\n                pt.y += length;\n            }\n            else {\n                pt.y -= length;\n            }\n        }\n        else if (source.y === target.y) {\n            if (source.x < target.x && isStart || source.x > target.x && !isStart) {\n                pt.x += length;\n            }\n            else {\n                pt.x -= length;\n            }\n        }\n        else {\n            if (isStart) {\n                angle = this.findAngle(source, target);\n                pt = this.transform(source, angle, length);\n            }\n            else {\n                angle = this.findAngle(target, source);\n                pt = this.transform(target, angle, length);\n            }\n        }\n        return pt;\n    };\n    /**   @private  */\n    Point.direction = function (pt1, pt2) {\n        if (Math.abs(pt2.x - pt1.x) > Math.abs(pt2.y - pt1.y)) {\n            return pt1.x < pt2.x ? 'Right' : 'Left';\n        }\n        else {\n            return pt1.y < pt2.y ? 'Bottom' : 'Top';\n        }\n    };\n    //Move these methods to util\n    //public CompareTo(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnYAxis(point: PointModel): number {\n    //    let result: number = this.X.CompareTo(point.X);\n    //    return result != 0 ? result : this.Y.CompareTo(point.Y);\n    //}\n    //public CompareOnXAxis(point: PointModel): number {\n    //    let result: number = this.Y.CompareTo(point.Y);\n    //    return result != 0 ? result : this.X.CompareTo(point.X);\n    //}\n    // public round(): void {\n    //     this.x = Math.round(this.x);\n    //     this.y = Math.round(this.y);\n    // }\n    /**\n     * @private\n     * Returns the name of class Point\n     */\n    Point.prototype.getClassName = function () {\n        return 'Point';\n    };\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Point.prototype, \"y\", void 0);\n    return Point;\n}(ChildProperty));\nexport { Point };\n","/**\n * Rect defines and processes rectangular regions\n */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        /**\n         * Sets the x-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.x = Number.MAX_VALUE;\n        /**\n         * Sets the y-coordinate of the starting point of a rectangular region\n         * @default 0\n         */\n        this.y = Number.MAX_VALUE;\n        /**\n         * Sets the width of a rectangular region\n         * @default 0\n         */\n        this.width = 0;\n        /**\n         * Sets the height of a rectangular region\n         * @default 0\n         */\n        this.height = 0;\n        if (x === undefined || y === undefined) {\n            x = y = Number.MAX_VALUE;\n            width = height = 0;\n        }\n        else {\n            if (width === undefined) {\n                width = 0;\n            }\n            if (height === undefined) {\n                height = 0;\n            }\n        }\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    Object.defineProperty(Rect.prototype, \"left\", {\n        /**   @private  */\n        get: function () {\n            return this.x;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"right\", {\n        /**   @private  */\n        get: function () {\n            return this.x + this.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"top\", {\n        /**   @private  */\n        get: function () {\n            return this.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottom\", {\n        /**   @private  */\n        get: function () {\n            return this.y + this.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleLeft\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.left, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"middleRight\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.right, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"topCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.top };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"bottomCenter\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.bottom };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rect.prototype, \"center\", {\n        /**   @private  */\n        get: function () {\n            return { x: this.x + this.width / 2, y: this.y + this.height / 2 };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**   @private  */\n    Rect.prototype.equals = function (rect1, rect2) {\n        return rect1.x === rect2.x && rect1.y === rect2.y && rect1.width === rect2.width && rect1.height === rect2.height;\n    };\n    /**   @private  */\n    Rect.prototype.uniteRect = function (rect) {\n        var right = Math.max(Number.NaN === this.right || this.x === Number.MAX_VALUE ? rect.right : this.right, rect.right);\n        var bottom = Math.max(Number.NaN === this.bottom || this.y === Number.MAX_VALUE ? rect.bottom : this.bottom, rect.bottom);\n        this.x = Math.min(this.left, rect.left);\n        this.y = Math.min(this.top, rect.top);\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n        return this;\n    };\n    /**   @private  */\n    Rect.prototype.unitePoint = function (point) {\n        if (this.x === Number.MAX_VALUE) {\n            this.x = point.x;\n            this.y = point.y;\n            return;\n        }\n        var x = Math.min(this.left, point.x);\n        var y = Math.min(this.top, point.y);\n        var right = Math.max(this.right, point.x);\n        var bottom = Math.max(this.bottom, point.y);\n        this.x = x;\n        this.y = y;\n        this.width = right - this.x;\n        this.height = bottom - this.y;\n    };\n    // public intersection(rect: Rect): Rect {\n    //     if (this.intersects(rect)) {\n    //         let left: number = Math.max(this.left, rect.left);\n    //         let top: number = Math.max(this.top, rect.top);\n    //         let right: number = Math.min(this.right, rect.right);\n    //         let bottom: number = Math.min(this.bottom, rect.bottom);\n    //         return new Rect(left, top, right - left, bottom - top);\n    //     }\n    //     return Rect.empty;\n    // }\n    /**   @private  */\n    Rect.prototype.Inflate = function (padding) {\n        this.x -= padding;\n        this.y -= padding;\n        this.width += padding * 2;\n        this.height += padding * 2;\n        return this;\n    };\n    //public Inflate(size: Size): Rect {\n    //    this.x -= size.Width;\n    //    this.y -= size.Height;\n    //    this.width += size.Width * 2;\n    //    this.height += size.Height * 2;\n    //    return this;\n    //}\n    // public inflate(width: number, height: number): void {\n    //     this.x -= width;\n    //     this.y -= height;\n    //     this.width += width * 2;\n    //     this.height += height * 2;\n    // }\n    /**   @private  */\n    Rect.prototype.intersects = function (rect) {\n        if (this.right < rect.left || this.left > rect.right || this.top > rect.bottom || this.bottom < rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /**   @private  */\n    Rect.prototype.containsRect = function (rect) {\n        return this.left <= rect.left && this.right >= rect.right && this.top <= rect.top && this.bottom >= rect.bottom;\n    };\n    /**   @private  */\n    Rect.prototype.containsPoint = function (point, padding) {\n        if (padding === void 0) { padding = 0; }\n        return this.left - padding <= point.x && this.right + padding >= point.x\n            && this.top - padding <= point.y && this.bottom + padding >= point.y;\n    };\n    // public toPoints(): PointModel[] {\n    //     let points: PointModel[] = [];\n    //     points.push(this.topLeft);\n    //     points.push(this.topRight);\n    //     points.push(this.bottomLeft);\n    //     points.push(this.bottomRight);\n    //     return points;\n    // }\n    /**   @private  */\n    Rect.toBounds = function (points) {\n        var rect = new Rect();\n        for (var _i = 0, points_1 = points; _i < points_1.length; _i++) {\n            var pt = points_1[_i];\n            rect.unitePoint(pt);\n        }\n        return rect;\n    };\n    /**   @private  */\n    Rect.empty = new Rect(Number.MAX_VALUE, Number.MIN_VALUE, 0, 0);\n    return Rect;\n}());\nexport { Rect };\n","/**\n * enum module defines the public enumerations\n */\n/**\n * Constraints to define when a port has to be visible\n * Visible - Always shows the port\n * Hidden - Always hides the port\n * Hover - Shows the port when the mouse hovers over a node\n * Connect - Shows the port when a connection end point is dragged over a node\n * Default - By default the ports will be visible when a node is hovered and being tried to connect\n * @aspNumberEnum\n */\nexport var PortVisibility;\n(function (PortVisibility) {\n    /** Always shows the port */\n    PortVisibility[PortVisibility[\"Visible\"] = 1] = \"Visible\";\n    /** Always hides the port */\n    PortVisibility[PortVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    /** Shows the port when the mouse hovers over a node */\n    PortVisibility[PortVisibility[\"Hover\"] = 4] = \"Hover\";\n    /** Shows the port when a connection end point is dragged over a node */\n    PortVisibility[PortVisibility[\"Connect\"] = 8] = \"Connect\";\n})(PortVisibility || (PortVisibility = {}));\n/**\n * Defines the constraints to Enables / Disables some features of Snapping.\n * None - Snapping does not happen\n * ShowHorizontalLines - Displays only the horizontal gridlines in diagram.\n * ShowVerticalLines - Displays only the Vertical gridlines in diagram.\n * ShowLines - Display both Horizontal and Vertical gridlines.\n * SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToVerticalLines - Enables the object to snap only with horizontal gridlines.\n * SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines.\n * snapToObject - Enables the object to snap with the other objects in the diagram.\n * @IgnoreSingular\n * @aspNumberEnum\n */\nexport var SnapConstraints;\n(function (SnapConstraints) {\n    /** None - Snapping does not happen */\n    SnapConstraints[SnapConstraints[\"None\"] = 0] = \"None\";\n    /** ShowHorizontalLines - Displays only the horizontal gridlines in diagram. */\n    SnapConstraints[SnapConstraints[\"ShowHorizontalLines\"] = 1] = \"ShowHorizontalLines\";\n    /** ShowVerticalLines - Displays only the Vertical gridlines in diagram  */\n    SnapConstraints[SnapConstraints[\"ShowVerticalLines\"] = 2] = \"ShowVerticalLines\";\n    /** ShowLines - Display both Horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"ShowLines\"] = 3] = \"ShowLines\";\n    /** SnapToHorizontalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToHorizontalLines\"] = 4] = \"SnapToHorizontalLines\";\n    /** SnapToVerticalLines - Enables the object to snap only with horizontal gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToVerticalLines\"] = 8] = \"SnapToVerticalLines\";\n    /** SnapToLines - Enables the object to snap with both horizontal and Vertical gridlines */\n    SnapConstraints[SnapConstraints[\"SnapToLines\"] = 12] = \"SnapToLines\";\n    /** SnapToObject - Enables the object to snap with the other objects in the diagram. */\n    SnapConstraints[SnapConstraints[\"SnapToObject\"] = 16] = \"SnapToObject\";\n    /** Shows gridlines and enables snapping */\n    SnapConstraints[SnapConstraints[\"All\"] = 31] = \"All\";\n})(SnapConstraints || (SnapConstraints = {}));\n/**\n * Defines the visibility of the selector handles\n * None - Hides all the selector elements\n * ConnectorSourceThumb - Shows/hides the source thumb of the connector\n * ConnectorTargetThumb - Shows/hides the target thumb of the connector\n * ResizeSouthEast - Shows/hides the bottom right resize handle of the selector\n * ResizeSouthWest - Shows/hides the bottom left resize handle of the selector\n * ResizeNorthEast - Shows/hides the top right resize handle of the selector\n * ResizeNorthWest - Shows/hides the top left resize handle of the selector\n * ResizeEast - Shows/hides the middle right resize handle of the selector\n * ResizeWest - Shows/hides the middle left resize handle of the selector\n * ResizeSouth - Shows/hides the bottom center resize handle of the selector\n * ResizeNorth - Shows/hides the top center resize handle of the selector\n * Rotate - Shows/hides the rotate handle of the selector\n * UserHandles - Shows/hides the user handles of the selector\n * Resize - Shows/hides all resize handles of the selector\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var SelectorConstraints;\n(function (SelectorConstraints) {\n    /** Hides all the selector elements */\n    SelectorConstraints[SelectorConstraints[\"None\"] = 1] = \"None\";\n    /** Shows/hides the source thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorSourceThumb\"] = 2] = \"ConnectorSourceThumb\";\n    /** Shows/hides the target thumb of the connector */\n    SelectorConstraints[SelectorConstraints[\"ConnectorTargetThumb\"] = 4] = \"ConnectorTargetThumb\";\n    /** Shows/hides the bottom right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthEast\"] = 8] = \"ResizeSouthEast\";\n    /** Shows/hides the bottom left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouthWest\"] = 16] = \"ResizeSouthWest\";\n    /** Shows/hides the top right resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthEast\"] = 32] = \"ResizeNorthEast\";\n    /** Shows/hides the top left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorthWest\"] = 64] = \"ResizeNorthWest\";\n    /** Shows/hides the middle right resize handle of the selector  */\n    SelectorConstraints[SelectorConstraints[\"ResizeEast\"] = 128] = \"ResizeEast\";\n    /** Shows/hides the middle left resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeWest\"] = 256] = \"ResizeWest\";\n    /** Shows/hides the bottom center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeSouth\"] = 512] = \"ResizeSouth\";\n    /** Shows/hides the top center resize handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeNorth\"] = 1024] = \"ResizeNorth\";\n    /**  Shows/hides the rotate handle of the selector */\n    SelectorConstraints[SelectorConstraints[\"Rotate\"] = 2048] = \"Rotate\";\n    /** Shows/hides the user handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"UserHandle\"] = 4096] = \"UserHandle\";\n    /** Shows/hides the default tooltip of nodes and connectors */\n    SelectorConstraints[SelectorConstraints[\"ToolTip\"] = 8192] = \"ToolTip\";\n    /** Shows/hides all resize handles of the selector */\n    SelectorConstraints[SelectorConstraints[\"ResizeAll\"] = 2046] = \"ResizeAll\";\n    /** Shows all handles of the selector  */\n    SelectorConstraints[SelectorConstraints[\"All\"] = 16382] = \"All\";\n})(SelectorConstraints || (SelectorConstraints = {}));\n/**\n * Defines the constraints to enable/disable certain features of connector.\n * * None - Interaction of the connectors cannot be done.\n * * Select - Selects the connector.\n * * Delete - Delete the connector.\n * * Drag - Drag the connector.\n * * DragSourceEnd - Drag the source end of the connector.\n * * DragTargetEnd - Drag the target end of the connector.\n * * DragSegmentThump - Drag the segment thumb of the connector.\n * * AllowDrop - Allow to drop a node.\n * * Bridging - Creates bridge  on intersection of two connectors.\n * * BridgeObstacle -\n * * InheritBridging - Creates bridge  on intersection of two connectors.\n * * PointerEvents - Sets the pointer events.\n * * Tooltip - Displays a tooltip for the connectors.\n * * InheritToolTip - Displays a tooltip for the connectors.\n * * Interaction - Features of the connector used for interaction.\n * * ReadOnly - Enables ReadOnly\n * * Default - Default features of the connector.\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var ConnectorConstraints;\n(function (ConnectorConstraints) {\n    /** Disable all connector Constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connector to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables connector to be Deleted. */\n    ConnectorConstraints[ConnectorConstraints[\"Delete\"] = 4] = \"Delete\";\n    /** Enables connector to be Dragged. */\n    ConnectorConstraints[ConnectorConstraints[\"Drag\"] = 8] = \"Drag\";\n    /** Enables connectors source end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSourceEnd\"] = 16] = \"DragSourceEnd\";\n    /** Enables connectors target end to be selected. */\n    ConnectorConstraints[ConnectorConstraints[\"DragTargetEnd\"] = 32] = \"DragTargetEnd\";\n    /** Enables control point and end point of every segment in a connector for editing. */\n    ConnectorConstraints[ConnectorConstraints[\"DragSegmentThumb\"] = 64] = \"DragSegmentThumb\";\n    /** Enables AllowDrop constraints to the  connector. */\n    ConnectorConstraints[ConnectorConstraints[\"AllowDrop\"] = 128] = \"AllowDrop\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"Bridging\"] = 256] = \"Bridging\";\n    /** Enables or Disables Bridge Obstacles with overlapping of connectors. */\n    ConnectorConstraints[ConnectorConstraints[\"BridgeObstacle\"] = 512] = \"BridgeObstacle\";\n    /** Enables bridging to the connector. */\n    ConnectorConstraints[ConnectorConstraints[\"InheritBridging\"] = 1024] = \"InheritBridging\";\n    /** Used to set the pointer events. */\n    ConnectorConstraints[ConnectorConstraints[\"PointerEvents\"] = 2048] = \"PointerEvents\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"Tooltip\"] = 4096] = \"Tooltip\";\n    /** Enables or disables tool tip for the connectors */\n    ConnectorConstraints[ConnectorConstraints[\"InheritTooltip\"] = 8192] = \"InheritTooltip\";\n    /** Enables Interaction. */\n    ConnectorConstraints[ConnectorConstraints[\"Interaction\"] = 4218] = \"Interaction\";\n    /** Enables ReadOnly */\n    ConnectorConstraints[ConnectorConstraints[\"ReadOnly\"] = 16384] = \"ReadOnly\";\n    /** Enables all constraints. */\n    ConnectorConstraints[ConnectorConstraints[\"Default\"] = 11838] = \"Default\";\n})(ConnectorConstraints || (ConnectorConstraints = {}));\n/**\n * Enables/Disables the annotation constraints\n * ReadOnly - Enables/Disables the ReadOnly Constraints\n * InheritReadOnly - Enables/Disables the InheritReadOnly Constraints\n * Select -Enables/Disable select support for the annotation\n * Drag - Enables/Disable drag support for the annotation\n * Resize - Enables/Disable resize support for the annotation\n * Rotate - Enables/Disable rotate support for the annotation\n * Interaction - Enables annotation to inherit the interaction option\n * None - Disable all annotation constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var AnnotationConstraints;\n(function (AnnotationConstraints) {\n    /** Enables/Disables the ReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"ReadOnly\"] = 2] = \"ReadOnly\";\n    /** Enables/Disables the InheritReadOnly Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"InheritReadOnly\"] = 4] = \"InheritReadOnly\";\n    /** Enables/Disable select support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Select\"] = 8] = \"Select\";\n    /** Enables/Disable drag support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Drag\"] = 16] = \"Drag\";\n    /** Enables/Disable resize support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Resize\"] = 32] = \"Resize\";\n    /** Enables/Disable rotate support for the annotation */\n    AnnotationConstraints[AnnotationConstraints[\"Rotate\"] = 64] = \"Rotate\";\n    /** Enables annotation to inherit the interaction option */\n    AnnotationConstraints[AnnotationConstraints[\"Interaction\"] = 120] = \"Interaction\";\n    /** Disable all annotation Constraints */\n    AnnotationConstraints[AnnotationConstraints[\"None\"] = 0] = \"None\";\n})(AnnotationConstraints || (AnnotationConstraints = {}));\n/**\n * Enables/Disables certain features of node\n * None - Disable all node Constraints\n * Select - Enables node to be selected\n * Drag - Enables node to be Dragged\n * Rotate - Enables node to be Rotate\n * Shadow - Enables node to display shadow\n * PointerEvents - Enables node to provide pointer  option\n * Delete - Enables node to delete\n * InConnect - Enables node to provide in connect option\n * OutConnect - Enables node to provide out connect option\n * Individual - Enables node to provide individual resize option\n * Expandable - Enables node to provide Expandable option\n * AllowDrop - Enables node to provide allow to drop option\n * Inherit - Enables node to inherit the interaction option\n * ResizeNorthEast - Enable ResizeNorthEast of the node\n * ResizeEast - Enable ResizeEast of the node\n * ResizeSouthEast - Enable ResizeSouthEast of the node\n * ResizeSouth - Enable ResizeSouthWest of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeSouth - Enable ResizeSouth of the node\n * ResizeSouthWest - Enable ResizeSouthWest of the node\n * ResizeWest - Enable ResizeWest of the node\n * ResizeNorth - Enable ResizeNorth of the node\n * Resize - Enables the Aspect ratio fo the node\n * AspectRatio - Enables the Aspect ratio fo the node\n * Tooltip - Enables or disables tool tip for the Nodes\n * InheritTooltip - Enables or disables tool tip for the Nodes\n * ReadOnly - Enables the  ReadOnly support for Annotation\n * Default - Enables all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var NodeConstraints;\n(function (NodeConstraints) {\n    /** Disable all node Constraints. */\n    NodeConstraints[NodeConstraints[\"None\"] = 0] = \"None\";\n    /** Enables node to be selected. */\n    NodeConstraints[NodeConstraints[\"Select\"] = 2] = \"Select\";\n    /** Enables node to be Dragged. */\n    NodeConstraints[NodeConstraints[\"Drag\"] = 4] = \"Drag\";\n    /** Enables node to be Rotate. */\n    NodeConstraints[NodeConstraints[\"Rotate\"] = 8] = \"Rotate\";\n    /** Enables node to display shadow. */\n    NodeConstraints[NodeConstraints[\"Shadow\"] = 16] = \"Shadow\";\n    /** Enables node to provide pointer  option */\n    NodeConstraints[NodeConstraints[\"PointerEvents\"] = 32] = \"PointerEvents\";\n    /** Enables node to delete */\n    NodeConstraints[NodeConstraints[\"Delete\"] = 64] = \"Delete\";\n    /** Enables node to provide in connect option */\n    NodeConstraints[NodeConstraints[\"InConnect\"] = 128] = \"InConnect\";\n    /** Enables node to provide out connect option */\n    NodeConstraints[NodeConstraints[\"OutConnect\"] = 256] = \"OutConnect\";\n    /** Enables node to provide individual resize option */\n    NodeConstraints[NodeConstraints[\"Individual\"] = 512] = \"Individual\";\n    /** Enables node to provide Expandable option */\n    NodeConstraints[NodeConstraints[\"Expandable\"] = 1024] = \"Expandable\";\n    /** Enables node to provide allow to drop option */\n    NodeConstraints[NodeConstraints[\"AllowDrop\"] = 2048] = \"AllowDrop\";\n    /** Enables node to inherit the interaction option */\n    NodeConstraints[NodeConstraints[\"Inherit\"] = 78] = \"Inherit\";\n    /** Enable ResizeNorthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthEast\"] = 4096] = \"ResizeNorthEast\";\n    /** Enable ResizeEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeEast\"] = 8192] = \"ResizeEast\";\n    /** Enable ResizeSouthEast of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthEast\"] = 16384] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouth\"] = 32768] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeSouthWest\"] = 65536] = \"ResizeSouthWest\";\n    /** Enable ResizeWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeWest\"] = 131072] = \"ResizeWest\";\n    /** Enable ResizeNorthWest of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorthWest\"] = 262144] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth of the node  */\n    NodeConstraints[NodeConstraints[\"ResizeNorth\"] = 524288] = \"ResizeNorth\";\n    /** Enable Resize of the node  */\n    NodeConstraints[NodeConstraints[\"Resize\"] = 1044480] = \"Resize\";\n    /** Enables the Aspect ratio fo the node */\n    NodeConstraints[NodeConstraints[\"AspectRatio\"] = 1048576] = \"AspectRatio\";\n    /** hide all resize support for node */\n    NodeConstraints[NodeConstraints[\"HideThumbs\"] = 16777216] = \"HideThumbs\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"Tooltip\"] = 2097152] = \"Tooltip\";\n    /** Enables or disables tool tip for the Nodes */\n    NodeConstraints[NodeConstraints[\"InheritTooltip\"] = 4194304] = \"InheritTooltip\";\n    /** Enables the  ReadOnly support for Annotation */\n    NodeConstraints[NodeConstraints[\"ReadOnly\"] = 8388608] = \"ReadOnly\";\n    /** Enables all constraints */\n    NodeConstraints[NodeConstraints[\"Default\"] = 5240814] = \"Default\";\n})(NodeConstraints || (NodeConstraints = {}));\n/** Enables/Disables The element actions\n * None - Diables all element actions are none\n * ElementIsPort - Enable element action is port\n * ElementIsGroup - Enable element action as Group\n * @private\n */\nexport var ElementAction;\n(function (ElementAction) {\n    /** Disables all element actions are none  */\n    ElementAction[ElementAction[\"None\"] = 0] = \"None\";\n    /** Enable the element action is Port  */\n    ElementAction[ElementAction[\"ElementIsPort\"] = 2] = \"ElementIsPort\";\n    /** Enable the element action as Group  */\n    ElementAction[ElementAction[\"ElementIsGroup\"] = 4] = \"ElementIsGroup\";\n})(ElementAction || (ElementAction = {}));\n/** Enables/Disables the handles of the selector\n * Rotate - Enable Rotate Thumb\n * ConnectorSource - Enable Connector source point\n * ConnectorTarget - Enable Connector target point\n * ResizeNorthEast - Enable ResizeNorthEast Resize\n * ResizeEast - Enable ResizeEast Resize\n * ResizeSouthEast - Enable ResizeSouthEast Resize\n * ResizeSouth - Enable ResizeSouth Resize\n * ResizeSouthWest - Enable ResizeSouthWest Resize\n * ResizeWest - Enable ResizeWest Resize\n * ResizeNorthWest - Enable ResizeNorthWest Resize\n * ResizeNorth - Enable ResizeNorth Resize\n * Default - Enables all constraints\n * @private\n */\nexport var ThumbsConstraints;\n(function (ThumbsConstraints) {\n    /** Enable Rotate Thumb  */\n    ThumbsConstraints[ThumbsConstraints[\"Rotate\"] = 2] = \"Rotate\";\n    /** Enable Connector source point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorSource\"] = 4] = \"ConnectorSource\";\n    /** Enable Connector target point  */\n    ThumbsConstraints[ThumbsConstraints[\"ConnectorTarget\"] = 8] = \"ConnectorTarget\";\n    /** Enable ResizeNorthEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthEast\"] = 16] = \"ResizeNorthEast\";\n    /** Enable ResizeEast Resize  */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeEast\"] = 32] = \"ResizeEast\";\n    /** Enable ResizeSouthEast Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthEast\"] = 64] = \"ResizeSouthEast\";\n    /** Enable ResizeSouth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouth\"] = 128] = \"ResizeSouth\";\n    /** Enable ResizeSouthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeSouthWest\"] = 256] = \"ResizeSouthWest\";\n    /** Enable ResizeWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeWest\"] = 512] = \"ResizeWest\";\n    /** Enable ResizeNorthWest Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorthWest\"] = 1024] = \"ResizeNorthWest\";\n    /** Enable ResizeNorth Resize */\n    ThumbsConstraints[ThumbsConstraints[\"ResizeNorth\"] = 2048] = \"ResizeNorth\";\n    /** Enables all constraints */\n    ThumbsConstraints[ThumbsConstraints[\"Default\"] = 4094] = \"Default\";\n})(ThumbsConstraints || (ThumbsConstraints = {}));\n/**\n * Enables/Disables certain features of diagram\n * None - Disable DiagramConstraints constraints\n * Bridging - Enables/Disable Bridging support for connector\n * UndoRedo - Enables/Disable the Undo/Redo support\n * Tooltip - Enables/Disable Tooltip support\n * UserInteraction - Enables/Disable UserInteraction support for the diagram\n * ApiUpdate - Enables/Disable ApiUpdate support for the diagram\n * PageEditable - Enables/Disable PageEditable support for the diagram\n * Zoom - Enables/Disable Zoom support for the diagram\n * PanX - Enables/Disable PanX support for the diagram\n * PanY - Enables/Disable PanY support for the diagram\n * Pan - Enables/Disable Pan support the diagram\n * ZoomTextEdit - Enables/Disables zooming the text box while editing the text\n * Virtualization - Enables/Disable Virtualization support the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramConstraints;\n(function (DiagramConstraints) {\n    /** Disable DiagramConstraints constraints */\n    DiagramConstraints[DiagramConstraints[\"None\"] = 1] = \"None\";\n    /** Enables/Disable Bridging support for connector */\n    DiagramConstraints[DiagramConstraints[\"Bridging\"] = 2] = \"Bridging\";\n    /** Enables/Disable the Undo/Redo support */\n    DiagramConstraints[DiagramConstraints[\"UndoRedo\"] = 4] = \"UndoRedo\";\n    /** Enables/Disable Tooltip support */\n    DiagramConstraints[DiagramConstraints[\"Tooltip\"] = 8] = \"Tooltip\";\n    /** Enables/Disable UserInteraction support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"UserInteraction\"] = 16] = \"UserInteraction\";\n    /** Enables/Disable ApiUpdate support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"ApiUpdate\"] = 32] = \"ApiUpdate\";\n    /** Enables/Disable PageEditable support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PageEditable\"] = 48] = \"PageEditable\";\n    /** Enables/Disable Zoom support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"Zoom\"] = 64] = \"Zoom\";\n    /** Enables/Disable PanX support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanX\"] = 128] = \"PanX\";\n    /** Enables/Disable PanY support for the diagram */\n    DiagramConstraints[DiagramConstraints[\"PanY\"] = 256] = \"PanY\";\n    /** Enables/Disable Pan support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Pan\"] = 384] = \"Pan\";\n    /** Enables/Disables zooming the text box while editing the text */\n    DiagramConstraints[DiagramConstraints[\"ZoomTextEdit\"] = 512] = \"ZoomTextEdit\";\n    /** Enables/Disable Virtualization support the diagram */\n    DiagramConstraints[DiagramConstraints[\"Virtualization\"] = 1024] = \"Virtualization\";\n    /** Enables/Disable all constraints */\n    DiagramConstraints[DiagramConstraints[\"Default\"] = 500] = \"Default\";\n})(DiagramConstraints || (DiagramConstraints = {}));\n/**\n * Activates the diagram tools\n * None - Enables/Disable single select support for the diagram\n * SingleSelect - Enables/Disable single select support for the diagram\n * MultipleSelect - Enables/Disable MultipleSelect select support for the diagram\n * ZoomPan - Enables/Disable ZoomPan support for the diagram\n * DrawOnce - Enables/Disable continuousDraw support for the diagram\n * ContinuousDraw - Enables/Disable continuousDraw support for the diagram\n * Default - Enables/Disable all constraints\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var DiagramTools;\n(function (DiagramTools) {\n    /** Disable all constraints */\n    DiagramTools[DiagramTools[\"None\"] = 0] = \"None\";\n    /** Enables/Disable single select support for the diagram */\n    DiagramTools[DiagramTools[\"SingleSelect\"] = 1] = \"SingleSelect\";\n    /** Enables/Disable MultipleSelect select support for the diagram */\n    DiagramTools[DiagramTools[\"MultipleSelect\"] = 2] = \"MultipleSelect\";\n    /** Enables/Disable ZoomPan support for the diagram */\n    DiagramTools[DiagramTools[\"ZoomPan\"] = 4] = \"ZoomPan\";\n    /** Enables/Disable DrawOnce support for the diagram */\n    DiagramTools[DiagramTools[\"DrawOnce\"] = 8] = \"DrawOnce\";\n    /** Enables/Disable continuousDraw support for the diagram */\n    DiagramTools[DiagramTools[\"ContinuousDraw\"] = 16] = \"ContinuousDraw\";\n    /** Enables/Disable all constraints */\n    DiagramTools[DiagramTools[\"Default\"] = 3] = \"Default\";\n})(DiagramTools || (DiagramTools = {}));\n/**\n * Defines the container/canvas transform\n * Self - Sets the transform type as Self\n * Parent - Sets the transform type as Parent\n */\nexport var Transform;\n(function (Transform) {\n    /** Self - Sets the transform type as Self */\n    Transform[Transform[\"Self\"] = 1] = \"Self\";\n    /** Parent - Sets the transform type as Parent */\n    Transform[Transform[\"Parent\"] = 2] = \"Parent\";\n})(Transform || (Transform = {}));\n/**\n * Defines the rendering mode for diagram\n * Canvas - Sets the rendering mode type as Canvas\n * Svg - Sets the rendering mode type as Svg\n */\nexport var RenderMode;\n(function (RenderMode) {\n    /** Canvas - Sets the rendering mode type as Canvas */\n    RenderMode[RenderMode[\"Canvas\"] = 0] = \"Canvas\";\n    /** Svg - Sets the rendering mode type as Svg */\n    RenderMode[RenderMode[\"Svg\"] = 1] = \"Svg\";\n})(RenderMode || (RenderMode = {}));\n/**\n * Sets a combination of key modifiers, on recognition of which the command will be executed.They are\n * * None - no modifiers are pressed\n * * Control - ctrl key\n * * Meta - meta key im mac\n * * Alt - alt key\n * * Shift - shift key\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var KeyModifiers;\n(function (KeyModifiers) {\n    /** No modifiers are pressed */\n    KeyModifiers[KeyModifiers[\"None\"] = 0] = \"None\";\n    /** The CTRL key */\n    KeyModifiers[KeyModifiers[\"Control\"] = 1] = \"Control\";\n    /** The Meta key pressed in Mac */\n    KeyModifiers[KeyModifiers[\"Meta\"] = 1] = \"Meta\";\n    /** The ALT key */\n    KeyModifiers[KeyModifiers[\"Alt\"] = 2] = \"Alt\";\n    /** The Shift key */\n    KeyModifiers[KeyModifiers[\"Shift\"] = 4] = \"Shift\";\n})(KeyModifiers || (KeyModifiers = {}));\n/**\n * Sets the key value, on recognition of which the command will be executed. They are\n * * none - no key\n * * Number0 = The 0 key\n * * Number1 = The 1 key\n * * Number2 = The 2 key\n * * Number3 = The 3 key\n * * Number4 = The 4 key\n * * Number5 = The 5 key\n * * Number6 = The 6 key\n * * Number7 = The 7 key\n * * Number8 = The 8 key\n * * Number9 = The 9 key\n * * Number0 = The 0 key\n * * BackSpace = The BackSpace key\n * * F1 = The f1 key\n * * F2 = The f2 key\n * * F3 = The f3 key\n * * F4 = The f4 key\n * * F5 = The f5 key\n * * F6 = The f6 key\n * * F7 = The f7 key\n * * F8 = The f8 key\n * * F9 = The f9 key\n * * F10 = The f10 key\n * * F11 = The f11 key\n * * F12 = The f12 key\n * * A = The a key\n * * B = The b key\n * * C = The c key\n * * D = The d key\n * * E = The e key\n * * F = The f key\n * * G = The g key\n * * H = The h key\n * * I = The i key\n * * J = The j key\n * * K = The k key\n * * L = The l key\n * * M = The m key\n * * N = The n key\n * * O = The o key\n * * P = The p key\n * * Q = The q key\n * * R = The r key\n * * S = The s key\n * * T = The t key\n * * U = The u key\n * * V = The v key\n * * W = The w key\n * * X = The x key\n * * Y = The y key\n * * Z = The z key\n * * Left = The left key\n * * Right = The right key\n * * Top = The top key\n * * Bottom = The bottom key\n * * Escape = The Escape key\n * * Tab = The tab key\n * * Delete = The delete key\n * * Enter = The enter key\n * * The Space key\n * * The page up key\n * * The page down key\n * * The end key\n * * The home key\n * * The Minus\n * * The Plus\n * * The Star\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var Keys;\n(function (Keys) {\n    /** No key pressed */\n    Keys[Keys[\"None\"] = null] = \"None\";\n    /** The 0 key */\n    Keys[Keys[\"Number0\"] = 0] = \"Number0\";\n    /** The 1 key */\n    Keys[Keys[\"Number1\"] = 1] = \"Number1\";\n    /** The 2 key */\n    Keys[Keys[\"Number2\"] = 2] = \"Number2\";\n    /** The 3 key */\n    Keys[Keys[\"Number3\"] = 3] = \"Number3\";\n    /** The 4 key */\n    Keys[Keys[\"Number4\"] = 4] = \"Number4\";\n    /** The 5 key */\n    Keys[Keys[\"Number5\"] = 5] = \"Number5\";\n    /** The 6 key */\n    Keys[Keys[\"Number6\"] = 6] = \"Number6\";\n    /** The 7 key */\n    Keys[Keys[\"Number7\"] = 7] = \"Number7\";\n    /** The 8 key */\n    Keys[Keys[\"Number8\"] = 8] = \"Number8\";\n    /** The 9 key */\n    Keys[Keys[\"Number9\"] = 9] = \"Number9\";\n    /** The A key */\n    Keys[Keys[\"A\"] = 65] = \"A\";\n    /** The B key */\n    Keys[Keys[\"B\"] = 66] = \"B\";\n    /** The C key */\n    Keys[Keys[\"C\"] = 67] = \"C\";\n    /** The D key */\n    Keys[Keys[\"D\"] = 68] = \"D\";\n    /** The E key */\n    Keys[Keys[\"E\"] = 69] = \"E\";\n    /** The F key */\n    Keys[Keys[\"F\"] = 70] = \"F\";\n    /** The G key */\n    Keys[Keys[\"G\"] = 71] = \"G\";\n    /** The H key */\n    Keys[Keys[\"H\"] = 72] = \"H\";\n    /** The I key */\n    Keys[Keys[\"I\"] = 73] = \"I\";\n    /** The J key */\n    Keys[Keys[\"J\"] = 74] = \"J\";\n    /** The K key */\n    Keys[Keys[\"K\"] = 75] = \"K\";\n    /** The L key */\n    Keys[Keys[\"L\"] = 76] = \"L\";\n    /** The M key */\n    Keys[Keys[\"M\"] = 77] = \"M\";\n    /** The N key */\n    Keys[Keys[\"N\"] = 78] = \"N\";\n    /** The O key */\n    Keys[Keys[\"O\"] = 79] = \"O\";\n    /** The P key */\n    Keys[Keys[\"P\"] = 80] = \"P\";\n    /** The Q key */\n    Keys[Keys[\"Q\"] = 81] = \"Q\";\n    /** The R key */\n    Keys[Keys[\"R\"] = 82] = \"R\";\n    /** The S key */\n    Keys[Keys[\"S\"] = 83] = \"S\";\n    /** The T key */\n    Keys[Keys[\"T\"] = 84] = \"T\";\n    /** The U key */\n    Keys[Keys[\"U\"] = 85] = \"U\";\n    /** The V key */\n    Keys[Keys[\"V\"] = 86] = \"V\";\n    /** The W key */\n    Keys[Keys[\"W\"] = 87] = \"W\";\n    /** The X key */\n    Keys[Keys[\"X\"] = 88] = \"X\";\n    /** The Y key */\n    Keys[Keys[\"Y\"] = 89] = \"Y\";\n    /** The Z key */\n    Keys[Keys[\"Z\"] = 90] = \"Z\";\n    /** The left arrow key */\n    Keys[Keys[\"Left\"] = 37] = \"Left\";\n    /** The up arrow key */\n    Keys[Keys[\"Up\"] = 38] = \"Up\";\n    /** The right arrow key */\n    Keys[Keys[\"Right\"] = 39] = \"Right\";\n    /** The down arrow key */\n    Keys[Keys[\"Down\"] = 40] = \"Down\";\n    /** The Escape key */\n    Keys[Keys[\"Escape\"] = 27] = \"Escape\";\n    /** The Space key */\n    Keys[Keys[\"Space\"] = 32] = \"Space\";\n    /** The page up key */\n    Keys[Keys[\"PageUp\"] = 33] = \"PageUp\";\n    /** The Space key */\n    Keys[Keys[\"PageDown\"] = 34] = \"PageDown\";\n    /** The Space key */\n    Keys[Keys[\"End\"] = 35] = \"End\";\n    /** The Space key */\n    Keys[Keys[\"Home\"] = 36] = \"Home\";\n    /** The delete key */\n    Keys[Keys[\"Delete\"] = 46] = \"Delete\";\n    /** The tab key */\n    Keys[Keys[\"Tab\"] = 9] = \"Tab\";\n    /** The enter key */\n    Keys[Keys[\"Enter\"] = 13] = \"Enter\";\n    /** The BackSpace key */\n    Keys[Keys[\"BackSpace\"] = 8] = \"BackSpace\";\n    /** The F1 key */\n    Keys[Keys[\"F1\"] = 112] = \"F1\";\n    /** The F2 key */\n    Keys[Keys[\"F2\"] = 113] = \"F2\";\n    /** The F3 key */\n    Keys[Keys[\"F3\"] = 114] = \"F3\";\n    /** The F4 key */\n    Keys[Keys[\"F4\"] = 115] = \"F4\";\n    /** The F5 key */\n    Keys[Keys[\"F5\"] = 116] = \"F5\";\n    /** The F6 key */\n    Keys[Keys[\"F6\"] = 117] = \"F6\";\n    /** The F7 key */\n    Keys[Keys[\"F7\"] = 118] = \"F7\";\n    /** The F8 key */\n    Keys[Keys[\"F8\"] = 119] = \"F8\";\n    /** The F9 key */\n    Keys[Keys[\"F9\"] = 120] = \"F9\";\n    /** The F10 key */\n    Keys[Keys[\"F10\"] = 121] = \"F10\";\n    /** The F111 key */\n    Keys[Keys[\"F11\"] = 122] = \"F11\";\n    /** The F12 key */\n    Keys[Keys[\"F12\"] = 123] = \"F12\";\n    /** The Star */\n    Keys[Keys[\"Star\"] = 56] = \"Star\";\n    /** The Plus */\n    Keys[Keys[\"Plus\"] = 187] = \"Plus\";\n    /** The Minus */\n    Keys[Keys[\"Minus\"] = 189] = \"Minus\";\n})(Keys || (Keys = {}));\n/**\n * Enables/Disables certain actions of diagram\n * * Render - Indicates the diagram is in render state.\n * * PublicMethod - Indicates the diagram public method is in action.\n * * ToolAction - Indicates the diagram Tool is in action.\n * * UndoRedo - Indicates the diagram undo/redo is in action.\n * * TextEdit - Indicates the text editing is in progress.\n * * Group - Indicates the group is in progress.\n * * Clear - Indicates diagram have clear all.\n * * PreventClearSelection - prevents diagram from clear selection\n */\nexport var DiagramAction;\n(function (DiagramAction) {\n    /** Indicates the diagram is in render state.r */\n    DiagramAction[DiagramAction[\"Render\"] = 2] = \"Render\";\n    /** Indicates the diagram public method is in action. */\n    DiagramAction[DiagramAction[\"PublicMethod\"] = 4] = \"PublicMethod\";\n    /** Indicates the diagram Tool is in action. */\n    DiagramAction[DiagramAction[\"ToolAction\"] = 8] = \"ToolAction\";\n    /** Indicates the diagram undo/redo is in action. */\n    DiagramAction[DiagramAction[\"UndoRedo\"] = 16] = \"UndoRedo\";\n    /** Indicates the text editing is in progress. */\n    DiagramAction[DiagramAction[\"TextEdit\"] = 32] = \"TextEdit\";\n    /** Indicates the group is in progress. */\n    DiagramAction[DiagramAction[\"Group\"] = 64] = \"Group\";\n    /** Indicates diagram have clear all. */\n    DiagramAction[DiagramAction[\"Clear\"] = 128] = \"Clear\";\n    /** prevents diagram from clear selection. */\n    DiagramAction[DiagramAction[\"PreventClearSelection\"] = 256] = \"PreventClearSelection\";\n    /** Indicates whether drag or rotate tool has been activated */\n    DiagramAction[DiagramAction[\"Interactions\"] = 512] = \"Interactions\";\n    /** Use to prevent the history during some action in diagram */\n    DiagramAction[DiagramAction[\"PreventHistory\"] = 1024] = \"PreventHistory\";\n    /** Use to prevent the icon while expand a node in diagram */\n    DiagramAction[DiagramAction[\"PreventIconsUpdate\"] = 2048] = \"PreventIconsUpdate\";\n})(DiagramAction || (DiagramAction = {}));\n/**\n * Defines the Selector type to be drawn\n * None - Draws Normal selector with resize handles\n * Symbol - Draws only the rectangle for the selector\n */\nexport var RendererAction;\n(function (RendererAction) {\n    /** None - Draws Normal selector with resize handles */\n    RendererAction[RendererAction[\"None\"] = 2] = \"None\";\n    /** DrawSelectorBorder - Draws only the Border for the selector */\n    RendererAction[RendererAction[\"DrawSelectorBorder\"] = 4] = \"DrawSelectorBorder\";\n    /** PreventRenderSelector - Avoid the render of selector during interaction */\n    RendererAction[RendererAction[\"PreventRenderSelector\"] = 8] = \"PreventRenderSelector\";\n})(RendererAction || (RendererAction = {}));\nexport var RealAction;\n(function (RealAction) {\n    RealAction[RealAction[\"None\"] = 0] = \"None\";\n    RealAction[RealAction[\"PreventDrag\"] = 2] = \"PreventDrag\";\n    RealAction[RealAction[\"PreventScale\"] = 4] = \"PreventScale\";\n    RealAction[RealAction[\"PreventDataInit\"] = 8] = \"PreventDataInit\";\n    /** Indicates when the diagram is scrolled horizontal using scroll bar */\n    RealAction[RealAction[\"hScrollbarMoved\"] = 16] = \"hScrollbarMoved\";\n    /** Indicates when the diagram is scrolled vertical using scroll bar */\n    RealAction[RealAction[\"vScrollbarMoved\"] = 32] = \"vScrollbarMoved\";\n})(RealAction || (RealAction = {}));\n/** @private */\nexport var NoOfSegments;\n(function (NoOfSegments) {\n    NoOfSegments[NoOfSegments[\"Zero\"] = 0] = \"Zero\";\n    NoOfSegments[NoOfSegments[\"One\"] = 1] = \"One\";\n    NoOfSegments[NoOfSegments[\"Two\"] = 2] = \"Two\";\n    NoOfSegments[NoOfSegments[\"Three\"] = 3] = \"Three\";\n    NoOfSegments[NoOfSegments[\"Four\"] = 4] = \"Four\";\n    NoOfSegments[NoOfSegments[\"Five\"] = 5] = \"Five\";\n})(NoOfSegments || (NoOfSegments = {}));\n/**\n * events of diagram\n * @private\n */\nexport var DiagramEvent;\n(function (DiagramEvent) {\n    DiagramEvent[DiagramEvent[\"collectionChange\"] = 0] = \"collectionChange\";\n    DiagramEvent[DiagramEvent[\"rotateChange\"] = 1] = \"rotateChange\";\n    DiagramEvent[DiagramEvent[\"positionChange\"] = 2] = \"positionChange\";\n    DiagramEvent[DiagramEvent[\"propertyChange\"] = 3] = \"propertyChange\";\n    DiagramEvent[DiagramEvent[\"selectionChange\"] = 4] = \"selectionChange\";\n    DiagramEvent[DiagramEvent[\"sizeChange\"] = 5] = \"sizeChange\";\n    DiagramEvent[DiagramEvent[\"drop\"] = 6] = \"drop\";\n    DiagramEvent[DiagramEvent[\"sourcePointChange\"] = 7] = \"sourcePointChange\";\n    DiagramEvent[DiagramEvent[\"targetPointChange\"] = 8] = \"targetPointChange\";\n    DiagramEvent[DiagramEvent[\"connectionChange\"] = 9] = \"connectionChange\";\n    DiagramEvent[DiagramEvent[\"animationComplete\"] = 10] = \"animationComplete\";\n    DiagramEvent[DiagramEvent[\"click\"] = 11] = \"click\";\n    DiagramEvent[DiagramEvent[\"doubleClick\"] = 12] = \"doubleClick\";\n    DiagramEvent[DiagramEvent[\"scrollChange\"] = 13] = \"scrollChange\";\n    DiagramEvent[DiagramEvent[\"dragEnter\"] = 14] = \"dragEnter\";\n    DiagramEvent[DiagramEvent[\"dragLeave\"] = 15] = \"dragLeave\";\n    DiagramEvent[DiagramEvent[\"dragOver\"] = 16] = \"dragOver\";\n    DiagramEvent[DiagramEvent[\"textEdit\"] = 17] = \"textEdit\";\n    DiagramEvent[DiagramEvent[\"paletteSelectionChange\"] = 18] = \"paletteSelectionChange\";\n    DiagramEvent[DiagramEvent[\"historyChange\"] = 19] = \"historyChange\";\n    DiagramEvent[DiagramEvent[\"mouseEnter\"] = 20] = \"mouseEnter\";\n    DiagramEvent[DiagramEvent[\"mouseLeave\"] = 21] = \"mouseLeave\";\n    DiagramEvent[DiagramEvent[\"mouseOver\"] = 22] = \"mouseOver\";\n    DiagramEvent[DiagramEvent[\"expandStateChange\"] = 23] = \"expandStateChange\";\n})(DiagramEvent || (DiagramEvent = {}));\n/** Enables/Disables certain features of port connection\n * @aspNumberEnum\n * @IgnoreSingular\n */\nexport var PortConstraints;\n(function (PortConstraints) {\n    /** Disable all constraints  */\n    PortConstraints[PortConstraints[\"None\"] = 1] = \"None\";\n    /** Enables connections with connector  */\n    PortConstraints[PortConstraints[\"Drag\"] = 2] = \"Drag\";\n    /** Enables to create the connection when mouse hover on the port  */\n    PortConstraints[PortConstraints[\"Draw\"] = 4] = \"Draw\";\n    /** Enables to only connect the target end of connector */\n    PortConstraints[PortConstraints[\"InConnect\"] = 8] = \"InConnect\";\n    /** Enables to only connect the source end of connector */\n    PortConstraints[PortConstraints[\"OutConnect\"] = 16] = \"OutConnect\";\n    /** Enables all constraints */\n    PortConstraints[PortConstraints[\"Default\"] = 24] = \"Default\";\n})(PortConstraints || (PortConstraints = {}));\n/**\n * Defines the context menu click\n * contextMenuClick - Sets the context menu click as contextMenuClick\n */\nexport var contextMenuClick = \n/** contextMenuClick - Sets the context menu click as contextMenuClick */\n'contextMenuClick';\n/**\n * Defines the context menu open\n * contextMenuOpen - Sets the context menu open as contextMenuOpen\n */\nexport var contextMenuOpen = \n/** contextMenuOpen - Sets the context menu open as contextMenuOpen */\n'contextMenuOpen';\n/**\n * Defines the context menu Before Item Render\n * contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender\n */\nexport var contextMenuBeforeItemRender = \n/** contextMenuBeforeItemRender - Sets the context menu open as contextMenuBeforeItemRender */\n'contextMenuBeforeItemRender';\n","import { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { getBounds } from '../../utility/base-util';\n/**\n * DiagramElement module defines the basic unit of diagram\n */\nvar DiagramElement = /** @class */ (function () {\n    function DiagramElement() {\n        /**\n         * Sets/Gets the reference point of the element\n         * ```html\n         * <div id='diagram'></div>\n         * ```\n         * ```typescript\n         * let stackPanel: StackPanel = new StackPanel();\n         * stackPanel.offsetX = 300; stackPanel.offsetY = 200;\n         * stackPanel.width = 100; stackPanel.height = 100;\n         * stackPanel.style.fill = 'red';\n         * stackPanel.pivot = { x: 0.5, y: 0.5 };\n         * let diagram: Diagram = new Diagram({\n         * ...\n         * basicElements: [stackPanel],\n         * ...\n         * });\n         * diagram.appendTo('#diagram');\n         * ```\n         */\n        this.pivot = { x: 0.5, y: 0.5 };\n        /**\n         * Sets or gets whether the content of the element needs to be measured\n         */\n        this.isDirt = true;\n        /**\n         * set to true during print and eport\n         */\n        /** @private */\n        this.isExport = false;\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleValue = { x: 0, y: 0 };\n        /**\n         * set scaling value for print and export\n         */\n        /** @private */\n        this.exportScaleOffset = { x: 0, y: 0 };\n        /**\n         * Check whether style need to be apply or not\n         */\n        /** @private */\n        this.canApplyStyle = true;\n        /**\n         * Sets or gets whether the content of the element to be visible\n         */\n        this.visible = true;\n        /**\n         * Sets/Gets the x-coordinate of the element\n         */\n        this.offsetX = 0;\n        /**\n         * Sets/Gets the y-coordinate of the element\n         */\n        this.offsetY = 0;\n        /**\n         * Set the corner of the element\n         */\n        this.cornerRadius = 0;\n        /**\n         * Sets/Gets the minimum height of the element\n         */\n        this.minHeight = undefined;\n        /**\n         * Sets/Gets the minimum width of the element\n         */\n        this.minWidth = undefined;\n        /**\n         * Sets/Gets the maximum width of the element\n         */\n        this.maxWidth = undefined;\n        /**\n         * Sets/Gets the maximum height of the element\n         */\n        this.maxHeight = undefined;\n        /**\n         * Sets/Gets the width of the element\n         */\n        this.width = undefined;\n        /**\n         * Sets/Gets the height of the element\n         */\n        this.height = undefined;\n        /**\n         * Sets/Gets the rotate angle of the element\n         */\n        this.rotateAngle = 0;\n        /**\n         * Sets/Gets the margin of the element\n         */\n        this.margin = { left: 0, right: 0, top: 0, bottom: 0 };\n        /**\n         * Sets/Gets how the element has to be horizontally arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Left - Aligns the diagram element at the left of its immediate parent\n         * * Right - Aligns the diagram element at the right of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.horizontalAlignment = 'Auto';\n        /**\n         * Sets/Gets how the element has to be vertically arranged with respect to its immediate parent\n         * * Stretch - Stretches the diagram element throughout its immediate parent\n         * * Top - Aligns the diagram element at the top of its immediate parent\n         * * Bottom - Aligns the diagram element at the bottom of its immediate parent\n         * * Center - Aligns the diagram element at the center of its immediate parent\n         * * Auto - Aligns the diagram element based on the characteristics of its immediate parent\n         */\n        this.verticalAlignment = 'Auto';\n        /**\n         * Sets/Gets the mirror image of diagram element in both horizontal and vertical directions\n         * * FlipHorizontal - Translate the diagram element throughout its immediate parent\n         * * FlipVertical - Rotate the diagram element throughout its immediate parent\n         */\n        this.flip = 'None';\n        /**\n         * Sets whether the element has to be aligned with respect to a point/with respect to its immediate parent\n         * * Point - Diagram elements will be aligned with respect to a point\n         * * Object - Diagram elements will be aligned with respect to its immediate parent\n         */\n        this.relativeMode = 'Point';\n        /**\n         * Sets whether the element has to be transformed based on its parent or not\n         * * Self - Sets the transform type as Self\n         * * Parent - Sets the transform type as Parent\n         */\n        this.transform = Transform.Self | Transform.Parent;\n        /**\n         * Sets the style of the element\n         */\n        this.style = { fill: 'white', strokeColor: 'black', opacity: 1, strokeWidth: 1 };\n        /**\n         * Gets the minimum size that is required by the element\n         */\n        this.desiredSize = new Size();\n        /**\n         * Gets the size that the element will be rendered\n         */\n        this.actualSize = new Size();\n        /**\n         * Gets the rotate angle that is set to the immediate parent of the element\n         */\n        this.parentTransform = 0;\n        /** @private */\n        this.preventContainer = false;\n        /**\n         * Gets/Set the boolean value for the element\n         */\n        this.isSvgRender = false;\n        /**\n         * Gets/Sets the boundary of the element\n         */\n        this.bounds = new Rect(0, 0, 0, 0);\n        /**\n         * Defines the appearance of the shadow of the element\n         */\n        this.shadow = null;\n        /**\n         * Defines the description of the diagram element\n         */\n        this.description = '';\n        /**\n         * Defines whether the element has to be measured or not\n         */\n        this.staticSize = false;\n        /**\n         * check whether the element is rect or not\n         */\n        this.isRectElement = false;\n        /** @private */\n        this.isCalculateDesiredSize = true;\n        /**\n         * Set the offset values for container in flipping\n         */\n        /** @private */\n        this.flipOffset = { x: 0, y: 0 };\n        /**\n         * Defines whether the element is group or port\n         */\n        /** @private */\n        this.elementActions = ElementAction.None;\n        //private variables\n        this.position = undefined;\n        this.unitMode = undefined;\n        /**   @private  */\n        this.float = false;\n        this.floatingBounds = undefined;\n    }\n    // public constructor() {\n    //     this.id = randomId();\n    // }\n    /**\n     * Sets the offset of the element with respect to its parent\n     * @param x\n     * @param y\n     * @param mode\n     */\n    DiagramElement.prototype.setOffsetWithRespectToBounds = function (x, y, mode) {\n        this.unitMode = mode;\n        this.position = { x: x, y: y };\n    };\n    /**\n     * Gets the position of the element with respect to its parent\n     * @param size\n     */\n    DiagramElement.prototype.getAbsolutePosition = function (size) {\n        if (this.position !== undefined) {\n            if (this.unitMode === 'Absolute') {\n                return this.position;\n            }\n            else {\n                return {\n                    x: this.position.x * size.width, y: this.position.y * size.height\n                };\n            }\n        }\n        return undefined;\n    };\n    Object.defineProperty(DiagramElement.prototype, \"outerBounds\", {\n        get: function () {\n            return this.floatingBounds || this.bounds;\n        },\n        /**\n         * used to set the outer bounds value\n         * @private\n         */\n        set: function (bounds) {\n            this.floatingBounds = bounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures the minimum space that the element requires\n     * @param availableSize\n     */\n    DiagramElement.prototype.measure = function (availableSize) {\n        var width = this.width !== undefined ? this.width : (availableSize.width || 0) - this.margin.left - this.margin.right;\n        var height = this.height !== undefined ? this.height : (availableSize.height || 0) - this.margin.top - this.margin.bottom;\n        this.desiredSize = new Size(width, height);\n        if (this.isCalculateDesiredSize) {\n            this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        }\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the element\n     * @param desiredSize\n     */\n    DiagramElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Updates the bounds of the element\n     */\n    DiagramElement.prototype.updateBounds = function () {\n        this.bounds = getBounds(this);\n    };\n    /**\n     * Validates the size of the element with respect to its minimum and maximum size\n     * @param desiredSize\n     * @param availableSize\n     */\n    DiagramElement.prototype.validateDesiredSize = function (desiredSize, availableSize) {\n        //Empty canvas\n        if (this.isRectElement && !this.width && !this.minWidth && !this.maxWidth) {\n            desiredSize.width = 50;\n        }\n        if (this.isRectElement && !this.height && !this.minHeight && !this.maxHeight) {\n            desiredSize.height = 50;\n        }\n        if (desiredSize === undefined || this.width !== undefined &&\n            this.height !== undefined) {\n            desiredSize = desiredSize || new Size();\n            desiredSize.width = this.width === undefined ? (availableSize.width || 0)\n                - this.margin.left - this.margin.right : this.width;\n            desiredSize.height = this.height === undefined ? (availableSize.height || 0)\n                - this.margin.top - this.margin.bottom : this.height;\n        }\n        //Considering min values\n        if (this.minWidth !== undefined) {\n            desiredSize.width = Math.max(desiredSize.width, this.minWidth);\n        }\n        if (this.minHeight !== undefined) {\n            desiredSize.height = Math.max(desiredSize.height, this.minHeight);\n        }\n        //Considering max values\n        if (this.maxWidth !== undefined) {\n            desiredSize.width = Math.min(desiredSize.width, this.maxWidth);\n        }\n        if (this.maxHeight !== undefined) {\n            desiredSize.height = Math.min(desiredSize.height, this.maxHeight);\n        }\n        return desiredSize;\n    };\n    return DiagramElement;\n}());\nexport { DiagramElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, ComplexFactory } from '@syncfusion/ej2-base';\n/**   @private  */\nvar getGradientType = function (obj) {\n    switch (obj.type) {\n        case 'Linear':\n            return LinearGradient;\n        case 'Radial':\n            return RadialGradient;\n        default:\n            return LinearGradient;\n    }\n};\n/**\n * Layout Model module defines the styles and types to arrange objects in containers\n */\nvar Thickness = /** @class */ (function () {\n    function Thickness(left, right, top, bottom) {\n        this.left = left;\n        this.right = right;\n        this.top = top;\n        this.bottom = bottom;\n    }\n    return Thickness;\n}());\nexport { Thickness };\n/**\n * Defines the space to be left between an object and its immediate parent\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(0)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Defines the Shadow appearance of the objects\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n *  let nodes: NodeModel[] = [{ id: 'node2', width: 100, height: 100,\n *  constraints: NodeConstraints.Default | NodeConstraints.Shadow,\n *  shadow: { angle: 45, distance: 5, opacity: 0.7, color: 'grey'}\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Shadow = /** @class */ (function (_super) {\n    __extends(Shadow, _super);\n    function Shadow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(45)\n    ], Shadow.prototype, \"angle\", void 0);\n    __decorate([\n        Property(5)\n    ], Shadow.prototype, \"distance\", void 0);\n    __decorate([\n        Property(0.7)\n    ], Shadow.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('lightgrey')\n    ], Shadow.prototype, \"color\", void 0);\n    return Shadow;\n}(ChildProperty));\nexport { Shadow };\n/**\n * Defines the different colors and the region of color transitions\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Stop = /** @class */ (function (_super) {\n    __extends(Stop, _super);\n    function Stop() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Stop\n     */\n    Stop.prototype.getClassName = function () {\n        return 'Stop';\n    };\n    __decorate([\n        Property('')\n    ], Stop.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Stop.prototype, \"offset\", void 0);\n    __decorate([\n        Property(1)\n    ], Stop.prototype, \"opacity\", void 0);\n    return Stop;\n}(ChildProperty));\nexport { Stop };\n/**\n * Paints the node with a smooth transition from one color to another color\n */\nvar Gradient = /** @class */ (function (_super) {\n    __extends(Gradient, _super);\n    function Gradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Stop)\n    ], Gradient.prototype, \"stops\", void 0);\n    __decorate([\n        Property('None')\n    ], Gradient.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Gradient.prototype, \"id\", void 0);\n    return Gradient;\n}(ChildProperty));\nexport { Gradient };\n/**\n * Defines the linear gradient of styles\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: LinearGradientModel = { x1: 0, x2: 50, y1: 0, y2: 50, stops: stopscol, type: 'Linear' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\n/**\n * Paints the node with linear color transitions\n */\nvar LinearGradient = /** @class */ (function (_super) {\n    __extends(LinearGradient, _super);\n    function LinearGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"x2\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y1\", void 0);\n    __decorate([\n        Property(0)\n    ], LinearGradient.prototype, \"y2\", void 0);\n    return LinearGradient;\n}(Gradient));\nexport { LinearGradient };\n/**\n * A focal point defines the beginning of the gradient, and a circle defines the end point of the gradient\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let stopscol: StopModel[] = [];\n * let stops1: StopModel = { color: 'white', offset: 0, opacity: 0.7 };\n * stopscol.push(stops1);\n * let stops2: StopModel = { color: 'red', offset: 0, opacity: 0.3 };\n * stopscol.push(stops2);\n * let gradient: RadialGradientModel = { cx: 50, cy: 50, fx: 50, fy: 50, stops: stopscol, type: 'Radial' };\n * let nodes: NodeModel[] = [{ id: 'node1', width: 100, height: 100,\n * style: { gradient: gradient }\n * }];\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: nodes,\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar RadialGradient = /** @class */ (function (_super) {\n    __extends(RadialGradient, _super);\n    function RadialGradient() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"cy\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fx\", void 0);\n    __decorate([\n        Property(0)\n    ], RadialGradient.prototype, \"fy\", void 0);\n    __decorate([\n        Property(50)\n    ], RadialGradient.prototype, \"r\", void 0);\n    return RadialGradient;\n}(Gradient));\nexport { RadialGradient };\n/**\n * Defines the style of shape/path\n */\nvar ShapeStyle = /** @class */ (function (_super) {\n    __extends(ShapeStyle, _super);\n    function ShapeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('white')\n    ], ShapeStyle.prototype, \"fill\", void 0);\n    __decorate([\n        Property('black')\n    ], ShapeStyle.prototype, \"strokeColor\", void 0);\n    __decorate([\n        Property('')\n    ], ShapeStyle.prototype, \"strokeDashArray\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"strokeWidth\", void 0);\n    __decorate([\n        Property(1)\n    ], ShapeStyle.prototype, \"opacity\", void 0);\n    __decorate([\n        ComplexFactory(getGradientType)\n    ], ShapeStyle.prototype, \"gradient\", void 0);\n    return ShapeStyle;\n}(ChildProperty));\nexport { ShapeStyle };\n/**\n * Defines the stroke style of a path\n */\nvar StrokeStyle = /** @class */ (function (_super) {\n    __extends(StrokeStyle, _super);\n    function StrokeStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('transparent')\n    ], StrokeStyle.prototype, \"fill\", void 0);\n    return StrokeStyle;\n}(ShapeStyle));\nexport { StrokeStyle };\n/**\n * Defines the appearance of text\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let style: TextStyleModel = { strokeColor: 'black', opacity: 0.5, whiteSpace:'CollapseSpace', strokeWidth: 1 };\n * let node: NodeModel;\n * node = {\n * ...\n * id: 'node', width: 100, height: 100, offsetX: 100, offsetY: 100,\n * annotations : [{\n * content: 'text', style: style }];\n * ...\n * };\n * let diagram: Diagram = new Diagram({\n * ...\n *   nodes: [node],\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar TextStyle = /** @class */ (function (_super) {\n    __extends(TextStyle, _super);\n    function TextStyle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('black')\n    ], TextStyle.prototype, \"color\", void 0);\n    __decorate([\n        Property('Arial')\n    ], TextStyle.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property(12)\n    ], TextStyle.prototype, \"fontSize\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"italic\", void 0);\n    __decorate([\n        Property(false)\n    ], TextStyle.prototype, \"bold\", void 0);\n    __decorate([\n        Property('CollapseSpace')\n    ], TextStyle.prototype, \"whiteSpace\", void 0);\n    __decorate([\n        Property('WrapWithOverflow')\n    ], TextStyle.prototype, \"textWrapping\", void 0);\n    __decorate([\n        Property('Center')\n    ], TextStyle.prototype, \"textAlign\", void 0);\n    __decorate([\n        Property('None')\n    ], TextStyle.prototype, \"textDecoration\", void 0);\n    __decorate([\n        Property('Wrap')\n    ], TextStyle.prototype, \"textOverflow\", void 0);\n    __decorate([\n        Property('transparent')\n    ], TextStyle.prototype, \"fill\", void 0);\n    return TextStyle;\n}(ShapeStyle));\nexport { TextStyle };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { ElementAction } from '../../enum/enum';\nimport { Thickness } from '../appearance';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { rotatePoint, getOffset } from '../../utility/base-util';\n/**\n * Container module is used to group related objects\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the space between the container and its immediate children\n         */\n        _this.padding = new Thickness(0, 0, 0, 0);\n        //private members    \n        _this.desiredBounds = undefined;\n        /** @private */\n        _this.measureChildren = true;\n        /**   @private  */\n        _this.prevRotateAngle = 0;\n        return _this;\n    }\n    /**\n     * returns whether the container has child elements or not\n     */\n    Container.prototype.hasChildren = function () {\n        if (this.children !== undefined && this.children.length > 0) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Measures the minimum space that the container requires\n     *\n     * @param availableSize\n     */\n    Container.prototype.measure = function (availableSize) {\n        // measure the element and find the desired size\n        this.desiredBounds = undefined;\n        var desired = undefined;\n        var child;\n        var center = { x: 0, y: 0 };\n        var y;\n        var x;\n        var childBounds;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var i = 0; i < this.children.length; i++) {\n                child = this.children[i];\n                if (child.horizontalAlignment === 'Stretch' && !availableSize.width) {\n                    availableSize.width = child.bounds.width;\n                }\n                if (child.verticalAlignment === 'Stretch' && !availableSize.height) {\n                    availableSize.height = child.bounds.height;\n                }\n                var force = child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch';\n                if (this.measureChildren || force || (child instanceof Container && child.measureChildren !== undefined)) {\n                    child.measure(availableSize);\n                }\n                childBounds = this.GetChildrenBounds(child);\n                if (child.horizontalAlignment !== 'Stretch' && child.verticalAlignment !== 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = childBounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(childBounds);\n                    }\n                }\n                else if (this.actualSize && !this.actualSize.width && !this.actualSize.height &&\n                    !child.preventContainer && child.horizontalAlignment === 'Stretch' && child.verticalAlignment === 'Stretch') {\n                    if (this.desiredBounds === undefined) {\n                        this.desiredBounds = child.bounds;\n                    }\n                    else {\n                        this.desiredBounds.uniteRect(child.bounds);\n                    }\n                }\n            }\n            if (this.desiredBounds !== undefined && this.rotateAngle !== 0) {\n                var offsetPt = {\n                    x: this.desiredBounds.x + this.desiredBounds.width * this.pivot.x,\n                    y: this.desiredBounds.y + this.desiredBounds.height * this.pivot.y\n                };\n                var newPoint = rotatePoint(this.rotateAngle, undefined, undefined, offsetPt);\n                this.desiredBounds.x = newPoint.x - this.desiredBounds.width * this.pivot.x;\n                this.desiredBounds.y = newPoint.y - this.desiredBounds.height * this.pivot.y;\n            }\n            if (this.desiredBounds) {\n                desired = new Size(this.desiredBounds.width, this.desiredBounds.height);\n            }\n        }\n        desired = this.validateDesiredSize(desired, availableSize);\n        this.stretchChildren(desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the container and its children\n     * @param desiredSize\n     */\n    Container.prototype.arrange = function (desiredSize) {\n        var child;\n        var bounds;\n        var childBounds = this.desiredBounds;\n        if (childBounds) {\n            var x = this.offsetX;\n            var y = this.offsetY;\n            this.offsetX = childBounds.x + childBounds.width * this.pivot.x;\n            this.offsetY = childBounds.y + childBounds.height * this.pivot.y;\n            // container has rotateAngle\n            if (this.hasChildren()) {\n                //Measuring the children\n                for (var i = 0; i < this.children.length; i++) {\n                    child = this.children[i];\n                    var arrange = false;\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.offsetX = this.offsetX;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        if (this.flip && (this.elementActions & ElementAction.ElementIsGroup)) {\n                            child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                                -child.parentTransform : child.parentTransform;\n                        }\n                        arrange = true;\n                    }\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.offsetY = this.offsetY;\n                        child.parentTransform = this.parentTransform + this.rotateAngle;\n                        arrange = true;\n                    }\n                    if (arrange || this.measureChildren || (child instanceof Container && child.measureChildren !== undefined)) {\n                        child.arrange(child.desiredSize);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.prevRotateAngle = this.rotateAngle;\n        return desiredSize;\n    };\n    //protected methods\n    /**\n     * Stretches the child elements based on the size of the container\n     * @param size\n     */\n    Container.prototype.stretchChildren = function (size) {\n        if (this.hasChildren()) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child.horizontalAlignment === 'Stretch' || child.desiredSize.width === undefined) {\n                    child.desiredSize.width = size.width - child.margin.left - child.margin.right;\n                }\n                if (child.verticalAlignment === 'Stretch' || child.desiredSize.height === undefined) {\n                    child.desiredSize.height = size.height - child.margin.top - child.margin.bottom;\n                }\n                if (child instanceof Container) {\n                    child.stretchChildren(child.desiredSize);\n                }\n            }\n        }\n    };\n    /**\n     * Considers the padding of the element when measuring its desired size\n     * @param size\n     */\n    Container.prototype.applyPadding = function (size) {\n        size.width += this.padding.left + this.padding.right;\n        size.height += this.padding.top + this.padding.bottom;\n    };\n    /**\n     * Finds the offset of the child element with respect to the container\n     * @param child\n     * @param center\n     */\n    Container.prototype.findChildOffsetFromCenter = function (child, center) {\n        var topLeft = { x: center.x - child.desiredSize.width / 2, y: center.y - child.desiredSize.height / 2 };\n        var offset = getOffset(topLeft, child);\n        //Rotate based on child rotate angle\n        offset = rotatePoint(child.rotateAngle, center.x, center.y, offset);\n        //Rotate based on parent pivot\n        offset = rotatePoint(this.rotateAngle + this.parentTransform, this.offsetX, this.offsetY, offset);\n        child.offsetX = offset.x;\n        child.offsetY = offset.y;\n    };\n    //private methods - check its need\n    Container.prototype.GetChildrenBounds = function (child) {\n        var childBounds;\n        var childSize;\n        childSize = child.desiredSize.clone();\n        var diffAngle = child.rotateAngle - this.rotateAngle;\n        var refPoint = { x: child.offsetX, y: child.offsetY };\n        var left = refPoint.x - childSize.width * child.pivot.x;\n        var top = refPoint.y - childSize.height * child.pivot.y;\n        var right = left + childSize.width;\n        var bottom = top + childSize.height;\n        var topLeft = { x: left, y: top };\n        var topRight = { x: right, y: top };\n        var bottomLeft = { x: left, y: bottom };\n        var bottomRight = { x: right, y: bottom };\n        topLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topLeft);\n        topRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, topRight);\n        bottomLeft = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomLeft);\n        bottomRight = rotatePoint(child.rotateAngle, child.offsetX, child.offsetY, bottomRight);\n        if (this.rotateAngle !== 0) {\n            topLeft = rotatePoint(-this.rotateAngle, undefined, undefined, topLeft);\n            topRight = rotatePoint(-this.rotateAngle, undefined, undefined, topRight);\n            bottomLeft = rotatePoint(-this.rotateAngle, undefined, undefined, bottomLeft);\n            bottomRight = rotatePoint(-this.rotateAngle, undefined, undefined, bottomRight);\n        }\n        return Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n    };\n    return Container;\n}(DiagramElement));\nexport { Container };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { Rect } from '../../primitives/rect';\nimport { measurePath, findSegmentPoints, translatePoints } from './../../utility/dom-util';\nimport { processPathData, splitArrayCollection, transformPath, getPathString } from '../../utility/path-util';\n/**\n * PathElement takes care of how to align the path based on offsetX and offsetY\n */\nvar PathElement = /** @class */ (function (_super) {\n    __extends(PathElement, _super);\n    /**\n     * set the id for each element\n     */\n    function PathElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * Gets or sets the geometry of the path element\n         */\n        _this.pathData = '';\n        /**\n         * Gets/Sets whether the path has to be transformed to fit the given x,y, width, height\n         */\n        _this.transformPath = true;\n        /**\n         * Gets/Sets the equivalent path, that will have the origin as 0,0\n         */\n        _this.absolutePath = '';\n        /**   @private  */\n        _this.canMeasurePath = false;\n        //Private variables\n        /**   @private  */\n        _this.absoluteBounds = new Rect();\n        return _this;\n    }\n    Object.defineProperty(PathElement.prototype, \"data\", {\n        /**\n         * Gets the geometry of the path element\n         */\n        get: function () {\n            return this.pathData;\n        },\n        /**\n         * Sets the geometry of the path element\n         */\n        set: function (value) {\n            if (this.pathData !== value) {\n                this.pathData = value;\n                this.isDirt = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    PathElement.prototype.getPoints = function () {\n        var _this = this;\n        if (!this.pointTimer) {\n            this.pointTimer = setTimeout(function () {\n                _this.points = null;\n                _this.pointTimer = null;\n            }, 200);\n        }\n        this.points = this.points || findSegmentPoints(this);\n        return translatePoints(this, this.points);\n    };\n    /**\n     * Measures the minimum space that is required to render the element\n     * @param availableSize\n     */\n    PathElement.prototype.measure = function (availableSize) {\n        //Performance issue - Avoiding measuring the connector path\n        if (this.staticSize && this.width !== undefined && this.height !== undefined) {\n            this.absoluteBounds = new Rect(this.offsetX - this.width * this.pivot.x, this.offsetY - this.height * this.pivot.y, this.width, this.height);\n        }\n        else if (this.isDirt && (this.transformPath || (this.width === undefined || this.height === undefined))\n            && (!this.absoluteBounds || this.absoluteBounds.height === 0) || this.canMeasurePath) {\n            //Measure the element only whent the path data is changed/ size is not specified\n            this.absoluteBounds = measurePath(this.data ? this.data : '');\n        }\n        if (this.width === undefined) {\n            this.desiredSize = new Size(this.absoluteBounds.width, this.height || this.absoluteBounds.height);\n        }\n        else if (this.height === undefined) {\n            this.desiredSize = new Size(this.width || this.absoluteBounds.width, this.absoluteBounds.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        this.canMeasurePath = false;\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the path element\n     * @param desiredSize\n     */\n    PathElement.prototype.arrange = function (desiredSize) {\n        if (this.isDirt || this.actualSize.width !== desiredSize.width || this.actualSize.height !== desiredSize.height) {\n            this.isDirt = true;\n            this.absolutePath = this.updatePath(this.data, this.absoluteBounds, desiredSize);\n            if (!this.staticSize) {\n                this.points = null;\n            }\n        }\n        this.actualSize = this.desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    /**\n     * Translates the path to 0,0 and scales the path based on the actual size\n     * @param pathData\n     * @param bounds\n     * @param actualSize\n     */\n    PathElement.prototype.updatePath = function (pathData, bounds, actualSize) {\n        var isScale = false;\n        var newPathString = '';\n        var scaleX = -bounds.x;\n        var scaleY = -bounds.y;\n        var arrayCollection = [];\n        if (actualSize.width !== bounds.width || actualSize.height !== bounds.height) {\n            scaleX = actualSize.width / Number(bounds.width ? bounds.width : 1);\n            scaleY = actualSize.height / Number(bounds.height ? bounds.height : 1);\n            isScale = true;\n        }\n        arrayCollection = processPathData(pathData);\n        arrayCollection = splitArrayCollection(arrayCollection);\n        if ((isScale || this.isDirt) && this.transformPath) {\n            newPathString = transformPath(arrayCollection, scaleX, scaleY, isScale, bounds.x, bounds.y, 0, 0);\n        }\n        else {\n            newPathString = getPathString(arrayCollection);\n        }\n        isScale = false;\n        return newPathString;\n    };\n    return PathElement;\n}(DiagramElement));\nexport { PathElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureNativeContent, getContent, measureNativeSvg } from './../../utility/dom-util';\n/**\n * NativeElement defines the basic native elements\n */\nvar DiagramNativeElement = /** @class */ (function (_super) {\n    __extends(DiagramNativeElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramNativeElement(nodeId, diagramId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * set the node id\n         */\n        _this.nodeId = '';\n        /**\n         * set the diagram id\n         */\n        _this.diagramId = '';\n        /**\n         * sets scaling factor of the Native Element\n         */\n        _this.scale = 'Stretch';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        return _this;\n    }\n    Object.defineProperty(DiagramNativeElement.prototype, \"content\", {\n        /**   @private  */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * sets the geometry of the native element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, false);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the Native Element\n     * @param availableSize\n     */\n    DiagramNativeElement.prototype.measure = function (availableSize) {\n        if (this.isDirt) {\n            var rect = measureNativeContent(this.template);\n            this.contentSize = new Size();\n            this.contentSize.width = rect.width;\n            this.contentSize.height = rect.height;\n            var x = rect.x;\n            var y = rect.y;\n            this.templatePosition = { x: x, y: y };\n            this.isDirt = false;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            var getAvailableSize = measureNativeSvg(this.template);\n            this.desiredSize = new Size(getAvailableSize.width, getAvailableSize.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the Native Element\n     * @param desiredSize\n     */\n    DiagramNativeElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return DiagramNativeElement;\n}(DiagramElement));\nexport { DiagramNativeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureText } from './../../utility/dom-util';\n/**\n * TextElement is used to display text/annotations\n */\nvar TextElement = /** @class */ (function (_super) {\n    __extends(TextElement, _super);\n    /**\n     * set the id for each element\n     */\n    function TextElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.textContent = '';\n        /** @private */\n        _this.canMeasure = true;\n        /** @private */\n        _this.isLaneOrientation = false;\n        /** @private */\n        _this.canConsiderBounds = true;\n        /**\n         * sets the hyperlink color to blue\n         */\n        _this.hyperlink = {\n            color: 'blue'\n        };\n        /** @private */\n        _this.doWrap = true;\n        _this.textNodes = [];\n        /**\n         * Defines the appearance of the text element\n         */\n        _this.style = {\n            color: 'black', fill: 'transparent', strokeColor: 'black',\n            strokeWidth: 1, fontFamily: 'Arial', fontSize: 12, whiteSpace: 'CollapseSpace',\n            textWrapping: 'WrapWithOverflow', textAlign: 'Center', italic: false, bold: false,\n            textDecoration: 'None', strokeDashArray: '', opacity: 5, gradient: null,\n            textOverflow: 'Wrap'\n        };\n        _this.style.fill = 'transparent';\n        _this.style.strokeColor = 'transparent';\n        return _this;\n    }\n    Object.defineProperty(TextElement.prototype, \"content\", {\n        /**\n         * gets the content for the text element\n         */\n        get: function () {\n            return this.textContent;\n        },\n        /**\n         * sets the content for the text element\n         */\n        set: function (value) {\n            if (this.textContent !== value) {\n                this.textContent = value;\n                this.isDirt = true;\n                this.doWrap = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"childNodes\", {\n        /**\n         * sets the content for the text element\n         */\n        get: function () {\n            return this.textNodes;\n        },\n        /**\n         * gets the content for the text element\n         */\n        set: function (value) {\n            this.textNodes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextElement.prototype, \"wrapBounds\", {\n        /**\n         * gets the wrapBounds for the text\n         */\n        get: function () {\n            return this.textWrapBounds;\n        },\n        /**\n         * sets the wrapBounds for the text\n         */\n        set: function (value) {\n            this.textWrapBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    TextElement.prototype.refreshTextElement = function () {\n        this.isDirt = true;\n    };\n    /**\n     * Measures the minimum size that is required for the text element\n     * @param availableSize\n     */\n    TextElement.prototype.measure = function (availableSize) {\n        var size;\n        if (this.isDirt && this.canMeasure) {\n            size = measureText(this, this.style, this.content, this.isLaneOrientation ?\n                availableSize.height : (this.width || availableSize.width));\n        }\n        else {\n            size = this.desiredSize;\n        }\n        if (this.width === undefined || this.height === undefined) {\n            this.desiredSize = new Size(size.width, size.height);\n        }\n        else {\n            this.desiredSize = new Size(this.width, this.height);\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the text element\n     * @param desiredSize\n     */\n    TextElement.prototype.arrange = function (desiredSize) {\n        if (desiredSize.width !== this.actualSize.width || desiredSize.height !== this.actualSize.height || this.isDirt) {\n            this.doWrap = true;\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.isDirt = false;\n        return this.actualSize;\n    };\n    return TextElement;\n}(DiagramElement));\nexport { TextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Size } from '../../primitives/size';\nimport { DiagramElement } from './diagram-element';\nimport { measureImage } from './../../utility/dom-util';\n/**\n * ImageElement defines a basic image elements\n */\nvar ImageElement = /** @class */ (function (_super) {\n    __extends(ImageElement, _super);\n    /**\n     * set the id for each element\n     */\n    function ImageElement() {\n        var _this = _super.call(this) || this;\n        /**\n         * sets or gets the image source\n         */\n        _this.imageSource = '';\n        /**\n         * sets scaling factor of the image\n         */\n        _this.imageScale = 'None';\n        /**\n         * sets the alignment of the image\n         */\n        _this.imageAlign = 'None';\n        /**\n         * Sets how to stretch the image\n         */\n        _this.stretch = 'Stretch';\n        return _this;\n    }\n    Object.defineProperty(ImageElement.prototype, \"source\", {\n        /**\n         * Gets the source for the image element\n         */\n        get: function () {\n            return this.imageSource;\n        },\n        /**\n         * Sets the source for the image element\n         */\n        set: function (value) {\n            this.imageSource = value;\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Measures minimum space that is required to render the image\n     * @param availableSize\n     */\n    ImageElement.prototype.measure = function (availableSize) {\n        if (this.isDirt && (this.stretch !== 'Stretch' || this.width === undefined && this.height === undefined)) {\n            this.contentSize = measureImage(this.source, this.contentSize);\n            this.isDirt = false;\n        }\n        if (this.width !== undefined && this.height !== undefined) {\n            this.desiredSize = new Size(this.width, this.height);\n            this.contentSize = this.desiredSize;\n        }\n        else {\n            this.desiredSize = this.contentSize;\n        }\n        this.desiredSize = this.validateDesiredSize(this.desiredSize, availableSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the image\n     * @param desiredSize\n     */\n    ImageElement.prototype.arrange = function (desiredSize) {\n        this.actualSize = new Size(this.desiredSize.width, this.desiredSize.height);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    return ImageElement;\n}(DiagramElement));\nexport { ImageElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { TextStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { AnnotationConstraints } from '../enum/enum';\n/**\n * Defines the hyperlink for the annotations in the nodes/connectors\n */\nvar Hyperlink = /** @class */ (function (_super) {\n    __extends(Hyperlink, _super);\n    function Hyperlink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('blue')\n    ], Hyperlink.prototype, \"color\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], Hyperlink.prototype, \"link\", void 0);\n    __decorate([\n        Property('None')\n    ], Hyperlink.prototype, \"textDecoration\", void 0);\n    return Hyperlink;\n}(ChildProperty));\nexport { Hyperlink };\n/**\n * Defines the textual description of nodes/connectors\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(undefined)\n    ], Annotation.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], Annotation.prototype, \"visibility\", void 0);\n    __decorate([\n        Property(AnnotationConstraints.InheritReadOnly)\n    ], Annotation.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex(undefined, Hyperlink)\n    ], Annotation.prototype, \"hyperlink\", void 0);\n    __decorate([\n        Property('')\n    ], Annotation.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Annotation.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ strokeWidth: 0, strokeColor: 'transparent', fill: 'transparent' }, TextStyle)\n    ], Annotation.prototype, \"style\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Annotation.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Annotation.prototype, \"margin\", void 0);\n    __decorate([\n        Complex({ top: undefined, bottom: undefined, left: undefined, right: undefined }, Margin)\n    ], Annotation.prototype, \"dragLimit\", void 0);\n    __decorate([\n        Property('Shape')\n    ], Annotation.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Annotation.prototype, \"addInfo\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Defines the textual description of nodes/connectors with respect to bounds\n */\nvar ShapeAnnotation = /** @class */ (function (_super) {\n    __extends(ShapeAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function ShapeAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class ShapeAnnotation\n     */\n    ShapeAnnotation.prototype.getClassName = function () {\n        return 'ShapeAnnotation';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], ShapeAnnotation.prototype, \"offset\", void 0);\n    return ShapeAnnotation;\n}(Annotation));\nexport { ShapeAnnotation };\n/**\n * Defines the connector annotation\n */\nvar PathAnnotation = /** @class */ (function (_super) {\n    __extends(PathAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function PathAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the module of class PathAnnotation\n     */\n    PathAnnotation.prototype.getClassName = function () {\n        return 'PathAnnotation';\n    };\n    __decorate([\n        Property(0.5)\n    ], PathAnnotation.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Point)\n    ], PathAnnotation.prototype, \"displacement\", void 0);\n    __decorate([\n        Property('Center')\n    ], PathAnnotation.prototype, \"alignment\", void 0);\n    __decorate([\n        Property(false)\n    ], PathAnnotation.prototype, \"segmentAngle\", void 0);\n    return PathAnnotation;\n}(Annotation));\nexport { PathAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\nimport { Transform, ElementAction } from '../../enum/enum';\nimport { Size } from '../../primitives/size';\nimport { Rect } from '../../primitives/rect';\nimport { TextElement } from '../elements/text-element';\n/**\n * Canvas module is used to define a plane(canvas) and to arrange the children based on margin\n */\nvar Canvas = /** @class */ (function (_super) {\n    __extends(Canvas, _super);\n    function Canvas() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Not applicable for canvas\n         *  @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the canvas requires\n     * @param availableSize\n     */\n    Canvas.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        var desiredBounds = undefined;\n        if (this.hasChildren()) {\n            //Measuring the children\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (child instanceof TextElement) {\n                    if (child.canMeasure) {\n                        availableSize.width = availableSize.width || this.maxWidth || this.minWidth;\n                        child.measure(availableSize);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                else if (!(child instanceof TextElement)) {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var right = childSize.width + child.margin.right;\n                var bottom = childSize.height + child.margin.bottom;\n                var childBounds = new Rect(child.margin.left, child.margin.top, right, bottom);\n                if (child.float) {\n                    var position = child.getAbsolutePosition(childSize);\n                    if (position !== undefined) {\n                        continue;\n                    }\n                }\n                if ((!(child instanceof TextElement)) || (child instanceof TextElement && child.canConsiderBounds)) {\n                    if (desiredBounds === undefined) {\n                        desiredBounds = childBounds;\n                    }\n                    else {\n                        desiredBounds.uniteRect(childBounds);\n                    }\n                }\n            }\n            if (desiredBounds) {\n                var leftMargin = 0;\n                var topMargin = 0;\n                leftMargin = Math.max(desiredBounds.left, 0);\n                topMargin = Math.max(desiredBounds.top, 0);\n                desired = new Size(desiredBounds.width + leftMargin, desiredBounds.height + topMargin);\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        _super.prototype.stretchChildren.call(this, desired);\n        //Considering padding values\n        desired.width += this.padding.left + this.padding.right;\n        desired.height += this.padding.top + this.padding.bottom;\n        this.desiredSize = desired;\n        return desired;\n    };\n    /**\n     * Arranges the child elements of the canvas\n     */\n    Canvas.prototype.arrange = function (desiredSize, isStack) {\n        this.outerBounds = new Rect();\n        if (this.hasChildren()) {\n            var y = void 0;\n            var x = void 0;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if ((child.transform & Transform.Parent) !== 0) {\n                    child.parentTransform = this.parentTransform + this.rotateAngle;\n                    if (this.flip !== 'None' || this.elementActions & ElementAction.ElementIsGroup) {\n                        child.parentTransform = (this.flip === 'Horizontal' || this.flip === 'Vertical') ?\n                            -child.parentTransform : child.parentTransform;\n                    }\n                    var childSize = child.desiredSize.clone();\n                    var topLeft = void 0;\n                    var center = { x: 0, y: 0 };\n                    var childX = x;\n                    var childY = y;\n                    if (child.relativeMode === 'Point') {\n                        var position = child.getAbsolutePosition(desiredSize);\n                        if (position !== undefined) {\n                            childX += position.x;\n                            childY += position.y;\n                        }\n                    }\n                    if (child.relativeMode === 'Object') {\n                        topLeft = this.alignChildBasedOnParent(child, childSize, desiredSize, childX, childY);\n                    }\n                    else {\n                        topLeft = this.alignChildBasedOnaPoint(child, childX, childY);\n                    }\n                    center = { x: topLeft.x + childSize.width / 2, y: topLeft.y + childSize.height / 2 };\n                    _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                }\n                if (isStack && (child.horizontalAlignment === 'Stretch' || child.verticalAlignment === 'Stretch')) {\n                    child.arrange(desiredSize);\n                }\n                else {\n                    if (child instanceof TextElement && child.canMeasure) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                    else if (!(child instanceof TextElement)) {\n                        child.arrange(child.desiredSize);\n                        this.outerBounds.uniteRect(child.outerBounds);\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        this.outerBounds.uniteRect(this.bounds);\n        return desiredSize;\n    };\n    /**\n     * Aligns the child element based on its parent\n     * @param child\n     * @param childSize\n     * @param parentSize\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnParent = function (child, childSize, parentSize, x, y) {\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x += child.margin.left;\n                break;\n            case 'Right':\n                x += parentSize.width - childSize.width - child.margin.right;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x += parentSize.width / 2 - childSize.width / 2;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y += child.margin.top;\n                break;\n            case 'Bottom':\n                y += parentSize.height - childSize.height - child.margin.bottom;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y += parentSize.height / 2 - childSize.height / 2;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    /**\n     * Aligns the child elements based on a point\n     * @param child\n     * @param x\n     * @param y\n     */\n    Canvas.prototype.alignChildBasedOnaPoint = function (child, x, y) {\n        x += child.margin.left - child.margin.right;\n        y += child.margin.top - child.margin.bottom;\n        switch (child.horizontalAlignment) {\n            case 'Auto':\n            case 'Left':\n                x = x;\n                break;\n            case 'Stretch':\n            case 'Center':\n                x -= child.desiredSize.width * child.pivot.x;\n                break;\n            case 'Right':\n                x -= child.desiredSize.width;\n                break;\n        }\n        switch (child.verticalAlignment) {\n            case 'Auto':\n            case 'Top':\n                y = y;\n                break;\n            case 'Stretch':\n            case 'Center':\n                y -= child.desiredSize.height * child.pivot.y;\n                break;\n            case 'Bottom':\n                y -= child.desiredSize.height;\n                break;\n        }\n        return { x: x, y: y };\n    };\n    return Canvas;\n}(Container));\nexport { Canvas };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { PortConstraints, PortVisibility } from '../enum/enum';\n/**\n * Defines the behavior of connection ports\n */\nvar Port = /** @class */ (function (_super) {\n    __extends(Port, _super);\n    function Port() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Port.prototype, \"id\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], Port.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Port.prototype, \"margin\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"width\", void 0);\n    __decorate([\n        Property(12)\n    ], Port.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ShapeStyle)\n    ], Port.prototype, \"style\", void 0);\n    __decorate([\n        Property('Square')\n    ], Port.prototype, \"shape\", void 0);\n    __decorate([\n        Property(PortVisibility.Connect)\n    ], Port.prototype, \"visibility\", void 0);\n    __decorate([\n        Property('')\n    ], Port.prototype, \"pathData\", void 0);\n    __decorate([\n        Property(PortConstraints.Default)\n    ], Port.prototype, \"constraints\", void 0);\n    __decorate([\n        Property()\n    ], Port.prototype, \"addInfo\", void 0);\n    return Port;\n}(ChildProperty));\nexport { Port };\n/**\n * Defines the behavior of a port, that sticks to a point\n */\nvar PointPort = /** @class */ (function (_super) {\n    __extends(PointPort, _super);\n    // tslint:disable-next-line:no-any\n    function PointPort(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class PointPort\n     */\n    PointPort.prototype.getClassName = function () {\n        return 'PointPort';\n    };\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], PointPort.prototype, \"offset\", void 0);\n    return PointPort;\n}(Port));\nexport { PointPort };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { Point } from '../primitives/point';\n/**\n * Defines the behavior of default IconShapes\n */\nvar IconShape = /** @class */ (function (_super) {\n    __extends(IconShape, _super);\n    function IconShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], IconShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property('white')\n    ], IconShape.prototype, \"fill\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], IconShape.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"width\", void 0);\n    __decorate([\n        Property(10)\n    ], IconShape.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 1 }, Point)\n    ], IconShape.prototype, \"offset\", void 0);\n    __decorate([\n        Property('#1a1a1a')\n    ], IconShape.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(1)\n    ], IconShape.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], IconShape.prototype, \"margin\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('')\n    ], IconShape.prototype, \"content\", void 0);\n    __decorate([\n        Property(0)\n    ], IconShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Complex({ left: 2, right: 2, top: 2, bottom: 2 }, Margin)\n    ], IconShape.prototype, \"padding\", void 0);\n    return IconShape;\n}(ChildProperty));\nexport { IconShape };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\nimport { IconShape } from './icon';\nimport { DiagramTooltip } from './tooltip';\nimport { PointPort } from './port';\n/**\n * Defines the common behavior of nodes, connectors and groups\n */\nvar NodeBase = /** @class */ (function (_super) {\n    __extends(NodeBase, _super);\n    function NodeBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], NodeBase.prototype, \"id\", void 0);\n    __decorate([\n        Property(-1)\n    ], NodeBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], NodeBase.prototype, \"margin\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"visible\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], NodeBase.prototype, \"ports\", void 0);\n    __decorate([\n        Property(true)\n    ], NodeBase.prototype, \"isExpanded\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], NodeBase.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"expandIcon\", void 0);\n    __decorate([\n        Complex({}, IconShape)\n    ], NodeBase.prototype, \"collapseIcon\", void 0);\n    __decorate([\n        Property(false)\n    ], NodeBase.prototype, \"excludeFromLayout\", void 0);\n    __decorate([\n        Property()\n    ], NodeBase.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property('None')\n    ], NodeBase.prototype, \"flip\", void 0);\n    return NodeBase;\n}(ChildProperty));\nexport { NodeBase };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from './diagram-element';\nimport { getContent } from '../../utility/dom-util';\n/**\n * HTMLElement defines the basic html elements\n */\nvar DiagramHtmlElement = /** @class */ (function (_super) {\n    __extends(DiagramHtmlElement, _super);\n    /**\n     * set the id for each element\n     */\n    function DiagramHtmlElement(nodeId, diagramId, annotationId) {\n        var _this = _super.call(this) || this;\n        _this.data = '';\n        /**\n         * Gets the node id for the element\n         */\n        _this.nodeId = '';\n        /**\n         * defines the id of the annotation on rendering template on label.\n         * @private\n         */\n        _this.annotationId = '';\n        /**\n         * Gets the diagram id for the html element\n         */\n        _this.diagramId = '';\n        _this.diagramId = diagramId;\n        _this.nodeId = nodeId;\n        _this.annotationId = annotationId;\n        return _this;\n    }\n    Object.defineProperty(DiagramHtmlElement.prototype, \"content\", {\n        /**\n         * Gets or sets the geometry of the html element\n         */\n        get: function () {\n            return this.data;\n        },\n        /**\n         * Gets or sets the value of the html element\n         */\n        set: function (value) {\n            this.data = value;\n            this.template = getContent(this, true);\n            this.isDirt = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return DiagramHtmlElement;\n}(DiagramElement));\nexport { DiagramHtmlElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, Complex } from '@syncfusion/ej2-base';\nimport { Container } from '../core/containers/container';\nimport { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { SelectorConstraints } from '../enum/enum';\nimport { Margin } from '../core/appearance';\n/**\n * A collection of frequently used commands that will be added around the selector\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let nodes: NodeModel[] = [{\n *           id: 'node1', width: 100, height: 100, offsetX: 100, offsetY: 100,\n *           annotations: [{ content: 'Default Shape' }]\n *       },\n *       {\n *           id: 'node2', width: 100, height: 100, offsetX: 300, offsetY: 100,\n *           shape: {\n *               type: 'Basic', shape: 'Ellipse'\n *           },\n *           annotations: [{ content: 'Path Element' }]\n *       }\n *       ];\n *       let connectors: ConnectorModel[] = [{\n *           id: 'connector1',\n *           type: 'Straight',\n *           sourcePoint: { x: 100, y: 300 },\n *           targetPoint: { x: 200, y: 400 },\n *       }];\n * let handle: UserHandleModel[] = [\n * { name: 'handle', margin: { top: 0, bottom: 0, left: 0, right: 0 }, offset: 0,\n * pathData: 'M 376.892,225.284L 371.279,211.95L 376.892,198.617L 350.225,211.95L 376.892,225.284 Z',\n * side: 'Top', horizontalAlignment: 'Center', verticalAlignment: 'Center',\n * pathColor: 'yellow' }];\n * let diagram: Diagram = new Diagram({\n * ...\n *     connectors: connectors, nodes: nodes,\n *     selectedItems: { constraints: SelectorConstraints.All, userHandles: handle },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar UserHandle = /** @class */ (function (_super) {\n    __extends(UserHandle, _super);\n    function UserHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UserHandle\n     */\n    UserHandle.prototype.getClassName = function () {\n        return 'UserHandle';\n    };\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"pathData\", void 0);\n    __decorate([\n        Property('#000000')\n    ], UserHandle.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('top')\n    ], UserHandle.prototype, \"side\", void 0);\n    __decorate([\n        Property('')\n    ], UserHandle.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0.5)\n    ], UserHandle.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property(25)\n    ], UserHandle.prototype, \"size\", void 0);\n    __decorate([\n        Property('white')\n    ], UserHandle.prototype, \"pathColor\", void 0);\n    __decorate([\n        Property(10)\n    ], UserHandle.prototype, \"displacement\", void 0);\n    __decorate([\n        Property(true)\n    ], UserHandle.prototype, \"visible\", void 0);\n    __decorate([\n        Property(0)\n    ], UserHandle.prototype, \"offset\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], UserHandle.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], UserHandle.prototype, \"verticalAlignment\", void 0);\n    return UserHandle;\n}(ChildProperty));\nexport { UserHandle };\n/**\n * Defines the size and position of selected items and defines the appearance of selector\n */\nvar Selector = /** @class */ (function (_super) {\n    __extends(Selector, _super);\n    function Selector() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Initializes the UI of the container\n     */\n    Selector.prototype.init = function (diagram) {\n        var container = new Container();\n        container.measureChildren = false;\n        var consize = new Size();\n        container.children = [];\n        if (this.annotation) {\n            var object = (this.nodes.length > 0) ? diagram.nameTable[this.nodes[0].id].wrapper :\n                diagram.nameTable[this.connectors[0].id].wrapper;\n            var wrapper = diagram.getWrapper(object, this.annotation.id);\n            container.children.push(wrapper);\n        }\n        else {\n            if (this.nodes || this.connectors) {\n                for (var i = 0; i < this.nodes.length; i++) {\n                    var node = diagram.nameTable[this.nodes[i].id];\n                    var wrapper = node.wrapper;\n                    // this.width = wrapper.actualSize.width; \n                    // this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle;\n                    // this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n                for (var j = 0; j < this.connectors.length; j++) {\n                    var connector = diagram.nameTable[this.connectors[j].id];\n                    var wrapper = connector.wrapper;\n                    // this.width = wrapper.actualSize.width; this.height = wrapper.actualSize.height;\n                    // this.rotateAngle = wrapper.rotateAngle; this.offsetX = wrapper.offsetX;\n                    // this.offsetY = wrapper.offsetY;\n                    container.children.push(wrapper);\n                }\n            }\n        }\n        this.wrapper = container;\n        return container;\n    };\n    __decorate([\n        Property(null)\n    ], Selector.prototype, \"wrapper\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Selector.prototype, \"nodes\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Selector.prototype, \"connectors\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Selector.prototype, \"height\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Selector.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Selector.prototype, \"pivot\", void 0);\n    __decorate([\n        Property('CompleteIntersect')\n    ], Selector.prototype, \"rubberBandSelectionMode\", void 0);\n    __decorate([\n        Collection([], UserHandle)\n    ], Selector.prototype, \"userHandles\", void 0);\n    __decorate([\n        Property(SelectorConstraints.All)\n    ], Selector.prototype, \"constraints\", void 0);\n    return Selector;\n}(ChildProperty));\nexport { Selector };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Container } from './container';\nimport { rotateSize } from '../../utility/base-util';\n/**\n * StackPanel module is used to arrange its children in a line\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    function StackPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * Gets/Sets the orientation of the stack panel\n         */\n        _this.orientation = 'Vertical';\n        /**\n         * Not applicable for canvas\n         * to avoid the child size updation with respect to parent ser true\n         * @private\n         */\n        _this.measureChildren = undefined;\n        return _this;\n    }\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measure = function (availableSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.updateHorizontalStack : this.updateVerticalStack;\n        this.desiredSize = this.measureStackPanel(availableSize, updateSize);\n        return this.desiredSize;\n    };\n    /**\n     * Arranges the child elements of the stack panel\n     * @param desiredSize\n     */\n    StackPanel.prototype.arrange = function (desiredSize) {\n        var updateSize = this.orientation === 'Horizontal' ? this.arrangeHorizontalStack : this.arrangeVerticalStack;\n        this.actualSize = this.arrangeStackPanel(desiredSize, updateSize);\n        this.updateBounds();\n        return this.actualSize;\n    };\n    /**\n     * Measures the minimum space that the panel needs\n     * @param availableSize\n     */\n    StackPanel.prototype.measureStackPanel = function (availableSize, updateSize) {\n        var desired = undefined;\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.parentTransform = this.rotateAngle + this.parentTransform;\n                //Measure children\n                if (this.measureChildren) {\n                    child.measure(child.desiredSize);\n                }\n                else {\n                    child.measure(availableSize);\n                }\n                var childSize = child.desiredSize.clone();\n                //Consider Child's margin\n                this.applyChildMargin(child, childSize);\n                //Consider children's rotation\n                if (child.rotateAngle !== 0) {\n                    childSize = rotateSize(childSize, child.rotateAngle);\n                }\n                //Measure stack panel\n                if (desired === undefined) {\n                    desired = childSize;\n                }\n                else {\n                    if (!child.preventContainer) {\n                        updateSize(childSize, desired);\n                    }\n                }\n            }\n        }\n        desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        this.stretchChildren(desired);\n        //Considering padding values\n        this.applyPadding(desired);\n        return desired;\n    };\n    StackPanel.prototype.arrangeStackPanel = function (desiredSize, updatePosition) {\n        if (this.children !== undefined && this.children.length > 0) {\n            var x = void 0;\n            var y = void 0;\n            x = this.offsetX - desiredSize.width * this.pivot.x + this.padding.left;\n            y = this.offsetY - desiredSize.height * this.pivot.y + this.padding.top;\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                var childSize = child.desiredSize.clone();\n                var rotatedSize = childSize;\n                if (this.orientation === 'Vertical') {\n                    y += child.margin.top;\n                }\n                else {\n                    x += child.margin.left;\n                }\n                if (child.rotateAngle !== 0) {\n                    rotatedSize = rotateSize(childSize, child.rotateAngle);\n                }\n                var center = updatePosition(x, y, child, this, desiredSize, rotatedSize);\n                _super.prototype.findChildOffsetFromCenter.call(this, child, center);\n                child.arrange(childSize, true);\n                if (this.orientation === 'Vertical') {\n                    y += rotatedSize.height + child.margin.bottom;\n                }\n                else {\n                    x += rotatedSize.width + child.margin.right;\n                }\n            }\n        }\n        return desiredSize;\n    };\n    StackPanel.prototype.updateHorizontalStack = function (child, parent) {\n        parent.height = Math.max(child.height, parent.height);\n        parent.width += child.width;\n    };\n    StackPanel.prototype.updateVerticalStack = function (child, parent) {\n        parent.width = Math.max(child.width, parent.width);\n        parent.height += child.height;\n    };\n    StackPanel.prototype.arrangeHorizontalStack = function (x, y, child, parent, parenBounds, childBounds) {\n        var centerY = 0;\n        if (child.verticalAlignment === 'Top') {\n            centerY = y + child.margin.top + childBounds.height / 2;\n        }\n        else if (child.verticalAlignment === 'Bottom') {\n            var parentBottom = parent.offsetY + parenBounds.height * (1 - parent.pivot.y);\n            centerY = parentBottom - parent.padding.bottom - child.margin.bottom - childBounds.height / 2;\n        }\n        else {\n            centerY = parent.offsetY - parenBounds.height * parent.pivot.y + parenBounds.height / 2;\n            if (child.margin.top) {\n                centerY = y + child.margin.top + childBounds.height / 2;\n            }\n        }\n        return { x: x + childBounds.width / 2, y: centerY };\n    };\n    StackPanel.prototype.arrangeVerticalStack = function (x, y, child, parent, parentSize, childSize) {\n        var centerX = 0;\n        if (child.horizontalAlignment === 'Left') {\n            centerX = x + child.margin.left + childSize.width / 2;\n        }\n        else if (child.horizontalAlignment === 'Right') {\n            var parentRight = parent.offsetX + parentSize.width * (1 - parent.pivot.x);\n            centerX = parentRight - parent.padding.right - child.margin.right - childSize.width / 2;\n        }\n        else {\n            centerX = parent.offsetX - parentSize.width * parent.pivot.x + parentSize.width / 2;\n            if (child.margin.left) {\n                centerX = x + child.margin.left + childSize.width / 2;\n            }\n        }\n        return { x: centerX, y: y + childSize.height / 2 };\n    };\n    StackPanel.prototype.stretchChildren = function (size) {\n        if (this.children !== undefined && this.children.length > 0) {\n            for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (this.orientation === 'Vertical') {\n                    if (child.horizontalAlignment === 'Stretch') {\n                        child.desiredSize.width = size.width - (child.margin.left + child.margin.right);\n                    }\n                }\n                else {\n                    if (child.verticalAlignment === 'Stretch') {\n                        child.desiredSize.height = size.height - (child.margin.top + child.margin.bottom);\n                    }\n                }\n            }\n        }\n    };\n    StackPanel.prototype.applyChildMargin = function (child, size) {\n        size.height += child.margin.top + child.margin.bottom;\n        size.width += child.margin.left + child.margin.right;\n    };\n    return StackPanel;\n}(Container));\nexport { StackPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DiagramElement } from '../elements/diagram-element';\nimport { Canvas } from './canvas';\nimport { Container } from './container';\nimport { Size } from '../../primitives/size';\nimport { randomId } from '../../utility/base-util';\nimport { TextElement } from '../elements/text-element';\n/**\n * Grid panel is used to arrange the children in a table like structure\n */\nvar GridPanel = /** @class */ (function (_super) {\n    __extends(GridPanel, _super);\n    function GridPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.childTable = [];\n        _this.cellStyle = {};\n        _this.desiredRowHeight = [];\n        _this.desiredCellWidth = [];\n        return _this;\n    }\n    /** @private */\n    GridPanel.prototype.rowDefinitions = function () {\n        return this.rowDefns;\n    };\n    /** @private */\n    GridPanel.prototype.columnDefinitions = function () {\n        return this.colDefns;\n    };\n    GridPanel.prototype.addObject = function (obj, rowId, columnId, rowSpan, columnSpan) {\n        //check if exists\n        if (this.rows.length >= rowId) {\n            var row = this.rows[rowId];\n            if (row.cells.length > columnId) {\n                columnSpan = columnSpan || 1;\n                rowSpan = rowSpan || 1;\n                var cell = row.cells[columnId];\n                cell.columnSpan = Math.max(columnSpan, cell.columnSpan);\n                cell.rowSpan = Math.max(rowSpan, cell.rowSpan);\n                var object = new GridCellItem();\n                object = obj;\n                object.rowId = rowId;\n                object.columnId = columnId;\n                object.columnSpan = columnSpan;\n                this.childTable[object.id] = object;\n                this.addObjectToCell(object, cell);\n            }\n        }\n    };\n    // public setCellStyle(rowId: number, columnId: number, cellStyle: ShapeStyleModel): void {\n    //     if (this.rows.length > rowId) {\n    //         let row: GridRow = this.rows[rowId];\n    //         if (row.cells.length > columnId) {\n    //             let cell: GridCell = row.cells[columnId];\n    //             cell.style = cellStyle;\n    //         }\n    //     }\n    // }\n    // public getRowId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowId;\n    // }\n    // public getColumnId(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnId;\n    // }\n    // public getRowSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).rowSpan;\n    // }\n    // public getColumnSpan(obj: DiagramElement): number {\n    //     return (this.childTable[obj.id] as GridCellItem).columnSpan;\n    // }\n    GridPanel.prototype.addObjectToCell = function (obj, cell) {\n        if (!cell.children) {\n            cell.children = [];\n        }\n        // obj.minWidth = cell.desiredCellWidth; obj.minHeight = cell.desiredCellHeight;\n        obj.style.strokeColor = 'black';\n        obj.style.strokeWidth = 1;\n        obj.style.fill = 'white';\n        cell.children.push(obj);\n    };\n    /** @private */\n    GridPanel.prototype.updateProperties = function (offsetX, offsetY, width, height) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.width = width;\n        this.height = height;\n    };\n    /** @private */\n    GridPanel.prototype.setDefinitions = function (rows, columns) {\n        this.rowDefns = rows;\n        this.colDefns = columns;\n        this.children = [];\n        this.rows = this.rows || [];\n        for (var i = 0; i < rows.length; i++) {\n            var rowDefn = rows[i];\n            var row = new GridRow();\n            row.cells = [];\n            var defaultCell = new ColumnDefinition();\n            //replace this 100 with a proper property            \n            defaultCell.width = this.width;\n            var columns_1 = this.colDefns;\n            if (columns_1 === undefined || columns_1.length < 1) {\n                columns_1 = [defaultCell];\n            }\n            this.addCellInRow(columns_1, rowDefn, row);\n            this.rows.push(row);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addCellInRow = function (columns, rowDefn, row) {\n        for (var j = 0; j < columns.length; j++) {\n            var colDefn = columns[j];\n            var cell = new GridCell();\n            cell.children = [];\n            this.cellStyle.fill = 'none';\n            this.cellStyle.strokeColor = 'none';\n            cell.id = randomId();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            row.cells.push(cell);\n            this.children.push(cell);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.calculateSize = function () {\n        var rows = this.rows || [];\n        var calculateHeight = 0;\n        var calculateWidth = 0;\n        for (var i = 0; i < rows.length; i++) {\n            var row = this.rows[i];\n            calculateWidth = 0;\n            for (var j = 0; j < row.cells.length; j++) {\n                calculateWidth += row.cells[j].desiredCellWidth;\n                if (j === row.cells.length - 1) {\n                    if (this.width && this.width !== calculateWidth) {\n                        row.cells[j].desiredCellWidth += (this.width - calculateWidth);\n                        row.cells[j].minWidth = row.cells[j].desiredCellWidth;\n                        if (row.cells[j].children && row.cells[j].children.length) {\n                            row.cells[j].children[0].width = row.cells[j].desiredCellWidth;\n                        }\n                        this.colDefns[j].width = row.cells[j].desiredCellWidth;\n                    }\n                    calculateHeight += row.cells[j].desiredCellHeight;\n                    if (i === rows.length - 1) {\n                        if (this.height && this.height !== calculateHeight) {\n                            var height = (this.height - calculateHeight);\n                            if (height > 0) {\n                                for (var k = 0; k < row.cells.length; k++) {\n                                    row.cells[k].desiredCellHeight += height;\n                                    row.cells[k].minHeight = row.cells[k].desiredCellHeight = row.cells[k].desiredCellHeight;\n                                    if (row.cells[k].children && row.cells[k].children.length) {\n                                        row.cells[k].children[0].height = row.cells[k].desiredCellHeight;\n                                    }\n                                }\n                                this.rowDefns[i].height += height;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateRowHeight = function (rowId, height, isConsiderChild, padding) {\n        var row = this.rows[rowId];\n        this.rowDefns[rowId].height = height;\n        if (this.height !== undefined) {\n            this.height += height - row.cells[0].desiredCellHeight;\n        }\n        for (var i = 0; i < row.cells.length; i++) {\n            row.cells[i].desiredCellHeight = row.cells[i].minHeight = height;\n            if (row.cells[i].children && row.cells[i].children.length) {\n                row.cells[i].children[0].height = height;\n                this.setTextRefresh(row.cells[i].children[0]);\n            }\n        }\n        this.desiredRowHeight[rowId] = height;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minHeight = (padding !== undefined) ? this.calculateCellHeightBasedOnChildren(rowId, padding) :\n                this.calculateCellHeight(rowId);\n            if (minHeight > height) {\n                this.updateRowHeight(rowId, minHeight, false);\n            }\n        }\n    };\n    GridPanel.prototype.setTextRefresh = function (canvas) {\n        if (canvas.children && canvas.children.length) {\n            var children = canvas.children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i] instanceof TextElement) {\n                    children[i].refreshTextElement();\n                }\n                if (children[i] instanceof Canvas) {\n                    this.setTextRefresh(children[i]);\n                }\n            }\n        }\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnWidth = function (colId, width, isConsiderChild, padding) {\n        this.colDefns[colId].width = width;\n        if (this.width !== undefined) {\n            this.width += width - this.rows[this.rows.length - 1].cells[colId].desiredCellWidth;\n        }\n        for (var i = 0; i < this.rows.length; i++) {\n            this.setTextRefresh(this.rows[i].cells[0]);\n            this.rows[i].cells[colId].desiredCellWidth = this.rows[i].cells[colId].minWidth = width;\n            if (this.rows[i].cells[colId].children && this.rows[i].cells[colId].children.length) {\n                this.rows[i].cells[colId].children[0].width = width;\n            }\n        }\n        this.desiredCellWidth[colId] = width;\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n        if (isConsiderChild) {\n            var minWidth = (padding !== undefined) ? this.calculateCellWidthBasedOnChildren(colId, padding) :\n                this.calculateCellWidth(colId);\n            if (minWidth > width) {\n                this.updateColumnWidth(colId, minWidth, false);\n            }\n        }\n    };\n    GridPanel.prototype.calculateCellWidth = function (colIndex) {\n        var maxWidth;\n        var width;\n        var cell;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            if (cell.columnSpan === 1) {\n                width = (cell.outerBounds.width > cell.bounds.width &&\n                    (cell.children.length === 0 || cell.children[0].maxWidth === undefined)) ? cell.outerBounds.width : cell.bounds.width;\n                if (maxWidth) {\n                    maxWidth = (maxWidth < width) ? width : maxWidth;\n                }\n                else {\n                    maxWidth = width;\n                }\n            }\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeight = function (rowIndex) {\n        var maxHeight;\n        var height;\n        var cell;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            height = (cell.outerBounds.height > cell.bounds.height) ? cell.outerBounds.height : cell.bounds.height;\n            if (maxHeight) {\n                maxHeight = (maxHeight < height) ? height : maxHeight;\n            }\n            else {\n                maxHeight = height;\n            }\n        }\n        return maxHeight;\n    };\n    GridPanel.prototype.calculateCellSizeBasedOnChildren = function (cell, option, padding, maxSize) {\n        var maxBounds;\n        var canvas;\n        canvas = (cell && cell.children.length > 0) ? cell.children[0] : undefined;\n        if (canvas && cell.columnSpan === 1) {\n            maxBounds = (option === 'Width') ? canvas.bounds.right : canvas.bounds.bottom;\n            if (!maxSize) {\n                maxSize = (option === 'Width') ? canvas.bounds.width : canvas.bounds.height;\n            }\n            for (var j = 0; j < canvas.children.length; j++) {\n                var children = canvas.children[j];\n                if (children instanceof Canvas) {\n                    if (children.id.indexOf('header') === -1) {\n                        var bounds = ((option === 'Width') ? children.bounds.right : children.bounds.bottom) + padding;\n                        if (bounds > maxBounds) {\n                            var size = (bounds - maxBounds) + ((option === 'Width') ? canvas.bounds.width : canvas.bounds.height);\n                            if (maxSize) {\n                                maxSize = (maxSize < size) ? size : maxSize;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return maxSize;\n    };\n    GridPanel.prototype.calculateCellWidthBasedOnChildren = function (colIndex, padding) {\n        var maxWidth;\n        var width;\n        var cell;\n        var maxBounds;\n        var canvas;\n        for (var i = 0; i < this.rows.length; i++) {\n            cell = this.rows[i].cells[colIndex];\n            maxWidth = this.calculateCellSizeBasedOnChildren(cell, 'Width', padding, maxWidth);\n        }\n        return maxWidth;\n    };\n    GridPanel.prototype.calculateCellHeightBasedOnChildren = function (rowIndex, padding) {\n        var maxHeight;\n        var height;\n        var cell;\n        var maxBounds;\n        var canvas;\n        var row = this.rows[rowIndex];\n        for (var i = 0; i < row.cells.length; i++) {\n            cell = row.cells[i];\n            maxHeight = this.calculateCellSizeBasedOnChildren(cell, 'Height', padding, maxHeight);\n        }\n        return maxHeight;\n    };\n    /** @private */\n    GridPanel.prototype.addRow = function (rowId, rowDefn, isMeasure) {\n        if (this.rowDefns.length > 0) {\n            this.rowDefns.splice(rowId, 0, rowDefn);\n        }\n        else {\n            this.rowDefns.push(rowDefn);\n        }\n        var row = new GridRow();\n        row.cells = [];\n        var defaultCell = new ColumnDefinition();\n        defaultCell.width = this.width;\n        var columns = this.colDefns;\n        this.addCellInRow(columns, rowDefn, row);\n        if (rowId > this.rows.length - 1) {\n            this.rows.push(row);\n        }\n        else {\n            this.rows.splice(rowId, 0, row);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.addColumn = function (columnId, column, isMeasure) {\n        var row;\n        var rowDefn;\n        var colDefn;\n        var cell;\n        var rows = this.rows;\n        if (this.colDefns.length > 0) {\n            this.colDefns.splice(columnId, 0, column);\n        }\n        else {\n            this.colDefns.push(column);\n        }\n        if (this.width !== undefined) {\n            this.width += column.width;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            row = rows[i];\n            rowDefn = this.rowDefns[i];\n            colDefn = column;\n            cell = new GridCell();\n            cell.style = this.cellStyle;\n            cell.desiredCellWidth = cell.minWidth = colDefn.width;\n            cell.desiredCellHeight = cell.minHeight = rowDefn.height;\n            cell.children = [];\n            if (columnId > row.cells.length - 1) {\n                row.cells.push(cell);\n            }\n            else {\n                row.cells.splice(columnId, 0, cell);\n            }\n            this.children.push(cell);\n        }\n        if (isMeasure) {\n            this.measure(new Size(this.width, this.height));\n            this.arrange(this.desiredSize);\n        }\n    };\n    /** @private */\n    GridPanel.prototype.removeRow = function (rowId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        var removeRow = rows[rowId];\n        this.height -= this.rowDefns[rowId].height;\n        for (var i = 0; i < removeRow.cells.length; i++) {\n            cell = removeRow.cells[i];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n        }\n        this.rows.splice(rowId, 1);\n        this.rowDefns.splice(rowId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.removeColumn = function (columnId) {\n        var cell;\n        var element;\n        var rows = this.rows;\n        this.width -= this.colDefns[columnId].width;\n        for (var i = 0; i < rows.length; i++) {\n            cell = rows[i].cells[columnId];\n            this.children.splice(this.children.indexOf(cell), 1);\n            element = document.getElementById(cell.id + '_groupElement');\n            if (element && element.parentElement) {\n                element.parentElement.removeChild(element);\n            }\n            rows[i].cells.splice(columnId, 1);\n        }\n        this.colDefns.splice(columnId, 1);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateRowIndex = function (currentIndex, newIndex) {\n        var rows = this.rows;\n        var temp = this.rows[currentIndex];\n        this.rows.splice(currentIndex, 1);\n        this.rows.splice(newIndex, 0, temp);\n        var tempRow = this.rowDefns[currentIndex];\n        this.rowDefns.splice(currentIndex, 1);\n        this.rowDefns.splice(newIndex, 0, tempRow);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.updateColumnIndex = function (startRowIndex, currentIndex, newIndex) {\n        var temp;\n        var cell;\n        var tempSize;\n        for (var i = startRowIndex; i < this.rows.length; i++) {\n            temp = this.rows[i];\n            cell = this.rows[i].cells[currentIndex];\n            temp.cells.splice(currentIndex, 1);\n            temp.cells.splice(newIndex, 0, cell);\n        }\n        var tempCol = this.colDefns[currentIndex];\n        this.colDefns.splice(currentIndex, 1);\n        this.colDefns.splice(newIndex, 0, tempCol);\n        tempSize = this.desiredCellWidth[currentIndex];\n        this.desiredCellWidth.splice(currentIndex, 1);\n        this.desiredCellWidth.splice(newIndex, 0, tempSize);\n        this.measure(new Size(this.width, this.height));\n        this.arrange(this.desiredSize);\n    };\n    /** @private */\n    GridPanel.prototype.measure = function (availableSize) {\n        var desired = undefined;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var i = 0;\n            var j = 0;\n            desired = new Size(0, 0);\n            this.calculateSize();\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var size = cell.measure(new Size(cell.desiredCellWidth, cell.desiredCellHeight));\n                    if (cell.rowSpan === 1) {\n                        if (j === 0 || this.desiredRowHeight[i] === undefined) {\n                            this.desiredRowHeight[i] = size.height;\n                        }\n                        else {\n                            this.desiredRowHeight[i] = Math.max(size.height, this.desiredRowHeight[i]);\n                        }\n                    }\n                    if (cell.columnSpan === 1) {\n                        if (i === 0 || this.desiredCellWidth[j] === undefined) {\n                            this.desiredCellWidth[j] = size.width;\n                        }\n                        else {\n                            this.desiredCellWidth[j] = Math.max(size.width, this.desiredCellWidth[j]);\n                        }\n                        if (i === this.rows.length - 1) {\n                            desired.width += this.desiredCellWidth[j];\n                        }\n                    }\n                    j++;\n                }\n                desired.height += this.desiredRowHeight[i];\n                i++;\n            }\n            //to-do update definitions\n            i = j = 0;\n            var rowIndex = 0;\n            for (var _d = 0, _e = this.rows; _d < _e.length; _d++) {\n                var row = _e[_d];\n                j = 0;\n                var cellIndex = 0;\n                for (var _f = 0, _g = row.cells; _f < _g.length; _f++) {\n                    var cell = _g[_f];\n                    if (cell.columnSpan !== 1) {\n                        cell.desiredSize.width = 0;\n                        for (var start = 0; start < cell.columnSpan; start++) {\n                            if ((start + j) < row.cells.length) {\n                                cell.desiredSize.width += this.desiredCellWidth[start + j];\n                                cell.minWidth = cell.desiredSize.width;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                        j++;\n                    }\n                    else {\n                        cell.desiredSize.width = this.desiredCellWidth[cellIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    if (cell.rowSpan !== 1) {\n                        cell.desiredSize.height = 0;\n                        for (var start = 0; start < cell.rowSpan; start++) {\n                            if ((start + rowIndex) < this.rows.length) {\n                                cell.desiredSize.height += this.desiredRowHeight[start + rowIndex];\n                                cell.minHeight = cell.desiredSize.height;\n                                cell.measure(cell.desiredSize);\n                            }\n                        }\n                    }\n                    else {\n                        cell.desiredSize.height = this.desiredRowHeight[rowIndex];\n                        cell.measure(cell.desiredSize);\n                    }\n                    i++;\n                    cellIndex++;\n                }\n                rowIndex++;\n            }\n        }\n        if (desired === undefined) {\n            desired = _super.prototype.validateDesiredSize.call(this, desired, availableSize);\n        }\n        _super.prototype.stretchChildren.call(this, desired);\n        this.desiredSize = desired;\n        return desired;\n    };\n    /** @private */\n    GridPanel.prototype.arrange = function (desiredSize, isChange) {\n        var j = 0;\n        var i = 0;\n        if (this.rows !== undefined && this.rows.length > 0) {\n            var x = this.offsetX - desiredSize.width * this.pivot.x;\n            var y = this.offsetY - desiredSize.height * this.pivot.y;\n            var cellX = x;\n            for (var _i = 0, _a = this.rows; _i < _a.length; _i++) {\n                var row = _a[_i];\n                cellX = x;\n                j = 0;\n                for (var _b = 0, _c = row.cells; _b < _c.length; _b++) {\n                    var cell = _c[_b];\n                    var cellWidth = Math.max(this.desiredCellWidth[j], cell.desiredSize.width);\n                    var cellHeight = Math.max(this.desiredRowHeight[i], cell.desiredSize.height);\n                    cell.offsetX = cellX + cellWidth * cell.pivot.x;\n                    cell.offsetY = y + cellHeight * cell.pivot.y;\n                    cellX += this.desiredCellWidth[j];\n                    cell.arrange(new Size(cellWidth, cellHeight));\n                    j++;\n                }\n                y += this.desiredRowHeight[i];\n                i++;\n            }\n            if (isChange) {\n                // Need to remove the unwanted the child elements in the grid\n                // Used for row span and column span.\n                var cell = void 0;\n                var row = void 0;\n                var k = void 0;\n                var z = void 0;\n                var removeCell = void 0;\n                for (i = 0; i < this.rows.length; i++) {\n                    row = this.rows[i];\n                    for (j = 0; j < row.cells.length; j++) {\n                        cell = row.cells[j];\n                        if (cell.columnSpan > 1) {\n                            // remove a child element when a column span is greater than 1\n                            this.children.splice((this.children.indexOf(cell)) + 1, cell.columnSpan - 1);\n                        }\n                        if (cell.rowSpan > 1) {\n                            for (k = i, z = 0; ((k + cell.rowSpan - 1) < this.rows.length && z < cell.rowSpan - 1); k++, z++) {\n                                removeCell = this.rows[k + 1].cells[j];\n                                // remove a child element when a row span is greater than 1\n                                this.children.splice(this.children.indexOf(removeCell), 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.actualSize = desiredSize;\n        this.updateBounds();\n        return desiredSize;\n    };\n    return GridPanel;\n}(Container));\nexport { GridPanel };\n/** @private */\nvar RowDefinition = /** @class */ (function () {\n    function RowDefinition() {\n        this.height = undefined;\n    }\n    return RowDefinition;\n}());\nexport { RowDefinition };\n/** @private */\nvar ColumnDefinition = /** @class */ (function () {\n    function ColumnDefinition() {\n        this.width = undefined;\n    }\n    return ColumnDefinition;\n}());\nexport { ColumnDefinition };\n/** @private */\nvar GridRow = /** @class */ (function () {\n    function GridRow() {\n        this.cells = null;\n    }\n    return GridRow;\n}());\nexport { GridRow };\n/** @private */\nvar GridCell = /** @class */ (function (_super) {\n    __extends(GridCell, _super);\n    function GridCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.columnSpan = 1;\n        _this.rowSpan = 1;\n        return _this;\n    }\n    return GridCell;\n}(Canvas));\nexport { GridCell };\nvar GridCellItem = /** @class */ (function (_super) {\n    __extends(GridCellItem, _super);\n    function GridCellItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.rowId = 0;\n        _this.columnId = 0;\n        _this.rowSpan = 1;\n        _this.columnSpan = 1;\n        return _this;\n    }\n    return GridCellItem;\n}(DiagramElement));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/// <reference path='./node-base-model.d.ts'/>\nimport { Property, Complex, Collection, ChildProperty, ComplexFactory } from '@syncfusion/ej2-base';\nimport { ShapeStyle, Margin, TextStyle, Shadow } from '../core/appearance';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { ElementAction } from '../enum/enum';\nimport { Container } from '../core/containers/container';\nimport { Canvas } from '../core/containers/canvas';\nimport { getBasicShape } from './dictionary/basic-shapes';\nimport { DiagramElement } from '../core/elements/diagram-element';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { PointPort } from './port';\nimport { Annotation, ShapeAnnotation } from './annotation';\nimport { getPortShape, getIconShape } from './dictionary/common';\nimport { getFlowShape } from './dictionary/flow-shapes';\nimport { NodeConstraints } from '../enum/enum';\nimport { checkPortRestriction, setUMLActivityDefaults, getUMLActivityShapes, updatePortEdges } from './../utility/diagram-util';\nimport { setSwimLaneDefaults } from './../utility/diagram-util';\nimport { randomId, getFunction } from './../utility/base-util';\nimport { NodeBase } from './node-base';\nimport { canShadow } from './../utility/constraints-util';\nimport { PortVisibility } from '../enum/enum';\nimport { measurePath } from './../utility/dom-util';\nimport { getPolygonPath } from './../utility/path-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { StackPanel } from '../core/containers/stack-panel';\nimport { GridPanel } from '../core/containers/grid';\nimport { getULMClassifierShapes } from '../utility/uml-util';\nimport { initSwimLane } from './../utility/swim-lane-util';\nvar getShapeType = function (obj) {\n    switch (obj.type) {\n        case 'Basic':\n            return BasicShape;\n        case 'Flow':\n            return FlowShape;\n        case 'Path':\n            return Path;\n        case 'Image':\n            return Image;\n        case 'Text':\n            return Text;\n        case 'Bpmn':\n            return BpmnShape;\n        case 'Native':\n            return Native;\n        case 'HTML':\n            return Html;\n        case 'UmlActivity':\n            return UmlActivityShape;\n        case 'UmlClassifier':\n            return UmlClassifierShape;\n        case 'SwimLane':\n            return SwimLane;\n        default:\n            return BasicShape;\n    }\n};\n/**\n * Defines the behavior of default shape\n */\nvar Shape = /** @class */ (function (_super) {\n    __extends(Shape, _super);\n    function Shape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Basic')\n    ], Shape.prototype, \"type\", void 0);\n    return Shape;\n}(ChildProperty));\nexport { Shape };\n/**\n * Defines the behavior of path shape\n */\nvar Path = /** @class */ (function (_super) {\n    __extends(Path, _super);\n    function Path() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Path\n     */\n    Path.prototype.getClassName = function () {\n        return 'Path';\n    };\n    __decorate([\n        Property('Path')\n    ], Path.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Path.prototype, \"data\", void 0);\n    return Path;\n}(Shape));\nexport { Path };\n/**\n * Defines the behavior of Native shape\n */\nvar Native = /** @class */ (function (_super) {\n    __extends(Native, _super);\n    function Native() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Native\n     */\n    Native.prototype.getClassName = function () {\n        return 'Native';\n    };\n    __decorate([\n        Property('Native')\n    ], Native.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Native.prototype, \"content\", void 0);\n    __decorate([\n        Property('Stretch')\n    ], Native.prototype, \"scale\", void 0);\n    return Native;\n}(Shape));\nexport { Native };\n/**\n * Defines the behavior of html shape\n */\nvar Html = /** @class */ (function (_super) {\n    __extends(Html, _super);\n    function Html() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Html\n     */\n    Html.prototype.getClassName = function () {\n        return 'Html';\n    };\n    __decorate([\n        Property('HTML')\n    ], Html.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Html.prototype, \"content\", void 0);\n    return Html;\n}(Shape));\nexport { Html };\n/**\n * Defines the behavior of image shape\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Image\n     */\n    Image.prototype.getClassName = function () {\n        return 'Image';\n    };\n    __decorate([\n        Property('Image')\n    ], Image.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"source\", void 0);\n    __decorate([\n        Property('')\n    ], Image.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Image.prototype, \"align\", void 0);\n    return Image;\n}(Shape));\nexport { Image };\n/**\n * Defines the behavior of the text shape\n */\nvar Text = /** @class */ (function (_super) {\n    __extends(Text, _super);\n    function Text() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Text\n     */\n    Text.prototype.getClassName = function () {\n        return 'Text';\n    };\n    __decorate([\n        Property('Text')\n    ], Text.prototype, \"type\", void 0);\n    __decorate([\n        Property('')\n    ], Text.prototype, \"content\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], Text.prototype, \"margin\", void 0);\n    return Text;\n}(Shape));\nexport { Text };\n/**\n * Defines the behavior of the basic shape\n */\nvar BasicShape = /** @class */ (function (_super) {\n    __extends(BasicShape, _super);\n    function BasicShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BasicShape\n     */\n    BasicShape.prototype.getClassName = function () {\n        return 'BasicShape';\n    };\n    __decorate([\n        Property('Basic')\n    ], BasicShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Rectangle')\n    ], BasicShape.prototype, \"shape\", void 0);\n    __decorate([\n        Property(0)\n    ], BasicShape.prototype, \"cornerRadius\", void 0);\n    __decorate([\n        Collection([], Point)\n    ], BasicShape.prototype, \"points\", void 0);\n    return BasicShape;\n}(Shape));\nexport { BasicShape };\n/**\n * Defines the behavior of the flow shape\n */\nvar FlowShape = /** @class */ (function (_super) {\n    __extends(FlowShape, _super);\n    function FlowShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class FlowShape\n     */\n    FlowShape.prototype.getClassName = function () {\n        return 'FlowShape';\n    };\n    __decorate([\n        Property('Flow')\n    ], FlowShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Terminator')\n    ], FlowShape.prototype, \"shape\", void 0);\n    return FlowShape;\n}(Shape));\nexport { FlowShape };\n/**\n * Defines the behavior of the bpmn gateway shape\n */\nvar BpmnGateway = /** @class */ (function (_super) {\n    __extends(BpmnGateway, _super);\n    function BpmnGateway() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnGateway\n     */\n    BpmnGateway.prototype.getClassName = function () {\n        return 'BpmnGateway';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnGateway.prototype, \"type\", void 0);\n    return BpmnGateway;\n}(ChildProperty));\nexport { BpmnGateway };\n/**\n * Defines the behavior of the bpmn data object\n */\nvar BpmnDataObject = /** @class */ (function (_super) {\n    __extends(BpmnDataObject, _super);\n    function BpmnDataObject() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnDataObject\n     */\n    BpmnDataObject.prototype.getClassName = function () {\n        return 'BpmnDataObject';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnDataObject.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnDataObject.prototype, \"collection\", void 0);\n    return BpmnDataObject;\n}(ChildProperty));\nexport { BpmnDataObject };\n/**\n * Defines the behavior of the bpmn task shape\n */\nvar BpmnTask = /** @class */ (function (_super) {\n    __extends(BpmnTask, _super);\n    function BpmnTask() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"type\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnTask.prototype, \"loop\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"call\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnTask.prototype, \"compensation\", void 0);\n    return BpmnTask;\n}(ChildProperty));\nexport { BpmnTask };\n/**\n * Defines the behavior of the bpmn Event shape\n */\nvar BpmnEvent = /** @class */ (function (_super) {\n    __extends(BpmnEvent, _super);\n    function BpmnEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnEvent\n     */\n    BpmnEvent.prototype.getClassName = function () {\n        return 'BpmnEvent';\n    };\n    __decorate([\n        Property('Start')\n    ], BpmnEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnEvent.prototype, \"trigger\", void 0);\n    return BpmnEvent;\n}(ChildProperty));\nexport { BpmnEvent };\n/**\n * Defines the behavior of the bpmn sub event\n */\nvar BpmnSubEvent = /** @class */ (function (_super) {\n    __extends(BpmnSubEvent, _super);\n    function BpmnSubEvent() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnSubEvent\n     */\n    BpmnSubEvent.prototype.getClassName = function () {\n        return 'BpmnSubEvent';\n    };\n    __decorate([\n        Property('None')\n    ], BpmnSubEvent.prototype, \"trigger\", void 0);\n    __decorate([\n        Property('Start')\n    ], BpmnSubEvent.prototype, \"event\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnSubEvent.prototype, \"id\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], BpmnSubEvent.prototype, \"offset\", void 0);\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], BpmnSubEvent.prototype, \"annotations\", void 0);\n    __decorate([\n        Collection([], PointPort)\n    ], BpmnSubEvent.prototype, \"ports\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], BpmnSubEvent.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], BpmnSubEvent.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Center')\n    ], BpmnSubEvent.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubEvent.prototype, \"visible\", void 0);\n    return BpmnSubEvent;\n}(ChildProperty));\nexport { BpmnSubEvent };\nvar BpmnTransactionSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnTransactionSubProcess, _super);\n    function BpmnTransactionSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ id: 'success', event: 'End', offset: { x: 1, y: 0.5 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"success\", void 0);\n    __decorate([\n        Complex({ id: 'failure', event: 'Intermediate', trigger: 'Error', offset: { x: 0.25, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"failure\", void 0);\n    __decorate([\n        Complex({ id: 'cancel', event: 'Intermediate', trigger: 'Cancel', offset: { x: 0.75, y: 1 } }, BpmnSubEvent)\n    ], BpmnTransactionSubProcess.prototype, \"cancel\", void 0);\n    return BpmnTransactionSubProcess;\n}(ChildProperty));\nexport { BpmnTransactionSubProcess };\n/**\n * Defines the behavior of the BPMNSubProcess\n */\nvar BpmnSubProcess = /** @class */ (function (_super) {\n    __extends(BpmnSubProcess, _super);\n    function BpmnSubProcess() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"adhoc\", void 0);\n    __decorate([\n        Property('Default')\n    ], BpmnSubProcess.prototype, \"boundary\", void 0);\n    __decorate([\n        Property(false)\n    ], BpmnSubProcess.prototype, \"compensation\", void 0);\n    __decorate([\n        Property('None')\n    ], BpmnSubProcess.prototype, \"loop\", void 0);\n    __decorate([\n        Property(true)\n    ], BpmnSubProcess.prototype, \"collapsed\", void 0);\n    __decorate([\n        Collection([], BpmnSubEvent)\n    ], BpmnSubProcess.prototype, \"events\", void 0);\n    __decorate([\n        Complex({}, BpmnTransactionSubProcess)\n    ], BpmnSubProcess.prototype, \"transaction\", void 0);\n    __decorate([\n        Property(undefined)\n    ], BpmnSubProcess.prototype, \"processes\", void 0);\n    return BpmnSubProcess;\n}(ChildProperty));\nexport { BpmnSubProcess };\n/**\n * Defines the behavior of the bpmn activity shape\n */\nvar BpmnActivity = /** @class */ (function (_super) {\n    __extends(BpmnActivity, _super);\n    function BpmnActivity() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnActivity\n     */\n    BpmnActivity.prototype.getClassName = function () {\n        return 'BpmnActivity';\n    };\n    __decorate([\n        Property('Task')\n    ], BpmnActivity.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnTask)\n    ], BpmnActivity.prototype, \"task\", void 0);\n    __decorate([\n        Complex({}, BpmnSubProcess)\n    ], BpmnActivity.prototype, \"subProcess\", void 0);\n    return BpmnActivity;\n}(ChildProperty));\nexport { BpmnActivity };\n/**\n * Defines the behavior of the bpmn annotation\n */\nvar BpmnAnnotation = /** @class */ (function (_super) {\n    __extends(BpmnAnnotation, _super);\n    // tslint:disable-next-line:no-any\n    function BpmnAnnotation(parent, propName, defaultValue, isArray) {\n        return _super.call(this, parent, propName, defaultValue, isArray) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnAnnotation\n     */\n    BpmnAnnotation.prototype.getClassName = function () {\n        return 'BpmnAnnotation';\n    };\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"text\", void 0);\n    __decorate([\n        Property('')\n    ], BpmnAnnotation.prototype, \"id\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], BpmnAnnotation.prototype, \"width\", void 0);\n    __decorate([\n        Property(0)\n    ], BpmnAnnotation.prototype, \"length\", void 0);\n    return BpmnAnnotation;\n}(ChildProperty));\nexport { BpmnAnnotation };\n/**\n * Defines the behavior of the bpmn shape\n */\nvar BpmnShape = /** @class */ (function (_super) {\n    __extends(BpmnShape, _super);\n    function BpmnShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class BpmnShape\n     */\n    BpmnShape.prototype.getClassName = function () {\n        return 'BpmnShape';\n    };\n    __decorate([\n        Property('Bpmn')\n    ], BpmnShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Event')\n    ], BpmnShape.prototype, \"shape\", void 0);\n    __decorate([\n        Complex({}, BpmnEvent)\n    ], BpmnShape.prototype, \"event\", void 0);\n    __decorate([\n        Complex({}, BpmnGateway)\n    ], BpmnShape.prototype, \"gateway\", void 0);\n    __decorate([\n        Complex({}, BpmnDataObject)\n    ], BpmnShape.prototype, \"dataObject\", void 0);\n    __decorate([\n        Complex({}, BpmnActivity)\n    ], BpmnShape.prototype, \"activity\", void 0);\n    __decorate([\n        Complex({}, BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotation\", void 0);\n    __decorate([\n        Collection([], BpmnAnnotation)\n    ], BpmnShape.prototype, \"annotations\", void 0);\n    return BpmnShape;\n}(Shape));\nexport { BpmnShape };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlActivityShape = /** @class */ (function (_super) {\n    __extends(UmlActivityShape, _super);\n    function UmlActivityShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlActivityShape\n     */\n    UmlActivityShape.prototype.getClassName = function () {\n        return 'UmlActivityShape';\n    };\n    __decorate([\n        Property('UmlActivity')\n    ], UmlActivityShape.prototype, \"type\", void 0);\n    __decorate([\n        Property('Action')\n    ], UmlActivityShape.prototype, \"shape\", void 0);\n    return UmlActivityShape;\n}(Shape));\nexport { UmlActivityShape };\n/**\n * Defines the behavior of the uml class method\n */\nvar MethodArguments = /** @class */ (function (_super) {\n    __extends(MethodArguments, _super);\n    function MethodArguments() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class MethodArguments\n     */\n    MethodArguments.prototype.getClassName = function () {\n        return 'MethodArguments';\n    };\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], MethodArguments.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], MethodArguments.prototype, \"style\", void 0);\n    return MethodArguments;\n}(ChildProperty));\nexport { MethodArguments };\n/**\n * Defines the behavior of the uml class attributes\n */\nvar UmlClassAttribute = /** @class */ (function (_super) {\n    __extends(UmlClassAttribute, _super);\n    function UmlClassAttribute() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassAttribute\n     */\n    UmlClassAttribute.prototype.getClassName = function () {\n        return 'UmlClassAttribute';\n    };\n    __decorate([\n        Property('Public')\n    ], UmlClassAttribute.prototype, \"scope\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlClassAttribute.prototype, \"isSeparator\", void 0);\n    return UmlClassAttribute;\n}(MethodArguments));\nexport { UmlClassAttribute };\n/**\n * Defines the behavior of the uml class method\n */\nvar UmlClassMethod = /** @class */ (function (_super) {\n    __extends(UmlClassMethod, _super);\n    function UmlClassMethod() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassMethod\n     */\n    UmlClassMethod.prototype.getClassName = function () {\n        return 'UmlClassMethod';\n    };\n    __decorate([\n        Collection([], MethodArguments)\n    ], UmlClassMethod.prototype, \"parameters\", void 0);\n    return UmlClassMethod;\n}(UmlClassAttribute));\nexport { UmlClassMethod };\n/**\n * Defines the behavior of the uml class shapes\n */\nvar UmlClass = /** @class */ (function (_super) {\n    __extends(UmlClass, _super);\n    function UmlClass() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClass\n     */\n    UmlClass.prototype.getClassName = function () {\n        return 'UmlClass';\n    };\n    __decorate([\n        Property('')\n    ], UmlClass.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlClassAttribute)\n    ], UmlClass.prototype, \"attributes\", void 0);\n    __decorate([\n        Collection([], UmlClassMethod)\n    ], UmlClass.prototype, \"methods\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlClass.prototype, \"style\", void 0);\n    return UmlClass;\n}(ChildProperty));\nexport { UmlClass };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlInterface = /** @class */ (function (_super) {\n    __extends(UmlInterface, _super);\n    function UmlInterface() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlInterface\n     */\n    UmlInterface.prototype.getClassName = function () {\n        return 'UmlInterface';\n    };\n    __decorate([\n        Property(false)\n    ], UmlInterface.prototype, \"isSeparator\", void 0);\n    return UmlInterface;\n}(UmlClass));\nexport { UmlInterface };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumerationMember = /** @class */ (function (_super) {\n    __extends(UmlEnumerationMember, _super);\n    function UmlEnumerationMember() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumerationMember\n     */\n    UmlEnumerationMember.prototype.getClassName = function () {\n        return 'UmlEnumerationMember';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"name\", void 0);\n    __decorate([\n        Property('')\n    ], UmlEnumerationMember.prototype, \"value\", void 0);\n    __decorate([\n        Property(false)\n    ], UmlEnumerationMember.prototype, \"isSeparator\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumerationMember.prototype, \"style\", void 0);\n    return UmlEnumerationMember;\n}(ChildProperty));\nexport { UmlEnumerationMember };\n/**\n * Defines the behavior of the uml interface shapes\n */\nvar UmlEnumeration = /** @class */ (function (_super) {\n    __extends(UmlEnumeration, _super);\n    function UmlEnumeration() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlEnumeration\n     */\n    UmlEnumeration.prototype.getClassName = function () {\n        return 'UmlEnumeration';\n    };\n    __decorate([\n        Property('')\n    ], UmlEnumeration.prototype, \"name\", void 0);\n    __decorate([\n        Collection([], UmlEnumerationMember)\n    ], UmlEnumeration.prototype, \"members\", void 0);\n    __decorate([\n        Complex({}, TextStyle)\n    ], UmlEnumeration.prototype, \"style\", void 0);\n    return UmlEnumeration;\n}(ChildProperty));\nexport { UmlEnumeration };\n/**\n * Defines the behavior of the UMLActivity shape\n */\nvar UmlClassifierShape = /** @class */ (function (_super) {\n    __extends(UmlClassifierShape, _super);\n    function UmlClassifierShape() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class UmlClassifierShape\n     */\n    UmlClassifierShape.prototype.getClassName = function () {\n        return 'UmlClassifierShape';\n    };\n    __decorate([\n        Property('UmlClassifier')\n    ], UmlClassifierShape.prototype, \"type\", void 0);\n    __decorate([\n        Complex({}, UmlClass)\n    ], UmlClassifierShape.prototype, \"class\", void 0);\n    __decorate([\n        Complex({}, UmlInterface)\n    ], UmlClassifierShape.prototype, \"interface\", void 0);\n    __decorate([\n        Complex({}, UmlEnumeration)\n    ], UmlClassifierShape.prototype, \"enumeration\", void 0);\n    __decorate([\n        Property('Class')\n    ], UmlClassifierShape.prototype, \"classifier\", void 0);\n    return UmlClassifierShape;\n}(Shape));\nexport { UmlClassifierShape };\n/**\n * Defines the behavior of nodes\n */\nvar Node = /** @class */ (function (_super) {\n    __extends(Node, _super);\n    // tslint:disable-next-line:no-any\n    function Node(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /** @private */\n        _this.isCanvasUpdate = false;\n        /** @private */\n        _this.status = 'None';\n        /** @private */\n        _this.parentId = '';\n        /** @private */\n        _this.processId = '';\n        /** @private */\n        _this.umlIndex = -1;\n        /** @private */\n        _this.outEdges = [];\n        /** @private */\n        _this.inEdges = [];\n        /** @private */\n        _this.isHeader = false;\n        /** @private */\n        _this.isLane = false;\n        /** @private */\n        _this.isPhase = false;\n        var nodeDefault;\n        if (_this.children && _this.children.length > 0) {\n            nodeDefault = defaultValue;\n            if (!nodeDefault.style || !nodeDefault.style.fill) {\n                _this.style.fill = 'transparent';\n            }\n            if (!nodeDefault.style || !nodeDefault.style.strokeColor) {\n                _this.style.strokeColor = 'transparent';\n            }\n        }\n        if (_this.shape && _this.shape.type === 'UmlActivity') {\n            setUMLActivityDefaults(defaultValue, _this);\n        }\n        if (_this.shape && _this.shape.type === 'SwimLane') {\n            setSwimLaneDefaults(defaultValue, _this);\n        }\n        return _this;\n    }\n    Object.defineProperty(Node.prototype, \"actualSize\", {\n        /** @private */\n        get: function () {\n            if (this.wrapper !== null) {\n                return this.wrapper.actualSize;\n            }\n            else {\n                return new Size(this.width || 0, this.height || 0);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Allows to initialize the UI of a node\n     */\n    /** @private */\n    /* tslint:disable */\n    Node.prototype.init = function (diagram) {\n        var content;\n        if (this.shape.type != 'SwimLane') {\n            content = new DiagramElement();\n        }\n        else {\n            content = new GridPanel();\n        }\n        var textStyle;\n        var changedProperties = 'changedProperties';\n        var oldProperties = 'oldProperties';\n        this.shape[changedProperties] = {};\n        this.shape[oldProperties] = {};\n        switch (this.shape.type) {\n            case 'Path':\n                var pathContent = new PathElement();\n                pathContent.data = this.shape.data;\n                content = pathContent;\n                break;\n            case 'Image':\n                var imageContent = new ImageElement();\n                imageContent.source = this.shape.source;\n                imageContent.imageAlign = this.shape.align;\n                imageContent.imageScale = this.shape.scale;\n                content = imageContent;\n                break;\n            case 'Text':\n                var textContent = new TextElement();\n                textContent.content = this.shape.content;\n                content = textContent;\n                textStyle = this.style;\n                content.style = textStyle;\n                break;\n            case 'Basic':\n                if (this.shape.shape === 'Rectangle') {\n                    var basicshape = new DiagramElement();\n                    content = basicshape;\n                    content.cornerRadius = this.shape.cornerRadius;\n                }\n                else if (this.shape.shape === 'Polygon') {\n                    var path = new PathElement();\n                    path.data = getPolygonPath(this.shape.points);\n                    content = path;\n                }\n                else {\n                    var basicshape = new PathElement();\n                    var basicshapedata = getBasicShape(this.shape.shape);\n                    basicshape.data = basicshapedata;\n                    content = basicshape;\n                }\n                break;\n            case 'Flow':\n                var flowshape = new PathElement();\n                var flowshapedata = getFlowShape(this.shape.shape);\n                flowshape.data = flowshapedata;\n                content = flowshape;\n                break;\n            case 'UmlActivity':\n                var umlactivityshape = new PathElement();\n                content = getUMLActivityShapes(umlactivityshape, content, this);\n                break;\n            case 'Bpmn':\n                if (diagram.bpmnModule) {\n                    content = diagram.bpmnModule.initBPMNContent(content, this, diagram);\n                    this.wrapper.elementActions = this.wrapper.elementActions | ElementAction.ElementIsGroup;\n                    var subProcess = this.shape.activity.subProcess;\n                    if (subProcess.processes && subProcess.processes.length) {\n                        var children = this.shape.activity.subProcess.processes;\n                        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n                            var i = children_1[_i];\n                            if (diagram.nameTable[i] && (!diagram.nameTable[i].processId || diagram.nameTable[i].processId === this.id)) {\n                                diagram.nameTable[i].processId = this.id;\n                                if (subProcess.collapsed) {\n                                    diagram.updateElementVisibility(diagram.nameTable[i].wrapper, diagram.nameTable[i], !subProcess.collapsed);\n                                }\n                                content.children.push(diagram.nameTable[i].wrapper);\n                            }\n                        }\n                    }\n                }\n                break;\n            case 'Native':\n                var nativeContent = new DiagramNativeElement(this.id, diagram.element.id);\n                nativeContent.content = this.shape.content;\n                nativeContent.scale = this.shape.scale;\n                content = nativeContent;\n                break;\n            case 'HTML':\n                var htmlContent = new DiagramHtmlElement(this.id, diagram.element.id);\n                htmlContent.content = this.shape.content;\n                content = htmlContent;\n                break;\n            case 'UmlClassifier':\n                //   let umlClassifierShape: StackPanel = new StackPanel();\n                content = getULMClassifierShapes(content, this, diagram);\n                break;\n            case 'SwimLane':\n                this.annotations = [];\n                this.ports = [];\n                content.cellStyle.fill = \"none\";\n                content.cellStyle.strokeColor = \"none\";\n                this.container = { type: 'Grid', orientation: this.shape.orientation };\n                content.id = this.id;\n                this.container.orientation = this.shape.orientation;\n                this.constraints |= NodeConstraints.HideThumbs;\n                initSwimLane(content, diagram, this);\n                break;\n        }\n        content.id = this.id + '_content';\n        content.relativeMode = 'Object';\n        if (this.width !== undefined) {\n            content.width = this.width;\n        }\n        content.horizontalAlignment = 'Stretch';\n        if (this.height !== undefined) {\n            content.height = this.height;\n        }\n        if (this.minHeight !== undefined) {\n            content.minHeight = this.minHeight;\n        }\n        if (this.maxHeight !== undefined) {\n            content.maxHeight = this.maxHeight;\n        }\n        if (this.minWidth !== undefined) {\n            content.minWidth = this.minWidth;\n        }\n        if (this.maxWidth !== undefined) {\n            content.maxWidth = this.maxWidth;\n        }\n        if (this.shape.shape === 'Rectangle' && !this.shape.cornerRadius) {\n            content.isRectElement = true;\n        }\n        content.verticalAlignment = 'Stretch';\n        if (this.shape instanceof Text) {\n            content.margin = this.shape.margin;\n        }\n        if (canShadow(this)) {\n            if ((this.constraints & NodeConstraints.Shadow) !== 0) {\n                content.shadow = this.shadow;\n            }\n        }\n        if ((this.shape.type !== 'Bpmn' || this.shape.shape === 'Message' ||\n            this.shape.shape === 'DataSource') && ((this.shape.type !== 'UmlActivity' || this.shape.shape !== 'FinalNode'))) {\n            if (this.shape.type !== 'Text') {\n                content.style = this.style;\n            }\n        }\n        if (!(this.wrapper.elementActions & ElementAction.ElementIsGroup) && this.flip === 'Horizontal' || this.flip === 'Vertical') {\n            content.flip = this.flip;\n        }\n        return content;\n    };\n    /* tslint:enable */\n    /** @private */\n    Node.prototype.initContainer = function () {\n        if (!this.id) {\n            this.id = randomId();\n        }\n        // Creates canvas element\n        var canvas;\n        if (!this.container || this.shape instanceof SwimLane) {\n            canvas = this.children ? new Container() : new Canvas();\n        }\n        else {\n            switch (this.container.type) {\n                case 'Canvas':\n                    canvas = new Canvas();\n                    break;\n                case 'Stack':\n                    canvas = new StackPanel();\n                    break;\n                case 'Grid':\n                    canvas = new GridPanel();\n                    canvas.setDefinitions(this.rows, this.columns);\n                    break;\n            }\n        }\n        canvas.id = this.id;\n        canvas.offsetX = this.offsetX;\n        canvas.offsetY = this.offsetY;\n        canvas.visible = this.visible;\n        canvas.horizontalAlignment = this.horizontalAlignment;\n        canvas.verticalAlignment = this.verticalAlignment;\n        if (this.container) {\n            canvas.width = this.width;\n            canvas.height = this.height;\n            if (this.container.type === 'Stack') {\n                canvas.orientation = this.container.orientation;\n            }\n        }\n        canvas.style.fill = this.backgroundColor;\n        canvas.style.strokeColor = this.borderColor;\n        canvas.style.strokeWidth = this.borderWidth;\n        canvas.rotateAngle = this.rotateAngle;\n        canvas.minHeight = this.minHeight;\n        canvas.minWidth = this.minWidth;\n        canvas.maxHeight = this.maxHeight;\n        canvas.maxWidth = this.maxWidth;\n        canvas.pivot = this.pivot;\n        canvas.margin = this.margin;\n        canvas.flip = this.flip;\n        this.wrapper = canvas;\n        return canvas;\n    };\n    /** @private */\n    Node.prototype.initPorts = function (accessibilityContent, container) {\n        var canvas = this.wrapper;\n        var port;\n        for (var i = 0; this.ports !== undefined, i < this.ports.length; i++) {\n            port = this.initPortWrapper(this.ports[i]);\n            port.elementActions = port.elementActions | ElementAction.ElementIsPort;\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(port, this);\n            }\n            port.description = wrapperContent ? wrapperContent : port.id;\n            container.children.push(port);\n        }\n    };\n    Node.prototype.getIconOffet = function (layout, icon) {\n        var x;\n        var y;\n        if (layout.orientation === 'BottomToTop') {\n            x = icon.offset.x;\n            y = 1 - icon.offset.y;\n        }\n        else if (layout.orientation === 'LeftToRight') {\n            x = icon.offset.y;\n            y = icon.offset.x;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            x = 1 - icon.offset.y;\n            y = icon.offset.x;\n        }\n        else {\n            x = icon.offset.x;\n            y = icon.offset.y;\n        }\n        return { x: x, y: y };\n    };\n    /** @private */\n    Node.prototype.initIcons = function (accessibilityContent, layout, container, diagramId) {\n        var canvas = this.wrapper;\n        var offset;\n        var icon = this.isExpanded ? this.expandIcon : this.collapseIcon;\n        if (icon.shape !== 'None') {\n            var iconContainer = new Canvas();\n            iconContainer.float = true;\n            var children = [];\n            iconContainer.id = this.id + '_icon_content';\n            iconContainer.children = children;\n            iconContainer.height = icon.height;\n            iconContainer.width = icon.width;\n            iconContainer.style.strokeColor = 'transparent';\n            iconContainer.margin = icon.margin;\n            iconContainer.horizontalAlignment = 'Center';\n            iconContainer.verticalAlignment = 'Center';\n            iconContainer.visible = this.visible;\n            offset = this.getIconOffet(layout, icon);\n            iconContainer.setOffsetWithRespectToBounds(offset.x, offset.y, 'Fraction');\n            iconContainer.relativeMode = 'Point';\n            this.initIconSymbol(icon, iconContainer, accessibilityContent, diagramId);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(icon, this);\n            }\n            iconContainer.description = wrapperContent ? wrapperContent : iconContainer.id;\n            container.children.push(iconContainer);\n        }\n    };\n    /** @private */\n    Node.prototype.initAnnotations = function (accessibilityContent, container, diagramId, virtualize) {\n        var annotation;\n        for (var i = 0; this.annotations !== undefined, i < this.annotations.length; i++) {\n            annotation = this.initAnnotationWrapper(this.annotations[i], diagramId, virtualize, i);\n            // tslint:disable-next-line:no-any\n            var wrapperContent = void 0;\n            var contentAccessibility = getFunction(accessibilityContent);\n            if (contentAccessibility) {\n                wrapperContent = contentAccessibility(annotation, this);\n            }\n            annotation.description = wrapperContent ? wrapperContent : annotation.id;\n            container.children.push(annotation);\n        }\n    };\n    /** @private */\n    Node.prototype.initPortWrapper = function (ports) {\n        ports.id = ports.id || randomId();\n        // Creates port element\n        var portContent = new PathElement();\n        portContent.height = ports.height;\n        portContent.width = ports.width;\n        var pathdata = (ports.shape === 'Custom') ? ports.pathData : getPortShape(ports.shape);\n        portContent.id = this.id + '_' + (ports.id);\n        portContent.margin = ports.margin;\n        portContent.data = pathdata;\n        var style = ports.style;\n        portContent.style = {\n            fill: style.fill, strokeColor: style.strokeColor, gradient: null,\n            opacity: style.opacity, strokeDashArray: style.strokeDashArray, strokeWidth: style.strokeWidth\n        };\n        portContent.horizontalAlignment = ports.horizontalAlignment;\n        portContent.verticalAlignment = ports.verticalAlignment;\n        portContent = updatePortEdges(portContent, this.flip, ports);\n        if (this.width !== undefined || this.height !== undefined) {\n            portContent.float = true;\n        }\n        portContent.relativeMode = 'Point';\n        portContent.visible = checkPortRestriction(ports, PortVisibility.Visible) &&\n            !checkPortRestriction(ports, PortVisibility.Hover) && !checkPortRestriction(ports, PortVisibility.Connect) ? true : false;\n        return portContent;\n    };\n    /** @private */\n    Node.prototype.initAnnotationWrapper = function (annotation, diagramId, virtualize, value) {\n        annotation.id = annotation.id || value + 'annotation' || randomId();\n        var label = annotation;\n        var annotationcontent;\n        if (diagramId && annotation.template) {\n            annotationcontent = new DiagramHtmlElement(this.id, diagramId, annotation.id);\n            annotationcontent.content = annotation.template;\n        }\n        else {\n            annotationcontent = new TextElement();\n            annotationcontent.canMeasure = !virtualize;\n            var style = annotation.style;\n            var link = annotation.hyperlink.link ? annotation.hyperlink : undefined;\n            annotationcontent.style = {\n                fill: style.fill, strokeColor: style.strokeColor, strokeWidth: style.strokeWidth,\n                bold: style.bold, textWrapping: style.textWrapping,\n                color: link ? link.color || annotationcontent.hyperlink.color : style.color, whiteSpace: style.whiteSpace,\n                fontFamily: style.fontFamily, fontSize: style.fontSize, italic: style.italic, gradient: null, opacity: style.opacity,\n                strokeDashArray: style.strokeDashArray, textAlign: style.textAlign, textOverflow: annotation.style.textOverflow,\n                textDecoration: link ? link.textDecoration ||\n                    annotationcontent.hyperlink.textDecoration : style.textDecoration,\n            };\n            annotationcontent.hyperlink.link = annotation.hyperlink.link || undefined;\n            annotationcontent.hyperlink.content = annotation.hyperlink.content || undefined;\n            annotationcontent.hyperlink.textDecoration = annotation.hyperlink.textDecoration || undefined;\n            annotationcontent.content = link ? link.content ||\n                annotationcontent.hyperlink.link : annotation.content;\n        }\n        annotationcontent.constraints = annotation.constraints;\n        annotationcontent.height = annotation.height;\n        annotationcontent.width = annotation.width;\n        annotationcontent.visible = annotation.visibility;\n        annotationcontent.rotateAngle = annotation.rotateAngle;\n        annotationcontent.id = this.id + '_' + annotation.id;\n        if (this.width !== undefined && !annotation.template) {\n            if (annotation.width === undefined || (annotation.width > this.width &&\n                (annotation.style.textWrapping === 'Wrap' || annotation.style.textWrapping === 'WrapWithOverflow'))) {\n                annotationcontent.width = this.width;\n            }\n        }\n        annotationcontent.margin = annotation.margin;\n        annotationcontent.horizontalAlignment = annotation.horizontalAlignment;\n        annotationcontent.verticalAlignment = annotation.verticalAlignment;\n        annotationcontent.setOffsetWithRespectToBounds(label.offset.x, label.offset.y, 'Fraction');\n        if (this.width !== undefined || this.height !== undefined) {\n            annotationcontent.float = true;\n        }\n        annotationcontent.relativeMode = 'Point';\n        return annotationcontent;\n    };\n    Node.prototype.initIconContainer = function (options, iconContainer) {\n        var rect = new DiagramElement();\n        rect.id = iconContainer.id + '_rect';\n        rect.height = options.height;\n        rect.width = options.width;\n        rect.visible = iconContainer.visible;\n        rect.margin = options.margin;\n        rect.cornerRadius = options.cornerRadius;\n        rect.style = {\n            fill: options.fill, strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        rect.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        rect.horizontalAlignment = 'Center';\n        rect.verticalAlignment = 'Center';\n        rect.relativeMode = 'Object';\n        rect.description = rect.description || 'Click here to expand or collapse';\n        return rect;\n    };\n    Node.prototype.initIconSymbol = function (options, iconContainer, accessibilityContent, diagramId) {\n        var iconContent;\n        iconContainer.children.push(this.initIconContainer(options, iconContainer));\n        if (options.shape === 'Template') {\n            iconContent = new DiagramNativeElement(this.id, diagramId);\n            iconContent.content = options.content;\n            iconContent.height = 10;\n            iconContent.width = 10;\n        }\n        else {\n            iconContent = new PathElement();\n            iconContent.data = getIconShape(options);\n            var iconContentBounds = measurePath(iconContent.data);\n            iconContent.height =\n                iconContentBounds.height < 10 ? iconContentBounds.height : 10 - (options.padding.bottom + options.padding.top);\n            iconContent.width =\n                iconContentBounds.width < 10 ? iconContentBounds.width : 10 - (options.padding.left + options.padding.right);\n        }\n        iconContent.id = iconContainer.id + '_shape';\n        iconContent.horizontalAlignment = 'Center';\n        iconContent.verticalAlignment = 'Center';\n        iconContent.visible = iconContainer.visible;\n        iconContent.visible = iconContainer.visible;\n        iconContent.style = {\n            fill: 'black', strokeColor: options.borderColor,\n            strokeWidth: options.borderWidth\n        };\n        iconContent.setOffsetWithRespectToBounds(0.5, 0.5, 'Fraction');\n        iconContent.relativeMode = 'Object';\n        iconContent.description = iconContainer.description || 'Click here to expand or collapse';\n        iconContainer.children.push(iconContent);\n    };\n    /**\n     * @private\n     * Returns the name of class Node\n     */\n    Node.prototype.getClassName = function () {\n        return 'Node';\n    };\n    __decorate([\n        Collection([], ShapeAnnotation)\n    ], Node.prototype, \"annotations\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetX\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"offsetY\", void 0);\n    __decorate([\n        Complex({ x: 0.5, y: 0.5 }, Point)\n    ], Node.prototype, \"pivot\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"height\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"minHeight\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"maxHeight\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"rotateAngle\", void 0);\n    __decorate([\n        Complex({ fill: 'white' }, TextStyle)\n    ], Node.prototype, \"style\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Node.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Property('none')\n    ], Node.prototype, \"borderColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Node.prototype, \"borderWidth\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"data\", void 0);\n    __decorate([\n        ComplexFactory(getShapeType)\n    ], Node.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"wrapper\", void 0);\n    __decorate([\n        Property(NodeConstraints.Default)\n    ], Node.prototype, \"constraints\", void 0);\n    __decorate([\n        Complex({}, Shadow)\n    ], Node.prototype, \"shadow\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"children\", void 0);\n    __decorate([\n        Property(null)\n    ], Node.prototype, \"container\", void 0);\n    __decorate([\n        Property('Left')\n    ], Node.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Top')\n    ], Node.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rows\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columns\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnIndex\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"rowSpan\", void 0);\n    __decorate([\n        Property()\n    ], Node.prototype, \"columnSpan\", void 0);\n    return Node;\n}(NodeBase));\nexport { Node };\n/**\n * Defines the behavior of header in swimLane\n */\nvar Header = /** @class */ (function (_super) {\n    __extends(Header, _super);\n    function Header() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Header.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#111111' } }, Annotation)\n    ], Header.prototype, \"annotation\", void 0);\n    __decorate([\n        Complex({ fill: '#E7F4FF', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Header.prototype, \"style\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"height\", void 0);\n    __decorate([\n        Property(50)\n    ], Header.prototype, \"width\", void 0);\n    return Header;\n}(ChildProperty));\nexport { Header };\n/**\n * Defines the behavior of lane in swimLane\n */\nvar Lane = /** @class */ (function (_super) {\n    __extends(Lane, _super);\n    function Lane() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Lane\n     */\n    Lane.prototype.getClassName = function () {\n        return 'Lane';\n    };\n    __decorate([\n        Property('')\n    ], Lane.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ fill: '#F9F9F9', strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Lane.prototype, \"style\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Lane.prototype, \"children\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"height\", void 0);\n    __decorate([\n        Property(100)\n    ], Lane.prototype, \"width\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], Lane.prototype, \"header\", void 0);\n    return Lane;\n}(ChildProperty));\nexport { Lane };\n/**\n * Defines the behavior of phase in swimLane\n */\nvar Phase = /** @class */ (function (_super) {\n    __extends(Phase, _super);\n    function Phase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    Phase.prototype.getClassName = function () {\n        return 'Phase';\n    };\n    __decorate([\n        Property('')\n    ], Phase.prototype, \"id\", void 0);\n    __decorate([\n        Complex({ strokeColor: '#CCCCCC' }, ShapeStyle)\n    ], Phase.prototype, \"style\", void 0);\n    __decorate([\n        Complex({ annotation: { content: 'Phase' } }, Header)\n    ], Phase.prototype, \"header\", void 0);\n    __decorate([\n        Property(100)\n    ], Phase.prototype, \"offset\", void 0);\n    return Phase;\n}(ChildProperty));\nexport { Phase };\n/**\n * Defines the behavior of swimLane shape\n */\nvar SwimLane = /** @class */ (function (_super) {\n    __extends(SwimLane, _super);\n    function SwimLane() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * @private\n         * Defines space between children and lane\n         */\n        _this.padding = 20;\n        /**\n         * @private\n         * Defines header by user or not\n         */\n        _this.hasHeader = true;\n        return _this;\n    }\n    /**\n     * @private\n     * Returns the name of class Phase\n     */\n    SwimLane.prototype.getClassName = function () {\n        return 'SwimLane';\n    };\n    __decorate([\n        Property('SwimLane')\n    ], SwimLane.prototype, \"type\", void 0);\n    __decorate([\n        Property(20)\n    ], SwimLane.prototype, \"phaseSize\", void 0);\n    __decorate([\n        Collection([], Phase)\n    ], SwimLane.prototype, \"phases\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], SwimLane.prototype, \"orientation\", void 0);\n    __decorate([\n        Collection([], Lane)\n    ], SwimLane.prototype, \"lanes\", void 0);\n    __decorate([\n        Complex({ style: { fill: '#E7F4FF', strokeColor: '#CCCCCC' }, annotation: { content: 'Function' } }, Header)\n    ], SwimLane.prototype, \"header\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isLane\", void 0);\n    __decorate([\n        Property(false)\n    ], SwimLane.prototype, \"isPhase\", void 0);\n    return SwimLane;\n}(Shape));\nexport { SwimLane };\n/**\n * Defines the behavior of container\n */\n/** @private */\nvar ChildContainer = /** @class */ (function () {\n    function ChildContainer() {\n    }\n    /**\n     * @private\n     * Returns the name of class ChildContainer\n     */\n    ChildContainer.prototype.getClassName = function () {\n        return 'ChildContainer';\n    };\n    __decorate([\n        Property('Canvas')\n    ], ChildContainer.prototype, \"type\", void 0);\n    __decorate([\n        Property('Vertical')\n    ], ChildContainer.prototype, \"orientation\", void 0);\n    return ChildContainer;\n}());\nexport { ChildContainer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property } from '@syncfusion/ej2-base';\nimport { createSvgElement, createHtmlElement, setAttributeSvg } from '../diagram/utility/dom-util';\nimport { Size } from '../diagram/primitives/size';\nimport { getFunction } from '../diagram/utility/base-util';\n/**\n * Represents the Ruler component that measures the Diagram objects, indicate positions, and align Diagram elements.\n * ```html\n * <div id='ruler'>Show Ruler</div>\n * ```\n * ```typescript\n * <script>\n *   var rulerObj = new Ruler({ showRuler: true });\n *   rulerObj.appendTo('#ruler');\n * </script>\n * ```\n */\nvar Ruler = /** @class */ (function (_super) {\n    __extends(Ruler, _super);\n    /**\n     * Constructor for creating the Ruler Component\n     */\n    function Ruler(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.offset = 0;\n        /**   @private  */\n        _this.scale = 1;\n        return _this;\n    }\n    /**\n     * Initializes the values of private members.\n     * @private\n     */\n    Ruler.prototype.preRender = function () {\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders the rulers.\n     * @private\n     */\n    Ruler.prototype.render = function () {\n        this.updateRulerGeometry();\n    };\n    /**\n     * Core method to return the component name.\n     * @private\n     */\n    Ruler.prototype.getModuleName = function () {\n        return 'Ruler';\n    };\n    /**\n     * To destroy the ruler\n     * @return {void}\n     */\n    Ruler.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        this.element.classList.remove('e-ruler');\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Ruler.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Refreshes the ruler when the Ruler properties are updated\n     * @param options\n     */\n    Ruler.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'length':\n                case 'interval':\n                case 'segmentWidth':\n                case 'tickAlignment':\n                case 'markerColor':\n                case 'thickness':\n                    this.updateRuler();\n                    break;\n            }\n        }\n    };\n    Ruler.prototype.updateRulerGeometry = function () {\n        this.element.style.textAlign = 'left';\n        this.renderRulerSpace();\n        this.updateRuler();\n    };\n    Ruler.prototype.renderRulerSpace = function () {\n        var rulerGeometry = this.getRulerGeometry();\n        var div = document.getElementById(this.element.id + '_ruler_space');\n        if (!div) {\n            div = createHtmlElement('div', {\n                'id': this.element.id + '_ruler_space',\n                'style': 'height:' + rulerGeometry.height + 'px;width:' + rulerGeometry.width + 'px;cssFloat:' + 'left;'\n            });\n            this.element.appendChild(div);\n        }\n        return div;\n    };\n    Ruler.prototype.updateRuler = function () {\n        var rulerSize = this.getRulerSize();\n        var rulerGeometry = this.getRulerGeometry();\n        var length = 0;\n        var offset = 0;\n        var availableSize = new Size();\n        var svg = this.getRulerSVG(rulerGeometry);\n        if (svg) {\n            length = this.length;\n            availableSize.height = rulerSize;\n            offset = this.offset;\n            if (length && length !== Infinity) {\n                var unitLength = length + this.segmentWidth;\n                var unitOffset = offset;\n                this.updateSegments(unitOffset, (unitLength + Math.abs(unitOffset)), svg, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegments = function (start, end, svg, rulerSize) {\n        var run = start;\n        var trans = { trans: 0 };\n        while (run < end) {\n            var rulerSegment = this.getNewSegment(run, svg);\n            if (rulerSegment) {\n                svg.appendChild(rulerSegment.segment);\n                run = this.updateSegment(start, end, rulerSegment, run, trans, rulerSize);\n            }\n        }\n    };\n    Ruler.prototype.updateSegment = function (start, end, rulerSegment, run, trans, rulerSize) {\n        var segWidth = this.updateSegmentWidth(this.scale);\n        if (run === start) {\n            this.startValue = Math.floor(start / segWidth) * segWidth / this.scale;\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n            this.defStartValue = run = this.startValue * this.scale;\n            if (this.orientation === 'Horizontal') {\n                this.hRulerOffset = start - run;\n            }\n            else {\n                this.vRulerOffset = start - run;\n            }\n        }\n        else {\n            this.startValue = (run / this.scale);\n            this.startValue = (this.startValue % 1) !== 0 ? Number((this.startValue).toFixed(1)) : this.startValue;\n            rulerSegment.label.textContent = this.startValue.toString();\n        }\n        this.updateTickLabel(rulerSegment, rulerSize);\n        var translate = (this.orientation === 'Horizontal') ? ((trans.trans + 0.5) + ',0.5') : ('0.5,' + (trans.trans + 0.5));\n        rulerSegment.segment.setAttribute('transform', 'translate(' + translate + ')');\n        trans.trans += segWidth;\n        run += segWidth;\n        return run;\n    };\n    Ruler.prototype.updateTickLabel = function (rulerSegment, rulerSize) {\n        var bBox = rulerSegment.segment.lastChild.getBBox();\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var x = isHorizontal ? 2 : 0;\n        var y = isHorizontal ? (isRightOrBottom ? (rulerSize / 2 + (11 / 2) - (11 / 2)) :\n            (rulerSize / 2 + (11 / 2))) : bBox.height;\n        var translate = isRightOrBottom ? (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height)) :\n            (-(bBox.width + 2) + ',' + ((rulerSize / 2) - bBox.height / 2));\n        var attr = isHorizontal ? { 'x': x, 'y': y } :\n            { 'x': x, 'y': y, 'transform': 'rotate(270)' + 'translate(' + translate + ')' };\n        setAttributeSvg(rulerSegment.segment.lastChild, attr);\n    };\n    Ruler.prototype.getNewSegment = function (run, svg) {\n        var segment = this.createNewTicks(run, svg);\n        var label = this.createTickLabel(svg, segment);\n        return { segment: segment, label: label };\n    };\n    Ruler.prototype.createNewTicks = function (run, svg) {\n        var tick;\n        var tickInterval;\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var g;\n        var attr = { 'class': 'e-ruler-segment' };\n        g = createSvgElement('g', attr);\n        for (var i = 0; i < this.interval; i++) {\n            tickInterval = segmentWidth / this.interval;\n            tick = this.createTick(svg, tickInterval, i + 1, run);\n            g.appendChild(tick);\n        }\n        return g;\n    };\n    Ruler.prototype.getLinePoint = function (svg, tickInterval, length) {\n        var segmentWidth = this.updateSegmentWidth(this.scale);\n        var rulerSize = this.getRulerSize();\n        tickInterval = tickInterval * (length - 1);\n        length = ((tickInterval % segmentWidth) === 0) ? rulerSize : rulerSize * 0.3;\n        return length;\n    };\n    Ruler.prototype.createTick = function (svg, tickInterval, length, run) {\n        var ruler;\n        var line;\n        var linePoint = this.getLinePoint(svg, tickInterval, length);\n        var rulerSize = this.getRulerSize();\n        var args;\n        var attr;\n        var isHorizontal = (this.orientation === 'Horizontal') ? true : false;\n        var isRightOrBottom = (this.tickAlignment === 'RightOrBottom') ? true : false;\n        var arrangeTick = getFunction(this.arrangeTick);\n        args = { ruler: ruler, tickLength: linePoint, tickInterval: ((this.segmentWidth / this.interval) * (length - 1)) };\n        if (arrangeTick) {\n            arrangeTick(args);\n        }\n        linePoint = args.tickLength;\n        var point = tickInterval * (length - 1);\n        var x1 = isHorizontal ? point : (isRightOrBottom ? rulerSize : 0);\n        var x2 = isHorizontal ? point : (isRightOrBottom ? (rulerSize - linePoint) : (rulerSize - (rulerSize - linePoint)));\n        var y1 = isHorizontal ? (isRightOrBottom ? rulerSize : (rulerSize - (rulerSize - linePoint))) : point;\n        var y2 = isHorizontal ? (isRightOrBottom ? (rulerSize - linePoint) : 0) : point;\n        attr = { 'x1': x1, 'y1': y1, 'x2': x2, 'y2': y2, 'stroke-width': '1', 'stroke': 'black' };\n        line = createSvgElement('line', attr);\n        line.setAttribute('class', 'e-ruler-tick');\n        return line;\n    };\n    Ruler.prototype.createTickLabel = function (svg, segment) {\n        var text;\n        if (segment) {\n            var attr = { 'class': 'e-ruler-tick-label' };\n            text = createSvgElement('text', attr);\n            segment.appendChild(text);\n        }\n        return text;\n    };\n    /**\n     * @private\n     * @param scale\n     */\n    Ruler.prototype.updateSegmentWidth = function (scale) {\n        if (this.segmentWidth !== 100) {\n            return this.segmentWidth;\n        }\n        var five = 25;\n        var multiples = 1;\n        var div;\n        var scaleRound;\n        var fifty = 100;\n        scaleRound = Math.pow(2, Math.round(Math.log(scale) / Math.log(2)));\n        div = fifty;\n        div = (fifty / scaleRound);\n        while (div > 100) {\n            multiples /= 10;\n            div /= 10;\n        }\n        while (div < 25) {\n            multiples *= 10;\n            div *= 10;\n        }\n        if (div >= five && div % five !== 0) {\n            div = Math.round(div / five) * five;\n        }\n        return div * scale / multiples;\n    };\n    Ruler.prototype.createMarkerLine = function (rulerSvg, rulerObj, attr) {\n        var line;\n        if (rulerObj) {\n            line = rulerSvg.getElementById(rulerObj.id + '_marker');\n            if (line) {\n                line.parentNode.removeChild(line);\n            }\n            line = createSvgElement('line', attr);\n        }\n        return line;\n    };\n    /**\n     * @private\n     * @param rulerObj\n     * @param currentPoint\n     */\n    Ruler.prototype.drawRulerMarker = function (rulerObj, currentPoint, offset) {\n        var rulerSvg;\n        var rulerSize;\n        var scale;\n        var diff;\n        var i;\n        var attr;\n        var line;\n        var isHorizontal = this.orientation === 'Horizontal' ? true : false;\n        var rulerSvgElements = rulerObj.getElementsByTagName('svg');\n        for (i = 0; i < rulerSvgElements.length; i++) {\n            if (rulerSvgElements[i]) {\n                rulerSvg = rulerSvgElements[i];\n            }\n            break;\n        }\n        if (rulerSvg) {\n            rulerSize = this.getRulerSize();\n            attr = {\n                'id': rulerObj.id + '_marker', 'x1': 0, 'y1': 0, 'x2': (isHorizontal ? 0 : rulerSize),\n                'y2': (isHorizontal ? rulerSize : 0), 'stroke': this.markerColor, 'stroke-width': 1.5,\n                'class': 'e-d-ruler-marker'\n            };\n            line = this.createMarkerLine(rulerSvg, rulerObj, attr);\n            scale = this.scale;\n            diff = this.offset - this.defStartValue;\n            var point = isHorizontal ? currentPoint.x : currentPoint.y;\n            var move = (point * scale) + offset + diff;\n            line.setAttribute('transform', 'translate(' + (isHorizontal ? ((move + 0.5) + ' 0.5') : ('0.5 ' + (move + 0.5))) + ')');\n            rulerSvg.appendChild(line);\n        }\n    };\n    Ruler.prototype.getRulerGeometry = function () {\n        return new Size(this.element ? this.element.getBoundingClientRect().width : 0, this.element ? this.element.getBoundingClientRect().height : 0);\n    };\n    Ruler.prototype.getRulerSize = function () {\n        return this.thickness;\n    };\n    Ruler.prototype.getRulerSVG = function (rulerGeometry) {\n        var rulerSpace;\n        var rulerSize = this.getRulerSize();\n        var svg;\n        if (this.element) {\n            rulerSpace = document.getElementById(this.element.id + '_ruler_space');\n            if (rulerSpace) {\n                var attr = {\n                    'id': this.element.id + '_Ruler_svg',\n                    width: this.orientation === 'Horizontal' ? (rulerGeometry.width + 200) : rulerSize + 'px',\n                    height: this.orientation === 'Horizontal' ? rulerSize : (rulerGeometry.height + 200) + 'px',\n                    style: 'position:inherit;'\n                };\n                svg = createSvgElement('svg', attr);\n                if (rulerSpace.childNodes.length > 0) {\n                    for (var i = rulerSpace.childNodes.length - 1; i >= 0; i--) {\n                        rulerSpace.childNodes[i].parentNode.removeChild(rulerSpace.childNodes[i]);\n                    }\n                }\n                rulerSpace.appendChild(svg);\n            }\n        }\n        return svg;\n    };\n    /**\n     * Method to bind events for the ruler\n     */\n    Ruler.prototype.wireEvents = function () {\n        //wire Events\n    };\n    /**\n     * Method to unbind events for the ruler\n     */\n    Ruler.prototype.unWireEvents = function () {\n        //unWire Events\n    };\n    __decorate([\n        Property(5)\n    ], Ruler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], Ruler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Ruler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], Ruler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], Ruler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], Ruler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], Ruler.prototype, \"arrangeTick\", void 0);\n    __decorate([\n        Property(400)\n    ], Ruler.prototype, \"length\", void 0);\n    return Ruler;\n}(Component));\nexport { Ruler };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\n/**\n * Defines the combination of keys and modifier keys\n */\nvar KeyGesture = /** @class */ (function (_super) {\n    __extends(KeyGesture, _super);\n    function KeyGesture() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], KeyGesture.prototype, \"keyModifiers\", void 0);\n    return KeyGesture;\n}(ChildProperty));\nexport { KeyGesture };\n/**\n * Defines a command and a key gesture to define when the command should be executed\n */\nvar Command = /** @class */ (function (_super) {\n    __extends(Command, _super);\n    function Command() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @private\n     * Returns the name of class Command\n     */\n    Command.prototype.getClassName = function () {\n        return 'Command';\n    };\n    __decorate([\n        Property('')\n    ], Command.prototype, \"name\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"canExecute\", void 0);\n    __decorate([\n        Property()\n    ], Command.prototype, \"execute\", void 0);\n    __decorate([\n        Complex({}, KeyGesture)\n    ], Command.prototype, \"gesture\", void 0);\n    __decorate([\n        Property('')\n    ], Command.prototype, \"parameter\", void 0);\n    return Command;\n}(ChildProperty));\nexport { Command };\n/**\n * Defines the collection of commands and the corresponding key gestures\n */\nvar CommandManager = /** @class */ (function (_super) {\n    __extends(CommandManager, _super);\n    function CommandManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Command)\n    ], CommandManager.prototype, \"commands\", void 0);\n    return CommandManager;\n}(ChildProperty));\nexport { CommandManager };\n/**\n * Defines the behavior of the context menu items\n */\nvar ContextMenuSettings = /** @class */ (function (_super) {\n    __extends(ContextMenuSettings, _super);\n    function ContextMenuSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"show\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"showCustomMenuOnly\", void 0);\n    __decorate([\n        Property()\n    ], ContextMenuSettings.prototype, \"items\", void 0);\n    return ContextMenuSettings;\n}(ChildProperty));\nexport { ContextMenuSettings };\n","import { Size } from './../primitives/size';\nimport { Point } from './../primitives/point';\nimport { processPathData, pathSegmentCollection, getRectanglePath } from './../utility/path-util';\nimport { overFlow } from './../utility/base-util';\nimport { createHtmlElement } from './../utility/dom-util';\n/**\n * Canvas Renderer\n */\n/** @private */\nvar CanvasRenderer = /** @class */ (function () {\n    function CanvasRenderer() {\n    }\n    /**   @private  */\n    CanvasRenderer.getContext = function (canvas) {\n        return canvas.getContext('2d');\n    };\n    CanvasRenderer.setCanvasSize = function (canvas, width, height) {\n        if (canvas) {\n            canvas.setAttribute('width', width.toString());\n            canvas.setAttribute('height', height.toString());\n        }\n    };\n    ;\n    /**   @private  */\n    CanvasRenderer.prototype.renderGradient = function (options, ctx, x, y) {\n        var max;\n        var min;\n        var grd;\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = max !== undefined ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = min !== undefined ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                var linear = options.gradient;\n                grd = ctx.createLinearGradient(x + linear.x1, y + linear.y1, x + linear.x2, y + linear.y2);\n            }\n            else {\n                var radial = options.gradient;\n                grd = ctx.createRadialGradient(x + radial.fx, y + radial.fy, 0, x + radial.cx, y + radial.cy, radial.r);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                grd.addColorStop(offset, stop_1.color);\n            }\n            ctx.fillStyle = grd;\n        }\n        return ctx;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderShadow = function (options, canvas, collection) {\n        if (collection === void 0) { collection = null; }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        ctx.strokeStyle = ctx.fillStyle = options.shadow.color;\n        ctx.globalAlpha = options.shadow.opacity;\n        var ptModel = { x: 0, y: 0 };\n        var point = Point.transform(ptModel, options.shadow.angle, options.shadow.distance);\n        var transX = options.x + point.x;\n        var transY = options.y + point.y;\n        var pivotX = transX + options.width * options.pivotX;\n        var pivotY = transY + options.height * options.pivotY;\n        this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        if (collection) {\n            ctx.translate(transX, transY);\n            this.renderPath(canvas, options, collection);\n            ctx.translate(-transX, -transY);\n        }\n        else {\n            ctx.rect(transX, transY, options.width, options.height);\n            ctx.fillRect(transX, transY, options.width, options.height);\n        }\n        ctx.fill();\n        ctx.stroke();\n        ctx.closePath();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.createCanvas = function (id, width, height) {\n        var canvasObj = createHtmlElement('canvas', { 'id': id });\n        this.setCanvasSize(canvasObj, width, height);\n        return canvasObj;\n    };\n    ;\n    CanvasRenderer.prototype.setStyle = function (canvas, style) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        if (style.fill === 'none') {\n            style.fill = 'transparent';\n        }\n        if (style.stroke === 'none') {\n            style.stroke = 'transparent';\n        }\n        ctx.strokeStyle = style.stroke;\n        ctx.lineWidth = style.strokeWidth;\n        if (style.strokeWidth === 0) {\n            ctx.strokeStyle = 'transparent';\n        }\n        ctx.globalAlpha = style.opacity;\n        var dashArray = [];\n        if (style.dashArray) {\n            dashArray = this.parseDashArray(style.dashArray);\n        }\n        ctx.setLineDash(dashArray);\n        if (style.gradient && style.gradient.type !== 'None') {\n            this.renderGradient(style, ctx, 0, 0);\n        }\n        else {\n            ctx.fillStyle = style.fill;\n        }\n    };\n    CanvasRenderer.prototype.rotateContext = function (canvas, angle, x, y) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.translate(x, y);\n        ctx.rotate(angle * Math.PI / 180);\n        ctx.translate(-x, -y);\n    };\n    CanvasRenderer.prototype.setFontStyle = function (canvas, text) {\n        var ctx = CanvasRenderer.getContext(canvas);\n        var font = '';\n        if (text.italic) {\n            font += 'italic ';\n        }\n        if (text.bold) {\n            font += 'bold ';\n        }\n        font += (text.fontSize) + 'px ';\n        font += text.fontFamily;\n        ctx.font = font;\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        var separator = dashArray.indexOf(' ') !== -1 ? ' ' : ',';\n        var splittedDashes = dashArray.split(separator);\n        for (var _i = 0, splittedDashes_1 = splittedDashes; _i < splittedDashes_1.length; _i++) {\n            var i = splittedDashes_1[_i];\n            dashes.push(Number(i));\n        }\n        return dashes;\n    };\n    //Rendering Part\n    /**   @private  */\n    CanvasRenderer.prototype.drawRectangle = function (canvas, options) {\n        if (options.visible === true) {\n            if (options.cornerRadius) {\n                options.data = getRectanglePath(options.cornerRadius, options.height, options.width);\n                this.drawPath(canvas, options);\n            }\n            else {\n                var ctx = CanvasRenderer.getContext(canvas);\n                if (options.shadow) {\n                    this.renderShadow(options, canvas);\n                }\n                ctx.save();\n                ctx.beginPath();\n                var cornerRadius = options.cornerRadius;\n                var pivotX = options.x + options.width * options.pivotX;\n                var pivotY = options.y + options.height * options.pivotY;\n                this.rotateContext(canvas, options.angle, pivotX, pivotY);\n                this.setStyle(canvas, options);\n                ctx.rect(options.x, options.y, options.width, options.height);\n                ctx.fillRect(options.x, options.y, options.width, options.height);\n                ctx.fill();\n                ctx.stroke();\n                ctx.closePath();\n                ctx.restore();\n            }\n        }\n    };\n    // public updateSelectionRegion(canvas: HTMLCanvasElement, options: RectAttributes): void {\n    //     this.drawRectangle(canvas, options);\n    // }\n    // public drawLine(canvas: HTMLCanvasElement, options: LineAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     ctx.translate(options.x, options.y);\n    //     ctx.moveTo(options.startPoint.x, options.startPoint.y);\n    //     ctx.lineTo(options.endPoint.x, options.endPoint.y);\n    //     ctx.translate(-options.x, -options.y);\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    // public drawCircle(canvas: HTMLCanvasElement, options: CircleAttributes): void {\n    //     let ctx: CanvasRenderingContext2D = CanvasRenderer.getContext(canvas);\n    //     ctx.save();\n    //     ctx.beginPath();\n    //     let pivotY: number = options.y + options.height * options.pivotY;\n    //     let pivotX: number = options.x + options.width * options.pivotX;\n    //     this.setStyle(canvas, options as StyleAttributes);\n    //     this.rotateContext(canvas, options.angle, pivotX, pivotY);\n    //     ctx.arc(options.centerX, options.centerY, options.radius, 0, 2 * Math.PI);\n    //     ctx.fill();\n    //     ctx.stroke();\n    //     ctx.closePath();\n    //     ctx.restore();\n    // }\n    /**   @private  */\n    CanvasRenderer.prototype.drawPath = function (canvas, options) {\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, canvas, collection);\n        }\n        var ctx = CanvasRenderer.getContext(canvas);\n        ctx.save();\n        ctx.beginPath();\n        var pivotY = options.y + options.height * options.pivotY;\n        var pivotX = options.x + options.width * options.pivotX;\n        if (options.flip === 'Horizontal' || options.flip === 'Vertical') {\n            ctx.translate(options.x + options.width / 2, options.y + options.height / 2);\n            ctx.rotate(-options.angle * Math.PI / 180);\n            ctx.translate(-options.x - options.width / 2, -options.y - options.height / 2);\n        }\n        else {\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n        }\n        this.setStyle(canvas, options);\n        ctx.translate(options.x, options.y);\n        if (options.flip === 'Horizontal') {\n            ctx.scale(-1, 1);\n            ctx.translate(options.width * -1, 0);\n        }\n        else if (options.flip === 'Vertical') {\n            ctx.scale(1, -1);\n            ctx.translate(0, options.height * -1);\n        }\n        else if (options.flip === 'Both') {\n            ctx.scale(-1, -1);\n            ctx.translate(options.width * -1, options.height * -1);\n        }\n        this.renderPath(canvas, options, collection);\n        ctx.fill();\n        ctx.translate(-options.x, -options.y);\n        ctx.stroke();\n        ctx.restore();\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.renderPath = function (canvas, options, collection) {\n        if (options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            var x0 = void 0;\n            var y0 = void 0;\n            var x1 = void 0;\n            var y1 = void 0;\n            var x2 = void 0;\n            var y2 = void 0;\n            var x = void 0;\n            var y = void 0;\n            var length_1;\n            var i = void 0;\n            var newSeg = void 0;\n            var segs = collection;\n            for (x = 0, y = 0, i = 0, length_1 = segs.length; i < length_1; ++i) {\n                var obj = segs[i];\n                var seg = obj;\n                var char = seg.command;\n                if ('x1' in seg) {\n                    x1 = seg.x1;\n                }\n                if ('x2' in seg) {\n                    x2 = seg.x2;\n                }\n                if ('y1' in seg) {\n                    y1 = seg.y1;\n                }\n                if ('y2' in seg) {\n                    y2 = seg.y2;\n                }\n                if ('x' in seg) {\n                    x = seg.x;\n                }\n                if ('y' in seg) {\n                    y = seg.y;\n                }\n                switch (char) {\n                    case 'M':\n                        ctx.moveTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'L':\n                        ctx.lineTo(x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        break;\n                    case 'C':\n                        ctx.bezierCurveTo(x1, y1, x2, y2, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        seg.x2 = x2;\n                        seg.y2 = y2;\n                        break;\n                    case 'Q':\n                        ctx.quadraticCurveTo(x1, y1, x, y);\n                        seg.x = x;\n                        seg.y = y;\n                        seg.x1 = x1;\n                        seg.y1 = y1;\n                        break;\n                    case 'A':\n                        var curr = { x: x0, y: y0 };\n                        var rx = seg.r1;\n                        var ry = seg.r2;\n                        var xAxisRotation = seg.angle * (Math.PI / 180.0);\n                        var largeArc = seg.largeArc;\n                        var sweep = seg.sweep;\n                        var cp = { x: x, y: y };\n                        var currp = {\n                            x: Math.cos(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.sin(xAxisRotation) * (curr.y - cp.y) / 2.0,\n                            y: -Math.sin(xAxisRotation) * (curr.x - cp.x) / 2.0 + Math.cos(xAxisRotation) * (curr.y - cp.y) / 2.0\n                        };\n                        var l = Math.pow(currp.x, 2) / Math.pow(rx, 2) + Math.pow(currp.y, 2) / Math.pow(ry, 2);\n                        if (l > 1) {\n                            rx *= Math.sqrt(l);\n                            ry *= Math.sqrt(l);\n                        }\n                        var k = (Math.pow(ry, 2) * Math.pow(currp.x, 2));\n                        var s = (largeArc === sweep ? -1 : 1) * Math.sqrt(((Math.pow(rx, 2) * Math.pow(ry, 2)) - (Math.pow(rx, 2) * Math.pow(currp.y, 2)) - k) /\n                            (Math.pow(rx, 2) * Math.pow(currp.y, 2) + Math.pow(ry, 2) * Math.pow(currp.x, 2)));\n                        if (isNaN(s)) {\n                            s = 0;\n                        }\n                        var cpp = { x: s * rx * currp.y / ry, y: s * -ry * currp.x / rx };\n                        var centp = {\n                            x: (curr.x + cp.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y,\n                            y: (curr.y + cp.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y\n                        };\n                        var a1 = this.a([1, 0], [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry]);\n                        var u = [(currp.x - cpp.x) / rx, (currp.y - cpp.y) / ry];\n                        var v = [(-currp.x - cpp.x) / rx, (-currp.y - cpp.y) / ry];\n                        var ad = this.a(u, v);\n                        if (this.r(u, v) <= -1) {\n                            ad = Math.PI;\n                        }\n                        if (this.r(u, v) >= 1) {\n                            ad = 0;\n                        }\n                        var dir = !sweep ? -1.0 : 1.0;\n                        var ah = a1 + dir * (ad / 2.0);\n                        var halfWay = {\n                            x: centp.x + rx * Math.cos(ah),\n                            y: centp.y + ry * Math.sin(ah)\n                        };\n                        seg.centp = centp;\n                        seg.xAxisRotation = xAxisRotation;\n                        seg.rx = rx;\n                        seg.ry = ry;\n                        seg.a1 = a1;\n                        seg.ad = ad;\n                        seg.sweep = sweep;\n                        if (ctx != null) {\n                            var ra = rx > ry ? rx : ry;\n                            var sx = rx > ry ? 1 : rx / ry;\n                            var sy = rx > ry ? ry / rx : 1;\n                            ctx.save();\n                            ctx.translate(centp.x, centp.y);\n                            ctx.rotate(xAxisRotation);\n                            ctx.scale(sx, sy);\n                            ctx.arc(0, 0, ra, a1, a1 + ad, !sweep);\n                            ctx.scale(1 / sx, 1 / sy);\n                            ctx.rotate(-xAxisRotation);\n                            ctx.translate(-centp.x, -centp.y);\n                            ctx.restore();\n                        }\n                        break;\n                    case 'Z':\n                    case 'z':\n                        ctx.closePath();\n                        x = x0;\n                        y = y0;\n                        break;\n                }\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId, scaleValue) {\n        if (options.content && options.visible === true) {\n            var ctx = CanvasRenderer.getContext(canvas);\n            ctx.save();\n            this.setStyle(canvas, options);\n            if (scaleValue) {\n                options.fontSize *= scaleValue;\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            this.rotateContext(canvas, options.angle, pivotX, pivotY);\n            this.setFontStyle(canvas, options);\n            var i = 0;\n            var childNodes = [];\n            childNodes = options.childNodes;\n            var wrapBounds = options.wrapBounds;\n            ctx.fillStyle = options.color;\n            if (wrapBounds) {\n                var position = this.labelAlign(options, wrapBounds, childNodes);\n                for (i = 0; i < childNodes.length; i++) {\n                    var child = childNodes[i];\n                    var offsetX = position.x + (scaleValue ? child.x * scaleValue : child.x) - wrapBounds.x;\n                    var offsetY = position.y + (scaleValue ? child.dy * scaleValue : child.dy) * i + ((options.fontSize) * 0.8);\n                    if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                        child.text = overFlow(child.text, options);\n                    }\n                    ctx.fillText(child.text, offsetX, offsetY);\n                    if (options.textDecoration === 'Underline'\n                        || options.textDecoration === 'Overline'\n                        || options.textDecoration === 'LineThrough') {\n                        var startPointX = offsetX;\n                        var startPointY = void 0;\n                        var textlength = ctx.measureText(child.text).width;\n                        var endPointX = offsetX + textlength;\n                        var endPointY = void 0;\n                        switch (options.textDecoration) {\n                            case 'Underline':\n                                startPointY = offsetY + 2;\n                                endPointY = offsetY + 2;\n                                break;\n                            case 'Overline':\n                                startPointY = (position.y + child.dy * i);\n                                endPointY = (position.y + child.dy * i);\n                                break;\n                            case 'LineThrough':\n                                startPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                                endPointY = ((offsetY + position.y + child.dy * i) / 2) + 2;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(startPointX, startPointY);\n                        ctx.lineTo(endPointX, endPointY);\n                        ctx.strokeStyle = options.color;\n                        ctx.lineWidth = options.fontSize * .08;\n                        ctx.globalAlpha = options.opacity;\n                        ctx.stroke();\n                    }\n                }\n            }\n            ctx.restore();\n        }\n    };\n    CanvasRenderer.prototype.loadImage = function (ctx, obj, canvas, pivotX, pivotY) {\n        this.rotateContext(canvas, obj.angle, pivotX, pivotY);\n        var image = new Image();\n        image.src = obj.source;\n        this.image(ctx, image, obj.x, obj.y, obj.width, obj.height, obj);\n    };\n    /**   @private  */\n    CanvasRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var _this = this;\n        if (obj.visible) {\n            var ctx_1 = CanvasRenderer.getContext(canvas);\n            ctx_1.save();\n            var pivotX_1 = obj.x + obj.width * obj.pivotX;\n            var pivotY_1 = obj.y + obj.height * obj.pivotY;\n            var imageObj = new Image();\n            imageObj.src = obj.source;\n            var id = ctx_1.canvas.id.split('_');\n            var value = id[id.length - 1] === ('diagram' || 'diagramLayer') ? true : false;\n            /**\n             *  Since Clipping portion for node with slice option is not calculated properly\n             * if (obj.sourceX !== undefined && obj.sourceY !== undefined && obj.sourceWidth !== undefined\n             *  && obj.sourceHeight !== undefined) {\n             *  ctx.drawImage(imageObj, obj.sourceX, obj.sourceY, obj.sourceWidth, obj.sourceHeight, obj.x, obj.y, obj.width, obj.height);\n             *  } else {\n             *             ctx.drawImage(imageObj, obj.x, obj.y, obj.width, obj.height);\n             * }\n             */\n            if (!fromPalette) {\n                this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n            }\n            else {\n                imageObj.onload = function () {\n                    _this.loadImage(ctx_1, obj, canvas, pivotX_1, pivotY_1);\n                };\n            }\n            ctx_1.restore();\n        }\n    };\n    CanvasRenderer.prototype.image = function (ctx, image, x, y, width, height, alignOptions) {\n        ctx.beginPath();\n        var srcWidth = image.width;\n        var srcHeight = image.height;\n        var destinationW = width;\n        var destinationH = height;\n        var resultWidth = 0;\n        var resultHeight = 0;\n        if (alignOptions && alignOptions.alignment !== 'None') {\n            var xalign = alignOptions.alignment.toLowerCase().substr(1, 3);\n            var yalign = alignOptions.alignment.toLowerCase().substr(5, 3);\n            if (alignOptions.scale === 'Slice') {\n                var a = function () {\n                    resultWidth = destinationW;\n                    resultHeight = srcHeight * destinationW / srcWidth;\n                };\n                var b = function () {\n                    resultWidth = srcWidth * destinationH / srcHeight;\n                    resultHeight = destinationH;\n                };\n                if (destinationW > destinationH) {\n                    a();\n                    if (destinationH > resultHeight) {\n                        b();\n                    }\n                }\n                else if (destinationW === destinationH) {\n                    if (srcWidth > srcHeight) {\n                        b();\n                    }\n                    else {\n                        a();\n                    }\n                }\n                else {\n                    b();\n                    if (destinationW > resultWidth) {\n                        a();\n                    }\n                }\n                var x1 = this.getSliceOffset(xalign, resultWidth, destinationW, srcWidth);\n                var y1 = this.getSliceOffset(yalign, resultHeight, destinationH, srcHeight);\n                var sWidth = srcWidth - x1;\n                var sHeight = srcHeight - y1;\n                var dWidth = resultWidth - (x1 * (resultWidth / srcWidth));\n                var dHeight = resultHeight - (y1 * (resultHeight / srcHeight));\n                var canvas1 = createHtmlElement('canvas', { 'width': width.toString(), 'height': height.toString() });\n                var ctx1 = canvas1.getContext('2d');\n                ctx1.drawImage(image, x1, y1, sWidth, sHeight, 0, 0, dWidth, dHeight);\n                ctx.drawImage(canvas1, x, y, width, height);\n            }\n            else if (alignOptions.scale === 'Meet') {\n                var srcRatio = (srcHeight / srcWidth);\n                var destRatio = (destinationH / destinationW);\n                resultWidth = destRatio > srcRatio ? destinationW : destinationH / srcRatio;\n                resultHeight = destRatio > srcRatio ? destinationW * srcRatio : destinationH;\n                x += this.getMeetOffset(xalign, resultWidth, destinationW);\n                y += this.getMeetOffset(yalign, resultHeight, destinationH);\n                ctx.drawImage(image, 0, 0, srcWidth, srcHeight, x, y, resultWidth, resultHeight);\n            }\n            else {\n                ctx.drawImage(image, x, y, width, height);\n            }\n        }\n        else if (alignOptions.flip !== 'None') {\n            var scaleX = 1;\n            var scaleY = 1;\n            if (alignOptions.flip === 'Horizontal' || alignOptions.flip === 'Both') {\n                x = -x;\n                width = -width;\n                scaleX = -1;\n            }\n            if (alignOptions.flip === 'Vertical' || alignOptions.flip === 'Both') {\n                y = -y;\n                height = -height;\n                scaleY = -1;\n            }\n            ctx.scale(scaleX, scaleY);\n            ctx.drawImage(image, x, y, width, height);\n        }\n        else {\n            ctx.drawImage(image, x, y, width, height);\n        }\n        ctx.closePath();\n    };\n    CanvasRenderer.prototype.getSliceOffset = function (arg, res, dest, src) {\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (res - dest) / 2 * src / res;\n            case 'max': return (res - dest) * src / res;\n            default: return 0;\n        }\n    };\n    CanvasRenderer.prototype.getMeetOffset = function (arg, res, dest) {\n        var max = Math.max(res, dest);\n        var min = Math.min(res, dest);\n        switch (arg) {\n            case 'min': return 0;\n            case 'mid': return (max - min) / 2;\n            case 'max': return max - min;\n            default: return 0;\n        }\n    };\n    //end region\n    // vector magnitude\n    CanvasRenderer.prototype.m = function (v) { return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2)); };\n    // ratio between two vectors\n    CanvasRenderer.prototype.r = function (u, v) { return (u[0] * v[0] + u[1] * v[1]) / (this.m(u) * this.m(v)); };\n    // angle between two vectors\n    CanvasRenderer.prototype.a = function (u, v) { return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(this.r(u, v)); };\n    // text utility\n    /**   @private  */\n    CanvasRenderer.prototype.labelAlign = function (text, wrapBounds, childNodes) {\n        var bounds = new Size(wrapBounds.width, childNodes.length * (text.fontSize * 1.2));\n        var position = { x: 0, y: 0 };\n        var labelX = text.x;\n        var labelY = text.y;\n        var offsetx = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointx = offsetx;\n        var pointy = offsety;\n        if (text.textAlign === 'left') {\n            pointx = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBounds.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointx = 0;\n            }\n            else {\n                pointx = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointx = (text.width * 1);\n        }\n        position.x = labelX + pointx + (wrapBounds ? wrapBounds.x : 0);\n        position.y = labelY + pointy - bounds.height / 2;\n        return position;\n    };\n    return CanvasRenderer;\n}());\nexport { CanvasRenderer };\n","import { Point } from './../primitives/point';\nimport { Size } from './../primitives/size';\nimport { pathSegmentCollection, processPathData } from './../utility/path-util';\nimport { setAttributeSvg } from './../utility/dom-util';\nimport { overFlow, wordBreakToString, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { CanvasRenderer } from './../rendering/canvas-renderer';\nimport { createSvgElement, createHtmlElement, getBackgroundLayerSvg } from '../utility/dom-util';\nimport { removeGradient } from '../utility/diagram-util';\n/**\n * SVG Renderer\n */\n/** @private */\nvar SvgRenderer = /** @class */ (function () {\n    function SvgRenderer() {\n    }\n    /**   @private  */\n    SvgRenderer.prototype.renderShadow = function (options, canvas, collection, parentSvg) {\n        if (collection === void 0) { collection = null; }\n        var pointModel = { x: 0, y: 0 };\n        var point = Point.transform(pointModel, options.shadow.angle, options.shadow.distance);\n        var tX = options.x + point.x;\n        var tY = options.y + point.y;\n        var pivotX = tX + options.width * options.pivotX;\n        var pivotY = tY + options.height * options.pivotY;\n        var type;\n        var shadowElement;\n        if (parentSvg) {\n            shadowElement = parentSvg.getElementById(canvas.id + '_shadow');\n        }\n        if (!shadowElement) {\n            type = collection ? 'path' : 'rect';\n            shadowElement = document.createElementNS('http://www.w3.org/2000/svg', type);\n            canvas.appendChild(shadowElement);\n        }\n        var attr = {\n            'id': canvas.id + '_shadow', 'fill': options.shadow.color, 'stroke': options.shadow.color,\n            'opacity': options.shadow.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' +\n                'translate(' + (options.x + point.x) + ',' + (options.y + point.y) + ')'\n        };\n        if (parentSvg) {\n            var svgContainer = parentSvg.getElementById(canvas.id);\n            if (svgContainer) {\n                svgContainer.insertBefore(shadowElement, svgContainer.firstChild);\n            }\n        }\n        setAttributeSvg(shadowElement, attr);\n        if (!collection) {\n            setAttributeSvg(shadowElement, { 'width': options.width, 'height': options.height });\n        }\n        else if (collection) {\n            this.renderPath(shadowElement, options, collection);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.parseDashArray = function (dashArray) {\n        var dashes = [];\n        return dashes;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawRectangle = function (svg, options, diagramId, onlyRect, isSelector, parentSvg, ariaLabel) {\n        if (options.shadow && !onlyRect) {\n            this.renderShadow(options, svg, undefined, parentSvg);\n        }\n        var id;\n        if (options.id === svg.id) {\n            id = options.id + '_container';\n        }\n        else {\n            id = options.id;\n        }\n        var rect;\n        if (parentSvg) {\n            rect = parentSvg.getElementById(id);\n        }\n        if (!rect || isSelector) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            svg.appendChild(rect);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var attr = {\n            'id': id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'visibility': options.visible ? 'visible' : 'hidden',\n            'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            'rx': options.cornerRadius || 0, 'ry': options.cornerRadius || 0, 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        var poiterEvents = 'pointer-events';\n        if (!ariaLabel) {\n            attr[poiterEvents] = 'none';\n        }\n        setAttributeSvg(rect, attr);\n        this.setSvgStyle(rect, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.updateSelectionRegion = function (gElement, options) {\n        var rect;\n        rect = gElement.parentNode.getElementById(options.id);\n        var attr;\n        attr = {\n            'id': options.id, 'x': options.x.toString(), 'y': options.y.toString(), 'width': options.width.toString(),\n            'height': options.height.toString(), 'transform': 'rotate(' + options.angle + ','\n                + (options.x + options.width * options.pivotX) + ',' + (options.y + options.height * options.pivotY) + ')',\n            class: 'e-diagram-selected-region'\n        };\n        if (!rect) {\n            rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n            gElement.appendChild(rect);\n        }\n        this.setSvgStyle(rect, options);\n        setAttributeSvg(rect, attr);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createGElement = function (elementType, attribute) {\n        var gElement = createSvgElement(elementType, attribute);\n        return gElement;\n    };\n    /** @private */\n    SvgRenderer.prototype.drawLine = function (gElement, options) {\n        var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        this.setSvgStyle(line, options);\n        var pivotX = options.x + options.width * options.pivotX;\n        var pivotY = options.y + options.height * options.pivotY;\n        var kk = '';\n        var attr = {\n            'id': options.id,\n            'x1': options.startPoint.x + options.x,\n            'y1': options.startPoint.y + options.y,\n            'x2': options.endPoint.x + options.x,\n            'y2': options.endPoint.y + options.y,\n            'stroke': options.stroke,\n            'stroke-width': options.strokeWidth.toString(), 'opacity': options.opacity.toString(),\n            'transform': 'rotate(' + options.angle + ' ' + pivotX + ' ' + pivotY + ')',\n            'visibility': options.visible ? 'visible' : 'hidden',\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(line, attr);\n        gElement.appendChild(line);\n    };\n    /** @private */\n    SvgRenderer.prototype.drawCircle = function (gElement, options, enableSelector, ariaLabel) {\n        var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        this.setSvgStyle(circle, options);\n        var classval = options.class || '';\n        if (!enableSelector) {\n            classval += ' e-disabled';\n        }\n        var attr = {\n            'id': options.id,\n            'cx': options.centerX,\n            'cy': options.centerY,\n            'r': options.radius,\n            'visibility': options.visible ? 'visible' : 'hidden',\n            'class': classval,\n            'aria-label': ariaLabel ? ariaLabel['aria-label'] : ''\n        };\n        circle.style.display = options.visible ? 'block' : 'none';\n        setAttributeSvg(circle, attr);\n        gElement.appendChild(circle);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawPath = function (svg, options, diagramId, isSelector, parentSvg, ariaLabel) {\n        var id;\n        var x = Math.floor((Math.random() * 10) + 1);\n        id = svg.id + '_shape' + x.toString();\n        var collection = [];\n        collection = processPathData(options.data);\n        collection = pathSegmentCollection(collection);\n        if (options.shadow) {\n            this.renderShadow(options, svg, collection, parentSvg);\n        }\n        var shadowElement;\n        if (parentSvg && !options.shadow) {\n            shadowElement = parentSvg.getElementById(options.id + '_groupElement_shadow');\n            if (shadowElement) {\n                shadowElement.parentNode.removeChild(shadowElement);\n            }\n        }\n        var path;\n        if (parentSvg) {\n            path = parentSvg.getElementById(options.id);\n        }\n        if (!path || isSelector) {\n            path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            svg.appendChild(path);\n        }\n        this.renderPath(path, options, collection);\n        var attr = {\n            'id': options.id, 'transform': 'rotate(' + options.angle + ',' + (options.x + options.width * options.pivotX) + ','\n                + (options.y + options.height * options.pivotY) + ')' + 'translate(' + (options.x) + ',' + (options.y) + ')',\n            'visibility': options.visible ? 'visible' : 'hidden', 'opacity': options.opacity,\n            'aria-label': ariaLabel ? ariaLabel : ''\n        };\n        if (options.class) {\n            attr['class'] = options.class;\n        }\n        setAttributeSvg(path, attr);\n        this.setSvgStyle(path, options, diagramId);\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderPath = function (svg, options, collection) {\n        var x1;\n        var y1;\n        var x2;\n        var y2;\n        var x;\n        var y;\n        var length;\n        var i;\n        var segments = collection;\n        var d = '';\n        for (x = 0, y = 0, i = 0, length = segments.length; i < length; ++i) {\n            var obj = segments[i];\n            var segment = obj;\n            var char = segment.command;\n            if ('x1' in segment) {\n                x1 = segment.x1;\n            }\n            if ('x2' in segment) {\n                x2 = segment.x2;\n            }\n            if ('y1' in segment) {\n                y1 = segment.y1;\n            }\n            if ('y2' in segment) {\n                y2 = segment.y2;\n            }\n            if ('x' in segment) {\n                x = segment.x;\n            }\n            if ('y' in segment) {\n                y = segment.y;\n            }\n            switch (char) {\n                case 'M':\n                    d = d + 'M' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'L':\n                    d = d + 'L' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'C':\n                    d = d + 'C' + x1.toString() + ',' + y1.toString() + ',' + x2.toString() + ',' + y2.toString() + ',';\n                    d += x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Q':\n                    d = d + 'Q' + x1.toString() + ',' + y1.toString() + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'A':\n                    d = d + 'A' + segment.r1.toString() + ',' + segment.r2.toString() + ',' + segment.angle.toString() + ',';\n                    d += segment.largeArc.toString() + ',' + segment.sweep + ',' + x.toString() + ',' + y.toString() + ' ';\n                    break;\n                case 'Z':\n                case 'z':\n                    d = d + 'Z' + ' ';\n                    break;\n            }\n        }\n        svg.setAttribute('d', d);\n    };\n    SvgRenderer.prototype.setSvgFontStyle = function (text, options) {\n        text.style.fontStyle = options.italic ? 'italic' : 'normal';\n        text.style.fontWeight = options.bold ? 'bold' : 'normal';\n        text.style.fontSize = options.fontSize.toString() + 'px';\n        text.style.fontFamily = options.fontFamily;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawText = function (canvas, options, parentSvg, ariaLabel, diagramId) {\n        if (options.content !== undefined) {\n            var textNode = void 0;\n            var childNodes = void 0;\n            var wrapBounds = void 0;\n            var position = void 0;\n            var child = void 0;\n            var tspanElement = void 0;\n            var offsetX = 0;\n            var offsetY = 0;\n            var i = 0;\n            var text = void 0;\n            if (parentSvg) {\n                text = parentSvg.getElementById(options.id + '_text');\n            }\n            if (text) {\n                if (options.doWrap) {\n                    while (text.firstChild) {\n                        text.removeChild(text.firstChild);\n                    }\n                }\n            }\n            else {\n                options.doWrap = true;\n                text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n                if (options.whiteSpace === 'pre-wrap') {\n                    text.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\n                }\n                canvas.appendChild(text);\n            }\n            var pivotX = options.x + options.width * options.pivotX;\n            var pivotY = options.y + options.height * options.pivotY;\n            if (options.doWrap || options.textOverflow !== 'Wrap') {\n                this.setSvgStyle(text, options, diagramId);\n                this.setSvgFontStyle(text, options);\n                textNode = document.createTextNode(options.content);\n                childNodes = options.childNodes;\n                wrapBounds = options.wrapBounds;\n                position = this.svgLabelAlign(options, wrapBounds, childNodes);\n                if (wrapBounds.width > options.width && options.textOverflow !== 'Wrap') {\n                    childNodes[0].text = overFlow(options.content, options);\n                }\n                for (i = 0; i < childNodes.length; i++) {\n                    tspanElement = document.createElementNS('http://www.w3.org/2000/svg', 'tspan');\n                    textNode = document.createTextNode(childNodes[i].text);\n                    child = childNodes[i];\n                    offsetX = position.x + child.x - wrapBounds.x;\n                    offsetY = position.y + child.dy * (i) + ((options.fontSize) * 0.8);\n                    setAttributeSvg(tspanElement, { 'x': offsetX.toString(), 'y': offsetY.toString() });\n                    text.setAttribute('fill', child.text);\n                    tspanElement.appendChild(textNode);\n                    text.appendChild(tspanElement);\n                }\n            }\n            if (options.textDecoration && options.textDecoration === 'LineThrough') {\n                options.textDecoration = wordBreakToString(options.textDecoration);\n            }\n            var attr = {\n                'id': options.id + '_text', 'fill': options.color, 'visibility': options.visible ? 'visible' : 'hidden',\n                'text-decoration': options.textDecoration, 'transform': 'rotate(' + options.angle + ','\n                    + (pivotX) + ',' + (pivotY) + ')'\n                    + 'translate(' + (options.x) + ',' + (options.y) + ')', 'opacity': options.opacity,\n                'aria-label': ariaLabel ? ariaLabel : ''\n            };\n            setAttributeSvg(text, attr);\n        }\n    };\n    /**   @private  */\n    SvgRenderer.prototype.drawImage = function (canvas, obj, parentSvg, fromPalette) {\n        var id = obj.id + '_image';\n        var image;\n        if (parentSvg) {\n            image = parentSvg.getElementById(obj.id + 'image');\n        }\n        if (!image) {\n            image = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n            canvas.appendChild(image);\n        }\n        var imageObj = new Image();\n        imageObj.src = obj.source;\n        var scale = obj.scale !== 'None' ? obj.scale : '';\n        var imgAlign = obj.alignment;\n        var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n        if (scale) {\n            aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n        }\n        var attr = {\n            'id': obj.id + 'image', 'x': obj.x.toString(), 'y': obj.y.toString(), 'transform': 'rotate(' + obj.angle + ','\n                + (obj.x + obj.width * obj.pivotX) + ',' + (obj.y + obj.height * obj.pivotY) + ')',\n            'width': obj.width.toString(), 'visibility': obj.visible ? 'visible' : 'hidden',\n            'height': obj.height.toString(), 'preserveAspectRatio': aspectRatio, 'opacity': (obj.opacity || 1).toString()\n        };\n        setAttributeSvg(image, attr);\n        image.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n    };\n    /** @private */\n    SvgRenderer.prototype.drawHTMLContent = function (element, canvas, transform, value, indexValue) {\n        var htmlElement;\n        if (canvas) {\n            var i = void 0;\n            for (i = 0; i < canvas.childNodes.length; i++) {\n                if (canvas.childNodes[i].id === element.id + '_html_element') {\n                    htmlElement = canvas.childNodes[i];\n                }\n            }\n        }\n        if (!htmlElement) {\n            var attr = {\n                'id': element.id + '_html_element',\n                'class': 'foreign-object'\n            };\n            htmlElement = createHtmlElement('div', attr);\n            htmlElement.appendChild(element.template.cloneNode(true));\n            if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                canvas.insertBefore(htmlElement, canvas.childNodes[indexValue]);\n            }\n            else {\n                canvas.appendChild(htmlElement);\n            }\n        }\n        var point = cornersPointsBeforeRotation(element).topLeft;\n        htmlElement.setAttribute('style', 'height:' + (element.actualSize.height) + 'px; width:' + (element.actualSize.width) +\n            'px;left:' + point.x + 'px; top:' + point.y + 'px;' +\n            'position:absolute;transform:rotate(' + (element.rotateAngle + element.parentTransform) + 'deg);' +\n            'pointer-events:' + (value ? 'all' : 'none')\n            + ';visibility:' + ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n    };\n    /** @private */\n    SvgRenderer.prototype.drawNativeContent = function (element, canvas, height, width, parentSvg) {\n        var nativeElement;\n        var clipPath;\n        if (parentSvg) {\n            nativeElement = parentSvg.getElementById(element.id + '_native_element');\n            clipPath = parentSvg.getElementById(element.id + '_clip');\n        }\n        if (!nativeElement) {\n            nativeElement = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            nativeElement.setAttribute('id', element.id + '_native_element');\n            nativeElement.appendChild(element.template.cloneNode(true));\n            canvas.appendChild(nativeElement);\n        }\n        if (clipPath) {\n            nativeElement.removeChild(clipPath);\n        }\n        nativeElement.setAttribute('style', 'visibility:' +\n            ((element.visible) ? 'visible' : 'hidden') + ';opacity:' + element.style.opacity + ';');\n        this.setNativTransform(element, nativeElement, height, width);\n        if (element.scale === 'Slice') {\n            this.drawClipPath(element, nativeElement, height, width, parentSvg);\n        }\n        setAttributeSvg(nativeElement, element.description ? { 'aria-label': element.description } : {});\n    };\n    SvgRenderer.prototype.setNativTransform = function (element, nativeElement, height, width) {\n        var angle;\n        var contentWidth = element.contentSize.width !== 0 ? element.contentSize.width : 1;\n        var contentHeight = element.contentSize.height !== 0 ? element.contentSize.height : 1;\n        var x = element.templatePosition.x * width / contentWidth;\n        var y = element.templatePosition.y * height / contentHeight;\n        nativeElement.setAttribute('transform', 'rotate(' + element.parentTransform + ',' + element.offsetX + ',' + element.offsetY +\n            ') translate(' + (element.offsetX - x - width * element.pivot.x) + ',' + (element.offsetY - y - height * element.pivot.y) +\n            ') scale(' + (width / contentWidth) + ',' + (height / contentHeight) + ')');\n    };\n    /**\n     * used to crop the given native element into a rectangle of the given size\n     * @private\n     * @param node\n     * @param group\n     * @param height\n     * @param width\n     * @param parentSvg\n     */\n    SvgRenderer.prototype.drawClipPath = function (node, group, height, width, parentSvg) {\n        var contentWidth = node.contentSize.width;\n        var contentHeight = node.contentSize.height;\n        var actualWidth = node.actualSize.width;\n        var actualHeight = node.actualSize.height;\n        var clipWidth = node.width / (width / contentWidth);\n        var clipHeight = node.height / (height / contentHeight);\n        var x = node.templatePosition.x + (node.width >= node.height ? 0 : (contentWidth - clipWidth) / 2);\n        var y = node.templatePosition.y + (node.height >= node.width ? 0 : (contentHeight - clipHeight) / 2);\n        var clipPath = parentSvg.getElementById(node.id + '_clip');\n        clipPath = document.createElementNS('http://www.w3.org/2000/svg', 'clipPath');\n        clipPath.setAttribute('id', node.id + '_clip');\n        group.appendChild(clipPath);\n        var rect = parentSvg.getElementById(node.id + '_clip_rect');\n        rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        clipPath.appendChild(rect);\n        var attr = {\n            'id': node.id + '_clip_rect', 'width': clipWidth.toString(), 'height': clipHeight.toString(),\n            'x': x.toString(), 'y': y.toString()\n        };\n        setAttributeSvg(rect, attr);\n        group.setAttribute('clip-path', 'url(#' + node.id + '_clip)');\n        return group;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.renderGradient = function (options, svg, diagramId) {\n        var max;\n        var min;\n        var grd;\n        var svgContainer = getBackgroundLayerSvg(diagramId);\n        var defs = svgContainer.getElementById(diagramId + 'gradient_pattern');\n        if (!defs) {\n            defs = createSvgElement('defs', { id: diagramId + 'gradient_pattern' });\n            svgContainer.insertBefore(defs, svgContainer.firstChild);\n        }\n        var radial;\n        var linear;\n        var stop;\n        var offset;\n        removeGradient(svg.id);\n        if (options.gradient.type !== 'None') {\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                max = !max ? options.gradient.stops[i].offset : Math.max(max, options.gradient.stops[i].offset);\n                min = !min ? options.gradient.stops[i].offset : Math.min(min, options.gradient.stops[i].offset);\n            }\n            if (options.gradient.type === 'Linear') {\n                linear = options.gradient;\n                linear.id = svg.id + '_linear';\n                grd = this.createLinearGradient(linear);\n                defs.appendChild(grd);\n            }\n            else {\n                radial = options.gradient;\n                radial.id = svg.id + '_radial';\n                grd = this.createRadialGradient(radial);\n                defs.appendChild(grd);\n            }\n            for (var i = 0; i < options.gradient.stops.length; i++) {\n                var stop_1 = options.gradient.stops[i];\n                var offset_1 = min < 0 ? (max + stop_1.offset) / (2 * max) : stop_1.offset / max;\n                var stopElement = document.createElementNS('http://www.w3.org/2000/svg', 'stop');\n                setAttributeSvg(stopElement, { 'offset': offset_1.toString(), 'style': 'stop-color:' + stop_1.color });\n                grd.appendChild(stopElement);\n            }\n        }\n        return grd;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createLinearGradient = function (linear) {\n        var lineargradient = document.createElementNS('http://www.w3.org/2000/svg', 'linearGradient');\n        var attr = {\n            'id': linear.id, 'x1': linear.x1 + '%', 'y1': linear.y1 + '%', 'x2': linear.x2 + '%', 'y2': linear.y2 + '%'\n        };\n        setAttributeSvg(lineargradient, attr);\n        return lineargradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.createRadialGradient = function (radial) {\n        var radialgradient = document.createElementNS('http://www.w3.org/2000/svg', 'radialGradient');\n        var attr = {\n            'id': radial.id, 'cx': radial.cx + '%', 'cy': radial.cy + '%', 'r': radial.r + '%', 'fx': radial.fx + '%', 'fy': radial.fy + '%'\n        };\n        setAttributeSvg(radialgradient, attr);\n        return radialgradient;\n    };\n    /**   @private  */\n    SvgRenderer.prototype.setSvgStyle = function (svg, style, diagramId) {\n        if (style.canApplyStyle || style.canApplyStyle === undefined) {\n            if (style.fill === 'none') {\n                style.fill = 'transparent';\n            }\n            if (style.stroke === 'none') {\n                style.stroke = 'transparent';\n            }\n            var dashArray = [];\n            var fill = void 0;\n            if (style.dashArray !== undefined) {\n                var canvasRenderer = new CanvasRenderer();\n                dashArray = canvasRenderer.parseDashArray(style.dashArray);\n            }\n            if (style.gradient && style.gradient.type !== 'None') {\n                var grd = this.renderGradient(style, svg, diagramId);\n                fill = 'url(#' + grd.id + ')';\n            }\n            else {\n                fill = style.fill;\n            }\n            if (style.stroke) {\n                svg.setAttribute('stroke', style.stroke);\n            }\n            if (style.strokeWidth !== undefined && style.strokeWidth !== null) {\n                svg.setAttribute('stroke-width', style.strokeWidth.toString());\n            }\n            if (dashArray) {\n                svg.setAttribute('stroke-dasharray', dashArray.toString());\n            }\n            if (fill) {\n                svg.setAttribute('fill', fill);\n            }\n        }\n    };\n    //end region\n    // text utility\n    /**   @private  */\n    SvgRenderer.prototype.svgLabelAlign = function (text, wrapBound, childNodes) {\n        var bounds = new Size(wrapBound.width, childNodes.length * (text.fontSize * 1.2));\n        var pos = { x: 0, y: 0 };\n        var x = 0;\n        var y = 1.2;\n        var offsetX = text.width * 0.5;\n        var offsety = text.height * 0.5;\n        var pointX = offsetX;\n        var pointY = offsety;\n        if (text.textAlign === 'left') {\n            pointX = 0;\n        }\n        else if (text.textAlign === 'center') {\n            if (wrapBound.width > text.width && (text.textOverflow === 'Ellipsis' || text.textOverflow === 'Clip')) {\n                pointX = 0;\n            }\n            else {\n                pointX = text.width * 0.5;\n            }\n        }\n        else if (text.textAlign === 'right') {\n            pointX = (text.width * 1);\n        }\n        pos.x = x + pointX + (wrapBound ? wrapBound.x : 0);\n        pos.y = y + pointY - bounds.height / 2;\n        return pos;\n    };\n    return SvgRenderer;\n}());\nexport { SvgRenderer };\n","import { PathElement } from '../core/elements/path-element';\nimport { ImageElement } from '../core/elements/image-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { Container } from '../core/containers/container';\nimport { rotateMatrix, identityMatrix, transformPointByMatrix } from '../primitives/matrix';\nimport { Size } from '../primitives/size';\nimport { wordBreakToString, whiteSpaceToString, textAlignToString } from '../utility/base-util';\nimport { getUserHandlePosition, canShowCorner } from '../utility/diagram-util';\nimport { getDiagramElement, getAdornerLayer, getGridLayer, getHTMLLayer, updatePath } from '../utility/dom-util';\nimport { measurePath, getBackgroundLayerSvg, getBackgroundImageLayer, setAttributeSvg } from '../utility/dom-util';\nimport { SnapConstraints, RendererAction } from '../enum/enum';\nimport { ThumbsConstraints, SelectorConstraints, ElementAction } from '../enum/enum';\nimport { SvgRenderer } from './svg-renderer';\nimport { CanvasRenderer } from './canvas-renderer';\nimport { processPathData, splitArrayCollection, transformPath } from '../utility/path-util';\nimport { isDiagramChild } from '../utility/diagram-util';\nimport { DiagramNativeElement } from '../core/elements/native-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { Point } from '../primitives/point';\nimport { canDrawThumbs, avoidDrawSelector } from '../utility/constraints-util';\n/**\n * Renderer module is used to render basic diagram elements\n */\n/** @private */\nvar DiagramRenderer = /** @class */ (function () {\n    function DiagramRenderer(name, svgRender, isSvgMode) {\n        /**   @private  */\n        this.renderer = null;\n        /** @private */\n        this.isSvgMode = true;\n        this.transform = { x: 0, y: 0 };\n        this.diagramId = name;\n        this.element = getDiagramElement(this.diagramId);\n        this.svgRenderer = svgRender;\n        this.isSvgMode = isSvgMode;\n        this.renderer = isSvgMode ? new SvgRenderer() : new CanvasRenderer();\n    }\n    /**   @private  */\n    DiagramRenderer.prototype.setCursor = function (canvas, cursor) {\n        canvas.style.cursor = cursor;\n    };\n    /** @private */\n    DiagramRenderer.prototype.setLayers = function () {\n        this.iconSvgLayer = this.element.getElementsByClassName('e-ports-expand-layer')[0];\n        this.adornerSvgLayer = this.element.getElementsByClassName('e-adorner-layer')[0];\n        this.nativeSvgLayer = this.element.getElementsByClassName('e-native-layer')[0];\n        this.diagramSvgLayer = this.element.getElementsByClassName('e-diagram-layer')[0];\n    };\n    DiagramRenderer.prototype.getAdornerLayer = function () {\n        var adornerLayer = getAdornerLayer(this.diagramId);\n        return adornerLayer;\n    };\n    DiagramRenderer.prototype.getParentSvg = function (element, targetElement, canvas) {\n        if (this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1 || element.id.split('_nodeport').length > 1) {\n                return this.iconSvgLayer;\n            }\n            if (targetElement && targetElement === 'selector') {\n                return this.adornerSvgLayer;\n            }\n            else if (element instanceof DiagramNativeElement) {\n                return this.nativeSvgLayer;\n            }\n            else {\n                return this.diagramSvgLayer;\n            }\n        }\n        return canvas;\n    };\n    DiagramRenderer.prototype.getParentElement = function (element, defaultParent, svgElement, indexValue) {\n        var layerGElement = defaultParent;\n        if (svgElement && this.diagramId && element && element.id) {\n            if (element.id.split('_icon_content').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramExpander');\n                defaultParent = null;\n            }\n            else if (element.id.split('_nodeport').length > 1) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramPorts');\n            }\n            else if (element instanceof DiagramNativeElement) {\n                layerGElement = svgElement.getElementById(this.diagramId + '_nativeLayer');\n                defaultParent = null;\n            }\n            else {\n                layerGElement = svgElement.getElementById(this.diagramId + '_diagramLayer');\n            }\n            var groupElement = this.getGroupElement(element, defaultParent || layerGElement, indexValue);\n            layerGElement = groupElement.g;\n            if (groupElement.svg) {\n                svgElement = groupElement.svg;\n            }\n        }\n        return { g: layerGElement, svg: svgElement };\n    };\n    DiagramRenderer.prototype.getGroupElement = function (element, canvas, indexValue) {\n        var gElement;\n        var parentSvg = this.getParentSvg(element);\n        var svgElement;\n        if (canvas && parentSvg) {\n            if (parentSvg) {\n                gElement = parentSvg.getElementById(element.id + '_groupElement');\n                if (!gElement && parentSvg !== this.nativeSvgLayer) { //code added\n                    var nativeSvg = this.nativeSvgLayer;\n                    gElement = nativeSvg.getElementById(element.id + '_groupElement');\n                    svgElement = nativeSvg;\n                }\n            }\n            if (!gElement) {\n                gElement = this.svgRenderer.createGElement('g', { id: element.id + '_groupElement' });\n                if (indexValue !== undefined && canvas.childNodes.length > indexValue) {\n                    canvas.insertBefore(gElement, canvas.childNodes[indexValue]);\n                }\n                else {\n                    canvas.appendChild(gElement);\n                }\n            }\n        }\n        return { g: gElement, svg: svgElement };\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderElement = function (element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var isElement = true;\n        if (element instanceof Container) {\n            isElement = false;\n            this.renderContainer(element, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue);\n        }\n        else if (element instanceof ImageElement) {\n            this.renderImageElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof PathElement) {\n            this.renderPathElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof TextElement) {\n            this.renderTextElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramNativeElement) {\n            this.renderNativeElement(element, canvas, transform, parentSvg, fromPalette);\n        }\n        else if (element instanceof DiagramHtmlElement) {\n            this.renderHTMLElement(element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue);\n        }\n        else {\n            this.renderRect(element, canvas, transform, parentSvg);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawSelectionRectangle = function (x, y, w, h, canvas, t) {\n        x = (x + t.tx) * t.scale;\n        y = (y + t.ty) * t.scale;\n        var options = {\n            width: w * t.scale, height: h * t.scale,\n            x: x + 0.5, y: y + 0.5, fill: 'transparent', stroke: 'gray', angle: 0,\n            pivotX: 0.5, pivotY: 0.5, strokeWidth: 1,\n            dashArray: '6 3', opacity: 1,\n            visible: true, id: canvas.id + '_selected_region'\n        };\n        var adornerLayer = this.getAdornerLayer();\n        this.svgRenderer.updateSelectionRegion(adornerLayer, options);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderHighlighter = function (element, canvas, transform) {\n        var width = element.actualSize.width || 2;\n        var height = element.actualSize.height || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        y = (y + transform.ty) * transform.scale;\n        var options = {\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 4,\n            dashArray: '', opacity: 1, cornerRadius: 0,\n            visible: true, id: canvas.id + '_highlighter', class: 'e-diagram-highlighter'\n        };\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**\n     * @private\n     */\n    DiagramRenderer.prototype.renderStackHighlighter = function (element, canvas, transform, isVertical, position, isUml, isSwimlane) {\n        var width = element.actualSize.width || 2;\n        var x = element.offsetX - width * element.pivot.x;\n        var height = element.actualSize.height || 2;\n        var y = element.offsetY - height * element.pivot.y;\n        x = (x + transform.tx) * transform.scale;\n        var data;\n        var bounds = element.bounds;\n        var newPathString = '';\n        y = (y + transform.ty) * transform.scale;\n        if (!isVertical) {\n            var d = height * transform.scale;\n            data = 'M 10 -10 L 0 0 Z M -10 -10 L 0 0 Z M 0 0 L 0 ' + (d) + ' Z M 0  ' + (d) +\n                ' L -10  ' + (d + 10) + ' Z L 10  ' + (d + 10) + ' Z';\n            if (position.x >= element.offsetX) {\n                x += width;\n            }\n        }\n        else {\n            if (isUml) {\n                var d = width * transform.scale;\n                data = 'M 0 0 L ' + (d + 2) + ' 0 Z';\n                var scaleX = -bounds.x;\n                var scaleY = -bounds.y;\n                var arrayCollection = [];\n                scaleX = element.actualSize.width / Number(bounds.width ? bounds.width : 1) * transform.scale;\n                scaleY = element.actualSize.height / Number(bounds.height ? bounds.height : 1) * transform.scale;\n                var umlData = 'M7,4 L8,4 8,7 11,7 11,8 8,8 8,11 7,11 7,8 4,8 4,7 7,7 z M7.5,0.99999994' +\n                    'C3.9160004,1 1,3.9160004 0.99999994,7.5 1,11.084 3.9160004,14 7.5,14 11.084,14 14,11.084 14,7.5 14,' +\n                    '3.9160004 11.084,1 7.5,0.99999994 z M7.5,0 C11.636002,0 15,3.3639984 15,7.5 15,11.636002 11.636002,15 7.5,' +\n                    '15 3.3640003,15 0,11.636002 0,7.5 0,3.3639984 3.3640003,0 7.5,0 z';\n                arrayCollection = processPathData(umlData);\n                arrayCollection = splitArrayCollection(arrayCollection);\n                newPathString = transformPath(arrayCollection, scaleX + d + 2, scaleY - 8, false, bounds.x, bounds.y, 0, 0);\n                if (position.y >= element.offsetY) {\n                    y += height;\n                }\n            }\n            else {\n                if (isSwimlane) {\n                    if (position.y >= element.offsetY) {\n                        y += height;\n                    }\n                }\n                var d = width * transform.scale;\n                data = 'M -10 -10 L 0 0 Z M -10 10 L 0 0 Z M 0 0 L ' + (d) + ' 0 Z M ' + (d) + ' 0 L ' +\n                    (d + 10) + ' 10 Z L ' + (d + 10) + ' -10 Z';\n            }\n        }\n        var options = {\n            data: data + newPathString,\n            width: width * transform.scale, height: height * transform.scale,\n            x: x, y: y, fill: 'transparent', stroke: '#8CC63F', angle: element.rotateAngle,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: 1,\n            dashArray: '', opacity: 1,\n            visible: true, id: canvas.id + '_stack_highlighter', class: 'e-diagram-highlighter',\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawLine = function (canvas, options) {\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawPath = function (canvas, options) {\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderResizeHandle = function (element, canvas, constraints, currentZoom, selectorConstraints, transform, canMask, enableNode, nodeConstraints, isSwimlane) {\n        var left = element.offsetX - element.actualSize.width * element.pivot.x;\n        var top = element.offsetY - element.actualSize.height * element.pivot.y;\n        var height = element.actualSize.height;\n        var width = element.actualSize.width;\n        if (!isSwimlane &&\n            (constraints & ThumbsConstraints.Rotate && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions)))) {\n            this.renderPivotLine(element, canvas, transform, selectorConstraints, canMask);\n            this.renderRotateThumb(element, canvas, transform, selectorConstraints, canMask);\n        }\n        this.renderBorder(element, canvas, transform, enableNode, nodeConstraints, isSwimlane);\n        var nodeWidth = element.actualSize.width * currentZoom;\n        var nodeHeight = element.actualSize.height * currentZoom;\n        if (!nodeConstraints && canDrawThumbs(this.rendererActions) && (!avoidDrawSelector(this.rendererActions))) {\n            if (nodeWidth >= 40 && nodeHeight >= 40) {\n                //Hide corners when the size is less than 40\n                if (selectorConstraints & SelectorConstraints.ResizeNorthWest) {\n                    this.renderCircularHandle('resizeNorthWest', element, left, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthWest'), constraints & ThumbsConstraints.ResizeNorthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top left side direction' }, undefined, 'e-diagram-resize-handle e-northwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeNorthEast) {\n                    this.renderCircularHandle('resizeNorthEast', element, left + width, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorthEast'), constraints & ThumbsConstraints.ResizeNorthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top right side direction' }, undefined, 'e-diagram-resize-handle e-northeast');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthWest) {\n                    this.renderCircularHandle('resizeSouthWest', element, left, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthWest'), constraints & ThumbsConstraints.ResizeSouthWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom left side direction' }, undefined, 'e-diagram-resize-handle e-southwest');\n                }\n                if (selectorConstraints & SelectorConstraints.ResizeSouthEast) {\n                    this.renderCircularHandle('resizeSouthEast', element, left + width, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouthEast'), constraints & ThumbsConstraints.ResizeSouthEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom right side direction' }, undefined, 'e-diagram-resize-handle e-southeast');\n                }\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeNorth) {\n                this.renderCircularHandle('resizeNorth', element, left + width / 2, top, canvas, canShowCorner(selectorConstraints, 'ResizeNorth'), constraints & ThumbsConstraints.ResizeNorth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on top side direction' }, undefined, 'e-diagram-resize-handle e-north');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeSouth) {\n                this.renderCircularHandle('resizeSouth', element, left + width / 2, top + height, canvas, canShowCorner(selectorConstraints, 'ResizeSouth'), constraints & ThumbsConstraints.ResizeSouth, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on bottom side direction' }, undefined, 'e-diagram-resize-handle e-south');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeWest) {\n                this.renderCircularHandle('resizeWest', element, left, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeWest'), constraints & ThumbsConstraints.ResizeWest, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on left side direction' }, undefined, 'e-diagram-resize-handle e-west');\n            }\n            if (selectorConstraints & SelectorConstraints.ResizeEast) {\n                this.renderCircularHandle('resizeEast', element, left + width, top + height / 2, canvas, canShowCorner(selectorConstraints, 'ResizeEast'), constraints & ThumbsConstraints.ResizeEast, transform, undefined, canMask, { 'aria-label': 'Thumb to resize the selected object on right side direction' }, undefined, 'e-diagram-resize-handle e-east');\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderEndPointHandle = function (selector, canvas, constraints, selectorConstraints, transform, connectedSource, connectedTarget, isSegmentEditing) {\n        var sourcePoint = selector.sourcePoint;\n        var targetPoint = selector.targetPoint;\n        var wrapper = selector.wrapper;\n        var i;\n        var segment;\n        this.renderCircularHandle('connectorSourceThumb', wrapper, sourcePoint.x, sourcePoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        this.renderCircularHandle('connectorTargetThumb', wrapper, targetPoint.x, targetPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, connectedTarget, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-endpoint-handle e-targetend');\n        if (isSegmentEditing) {\n            if ((selector.type === 'Straight' || selector.type === 'Bezier') && selector.segments.length > 0) {\n                for (i = 0; i < selector.segments.length - 1; i++) {\n                    segment = selector.segments[i];\n                    this.renderCircularHandle(('segementThumb_' + (i + 1)), wrapper, segment.point.x, segment.point.y, canvas, true, constraints & ThumbsConstraints.ConnectorSource, transform, connectedSource, null, null, i);\n                }\n            }\n            else {\n                for (i = 0; i < selector.segments.length; i++) {\n                    var seg = selector.segments[i];\n                    this.renderOrthogonalThumbs('orthoThumb_' + (i + 1), wrapper, seg, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), transform);\n                }\n            }\n        }\n        if (selector.type === 'Bezier') {\n            for (i = 0; i < selector.segments.length; i++) {\n                var segment_1 = selector.segments[i];\n                var bezierPoint = !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1\n                    : segment_1.bezierPoint1;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_1', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorSourceThumb'), constraints & ThumbsConstraints.ConnectorSource, transform, undefined, undefined, { 'aria-label': 'Thumb to move the source point of the connector' }, undefined, 'e-diagram-bezier-handle e-source');\n                if (canShowCorner(selectorConstraints, 'ConnectorSourceThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_1', wrapper, canvas, segment_1.points[0], !Point.isEmptyPoint(segment_1.point1) ? segment_1.point1 : segment_1.bezierPoint1, transform);\n                }\n                bezierPoint = !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2;\n                this.renderCircularHandle('bezierPoint_' + (i + 1) + '_2', wrapper, bezierPoint.x, bezierPoint.y, canvas, canShowCorner(selectorConstraints, 'ConnectorTargetThumb'), constraints & ThumbsConstraints.ConnectorTarget, transform, undefined, undefined, { 'aria-label': 'Thumb to move the target point of the connector' }, undefined, 'e-diagram-bezier-handle e-target');\n                if (canShowCorner(selectorConstraints, 'ConnectorTargetThumb')) {\n                    this.renderBezierLine('bezierLine_' + (i + 1) + '_2', wrapper, canvas, segment_1.points[1], !Point.isEmptyPoint(segment_1.point2) ? segment_1.point2 : segment_1.bezierPoint2, transform);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumbs = function (id, selector, segment, canvas, visibility, t) {\n        var orientation;\n        var visible;\n        var length;\n        var j = 0;\n        for (j = 0; j < segment.points.length - 1; j++) {\n            length = Point.distancePoints(segment.points[j], segment.points[j + 1]);\n            orientation = (segment.points[j].y.toFixed(2) === segment.points[j + 1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n            visible = (length >= 50) ? true : false;\n            this.renderOrthogonalThumb((id + '_' + (j + 1)), selector, (((segment.points[j].x + segment.points[j + 1].x) / 2)), (((segment.points[j].y + segment.points[j + 1].y) / 2)), canvas, visible, orientation, t);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderOrthogonalThumb = function (id, selector, x, y, canvas, visible, orientation, t) {\n        var path;\n        var h;\n        var v;\n        if (orientation === 'horizontal') {\n            path = 'M0,7 L15,0 L30,7 L15,14 z';\n            h = -15;\n            v = -7;\n        }\n        else {\n            path = 'M7,0 L0,15 L7,30 L14,15 z';\n            h = -7;\n            v = -15;\n        }\n        var options = {\n            x: ((x + t.tx) * t.scale) + h, y: ((y + t.ty) * t.scale) + v, angle: 0,\n            fill: '#e2e2e2', stroke: 'black', strokeWidth: 1, dashArray: '', data: path,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: id\n        };\n        this.svgRenderer.drawPath(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPivotLine = function (element, canvas, transform, selectorConstraints, canMask) {\n        var wrapper = element;\n        var dashArray = '2,3';\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.fill = 'None';\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.visible = visible;\n        var scale = transform.scale;\n        options.x *= scale;\n        options.y *= scale;\n        options.width *= scale;\n        options.height *= scale;\n        options.id = 'pivotLine';\n        options.class = 'e-diagram-pivot-line';\n        var startPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: -20 };\n        var endPoint = { x: wrapper.actualSize.width * wrapper.pivot.x * scale, y: 0 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBezierLine = function (id, wrapper, canvas, start, end, transform) {\n        var dashArray = '3,3';\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.id = id;\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        options.dashArray = dashArray;\n        options.fill = 'None';\n        options.class = 'e-diagram-bezier-line';\n        options.x = 0;\n        options.y = 0;\n        var scale = transform.scale;\n        var x1 = (start.x + transform.tx) * scale;\n        var y1 = (start.y + transform.ty) * scale;\n        var x2 = (end.x + transform.tx) * scale;\n        var y2 = (end.y + transform.ty) * scale;\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        options.startPoint = startPoint;\n        options.endPoint = endPoint;\n        this.svgRenderer.drawLine(canvas, options);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderCircularHandle = function (id, selector, cx, cy, canvas, visible, enableSelector, t, connected, canMask, ariaLabel, count, className) {\n        var wrapper = selector;\n        var radius = 7;\n        var newPoint = { x: cx, y: cy };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, wrapper.offsetX, wrapper.offsetY);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = this.getBaseAttributes(wrapper);\n        options.stroke = 'black';\n        options.strokeWidth = 1;\n        if (count !== undefined) {\n            radius = 5;\n            options.id = 'segmentEnd_' + count;\n            options.fill = '#e2e2e2';\n        }\n        else {\n            radius = 7;\n            options.fill = connected ? '#8CC63F' : 'white';\n        }\n        options.centerX = (newPoint.x + t.tx) * t.scale;\n        options.centerY = (newPoint.y + t.ty) * t.scale;\n        options.radius = radius;\n        options.angle = 0;\n        options.id = id;\n        options.visible = visible;\n        options.class = className;\n        if (connected) {\n            options.class += ' e-connected';\n        }\n        if (canMask) {\n            options.visible = false;\n        }\n        this.svgRenderer.drawCircle(canvas, options, enableSelector, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderBorder = function (selector, canvas, transform, enableNode, isBorderTickness, isSwimlane) {\n        var wrapper = selector;\n        var options = this.getBaseAttributes(wrapper, transform);\n        options.x *= transform.scale;\n        options.y *= transform.scale;\n        options.width *= transform.scale;\n        options.height *= transform.scale;\n        options.fill = 'transparent';\n        options.stroke = '#097F7F';\n        options.strokeWidth = 0.6;\n        options.dashArray = '6,3';\n        options.class = 'e-diagram-border';\n        if (isSwimlane) {\n            options.class += ' e-diagram-lane';\n        }\n        options.id = 'borderRect';\n        options.id = (this.rendererActions & RendererAction.DrawSelectorBorder) ? 'borderRect_symbol' : 'borderRect';\n        if (!enableNode) {\n            options.class += ' e-disabled';\n        }\n        if (isBorderTickness) {\n            options.class += ' e-thick-border';\n        }\n        options.cornerRadius = 0;\n        var parentSvg = this.getParentSvg(selector, 'selector');\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId, undefined, true, parentSvg);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderUserHandler = function (selectorItem, canvas, transform) {\n        var wrapper = selectorItem.wrapper;\n        for (var _i = 0, _a = selectorItem.userHandles; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            var element = new PathElement();\n            var newPoint = void 0;\n            var data = obj.pathData;\n            newPoint = getUserHandlePosition(selectorItem, obj, transform);\n            newPoint.x = (newPoint.x + transform.tx) * transform.scale;\n            newPoint.y = (newPoint.y + transform.ty) * transform.scale;\n            if (obj.visible) {\n                obj.visible = (selectorItem.constraints & SelectorConstraints.UserHandle) ? true : false;\n            }\n            var option = this.getBaseAttributes(wrapper);\n            option.id = obj.name + '_userhandle';\n            option.fill = obj.backgroundColor;\n            option.stroke = obj.borderColor;\n            option.strokeWidth = obj.borderWidth;\n            option.centerX = newPoint.x;\n            option.centerY = newPoint.y;\n            option.radius = obj.size * 0.5;\n            option.class = 'e-diagram-userhandle-circle';\n            option.angle = 0;\n            option.visible = obj.visible;\n            option.opacity = 1;\n            this.svgRenderer.drawCircle(canvas, option, 1, { 'aria-label': obj.name + 'user handle' });\n            var pathPading = 5;\n            var arrayCollection = [];\n            arrayCollection = processPathData(data);\n            arrayCollection = splitArrayCollection(arrayCollection);\n            var pathSize = measurePath(data);\n            //requiredSize/contentSize\n            var scaleX = (obj.size - 0.45 * obj.size) / pathSize.width;\n            var scaleY = (obj.size - 0.45 * obj.size) / pathSize.height;\n            var newData = transformPath(arrayCollection, scaleX, scaleY, true, pathSize.x, pathSize.y, 0, 0);\n            pathSize = measurePath(newData);\n            var options = {\n                x: newPoint.x - pathSize.width / 2,\n                y: newPoint.y - pathSize.height / 2,\n                angle: 0, id: '',\n                class: 'e-diagram-userhandle-path',\n                fill: obj.pathColor, stroke: obj.backgroundColor, strokeWidth: 0.5, dashArray: '', data: newData,\n                width: obj.size - pathPading, height: obj.size - pathPading, pivotX: 0, pivotY: 0, opacity: 1, visible: obj.visible\n            };\n            this.svgRenderer.drawPath(canvas, options, this.diagramId, undefined, undefined, { 'aria-label': obj.name + 'user handle' });\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRotateThumb = function (wrapper, canvas, transform, selectorConstraints, canMask) {\n        var element = new PathElement();\n        var newPoint;\n        var size = new Size();\n        size.width = 18;\n        size.height = 16;\n        var top = wrapper.offsetY - wrapper.actualSize.height * wrapper.pivot.y;\n        var left = wrapper.offsetX - wrapper.actualSize.width * wrapper.pivot.x;\n        var visible = (selectorConstraints & SelectorConstraints.Rotate) ? true : false;\n        if (canMask) {\n            visible = false;\n        }\n        var data = 'M 16.856144362449648 10.238890446662904 L 18.000144362449646 3.437890446662903' +\n            'L 15.811144362449646 4.254890446662903 C 14.837144362449646 2.5608904466629028 13.329144362449647 ' +\n            ' 1.2598904466629026 11.485144362449645 0.5588904466629026 C 9.375144362449646 - 0.24510955333709716 7.071144362449646 ' +\n            ' - 0.18010955333709716 5.010144362449646 0.7438904466629028 C 2.942144362449646 1.6678904466629028 1.365144362449646' +\n            ' 3.341890446662903 0.558144362449646 5.452890446662903 C - 0.244855637550354 7.567890446662903 - 0.17985563755035394' +\n            ' 9.866890446662904 0.7431443624496461 11.930890446662904 C 1.6681443624496461 13.994890446662904 3.343144362449646' +\n            ' 15.575890446662903 5.457144362449647 16.380890446662903 C 6.426144362449647 16.7518904466629 7.450144362449647' +\n            ' 16.9348904466629 8.470144362449647 16.9348904466629 C 9.815144362449647 16.9348904466629 11.155144362449647 ' +\n            '16.6178904466629 12.367144362449647 15.986890446662901 L 11.351144362449647 14.024890446662901 C 9.767144362449647' +\n            ' 14.8468904466629 7.906144362449647 14.953890446662902 6.237144362449647 14.3178904466629 C 4.677144362449647' +\n            ' 13.7218904466629 3.444144362449647 12.5558904466629 2.758144362449647 11.028890446662901 C 2.078144362449646 ' +\n            '9.501890446662903 2.031144362449646 7.802890446662903 2.622144362449646 6.243890446662903 C 3.216144362449646' +\n            ' 4.6798904466629025 4.387144362449646 3.442890446662903 5.914144362449646 2.760890446662903 C 7.437144362449646 ' +\n            '2.078890446662903 9.137144362449646 2.0298904466629026 10.700144362449645 2.6258904466629027 C 11.946144362449646 ' +\n            '3.100890446662903 12.971144362449646 3.9538904466629026 13.686144362449646 5.049890446662903 L 11.540144362449645 ' +\n            '5.850890446662903 L 16.856144362449648 10.238890446662904 Z';\n        var pivotX = left + wrapper.pivot.x * wrapper.actualSize.width;\n        var pivotY = top;\n        pivotX = (pivotX + transform.tx) * transform.scale;\n        pivotY = (pivotY + transform.ty) * transform.scale;\n        newPoint = { x: pivotX - size.width * 0.5, y: pivotY - 30 - size.height * 0.5 };\n        if (wrapper.rotateAngle !== 0 || wrapper.parentTransform !== 0) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, wrapper.rotateAngle + wrapper.parentTransform, (transform.tx + wrapper.offsetX) * transform.scale, (transform.ty + wrapper.offsetY) * transform.scale);\n            newPoint = transformPointByMatrix(matrix, newPoint);\n        }\n        var options = {\n            x: newPoint.x,\n            y: newPoint.y,\n            angle: wrapper.rotateAngle + wrapper.parentTransform,\n            fill: '#231f20', stroke: 'black', strokeWidth: 0.5, dashArray: '', data: data,\n            width: 20, height: 20, pivotX: 0, pivotY: 0, opacity: 1, visible: visible, id: wrapper.id, class: 'e-diagram-rotate-handle'\n        };\n        options.id = 'rotateThumb';\n        this.svgRenderer.drawPath(canvas, options, this.diagramId, true, undefined, { 'aria-label': 'Thumb to rotate the selected object' });\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderPathElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.data = element.absolutePath;\n        options.data = element.absolutePath;\n        var ariaLabel = element.description ? element.description : element.id;\n        if (!this.isSvgMode) {\n            options.x = element.flipOffset.x ? element.flipOffset.x : options.x;\n            options.y = element.flipOffset.y ? element.flipOffset.y : options.y;\n        }\n        if (element.isExport) {\n            var pathBounds = element.absoluteBounds;\n            options.data = updatePath(element, pathBounds, undefined, options);\n        }\n        this.renderer.drawPath(canvas, options, this.diagramId, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderSvgGridlines = function (snapSettings, gridSvg, t, rulerSettings, hRuler, vRuler) {\n        //render gridlines\n        var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n        var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');\n        defs.setAttribute('id', this.diagramId + '_grid_pattern_defn');\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines ||\n            snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            pattern.setAttribute('id', this.diagramId + '_pattern');\n        }\n        var hWidth = 0;\n        var hHeight = 0;\n        var hSegmentwidth = 0;\n        var vSegmentwidth = 0;\n        var scale = 1;\n        var isRulerGrid = false;\n        if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler && vRuler) {\n            hSegmentwidth = vRuler.updateSegmentWidth(t.scale);\n            vSegmentwidth = hRuler.updateSegmentWidth(t.scale);\n            snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n            snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            isRulerGrid = true;\n        }\n        else {\n            for (var _i = 0, _a = snapSettings.verticalGridlines.lineIntervals; _i < _a.length; _i++) {\n                var entry = _a[_i];\n                hWidth += entry;\n            }\n            for (var _b = 0, _c = snapSettings.horizontalGridlines.lineIntervals; _b < _c.length; _b++) {\n                var entry = _c[_b];\n                hHeight += entry;\n            }\n            scale = this.scaleSnapInterval(snapSettings, t.scale);\n        }\n        hWidth = isRulerGrid ? vSegmentwidth : hWidth * scale;\n        hHeight = isRulerGrid ? hSegmentwidth : hHeight * scale;\n        var attr = {\n            id: this.diagramId + '_pattern', x: 0, y: 0, width: hWidth,\n            height: hHeight, patternUnits: 'userSpaceOnUse'\n        };\n        setAttributeSvg(pattern, attr);\n        this.horizontalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n        this.verticalSvgGridlines(pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n        defs.appendChild(pattern);\n        gridSvg.appendChild(defs);\n    };\n    DiagramRenderer.prototype.horizontalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, vRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var hLine;\n        if (snapSettings.constraints & SnapConstraints.ShowHorizontalLines) {\n            var intervals = snapSettings.horizontalGridlines.lineIntervals;\n            var strokestyle = snapSettings.horizontalGridlines.lineColor;\n            if (snapSettings.horizontalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.horizontalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, vRuler, hHeight);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                hLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.horizontalGridlines.lineColor,\n                    'd': 'M0,' + (d) + ' L' + hWidth + ',' + (d) + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(hLine, attr);\n                pattern.appendChild(hLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    DiagramRenderer.prototype.verticalSvgGridlines = function (pattern, hWidth, hHeight, scale, snapSettings, rulerSettings, hRuler, isRulerGrid) {\n        var space = 0;\n        var dashArray = [];\n        var vLine;\n        if (snapSettings.constraints & SnapConstraints.ShowVerticalLines) {\n            var intervals = snapSettings.verticalGridlines.lineIntervals;\n            var strokestyle = snapSettings.verticalGridlines.lineColor;\n            if (snapSettings.verticalGridlines.lineDashArray) {\n                dashArray = this.renderer.parseDashArray(snapSettings.verticalGridlines.lineDashArray);\n            }\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && hRuler) {\n                intervals = this.updateLineIntervals(intervals, rulerSettings, hRuler, hWidth);\n            }\n            for (var i = 0; i < intervals.length; i = i + 2) {\n                vLine = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n                var d = space + intervals[i] / 2;\n                d = isRulerGrid ? d : d * scale;\n                var attr = {\n                    'stroke-width': intervals[i], 'stroke': snapSettings.verticalGridlines.lineColor,\n                    'd': 'M' + (d) + ',0 L' + (d) + ',' + hHeight + ' Z',\n                    'dashArray': dashArray.toString(),\n                    'class': intervals[i] === 1.25 ? 'e-diagram-thick-grid' : 'e-diagram-thin-grid'\n                };\n                setAttributeSvg(vLine, attr);\n                pattern.appendChild(vLine);\n                space += intervals[i + 1] + intervals[i];\n            }\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.updateGrid = function (snapSettings, svgGrid, transform, rulerSettings, hRuler, vRuler) {\n        var grid = svgGrid.getElementById(this.diagramId + '_grid_rect');\n        var i;\n        var isRulerGrid = false;\n        if (grid) {\n            var pattern = svgGrid.getElementById(this.diagramId + '_pattern');\n            if (pattern) {\n                pattern.parentNode.removeChild(pattern);\n            }\n            var hSegmentwidth = 0;\n            var vSegmentwidth = 0;\n            var scale = 1;\n            if (rulerSettings.showRulers && rulerSettings.dynamicGrid && vRuler && hRuler) {\n                hSegmentwidth = vRuler.updateSegmentWidth(transform.scale);\n                vSegmentwidth = hRuler.updateSegmentWidth(transform.scale);\n                isRulerGrid = true;\n                snapSettings.horizontalGridlines.scaledIntervals = [hSegmentwidth / hRuler.interval];\n                snapSettings.verticalGridlines.scaledIntervals = [vSegmentwidth / vRuler.interval];\n            }\n            else {\n                scale = this.scaleSnapInterval(snapSettings, transform.scale);\n            }\n            var height = 0;\n            for (i = 0; i < snapSettings.horizontalGridlines.lineIntervals.length; i++) {\n                height += snapSettings.horizontalGridlines.lineIntervals[i];\n            }\n            var width = 0;\n            for (i = 0; i < snapSettings.verticalGridlines.lineIntervals.length; i++) {\n                width += snapSettings.verticalGridlines.lineIntervals[i];\n            }\n            var attr = {\n                x: -transform.tx * transform.scale,\n                y: -transform.ty * transform.scale\n            };\n            setAttributeSvg(grid, attr);\n            width = isRulerGrid ? vSegmentwidth : width * scale;\n            height = isRulerGrid ? hSegmentwidth : height * scale;\n            attr = {\n                id: this.diagramId + '_pattern', x: 0, y: 0, width: width,\n                height: height, patternUnits: 'userSpaceOnUse'\n            };\n            pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');\n            setAttributeSvg(pattern, attr);\n            this.horizontalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, vRuler, isRulerGrid);\n            this.verticalSvgGridlines(pattern, width, height, scale, snapSettings, rulerSettings, hRuler, isRulerGrid);\n            var defs = svgGrid.getElementById(this.diagramId + '_grid_pattern_defn');\n            if (defs) {\n                defs.appendChild(pattern);\n            }\n        }\n    };\n    DiagramRenderer.prototype.updateLineIntervals = function (intervals, rulerSettings, ruler, segmentWidth) {\n        var newInterval = [];\n        var tickInterval = segmentWidth / ruler.interval;\n        for (var i = 0; i < ruler.interval * 2; i++) {\n            if (i % 2 === 0) {\n                newInterval[i] = (i === 0) ? 1.25 : 0.25;\n            }\n            else {\n                newInterval[i] = tickInterval - newInterval[i - 1];\n            }\n        }\n        return newInterval;\n    };\n    DiagramRenderer.prototype.scaleSnapInterval = function (snapSettings, scale) {\n        if (scale >= 2) {\n            while (scale >= 2) {\n                scale /= 2;\n            }\n        }\n        else if (scale <= 0.5) {\n            while (scale <= 0.5) {\n                scale *= 2;\n            }\n        }\n        var i;\n        snapSettings.horizontalGridlines.scaledIntervals = snapSettings.horizontalGridlines.snapIntervals;\n        snapSettings.verticalGridlines.scaledIntervals = snapSettings.verticalGridlines.snapIntervals;\n        if (scale !== 1) {\n            var gridlines = snapSettings.horizontalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n            gridlines = snapSettings.verticalGridlines;\n            gridlines.scaledIntervals = [];\n            for (i = 0; i < gridlines.snapIntervals.length; i++) {\n                gridlines.scaledIntervals[i] = gridlines.snapIntervals[i] * scale;\n            }\n        }\n        return scale;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderTextElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        options.whiteSpace = whiteSpaceToString(element.style.whiteSpace, element.style.textWrapping);\n        options.content = element.content;\n        options.breakWord = wordBreakToString(element.style.textWrapping);\n        options.textAlign = textAlignToString(element.style.textAlign);\n        options.color = element.style.color;\n        options.italic = element.style.italic;\n        options.bold = element.style.bold;\n        options.fontSize = element.style.fontSize;\n        options.fontFamily = element.style.fontFamily;\n        options.textOverflow = element.style.textOverflow;\n        options.textDecoration = element.style.textDecoration;\n        options.doWrap = element.doWrap;\n        options.wrapBounds = element.wrapBounds;\n        options.childNodes = element.childNodes;\n        options.dashArray = '';\n        options.strokeWidth = 0;\n        options.fill = element.style.fill;\n        var ariaLabel = element.description ? element.description : element.content ? element.content : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        this.renderer.drawText(canvas, options, parentSvg, ariaLabel, this.diagramId, (element.isExport && Math.min(element.exportScaleValue.x || element.exportScaleValue.y)));\n        if (this.isSvgMode) {\n            element.doWrap = false;\n        }\n    };\n    DiagramRenderer.prototype.renderNativeElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var templateWidth;\n        var templateHeight;\n        var nativeSvg = this.getParentSvg(element, undefined, canvas) || parentSvg;\n        var nativeLayer = this.getParentElement(element, canvas, nativeSvg).g || canvas;\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        switch (element.scale) {\n            case 'None':\n                templateWidth = element.contentSize.width;\n                templateHeight = element.contentSize.height;\n                break;\n            case 'Stretch':\n                templateWidth = element.actualSize.width;\n                templateHeight = element.actualSize.height;\n                break;\n            case 'Meet':\n                if (element.actualSize.width <= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n            case 'Slice':\n                if (element.actualSize.width >= element.actualSize.height) {\n                    templateWidth = templateHeight = element.actualSize.width;\n                }\n                else {\n                    templateWidth = templateHeight = element.actualSize.height;\n                }\n                break;\n        }\n        if (this.svgRenderer) {\n            this.svgRenderer.drawNativeContent(element, nativeLayer, templateHeight, templateWidth, nativeSvg);\n        }\n    };\n    DiagramRenderer.prototype.renderHTMLElement = function (element, canvas, htmlLayer, transform, parentSvg, fromPalette, indexValue) {\n        var options = this.getBaseAttributes(element, transform);\n        options.fill = 'transparent';\n        options.cornerRadius = element.cornerRadius;\n        options.stroke = 'transparent';\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        if (this.svgRenderer) {\n            this.svgRenderer.drawHTMLContent(element, htmlLayer.children[0], transform, isDiagramChild(htmlLayer), indexValue);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderImageElement = function (element, canvas, transform, parentSvg, fromPalette) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = 0;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg);\n        // let sx: number; let sy: number;\n        var imageWidth;\n        var imageHeight;\n        var sourceWidth;\n        var sourceHeight;\n        if (element.stretch === 'Stretch') {\n            imageWidth = element.actualSize.width;\n            imageHeight = element.actualSize.height;\n        }\n        else {\n            var contentWidth = element.contentSize.width;\n            var contentHeight = element.contentSize.height;\n            var widthRatio = options.width / contentWidth;\n            var heightRatio = options.height / contentHeight;\n            var ratio = void 0;\n            switch (element.stretch) {\n                case 'Meet':\n                    ratio = Math.min(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    options.x += Math.abs(options.width - imageWidth) / 2;\n                    options.y += Math.abs(options.height - imageHeight) / 2;\n                    break;\n                case 'Slice':\n                    widthRatio = options.width / contentWidth;\n                    heightRatio = options.height / contentHeight;\n                    ratio = Math.max(widthRatio, heightRatio);\n                    imageWidth = contentWidth * ratio;\n                    imageHeight = contentHeight * ratio;\n                    sourceWidth = options.width / imageWidth * contentWidth;\n                    sourceHeight = options.height / imageHeight * contentHeight;\n                    break;\n                case 'None':\n                    imageWidth = contentWidth;\n                    imageHeight = contentHeight;\n                    break;\n            }\n        }\n        options.width = imageWidth;\n        options.height = imageHeight;\n        //Commented for code coverage\n        //(options as ImageAttributes).sourceX = sx;\n        //(options as ImageAttributes).sourceY = sy;\n        options.sourceWidth = sourceWidth;\n        options.sourceHeight = sourceHeight;\n        options.source = element.source;\n        options.alignment = element.imageAlign;\n        options.scale = element.imageScale;\n        options.description = element.description ? element.description : element.id;\n        this.renderer.drawImage(canvas, options, parentSvg, fromPalette);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderContainer = function (group, canvas, htmlLayer, transform, parentSvg, createParent, fromPalette, indexValue) {\n        var svgParent = { svg: parentSvg, g: canvas };\n        if (this.diagramId) {\n            parentSvg = this.getParentSvg(group) || parentSvg;\n            if (this.isSvgMode) {\n                var groupElement = void 0;\n                groupElement = this.getParentElement(group, canvas, parentSvg, indexValue).g || canvas;\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children)) || parentSvg;\n                var svgNativeParent = this.getParentElement(this.hasNativeParent(group.children), groupElement, parentSvg, indexValue);\n                svgParent.svg = svgNativeParent.svg || parentSvg;\n                svgParent.g = svgNativeParent.g || groupElement;\n                if (createParent) {\n                    if (parentSvg) {\n                        if (!parentSvg.getElementById(svgParent.g.id)) {\n                            canvas.appendChild(svgParent.g);\n                        }\n                    }\n                    canvas = svgParent.g;\n                }\n                else {\n                    canvas = svgParent.g;\n                }\n            }\n        }\n        this.renderRect(group, canvas, transform, parentSvg);\n        if (group.hasChildren()) {\n            var parentG = void 0;\n            var svgParent_1;\n            var flip = void 0;\n            for (var _i = 0, _a = group.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                parentSvg = this.getParentSvg(this.hasNativeParent(group.children) || child) || parentSvg;\n                if (this.isSvgMode) {\n                    svgParent_1 = this.getParentElement(this.hasNativeParent(group.children) || child, canvas, parentSvg);\n                    parentG = svgParent_1.g || canvas;\n                    if (svgParent_1.svg) {\n                        parentSvg = svgParent_1.svg;\n                    }\n                }\n                if (!this.isSvgMode) {\n                    child.flip = group.flip;\n                }\n                this.renderElement(child, parentG || canvas, htmlLayer, transform, parentSvg, true, fromPalette, indexValue);\n                if (child instanceof TextElement && parentG && !(group.elementActions & ElementAction.ElementIsGroup)) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(child, parentG, flip);\n                }\n                if ((child.elementActions & ElementAction.ElementIsPort) && parentG) {\n                    flip = (child.flip && child.flip !== 'None') ? child.flip : group.flip;\n                    this.renderFlipElement(group, parentG, flip);\n                }\n                if (!(child instanceof TextElement) && group.flip !== 'None' &&\n                    (group.elementActions & ElementAction.ElementIsGroup)) {\n                    this.renderFlipElement(child, parentG || canvas, group.flip);\n                }\n            }\n            if (!(group.elementActions & ElementAction.ElementIsGroup)) {\n                this.renderFlipElement(group, canvas, group.flip);\n            }\n        }\n    };\n    DiagramRenderer.prototype.renderFlipElement = function (element, canvas, flip) {\n        var attr = {};\n        var scaleX = 1;\n        var scaleY = 1;\n        var posX = 0;\n        var posY = 0;\n        var offsetX = 0;\n        var offsetY = 0;\n        if (flip !== 'None') {\n            if (flip === 'Horizontal' || flip === 'Both') {\n                posX = element.bounds.center.x;\n                offsetX = -element.bounds.center.x;\n                scaleX = -1;\n            }\n            if (flip === 'Vertical' || flip === 'Both') {\n                posY = element.bounds.center.y;\n                offsetY = -element.bounds.center.y;\n                scaleY = -1;\n            }\n            attr = {\n                'transform': 'translate(' + posX + ',' + posY + ') scale(' + scaleX + ','\n                    + scaleY + ') translate(' + offsetX + ',' + offsetY + ')'\n            };\n        }\n        else {\n            attr = {\n                'transform': 'translate(' + 0 + ',' + 0 + ')'\n            };\n        }\n        if (attr) {\n            setAttributeSvg(canvas, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.hasNativeParent = function (children, count) {\n        if (children && children.length > 0 && (count || 0 < 3)) {\n            var child = children[0];\n            if (child instanceof DiagramNativeElement) {\n                return child;\n            }\n            else if (child.children && child.children.length) {\n                this.hasNativeParent(child.children, count++ || 0);\n            }\n        }\n        return undefined;\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.renderRect = function (element, canvas, transform, parentSvg) {\n        var options = this.getBaseAttributes(element, transform);\n        options.cornerRadius = element.cornerRadius || 0;\n        var ariaLabel = element.description ? element.description : element.id;\n        this.renderer.drawRectangle(canvas, options, this.diagramId, undefined, undefined, parentSvg, ariaLabel);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.drawRect = function (canvas, options) {\n        options.cornerRadius = 0;\n        this.svgRenderer.drawRectangle(canvas, options, this.diagramId);\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.getBaseAttributes = function (element, transform) {\n        var options = {\n            width: element.actualSize.width, height: element.actualSize.height,\n            x: element.offsetX - element.actualSize.width * element.pivot.x + 0.5,\n            y: element.offsetY - element.actualSize.height * element.pivot.y + 0.5,\n            fill: element.style.fill, stroke: element.style.strokeColor, angle: element.rotateAngle + element.parentTransform,\n            pivotX: element.pivot.x, pivotY: element.pivot.y, strokeWidth: element.style.strokeWidth,\n            dashArray: element.style.strokeDashArray || '', opacity: element.style.opacity, shadow: element.shadow,\n            gradient: element.style.gradient, visible: element.visible, id: element.id, description: element.description,\n            canApplyStyle: element.canApplyStyle\n        };\n        if (element.isExport) {\n            options.width *= element.exportScaleValue.x;\n            options.height *= element.exportScaleValue.y;\n            options.x *= element.exportScaleValue.x;\n            options.y *= element.exportScaleValue.y;\n            options.strokeWidth *= element.exportScaleValue.x;\n        }\n        if (element.flip) {\n            options.flip = element.flip;\n        }\n        if (transform) {\n            options.x += transform.tx;\n            options.y += transform.ty;\n        }\n        return options;\n    };\n    /**   @private  */\n    DiagramRenderer.renderSvgBackGroundImage = function (background, diagramElement, x, y, width, height) {\n        if (background.source) {\n            var backgroundLayer = getBackgroundLayerSvg(diagramElement.id);\n            var target = backgroundLayer.getElementById(diagramElement.id + '_image');\n            if (!target) {\n                var bgimageLayer = getBackgroundImageLayer(diagramElement.id);\n                target = document.createElementNS('http://www.w3.org/2000/svg', 'image');\n                target.setAttribute('id', diagramElement.id + '_image');\n                bgimageLayer.appendChild(target);\n            }\n            var imageObj = new Image();\n            imageObj.src = background.source;\n            target.setAttributeNS('http://www.w3.org/1999/xlink', 'xlink:href', imageObj.src.toString());\n            var scale = background.scale !== 'None' ? background.scale : '';\n            var imgAlign = background.align;\n            var aspectRatio = imgAlign.charAt(0).toLowerCase() + imgAlign.slice(1);\n            if (scale) {\n                aspectRatio += ' ' + scale.charAt(0).toLowerCase() + scale.slice(1);\n            }\n            var attr = {\n                'id': diagramElement.id + '_image', 'x': x, 'y': y,\n                'width': width, 'height': height,\n                'preserveAspectRatio': aspectRatio\n            };\n            setAttributeSvg(target, attr);\n        }\n    };\n    /**   @private  */\n    DiagramRenderer.prototype.transformLayers = function (transform, svgMode) {\n        var tx = transform.tx * transform.scale;\n        var ty = transform.ty * transform.scale;\n        if (tx !== this.transform.x || ty !== this.transform.y || (tx === 0 || ty === 0)) {\n            //diagram layer\n            if (svgMode) {\n                var diagramLayer = this.diagramSvgLayer.getElementById(this.diagramId + '_diagramLayer');\n                diagramLayer.setAttribute('transform', 'translate('\n                    + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                    + transform.scale + ')');\n            }\n            //background\n            //gridline\n            var gridLayer = getGridLayer(this.diagramId);\n            gridLayer.setAttribute('transform', 'translate(' + (transform.tx * transform.scale) + ','\n                + (transform.ty * transform.scale) + ')');\n            //portslayer    \n            var portsLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramPorts');\n            portsLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //expandlayer\n            var expandLayer = this.iconSvgLayer.getElementById(this.diagramId + '_diagramExpander');\n            expandLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //nativelayer\n            var nativeLayer = this.nativeSvgLayer.getElementById(this.diagramId + '_nativeLayer');\n            nativeLayer.setAttribute('transform', 'translate('\n                + (transform.tx * transform.scale) + ',' + (transform.ty * transform.scale) + '),scale('\n                + transform.scale + ')');\n            //htmlLayer\n            var htmlLayer = getHTMLLayer(this.diagramId).children[0];\n            htmlLayer.style.transform = 'translate('\n                + (transform.tx * transform.scale) + 'px,' + (transform.ty * transform.scale) + 'px)scale('\n                + transform.scale + ')';\n            this.transform = { x: transform.tx * transform.scale, y: transform.ty * transform.scale };\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramRenderer.prototype.updateNode = function (element, diagramElementsLayer, htmlLayer, transform, insertIndex) {\n        this.renderElement(element, diagramElementsLayer, htmlLayer, transform, this.getParentSvg(element), undefined, undefined, insertIndex);\n    };\n    return DiagramRenderer;\n}());\nexport { DiagramRenderer };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { Margin } from '../core/appearance';\n/**\n * Defines the size and appearance of the diagram page\n */\nvar Background = /** @class */ (function (_super) {\n    __extends(Background, _super);\n    function Background() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Background.prototype, \"source\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Background.prototype, \"color\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"scale\", void 0);\n    __decorate([\n        Property('None')\n    ], Background.prototype, \"align\", void 0);\n    return Background;\n}(ChildProperty));\nexport { Background };\n/**\n * Defines the size and appearance of diagram page\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * pageSettings: {  width: 800, height: 600, orientation: 'Landscape',\n * background: { color: 'blue' }, boundaryConstraints: 'Infinity',\n * multiplePage: true, showPageBreaks: true, },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], PageSettings.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Landscape')\n    ], PageSettings.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Infinity')\n    ], PageSettings.prototype, \"boundaryConstraints\", void 0);\n    __decorate([\n        Complex({}, Background)\n    ], PageSettings.prototype, \"background\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"multiplePage\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"showPageBreaks\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n/**\n * Diagram ScrollSettings module handles the scroller properties of the diagram\n */\nvar ScrollSettings = /** @class */ (function (_super) {\n    __extends(ScrollSettings, _super);\n    function ScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"horizontalOffset\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"verticalOffset\", void 0);\n    __decorate([\n        Property(1)\n    ], ScrollSettings.prototype, \"currentZoom\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortWidth\", void 0);\n    __decorate([\n        Property(0)\n    ], ScrollSettings.prototype, \"viewPortHeight\", void 0);\n    __decorate([\n        Property(0.2)\n    ], ScrollSettings.prototype, \"minZoom\", void 0);\n    __decorate([\n        Property(30)\n    ], ScrollSettings.prototype, \"maxZoom\", void 0);\n    __decorate([\n        Property('Diagram')\n    ], ScrollSettings.prototype, \"scrollLimit\", void 0);\n    __decorate([\n        Property()\n    ], ScrollSettings.prototype, \"scrollableArea\", void 0);\n    __decorate([\n        Property(false)\n    ], ScrollSettings.prototype, \"canAutoScroll\", void 0);\n    __decorate([\n        Complex({ left: 15, right: 15, top: 15, bottom: 15 }, Margin)\n    ], ScrollSettings.prototype, \"autoScrollBorder\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], ScrollSettings.prototype, \"padding\", void 0);\n    return ScrollSettings;\n}(ChildProperty));\nexport { ScrollSettings };\n","/**\n * ServiceLocator\n * @hidden\n */\nvar ServiceLocator = /** @class */ (function () {\n    function ServiceLocator() {\n        this.services = {};\n    }\n    ServiceLocator.prototype.register = function (name, type) {\n        this.services[name] = type;\n    };\n    ServiceLocator.prototype.getService = function (name) {\n        return this.services[name];\n    };\n    return ServiceLocator;\n}());\nexport { ServiceLocator };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\nimport { SnapConstraints } from '../enum/enum';\n/**\n * Provides a visual guidance while dragging or arranging the objects on the Diagram surface\n */\nvar Gridlines = /** @class */ (function (_super) {\n    __extends(Gridlines, _super);\n    function Gridlines() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('lightgray')\n    ], Gridlines.prototype, \"lineColor\", void 0);\n    __decorate([\n        Property('')\n    ], Gridlines.prototype, \"lineDashArray\", void 0);\n    __decorate([\n        Property([1.25, 18.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75, 0.25, 19.75])\n    ], Gridlines.prototype, \"lineIntervals\", void 0);\n    __decorate([\n        Property([20])\n    ], Gridlines.prototype, \"snapIntervals\", void 0);\n    return Gridlines;\n}(ChildProperty));\nexport { Gridlines };\n/**\n * Defines the gridlines and defines how and when the objects have to be snapped\n * @default {}\n */\nvar SnapSettings = /** @class */ (function (_super) {\n    __extends(SnapSettings, _super);\n    function SnapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"horizontalGridlines\", void 0);\n    __decorate([\n        Complex({}, Gridlines)\n    ], SnapSettings.prototype, \"verticalGridlines\", void 0);\n    __decorate([\n        Property(SnapConstraints.All)\n    ], SnapSettings.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapAngle\", void 0);\n    __decorate([\n        Property(5)\n    ], SnapSettings.prototype, \"snapObjectDistance\", void 0);\n    return SnapSettings;\n}(ChildProperty));\nexport { SnapSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Defines the properties of both horizontal and vertical guides/rulers to measure the diagram area.\n */\nvar DiagramRuler = /** @class */ (function (_super) {\n    __extends(DiagramRuler, _super);\n    function DiagramRuler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(5)\n    ], DiagramRuler.prototype, \"interval\", void 0);\n    __decorate([\n        Property(100)\n    ], DiagramRuler.prototype, \"segmentWidth\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], DiagramRuler.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('RightOrBottom')\n    ], DiagramRuler.prototype, \"tickAlignment\", void 0);\n    __decorate([\n        Property('red')\n    ], DiagramRuler.prototype, \"markerColor\", void 0);\n    __decorate([\n        Property(25)\n    ], DiagramRuler.prototype, \"thickness\", void 0);\n    __decorate([\n        Property(null)\n    ], DiagramRuler.prototype, \"arrangeTick\", void 0);\n    return DiagramRuler;\n}(ChildProperty));\nexport { DiagramRuler };\n/**\n * Defines the ruler settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * rulerSettings: { showRulers: true,\n * horizontalRuler: { segmentWidth: 50,interval: 10 },\n * verticalRuler: {segmentWidth: 200,interval: 20}\n * },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar RulerSettings = /** @class */ (function (_super) {\n    __extends(RulerSettings, _super);\n    function RulerSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], RulerSettings.prototype, \"showRulers\", void 0);\n    __decorate([\n        Property(true)\n    ], RulerSettings.prototype, \"dynamicGrid\", void 0);\n    __decorate([\n        Complex({ orientation: 'Horizontal' }, DiagramRuler)\n    ], RulerSettings.prototype, \"horizontalRuler\", void 0);\n    __decorate([\n        Complex({ orientation: 'Vertical' }, DiagramRuler)\n    ], RulerSettings.prototype, \"verticalRuler\", void 0);\n    return RulerSettings;\n}(ChildProperty));\nexport { RulerSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the data source that is to be bound with diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let data: object[] = [\n * { Name: \"Elizabeth\", Role: \"Director\" },\n * { Name: \"Christina\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Yoshi\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Philip\", ReportingPerson: \"Christina\", Role: \"Lead\" },\n * { Name: \"Yang\", ReportingPerson: \"Elizabeth\", Role: \"Manager\" },\n * { Name: \"Roland\", ReportingPerson: \"Yang\", Role: \"Lead\" },\n * { Name: \"Yvonne\", ReportingPerson: \"Yang\", Role: \"Lead\" }\n * ];\n * let items: DataManager = new DataManager(data as JSON[]);\n * let diagram: Diagram = new Diagram({\n * ...\n * layout: {\n *             type: 'OrganizationalChart'\n * },\n * dataSourceSettings: {\n * id: 'Name', parentId: 'ReportingPerson', dataManager: items,\n * }\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar CrudAction = /** @class */ (function (_super) {\n    __extends(CrudAction, _super);\n    function CrudAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"read\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"create\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"update\", void 0);\n    __decorate([\n        Property('')\n    ], CrudAction.prototype, \"destroy\", void 0);\n    __decorate([\n        Property()\n    ], CrudAction.prototype, \"customFields\", void 0);\n    return CrudAction;\n}(ChildProperty));\nexport { CrudAction };\nvar ConnectionDataSource = /** @class */ (function (_super) {\n    __extends(ConnectionDataSource, _super);\n    function ConnectionDataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"sourceID\", void 0);\n    __decorate([\n        Property('')\n    ], ConnectionDataSource.prototype, \"targetID\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"sourcePointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointX\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"targetPointY\", void 0);\n    __decorate([\n        Property(null)\n    ], ConnectionDataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], ConnectionDataSource.prototype, \"crudAction\", void 0);\n    return ConnectionDataSource;\n}(ChildProperty));\nexport { ConnectionDataSource };\nvar DataSource = /** @class */ (function (_super) {\n    __extends(DataSource, _super);\n    function DataSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"id\", void 0);\n    __decorate([\n        Property(null)\n    ], DataSource.prototype, \"dataManager\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"root\", void 0);\n    __decorate([\n        Property('')\n    ], DataSource.prototype, \"parentId\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"data\", void 0);\n    __decorate([\n        Property()\n    ], DataSource.prototype, \"doBinding\", void 0);\n    __decorate([\n        Complex({}, CrudAction)\n    ], DataSource.prototype, \"crudAction\", void 0);\n    __decorate([\n        Complex({}, ConnectionDataSource)\n    ], DataSource.prototype, \"connectionDataSource\", void 0);\n    return DataSource;\n}(ChildProperty));\nexport { DataSource };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Margin } from '../core/appearance';\nimport { Property, Complex, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Defines the behavior of the automatic layouts\n */\nvar Layout = /** @class */ (function (_super) {\n    __extends(Layout, _super);\n    function Layout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"fixedNode\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"horizontalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"verticalSpacing\", void 0);\n    __decorate([\n        Property(30)\n    ], Layout.prototype, \"maxIteration\", void 0);\n    __decorate([\n        Property(40)\n    ], Layout.prototype, \"springFactor\", void 0);\n    __decorate([\n        Property(50)\n    ], Layout.prototype, \"springLength\", void 0);\n    __decorate([\n        Complex({ left: 50, top: 50, right: 0, bottom: 0 }, Margin)\n    ], Layout.prototype, \"margin\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"verticalAlignment\", void 0);\n    __decorate([\n        Property('TopToBottom')\n    ], Layout.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('Auto')\n    ], Layout.prototype, \"connectionDirection\", void 0);\n    __decorate([\n        Property('Default')\n    ], Layout.prototype, \"connectorSegments\", void 0);\n    __decorate([\n        Property('None')\n    ], Layout.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getLayoutInfo\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"getBranch\", void 0);\n    __decorate([\n        Property()\n    ], Layout.prototype, \"bounds\", void 0);\n    __decorate([\n        Property(true)\n    ], Layout.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('')\n    ], Layout.prototype, \"root\", void 0);\n    return Layout;\n}(ChildProperty));\nexport { Layout };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Node } from '../objects/node';\nimport { Connector, StraightSegment } from '../objects/connector';\nimport { Point } from '../primitives/point';\nimport { BpmnSubEvent } from '../objects/node';\nimport { PointPort } from '../objects/port';\nimport { rotatePoint, cloneObject } from '../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { getPolygonPath } from '../utility/path-util';\nimport { canOutConnect, canInConnect, canAllowDrop, canPortInConnect, canPortOutConnect } from '../utility/constraints-util';\nimport { transformPointByMatrix, rotateMatrix, identityMatrix } from '../primitives/matrix';\nimport { NodeConstraints, DiagramEvent, PortConstraints } from './../enum/enum';\nimport { TextElement } from '../core/elements/text-element';\nimport { contains } from './actions';\nimport { Selector } from './selector';\nimport { getInOutConnectPorts } from '../utility/diagram-util';\n/**\n * Defines the interactive tools\n */\nvar ToolBase = /** @class */ (function () {\n    /**\n     * Initializes the tool\n     * @param command Command that is corresponding to the current action\n     */\n    function ToolBase(command, protectChange) {\n        if (protectChange === void 0) { protectChange = false; }\n        /**\n         * Command that is corresponding to the current action\n         */\n        this.commandHandler = null;\n        /**\n         * Sets/Gets whether the interaction is being done\n         */\n        this.inAction = false;\n        /**\n         * Sets/Gets the protect change\n         */\n        this.isProtectChange = false;\n        /**\n         * Sets/Gets the current element that is under mouse\n         */\n        this.currentElement = null;\n        /**   @private  */\n        this.blocked = false;\n        this.isTooltipVisible = false;\n        /** @private */\n        this.childTable = {};\n        /**\n         * Sets/Gets the previous object when mouse down\n         */\n        this.undoElement = { nodes: [], connectors: [] };\n        this.undoParentElement = { nodes: [], connectors: [] };\n        this.commandHandler = command;\n        this.isProtectChange = protectChange;\n    }\n    ToolBase.prototype.startAction = function (currentElement) {\n        this.currentElement = currentElement;\n        this.inAction = true;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseDown = function (args) {\n        this.currentElement = args.source;\n        this.startPosition = this.currentPosition = this.prevPosition = args.position;\n        this.isTooltipVisible = true;\n        this.startAction(args.source);\n        this.commandHandler.startTransaction(this.isProtectChange);\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseMove = function (args) {\n        this.currentPosition = args.position;\n        //this.currentElement = currentElement;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseUp = function (args) {\n        this.currentPosition = args.position;\n        // this.currentElement = currentElement;\n        this.isTooltipVisible = false;\n        this.commandHandler.endTransaction(this.isProtectChange);\n        //At the end\n        this.endAction();\n    };\n    ToolBase.prototype.endAction = function () {\n        if (!this.isTooltipVisible) {\n            this.commandHandler.closeTooltip();\n        }\n        this.commandHandler = null;\n        this.currentElement = null;\n        this.currentPosition = null;\n        this.inAction = false;\n        this.blocked = false;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseWheel = function (args) {\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ToolBase.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ToolBase.prototype.updateSize = function (shape, startPoint, endPoint, corner, initialBounds, angle) {\n        shape = this.commandHandler.renderContainerHelper(shape) || shape;\n        var horizontalsnap = { snapped: false, offset: 0, left: false, right: false };\n        var verticalsnap = { snapped: false, offset: 0, top: false, bottom: false };\n        var difx = this.currentPosition.x - this.startPosition.x;\n        var dify = this.currentPosition.y - this.startPosition.y;\n        var snapEnabled = (!(shape instanceof TextElement)) && this.commandHandler.snappingModule\n            && this.commandHandler.snappingModule.canSnap();\n        var snapLine = snapEnabled ? this.commandHandler.snappingModule.getLayer() : null;\n        var rotateAngle = (shape instanceof TextElement) ? angle : shape.rotateAngle;\n        var matrix;\n        matrix = identityMatrix();\n        rotateMatrix(matrix, -rotateAngle, 0, 0);\n        var x = shape.offsetX;\n        var y = shape.offsetY;\n        var w = shape.width;\n        var h = shape.height;\n        x = x - w * shape.pivot.x;\n        y = y - h * shape.pivot.y;\n        var deltaWidth = 0;\n        var deltaHeight = 0;\n        var diff;\n        var width = (shape instanceof TextElement) ? shape.actualSize.width : shape.width;\n        var height = (shape instanceof TextElement) ? shape.actualSize.height : shape.height;\n        switch (corner) {\n            case 'ResizeWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                deltaHeight = 1;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width - difx) / width;\n                break;\n            case 'ResizeEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = 0;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = 1;\n                break;\n            case 'ResizeNorth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouth':\n                deltaWidth = 1;\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n            case 'ResizeNorthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    difx;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) :\n                    dify;\n                deltaWidth = (initialBounds.width + difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeNorthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapTop(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height - dify) / height;\n                break;\n            case 'ResizeSouthEast':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = !snapEnabled ? dify : this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                difx = !snapEnabled ? difx : this.commandHandler.snappingModule.snapRight(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds);\n                deltaHeight = (initialBounds.height + dify) / height;\n                deltaWidth = (initialBounds.width + difx) / width;\n                break;\n            case 'ResizeSouthWest':\n                diff = transformPointByMatrix(matrix, ({ x: difx, y: dify }));\n                difx = diff.x;\n                dify = diff.y;\n                dify = snapEnabled ? this.commandHandler.snappingModule.snapBottom(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : dify;\n                difx = snapEnabled ? this.commandHandler.snappingModule.snapLeft(horizontalsnap, verticalsnap, snapLine, difx, dify, shape, endPoint === startPoint, initialBounds) : difx;\n                deltaWidth = (initialBounds.width - difx) / width;\n                deltaHeight = (initialBounds.height + dify) / height;\n                break;\n        }\n        return { width: deltaWidth, height: deltaHeight };\n    };\n    ToolBase.prototype.getPivot = function (corner) {\n        switch (corner) {\n            case 'ResizeWest':\n                return { x: 1, y: 0.5 };\n            case 'ResizeEast':\n                return { x: 0, y: 0.5 };\n            case 'ResizeNorth':\n                return { x: 0.5, y: 1 };\n            case 'ResizeSouth':\n                return { x: 0.5, y: 0 };\n            case 'ResizeNorthEast':\n                return { x: 0, y: 1 };\n            case 'ResizeNorthWest':\n                return { x: 1, y: 1 };\n            case 'ResizeSouthEast':\n                return { x: 0, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: 1, y: 0 };\n        }\n        return { x: 0.5, y: 0.5 };\n    };\n    return ToolBase;\n}());\nexport { ToolBase };\n/**\n * Helps to select the objects\n */\nvar SelectTool = /** @class */ (function (_super) {\n    __extends(SelectTool, _super);\n    function SelectTool(commandHandler, protectChange, action) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.action = action;\n        return _this;\n    }\n    /**   @private  */\n    SelectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        //draw selected region\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.drawSelectionRectangle(rect.x, rect.y, rect.width, rect.height);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseUp = function (args) {\n        //rubber band selection\n        if (Point.equals(this.currentPosition, this.prevPosition) === false && this.inAction) {\n            var region = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.doRubberBandSelection(region);\n        }\n        else {\n            //single selection\n            var arrayNodes = this.commandHandler.getSelectedObject();\n            if (!this.commandHandler.hasSelection() || !args.info || !args.info.ctrlKey) {\n                this.commandHandler.clearSelection(args.source === null ? true : false);\n                if (this.action === 'LabelSelect') {\n                    this.commandHandler.labelSelect(args.source, args.sourceWrapper);\n                }\n                else if (args.source) {\n                    this.commandHandler.selectObjects([args.source], false, arrayNodes);\n                }\n            }\n            else {\n                //handling multiple selection\n                if (args && args.source) {\n                    if (!this.commandHandler.isSelected(args.source)) {\n                        this.commandHandler.selectObjects([args.source], true);\n                    }\n                    else {\n                        if (args.clickCount === 1) {\n                            this.commandHandler.unSelect(args.source);\n                        }\n                    }\n                }\n            }\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    SelectTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return SelectTool;\n}(ToolBase));\nexport { SelectTool };\n/**\n * Helps to edit the selected connectors\n */\nvar ConnectTool = /** @class */ (function (_super) {\n    __extends(ConnectTool, _super);\n    function ConnectTool(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = undefined;\n        if (!(this instanceof ConnectorDrawingTool)) {\n            this.undoElement = cloneObject(args.source);\n        }\n        _super.prototype.mouseDown.call(this, args);\n        var oldValue;\n        var connectors;\n        if (args.source && args.source.connectors) {\n            oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment \n        if (this.endPoint === 'BezierSourceThumb' || this.endPoint === 'BezierTargetThumb') {\n            for (var i = 0; i < connectors.segments.length; i++) {\n                var segment = connectors.segments[i];\n                var segmentpoint1 = !Point.isEmptyPoint(segment.point1) ? segment.point1 : segment.bezierPoint1;\n                var segmentpoint2 = !Point.isEmptyPoint(segment.point2) ? segment.point2 : segment.bezierPoint2;\n                if (contains(this.currentPosition, segmentpoint1, connectors.hitPadding) ||\n                    contains(this.currentPosition, segmentpoint2, connectors.hitPadding)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n        this.currentPosition = args.position;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseUp = function (args) {\n        this.commandHandler.updateSelector();\n        this.commandHandler.removeSnap();\n        this.commandHandler.changeAnnotationDrag(args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            args.source.connectors.length &&\n            ((!Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint) ||\n                (args.source.connectors[0].sourceID !== this.undoElement.connectors[0].sourceID)))) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                ((!Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint))\n                    || (args.source.connectors[0].targetID !== this.undoElement.connectors[0].targetID))))) {\n            var oldValues = void 0;\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                oldValues = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortName = void 0;\n            var targetNodeNode = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortName = target.id : targetNodeNode = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Completed', targetNode: targetNodeNode,\n                oldValue: oldValues, newValue: oldValues, cancel: false, targetPort: targetPortName\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ? DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n            this.commandHandler.removeTerminalSegment(connector, true);\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'ConnectionChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement),\n                    category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        else if (!(this instanceof ConnectorDrawingTool) &&\n            (this.endPoint === 'BezierTargetThumb' || this.endPoint === 'BezierSourceThumb')) {\n            if (this.undoElement && args.source) {\n                var obj = void 0;\n                obj = cloneObject(args.source);\n                var entry = {\n                    type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n                };\n                this.commandHandler.addHistoryEntry(entry);\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if ((!(this instanceof ConnectorDrawingTool)) && ((this.endPoint === 'ConnectorSourceEnd' &&\n            Point.equals(args.source.connectors[0].sourcePoint, this.undoElement.connectors[0].sourcePoint)) ||\n            (this.endPoint === 'ConnectorTargetEnd' &&\n                Point.equals(args.source.connectors[0].targetPoint, this.undoElement.connectors[0].targetPoint)))) {\n            var oldValue = void 0;\n            var connectors = void 0;\n            if (args.source && args.source.connectors) {\n                oldValue = { x: this.prevPosition.x, y: this.prevPosition.y };\n                connectors = args.source.connectors[0];\n            }\n            var targetPort = void 0;\n            var targetNode = void 0;\n            if (args.target) {\n                targetNode = args.target.id;\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort || target instanceof BpmnSubEvent) ? targetPort = target.id : targetNode = target.id;\n            }\n            var arg = {\n                connector: connectors, state: 'Start', targetNode: targetNode,\n                oldValue: oldValue, newValue: oldValue, cancel: false, targetPort: targetPort\n            };\n            var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n            this.commandHandler.triggerEvent(trigger, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var newValue = void 0;\n            var oldValue = void 0;\n            var inPort = void 0;\n            var outPort = void 0;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                newValue = {\n                    x: this.currentPosition.x, y: this.currentPosition.y,\n                };\n                oldValue = {\n                    x: this.prevPosition.x, y: this.prevPosition.y\n                };\n                connector = args.source.connectors[0];\n            }\n            var targetPortId = void 0;\n            var targetNodeId = void 0;\n            if (args.target) {\n                var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                (target instanceof PointPort) ? targetPortId = target.id : targetNodeId = target.id;\n            }\n            var arg = {\n                connector: connector, state: 'Progress', targetNode: targetNodeId,\n                oldValue: oldValue, newValue: newValue, cancel: false, targetPort: targetPortId\n            };\n            if (!(this instanceof ConnectorDrawingTool)) {\n                var trigger = this.endPoint === 'ConnectorSourceEnd' ?\n                    DiagramEvent.sourcePointChange : DiagramEvent.targetPointChange;\n                this.commandHandler.triggerEvent(trigger, arg);\n            }\n            if (args.target) {\n                inPort = getInOutConnectPorts(args.target, true);\n                outPort = getInOutConnectPorts(args.target, false);\n            }\n            if (!arg.cancel && this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                this.blocked = !this.commandHandler.dragConnectorEnds(this.endPoint, args.source, this.currentPosition, this.selectedSegment, args.target, targetPortId);\n                this.commandHandler.updateSelector();\n                if (args.target && ((this.endPoint === 'ConnectorSourceEnd' && (canOutConnect(args.target) || canPortOutConnect(outPort)))\n                    || (this.endPoint === 'ConnectorTargetEnd' && (canInConnect(args.target) || canPortInConnect(inPort))))) {\n                    if (this.commandHandler.canDisconnect(this.endPoint, args, targetPortId, targetNodeId)) {\n                        this.commandHandler.disConnect(args.source, this.endPoint);\n                    }\n                    var target = this.commandHandler.findTarget(args.targetWrapper, args.target, this.endPoint === 'ConnectorSourceEnd', true);\n                    if (target instanceof Node) {\n                        if ((canInConnect(target) && this.endPoint === 'ConnectorTargetEnd')\n                            || (canOutConnect(target) && this.endPoint === 'ConnectorSourceEnd')) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                    else {\n                        var isConnect = this.checkConnect(target);\n                        if (isConnect) {\n                            this.commandHandler.connect(this.endPoint, args);\n                        }\n                    }\n                }\n                else if (this.endPoint.indexOf('Bezier') === -1) {\n                    this.commandHandler.disConnect(args.source, this.endPoint);\n                    this.commandHandler.updateSelector();\n                }\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.position);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'ConnectTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ConnectTool.prototype.getTooltipContent = function (position) {\n        return 'X:' + Math.round(position.x) + ' ' + 'Y:' + Math.round(position.y);\n    };\n    ConnectTool.prototype.checkConnect = function (target) {\n        if (canPortInConnect(target) && this.endPoint === 'ConnectorTargetEnd') {\n            return true;\n        }\n        else if (canPortOutConnect(target) && this.endPoint === 'ConnectorSourceEnd') {\n            return true;\n        }\n        else if (!(target.constraints & PortConstraints.None) && !canPortInConnect(target) && !canPortOutConnect(target)) {\n            return true;\n        }\n        return false;\n    };\n    /**   @private  */\n    ConnectTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.prevPosition = null;\n        this.endPoint = null;\n    };\n    return ConnectTool;\n}(ToolBase));\nexport { ConnectTool };\n/**\n * Drags the selected objects\n */\nvar MoveTool = /** @class */ (function (_super) {\n    __extends(MoveTool, _super);\n    function MoveTool(commandHandler, objType) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.currentTarget = null;\n        _this.objectType = objType;\n        return _this;\n    }\n    /**   @private  */\n    MoveTool.prototype.mouseDown = function (args) {\n        if (args.source instanceof Node || args.source instanceof Connector) {\n            this.commandHandler.selectObjects([args.source], args.info && args.info.ctrlKey);\n            var selectedObject = { nodes: [], connectors: [] };\n            if (args.source instanceof Node) {\n                selectedObject.nodes.push(cloneObject(args.source));\n            }\n            else {\n                selectedObject.connectors.push(cloneObject(args.source));\n            }\n            this.undoElement = cloneObject(selectedObject);\n        }\n        else {\n            this.undoElement = cloneObject(args.source);\n        }\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        if (this.objectType === 'Port') {\n            this.portId = args.sourceWrapper.id;\n        }\n        _super.prototype.mouseDown.call(this, args);\n        this.initialOffset = { x: 0, y: 0 };\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseUp = function (args, isPreventHistory) {\n        var obj;\n        var historyAdded = false;\n        var object;\n        var redoObject = { nodes: [], connectors: [] };\n        if (this.objectType !== 'Port') {\n            if (args.source instanceof Node || args.source instanceof Connector) {\n                if (args.source instanceof Node) {\n                    redoObject.nodes.push(cloneObject(args.source));\n                }\n                else {\n                    redoObject.connectors.push(cloneObject(args.source));\n                }\n                obj = cloneObject(redoObject);\n                var wrapper = args.source.wrapper;\n                obj.offsetX = wrapper.offsetX;\n                obj.offsetY = wrapper.offsetY;\n            }\n            else {\n                obj = cloneObject(args.source);\n            }\n            object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n            if ((object.id === 'helper' && !obj.nodes[0].isLane && !obj.nodes[0].isPhase)\n                || (object.id !== 'helper')) {\n                if (object.offsetX !== this.undoElement.offsetX || object.offsetY !== this.undoElement.offsetY) {\n                    var oldValues = void 0;\n                    var newValues = void 0;\n                    if (args.source) {\n                        newValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                        oldValues = { offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY };\n                    }\n                    var arg = {\n                        source: args.source, state: 'Completed', oldValue: oldValues, newValue: newValues,\n                        target: this.currentTarget, targetPosition: this.currentPosition, allowDrop: true, cancel: false\n                    };\n                    this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n                    if (!isPreventHistory) {\n                        this.commandHandler.startGroupAction();\n                        historyAdded = true;\n                        var entry = {\n                            type: 'PositionChanged',\n                            redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n                        };\n                        if (obj.nodes[0] && obj.nodes[0].processId) {\n                            var entry_1 = {\n                                type: 'SizeChanged', category: 'Internal',\n                                undoObject: this.undoParentElement, redoObject: this.commandHandler.getSubProcess(args.source)\n                            };\n                            this.commandHandler.addHistoryEntry(entry_1);\n                        }\n                        this.commandHandler.addHistoryEntry(entry);\n                    }\n                }\n            }\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, 0, 0);\n            this.commandHandler.removeSnap();\n            this.commandHandler.removeHighlighter();\n            if (args.source && this.currentTarget && canAllowDrop(this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget)) {\n                this.commandHandler.drop(this.currentElement, this.currentTarget, this.currentPosition);\n                var arg = {\n                    element: args.source, target: this.currentTarget, position: this.currentPosition, cancel: false\n                };\n                this.commandHandler.triggerEvent(DiagramEvent.drop, arg);\n                if (!arg.cancel && args.source && this.commandHandler.isParentAsContainer(this.currentTarget)) {\n                    var nodes = (args.source instanceof Selector) ? args.source.nodes : [args.source];\n                    var isEndGroup = false;\n                    for (var i = 0; i < nodes.length; i++) {\n                        if (!nodes[i].container) {\n                            isEndGroup = true;\n                            this.commandHandler.dropChildToContainer(this.currentTarget, nodes[i]);\n                            this.commandHandler.renderContainerHelper(nodes[i]);\n                        }\n                    }\n                    if (historyAdded && this.commandHandler.isContainer && isEndGroup) {\n                        this.commandHandler.endGroupAction();\n                    }\n                }\n            }\n            if (args.source && this.currentTarget) {\n                this.commandHandler.dropAnnotation(args.source, this.currentTarget);\n            }\n            this.commandHandler.updateSelector();\n            if (historyAdded && !this.commandHandler.isContainer) {\n                this.commandHandler.endGroupAction();\n            }\n        }\n        else {\n            redoObject.nodes.push(cloneObject(args.source));\n            obj = cloneObject(redoObject);\n            var entry = {\n                type: 'PortPositionChanged', objectId: this.portId,\n                redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var isSame = false;\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) ||\n            args.source;\n        if (object instanceof Node || object instanceof Connector) {\n            if (object instanceof Node) {\n                if (object.offsetX === this.undoElement.nodes[0].offsetX &&\n                    object.offsetY === this.undoElement.nodes[0].offsetY) {\n                    isSame = true;\n                }\n            }\n            else {\n                if (Point.equals(object.sourcePoint, this.undoElement.connectors[0].sourcePoint) &&\n                    Point.equals(object.targetPoint, this.undoElement.connectors[0].targetPoint)) {\n                    isSame = true;\n                }\n            }\n        }\n        else {\n            if (object.wrapper.offsetX === this.undoElement.wrapper.offsetX &&\n                object.wrapper.offsetY === this.undoElement.wrapper.offsetY) {\n                isSame = true;\n            }\n        }\n        var oldValues;\n        if (object) {\n            oldValues = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n        }\n        var arg = {\n            source: object, state: 'Start', oldValue: oldValues, newValue: oldValues,\n            target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n        };\n        if (isSame) {\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg);\n        }\n        this.currentPosition = args.position;\n        if (this.objectType !== 'Port') {\n            var x = this.currentPosition.x - this.prevPosition.x;\n            var y = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.initialOffset.x + (this.currentPosition.x - this.prevPosition.x);\n            var diffY = this.initialOffset.y + (this.currentPosition.y - this.prevPosition.y);\n            this.commandHandler.dragOverElement(args, this.currentPosition);\n            this.commandHandler.disConnect(args.source);\n            this.commandHandler.removeSnap();\n            var oldValues_1;\n            var newValues = void 0;\n            var snappedPoint = this.commandHandler.snapPoint(this.prevPosition, this.currentPosition, diffX, diffY);\n            this.initialOffset.x = diffX - snappedPoint.x;\n            this.initialOffset.y = diffY - snappedPoint.y;\n            if (object) {\n                oldValues_1 = { offsetX: object.wrapper.offsetX, offsetY: object.wrapper.offsetY };\n                newValues = {\n                    offsetX: object.wrapper.offsetX + snappedPoint.x,\n                    offsetY: object.wrapper.offsetY + snappedPoint.y\n                };\n            }\n            if (this.currentTarget && args.target !== this.currentTarget) {\n                this.commandHandler.removeChildFromBPmn(args.source, args.target, this.currentTarget);\n            }\n            this.currentTarget = args.target;\n            var arg_1 = {\n                source: object, state: 'Progress', oldValue: oldValues_1, newValue: newValues,\n                target: args.target, targetPosition: args.position, allowDrop: true, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.positionChange, arg_1);\n            if (!arg_1.cancel) {\n                this.blocked = !this.commandHandler.dragSelectedObjects(snappedPoint.x, snappedPoint.y);\n                var blocked = !(this.commandHandler.mouseOver(this.currentElement, this.currentTarget, this.currentPosition));\n                this.blocked = this.blocked || blocked;\n            }\n            this.commandHandler.removeStackHighlighter();\n            this.commandHandler.renderStackHighlighter(args);\n            if (this.currentTarget && (args.source !== this.currentTarget) &&\n                this.commandHandler.isDroppable(args.source, this.currentTarget) && args.source.id !== 'helper') {\n                var object_1 = (args.source instanceof Selector) ? args.source.nodes[0] : args.source;\n                if ((!this.commandHandler.isParentAsContainer(object_1, true))\n                    && (object_1.shape.type !== 'SwimLane' && !object_1.shape.isPhase)) {\n                    if (this.currentTarget.isLane) {\n                        this.commandHandler.renderStackHighlighter(args, this.currentTarget);\n                    }\n                    else {\n                        this.commandHandler.drawHighlighter(this.currentTarget);\n                    }\n                }\n            }\n            else {\n                this.commandHandler.removeHighlighter();\n            }\n            if (this.commandHandler.canEnableDefaultTooltip()) {\n                var content = this.getTooltipContent(args.source);\n                this.commandHandler.showTooltip(args.source, args.position, content, 'MoveTool', this.isTooltipVisible);\n                this.isTooltipVisible = false;\n            }\n        }\n        else {\n            var matrix = identityMatrix();\n            var node = args.source;\n            rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n            var prevPosition = transformPointByMatrix(matrix, { x: this.prevPosition.x, y: this.prevPosition.y });\n            var position = transformPointByMatrix(matrix, { x: args.position.x, y: args.position.y });\n            this.commandHandler.portDrag(args.source, args.sourceWrapper, position.x - prevPosition.x, position.y - prevPosition.y);\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    MoveTool.prototype.getTooltipContent = function (node) {\n        return 'X:' + Math.round(node.wrapper.bounds.x) + ' ' + 'Y:' + Math.round(node.wrapper.bounds.y);\n    };\n    /**   @private  */\n    MoveTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    MoveTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n        this.currentTarget = null;\n        this.prevPosition = null;\n    };\n    return MoveTool;\n}(ToolBase));\nexport { MoveTool };\n/**\n * Rotates the selected objects\n */\nvar RotateTool = /** @class */ (function (_super) {\n    __extends(RotateTool, _super);\n    function RotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    RotateTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var objects = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], objects);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseUp = function (args) {\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle !== object.wrapper.rotateAngle) {\n            var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n            var arg = {\n                source: args.source, state: 'Completed', oldValue: oldValue,\n                newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'RotationChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            this.commandHandler.addHistoryEntry(entry);\n            this.commandHandler.updateSelector();\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.rotateAngle === object.wrapper.rotateAngle) {\n            var oldValue_1 = { rotateAngle: object.wrapper.rotateAngle };\n            var arg_2 = {\n                source: args.source, state: 'Start', oldValue: oldValue_1, newValue: oldValue_1, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg_2);\n        }\n        this.currentPosition = args.position;\n        var refPoint = { x: object.wrapper.offsetX, y: object.wrapper.offsetY };\n        var angle = Point.findAngle(refPoint, this.currentPosition) + 90;\n        var snapAngle = this.commandHandler.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        angle = (angle + 360) % 360;\n        var oldValue = { rotateAngle: object.wrapper.rotateAngle };\n        var newValue = { rotateAngle: angle };\n        var arg = {\n            source: args.source, state: 'Progress', oldValue: oldValue,\n            newValue: newValue, cancel: false\n        };\n        this.commandHandler.triggerEvent(DiagramEvent.rotateChange, arg);\n        if (!arg.cancel) {\n            this.blocked = !(this.commandHandler.rotateSelectedItems(angle - object.wrapper.rotateAngle));\n        }\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'RotateTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        return !this.blocked;\n    };\n    RotateTool.prototype.getTooltipContent = function (node) {\n        return Math.round((node.rotateAngle % 360)).toString() + '\\xB0';\n    };\n    /**   @private  */\n    RotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    RotateTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return RotateTool;\n}(ToolBase));\nexport { RotateTool };\n/**\n * Scales the selected objects\n */\nvar ResizeTool = /** @class */ (function (_super) {\n    __extends(ResizeTool, _super);\n    function ResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        /**   @private  */\n        _this.initialBounds = new Rect();\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    ResizeTool.prototype.mouseDown = function (args) {\n        this.undoElement = cloneObject(args.source);\n        this.undoParentElement = this.commandHandler.getSubProcess(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        if (this.undoElement.nodes[0] && this.undoElement.nodes[0].children) {\n            var elements = [];\n            var nodes = this.commandHandler.getAllDescendants(this.undoElement.nodes[0], elements);\n            for (var i = 0; i < nodes.length; i++) {\n                var node = this.commandHandler.cloneChild(nodes[i].id);\n                this.childTable[nodes[i].id] = cloneObject(node);\n            }\n        }\n        this.commandHandler.checkSelection(args.source, this.corner);\n        _super.prototype.mouseDown.call(this, args);\n        this.initialBounds.x = args.source.wrapper.offsetX;\n        this.initialBounds.y = args.source.wrapper.offsetY;\n        this.initialBounds.height = args.source.wrapper.actualSize.height;\n        this.initialBounds.width = args.source.wrapper.actualSize.width;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseUp = function (args, isPreventHistory) {\n        this.commandHandler.removeSnap();\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX !== object.wrapper.offsetX || this.undoElement.offsetY !== object.wrapper.offsetY) {\n            var deltaValues = this.updateSize(args.source, this.currentPosition, this.prevPosition, this.corner, this.initialBounds);\n            this.blocked = this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.currentPosition, this.prevPosition, object);\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Completed',\n                oldValue: oldValue, newValue: oldValue, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n            var obj = cloneObject(args.source);\n            var entry = {\n                type: 'SizeChanged', redoObject: cloneObject(obj), undoObject: cloneObject(this.undoElement), category: 'Internal',\n                childTable: this.childTable\n            };\n            if (!isPreventHistory) {\n                this.commandHandler.startGroupAction();\n                this.commandHandler.addHistoryEntry(entry);\n                if (obj.nodes[0] && obj.nodes[0].processId) {\n                    var entry_2 = {\n                        type: 'SizeChanged', redoObject: this.commandHandler.getSubProcess(args.source),\n                        undoObject: this.undoParentElement, category: 'Internal'\n                    };\n                    this.commandHandler.addHistoryEntry(entry_2);\n                }\n                this.commandHandler.endGroupAction();\n            }\n        }\n        _super.prototype.mouseUp.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var object;\n        object = this.commandHandler.renderContainerHelper(args.source) || args.source;\n        if (this.undoElement.offsetX === object.wrapper.offsetX && this.undoElement.offsetY === object.wrapper.offsetY) {\n            var oldValue = {\n                offsetX: args.source.wrapper.offsetX, offsetY: args.source.wrapper.offsetY,\n                width: args.source.wrapper.actualSize.width, height: args.source.wrapper.actualSize.height\n            };\n            var arg = {\n                source: args.source, state: 'Start', oldValue: oldValue, newValue: this.currentElement, cancel: false\n            };\n            this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        }\n        this.currentPosition = args.position;\n        var x = this.currentPosition.x - this.startPosition.x;\n        var y = this.currentPosition.y - this.startPosition.y;\n        var changes = { x: x, y: y };\n        changes = rotatePoint(-this.currentElement.wrapper.rotateAngle, undefined, undefined, changes);\n        var sx = (this.currentElement.wrapper.actualSize.width + changes.x) / this.currentElement.wrapper.actualSize.width;\n        var sy = (this.currentElement.wrapper.actualSize.height + changes.y) / this.currentElement.wrapper.actualSize.height;\n        changes = this.getChanges(changes);\n        this.commandHandler.removeSnap();\n        var deltaValues = this.updateSize(args.source, this.startPosition, this.currentPosition, this.corner, this.initialBounds);\n        this.blocked = !(this.scaleObjects(deltaValues.width, deltaValues.height, this.corner, this.startPosition, this.currentPosition, object));\n        if (this.commandHandler.canEnableDefaultTooltip()) {\n            var content = this.getTooltipContent(args.source);\n            this.commandHandler.showTooltip(args.source, args.position, content, 'ResizeTool', this.isTooltipVisible);\n            this.isTooltipVisible = false;\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    ResizeTool.prototype.getTooltipContent = function (node) {\n        return 'W:' + Math.round(node.wrapper.bounds.width) + ' ' + 'H:' + Math.round(node.wrapper.bounds.height);\n    };\n    ResizeTool.prototype.getChanges = function (change) {\n        switch (this.corner) {\n            case 'ResizeEast':\n                return { x: change.x, y: 0 };\n            case 'ResizeSouthEast':\n                return change;\n            case 'ResizeSouth':\n                return { x: 0, y: change.y };\n            case 'ResizeNorth':\n                return { x: 0, y: -change.y };\n            case 'ResizeNorthEast':\n                return { x: change.x, y: -change.y };\n            case 'ResizeNorthWest':\n                return { x: -change.x, y: -change.y };\n            case 'ResizeWest':\n                return { x: -change.x, y: 0 };\n            case 'ResizeSouthWest':\n                return { x: -change.x, y: change.y };\n        }\n        return change;\n    };\n    /**\n     * Updates the size with delta width and delta height using scaling.\n     */\n    /**\n     * Aspect ratio used to resize the width or height based on resizing the height or width\n     */\n    ResizeTool.prototype.scaleObjects = function (deltaWidth, deltaHeight, corner, startPoint, endPoint, source) {\n        if (source instanceof Selector && source.nodes.length === 1 && source.nodes[0].constraints & NodeConstraints.AspectRatio) {\n            if (corner === 'ResizeWest' || corner === 'ResizeEast' || corner === 'ResizeNorth' || corner === 'ResizeSouth') {\n                if (!(deltaHeight === 1 && deltaWidth === 1)) {\n                    deltaHeight = deltaWidth = Math.max(deltaHeight === 1 ? 0 : deltaHeight, deltaWidth === 1 ? 0 : deltaWidth);\n                }\n            }\n            else if (startPoint !== endPoint) {\n                deltaHeight = deltaWidth = Math.max(deltaHeight, deltaWidth);\n            }\n            else {\n                deltaHeight = deltaWidth = 0;\n            }\n        }\n        var oldValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        this.blocked = this.commandHandler.scaleSelectedItems(deltaWidth, deltaHeight, this.getPivot(this.corner));\n        var newValue = {\n            offsetX: source.offsetX, offsetY: source.offsetY,\n            width: source.width, height: source.height\n        };\n        var arg;\n        arg = { source: source, state: 'Progress', oldValue: oldValue, newValue: newValue, cancel: false };\n        this.commandHandler.triggerEvent(DiagramEvent.sizeChange, arg);\n        if (arg.cancel) {\n            this.commandHandler.scaleSelectedItems(1 / deltaWidth, 1 / deltaHeight, this.getPivot(this.corner));\n        }\n        return this.blocked;\n    };\n    return ResizeTool;\n}(ToolBase));\nexport { ResizeTool };\n/**\n * Draws a node that is defined by the user\n */\nvar NodeDrawingTool = /** @class */ (function (_super) {\n    __extends(NodeDrawingTool, _super);\n    function NodeDrawingTool(commandHandler, sourceObject) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var checkBoundaryConstraints;\n        var node = {\n            offsetX: this.currentPosition.x, width: 3, height: 3,\n            offsetY: this.currentPosition.y\n        };\n        if (!this.drawingObject) {\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n            if (checkBoundaryConstraints) {\n                this.commandHandler.updateNodeDimension(this.drawingObject, rect);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseUp = function (args) {\n        var checkBoundaryConstraints;\n        var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n        checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, rect);\n        if (this.drawingObject && this.drawingObject instanceof Node) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    NodeDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return NodeDrawingTool;\n}(ToolBase));\nexport { NodeDrawingTool };\n/**\n * Draws a connector that is defined by the user\n */\nvar ConnectorDrawingTool = /** @class */ (function (_super) {\n    __extends(ConnectorDrawingTool, _super);\n    function ConnectorDrawingTool(commandHandler, endPoint, sourceObject) {\n        var _this = _super.call(this, commandHandler, endPoint) || this;\n        _this.sourceObject = sourceObject;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseMove = function (args) {\n        if (this.inAction) {\n            var connector = {\n                sourcePoint: this.currentPosition, targetPoint: this.currentPosition,\n            };\n            if (!this.drawingObject) {\n                this.drawingObject = this.commandHandler.drawObject(connector);\n            }\n            args.source = this.drawingObject;\n            if (args.target) {\n                this.commandHandler.connect(this.endPoint, args);\n            }\n            this.endPoint = 'ConnectorTargetEnd';\n        }\n        if (!this.inAction) {\n            this.commandHandler.updateSelector();\n            if (args.source && args.sourceWrapper) {\n                this.commandHandler.renderHighlighter(args, true);\n            }\n        }\n        _super.prototype.mouseMove.call(this, args);\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingObject && this.drawingObject instanceof Connector) {\n            this.commandHandler.addObjectToDiagram(this.drawingObject);\n            this.drawingObject = null;\n        }\n        this.inAction = false;\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    /**   @private  */\n    ConnectorDrawingTool.prototype.mouseLeave = function (args) {\n        if (this.inAction) {\n            this.mouseUp(args);\n        }\n    };\n    return ConnectorDrawingTool;\n}(ConnectTool));\nexport { ConnectorDrawingTool };\nvar TextDrawingTool = /** @class */ (function (_super) {\n    __extends(TextDrawingTool, _super);\n    function TextDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    TextDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.commandHandler.clearSelection();\n        var node = {\n            shape: { type: 'Text' },\n            offsetX: this.currentPosition.x, width: 50, height: 20,\n            offsetY: this.currentPosition.y\n        };\n        if (!args.source) {\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (!this.drawingNode) {\n            var node = {\n                shape: { type: 'Text' }, offsetX: this.currentPosition.x, width: 30, height: 30,\n                style: { strokeDashArray: '2 2', fill: 'transparent' }, offsetY: this.currentPosition.y\n            };\n            this.drawingNode = this.commandHandler.drawObject(node);\n        }\n        else {\n            this.drawingNode.style.strokeColor = 'black';\n            this.drawingNode.style.strokeDashArray = '2 2';\n            this.drawingNode.style.fill = 'transparent';\n        }\n        if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n            var rect = Rect.toBounds([this.prevPosition, this.currentPosition]);\n            this.commandHandler.updateNodeDimension(this.drawingNode, rect);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.mouseUp = function (args) {\n        if (this.drawingNode) {\n            this.drawingNode.style.strokeColor = 'none';\n            this.drawingNode.style.fill = 'none';\n        }\n        else {\n            this.drawingNode = args.source;\n        }\n        if (this.drawingNode && (this.drawingNode instanceof Node || this.drawingNode instanceof Connector)) {\n            this.commandHandler.addText(this.drawingNode, this.currentPosition);\n        }\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    TextDrawingTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    return TextDrawingTool;\n}(ToolBase));\nexport { TextDrawingTool };\n/**\n * Pans the diagram control on drag\n */\nvar ZoomPanTool = /** @class */ (function (_super) {\n    __extends(ZoomPanTool, _super);\n    function ZoomPanTool(commandHandler, zoom) {\n        var _this = _super.call(this, commandHandler) || this;\n        _this.zooming = zoom;\n        return _this;\n    }\n    /**   @private  */\n    ZoomPanTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (!this.zooming && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                var difX = this.currentPosition.x - this.prevPosition.x;\n                var difY = this.currentPosition.y - this.prevPosition.y;\n                this.commandHandler.scroll(difX, difY, this.currentPosition);\n            }\n            else if (args.moveTouches && args.moveTouches.length && args.moveTouches.length >= 2) {\n                var startTouch0 = args.startTouches[0];\n                var startTouch1 = args.startTouches[1];\n                var moveTouch0 = args.moveTouches[0];\n                var moveTouch1 = args.moveTouches[1];\n                var scale = this.getDistance(moveTouch0, moveTouch1) / this.getDistance(startTouch0, startTouch1);\n                var focusPoint = args.position;\n                this.commandHandler.zoom(scale, 0, 0, focusPoint);\n                this.updateTouch(startTouch0, moveTouch0);\n                this.updateTouch(startTouch1, moveTouch1);\n            }\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseUp.call(this, args);\n        this.inAction = false;\n    };\n    /**   @private  */\n    ZoomPanTool.prototype.endAction = function () {\n        _super.prototype.endAction.call(this);\n    };\n    ZoomPanTool.prototype.getDistance = function (touch1, touch2) {\n        var x = touch2.pageX - touch1.pageX;\n        var y = touch2.pageY - touch1.pageY;\n        return Math.sqrt((x * x) + (y * y));\n    };\n    ZoomPanTool.prototype.updateTouch = function (startTouch, moveTouch) {\n        startTouch.pageX = moveTouch.pageX;\n        startTouch.pageY = moveTouch.pageY;\n    };\n    return ZoomPanTool;\n}(ToolBase));\nexport { ZoomPanTool };\n/**\n * Animate the layout during expand and collapse\n */\nvar ExpandTool = /** @class */ (function (_super) {\n    __extends(ExpandTool, _super);\n    function ExpandTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    ExpandTool.prototype.mouseUp = function (args) {\n        this.commandHandler.initExpand(args);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return ExpandTool;\n}(ToolBase));\nexport { ExpandTool };\n/**\n * Opens the annotation hypeLink at mouse up\n */\nvar LabelTool = /** @class */ (function (_super) {\n    __extends(LabelTool, _super);\n    function LabelTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelTool.prototype.mouseUp = function (args) {\n        var win = window.open(args.sourceWrapper.hyperlink.link, '_blank');\n        win.focus();\n        _super.prototype.mouseUp.call(this, args);\n    };\n    return LabelTool;\n}(ToolBase));\nexport { LabelTool };\n/**\n * Draws a Polygon shape node dynamically using polygon Tool\n */\nvar PolygonDrawingTool = /** @class */ (function (_super) {\n    __extends(PolygonDrawingTool, _super);\n    function PolygonDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            this.startPoint = { x: this.startPosition.x, y: this.startPosition.y };\n            var node = {\n                offsetX: this.currentPosition.x,\n                offsetY: this.currentPosition.y,\n                width: 5, height: 5,\n                style: { strokeColor: 'black', strokeWidth: 1 },\n                shape: {\n                    type: 'Basic',\n                    shape: 'Polygon',\n                    points: [{ x: this.startPoint.x, y: this.startPoint.y }, { x: this.currentPosition.x, y: this.currentPosition.y }]\n                }\n            };\n            this.drawingObject = this.commandHandler.drawObject(node);\n        }\n        else {\n            var pt = void 0;\n            var obj = this.drawingObject.shape;\n            pt = obj.points[obj.points.length - 1];\n            pt = { x: pt.x, y: pt.y };\n            this.drawingObject.shape.points.push(pt);\n        }\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject.shape;\n            if (this.drawingObject && this.currentPosition) {\n                obj.points[obj.points.length - 1].x = this.currentPosition.x;\n                obj.points[obj.points.length - 1].y = this.currentPosition.y;\n                this.drawingObject.wrapper.children[0].data = getPolygonPath(this.drawingObject.shape.points);\n                if (this.inAction && Point.equals(this.currentPosition, this.prevPosition) === false) {\n                    var region = Rect.toBounds(this.drawingObject.shape.points);\n                    this.commandHandler.updateNodeDimension(this.drawingObject, region);\n                }\n            }\n        }\n        return true;\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseUp = function (args, dblClickArgs) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.inAction = false;\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolygonDrawingTool.prototype.endAction = function () {\n        this.inAction = false;\n        this.drawingObject = null;\n    };\n    return PolygonDrawingTool;\n}(ToolBase));\nexport { PolygonDrawingTool };\n/**\n * Draws a PolyLine Connector dynamically using PolyLine Drawing Tool\n */\nvar PolyLineDrawingTool = /** @class */ (function (_super) {\n    __extends(PolyLineDrawingTool, _super);\n    function PolyLineDrawingTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            var obj = this.drawingObject;\n            obj.targetPoint = this.currentPosition;\n            this.commandHandler.updateConnectorPoints(obj);\n        }\n        return true;\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseDown = function (args) {\n        _super.prototype.mouseDown.call(this, args);\n        this.inAction = true;\n        if (!this.drawingObject) {\n            var connector = {\n                id: 'Connector',\n                type: 'Straight',\n                sourcePoint: this.currentPosition,\n                targetPoint: this.currentPosition\n            };\n            this.drawingObject = this.commandHandler.drawObject(connector);\n        }\n        else {\n            var drawObject = this.drawingObject;\n            var segment = void 0;\n            segment = new StraightSegment(drawObject, 'segments', { type: 'Straight' }, true);\n            segment.point = this.currentPosition;\n            drawObject.segments[drawObject.segments.length - 1] = segment;\n        }\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseWheel = function (args) {\n        _super.prototype.mouseWheel.call(this, args);\n        this.mouseMove(args);\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.mouseUp = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            if (this.drawingObject) {\n                this.commandHandler.addObjectToDiagram(this.drawingObject);\n            }\n        }\n        this.endAction();\n    };\n    /**   @private  */\n    PolyLineDrawingTool.prototype.endAction = function () {\n        this.drawingObject = null;\n        this.inAction = false;\n    };\n    return PolyLineDrawingTool;\n}(ToolBase));\nexport { PolyLineDrawingTool };\nvar LabelDragTool = /** @class */ (function (_super) {\n    __extends(LabelDragTool, _super);\n    function LabelDragTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelDragTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        this.annotationId = args.sourceWrapper.id;\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        var difx = this.currentPosition.x - this.prevPosition.x;\n        var dify = this.currentPosition.y - this.prevPosition.y;\n        var node = args.source;\n        if (node instanceof Node) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, -node.rotateAngle, 0, 0);\n            var diff = transformPointByMatrix(matrix, { x: difx, y: dify });\n            difx = diff.x;\n            dify = diff.y;\n        }\n        if (this.inAction) {\n            this.commandHandler.labelDrag(args.source, args.sourceWrapper, difx, dify);\n            this.commandHandler.updateSelector();\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseUp = function (args) {\n        var redoValue = args.source;\n        this.inAction = false;\n        var entryValue = {\n            type: 'AnnotationPropertyChanged',\n            objectId: this.annotationId, undoObject: cloneObject(this.undoElement),\n            category: 'Internal', redoObject: cloneObject(redoValue)\n        };\n        this.commandHandler.addHistoryEntry(entryValue);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelDragTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelDragTool;\n}(ToolBase));\nexport { LabelDragTool };\nvar LabelResizeTool = /** @class */ (function (_super) {\n    __extends(LabelResizeTool, _super);\n    function LabelResizeTool(commandHandler, corner) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.corner = corner;\n        return _this;\n    }\n    /**   @private  */\n    LabelResizeTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.annotationId = args.source.wrapper.children[0].id;\n        this.undoElement = cloneObject(object);\n        var annotation = args.source.wrapper.children[0];\n        this.initialBounds = {\n            x: annotation.offsetX,\n            y: annotation.offsetY,\n            width: annotation.actualSize.width,\n            height: annotation.actualSize.height\n        };\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (this.inAction) {\n            this.resizeObject(args);\n        }\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseUp = function (args) {\n        var redoObject = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.inAction = false;\n        var entry = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoObject), undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entry);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    /**   @private  */\n    LabelResizeTool.prototype.resizeObject = function (args) {\n        var object;\n        object = (args.source.nodes.length) ? args.source.nodes[0] : args.source.connectors[0];\n        var textElement = args.source.wrapper.children[0];\n        var deltaWidth;\n        var deltaHeight;\n        var center = { x: textElement.offsetX, y: textElement.offsetY };\n        var rotateAngle = textElement.rotateAngle;\n        rotateAngle += (object instanceof Node) ? object.rotateAngle : 0;\n        rotateAngle = (rotateAngle + 360) % 360;\n        var trans = identityMatrix();\n        rotateMatrix(trans, rotateAngle, center.x, center.y);\n        var corner = this.corner.slice(5);\n        var pivot = this.updateSize(textElement, this.startPosition, this.currentPosition, corner, this.initialBounds, rotateAngle);\n        var x = textElement.offsetX - textElement.actualSize.width * textElement.pivot.x;\n        var y = textElement.offsetY - textElement.actualSize.height * textElement.pivot.y;\n        var pivotPoint = this.getPivot(corner);\n        pivotPoint = { x: x + textElement.actualSize.width * pivotPoint.x, y: y + textElement.actualSize.height * pivotPoint.y };\n        var point = transformPointByMatrix(trans, pivotPoint);\n        pivot.x = point.x;\n        pivot.y = point.y;\n        deltaWidth = pivot.width;\n        deltaHeight = pivot.height;\n        deltaWidth = (deltaWidth < 0) ? 1 : deltaWidth;\n        deltaHeight = (deltaHeight < 0) ? 1 : deltaHeight;\n        this.commandHandler.labelResize(object, args.source.annotation, deltaWidth, deltaHeight, pivot, args.source);\n        this.commandHandler.updateSelector();\n    };\n    return LabelResizeTool;\n}(ToolBase));\nexport { LabelResizeTool };\nvar LabelRotateTool = /** @class */ (function (_super) {\n    __extends(LabelRotateTool, _super);\n    function LabelRotateTool(commandHandler) {\n        return _super.call(this, commandHandler, true) || this;\n    }\n    /**   @private  */\n    LabelRotateTool.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.annotationId = args.source.wrapper.children[0].id;\n        var object = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        this.undoElement = cloneObject(object);\n        _super.prototype.mouseDown.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        if (args.source) {\n            if (this.inAction) {\n                var object = args.source.nodes[0] ? args.source.nodes[0] :\n                    args.source.connectors[0];\n                var annotation = void 0;\n                annotation = (args.source.annotation);\n                this.commandHandler.labelRotate(object, annotation, this.currentPosition, args.source);\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseUp = function (args) {\n        this.inAction = false;\n        var redoEntry = (args.source.nodes.length) ?\n            args.source.nodes[0] : args.source.connectors[0];\n        var entryObject = {\n            type: 'AnnotationPropertyChanged', objectId: this.annotationId,\n            redoObject: cloneObject(redoEntry),\n            undoObject: cloneObject(this.undoElement), category: 'Internal'\n        };\n        this.commandHandler.addHistoryEntry(entryObject);\n        _super.prototype.mouseUp.call(this, args);\n    };\n    /**   @private  */\n    LabelRotateTool.prototype.mouseLeave = function (args) {\n        this.mouseUp(args);\n    };\n    return LabelRotateTool;\n}(ToolBase));\nexport { LabelRotateTool };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect3 } from '../utility/diagram-util';\nimport { cloneObject } from '../utility/base-util';\nimport { contains } from './actions';\nimport { getOppositeDirection } from '../utility/connector';\nimport { StraightSegment, OrthogonalSegment } from '../objects/connector';\nimport { ToolBase } from './tool';\n/**\n * Multiple segments editing for Connector\n */\nvar ConnectorEditing = /** @class */ (function (_super) {\n    __extends(ConnectorEditing, _super);\n    function ConnectorEditing(commandHandler, endPoint) {\n        var _this = _super.call(this, commandHandler, true) || this;\n        _this.endPoint = endPoint;\n        return _this;\n    }\n    /**   @private  */\n    ConnectorEditing.prototype.mouseDown = function (args) {\n        this.inAction = true;\n        this.undoElement = cloneObject(args.source);\n        _super.prototype.mouseDown.call(this, args);\n        var connectors;\n        if (args.source && args.source.connectors) {\n            connectors = args.source.connectors[0];\n        }\n        // Sets the selected segment         \n        for (var i = 0; i < connectors.segments.length; i++) {\n            var segment = connectors.segments[i];\n            if (this.endPoint === 'OrthoThumb') {\n                for (var j = 0; j < segment.points.length - 1; j++) {\n                    var segPoint = { x: 0, y: 0 };\n                    segPoint.x = ((segment.points[j].x + segment.points[j + 1].x) / 2);\n                    segPoint.y = ((segment.points[j].y + segment.points[j + 1].y) / 2);\n                    if (contains(this.currentPosition, segPoint, 30)) {\n                        this.selectedSegment = segment;\n                        this.segmentIndex = j;\n                    }\n                }\n            }\n            else {\n                if (contains(this.currentPosition, segment.point, 10)) {\n                    this.selectedSegment = segment;\n                }\n            }\n        }\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseMove = function (args) {\n        _super.prototype.mouseMove.call(this, args);\n        this.currentPosition = args.position;\n        if (this.currentPosition && this.prevPosition) {\n            var diffY = this.currentPosition.y - this.prevPosition.y;\n            var diffX = this.currentPosition.x - this.prevPosition.x;\n            this.currentPosition = this.commandHandler.snapConnectorEnd(this.currentPosition);\n            var connector = void 0;\n            if (args.source && args.source.connectors) {\n                connector = args.source.connectors[0];\n            }\n            if (this.inAction && this.endPoint !== undefined && diffX !== 0 || diffY !== 0) {\n                if (this.endPoint === 'OrthoThumb') {\n                    this.blocked = !this.dragOrthogonalSegment(connector, this.selectedSegment, this.currentPosition, this.segmentIndex);\n                }\n                else {\n                    var tx = this.currentPosition.x - this.selectedSegment.point.x;\n                    var ty = this.currentPosition.y - this.selectedSegment.point.y;\n                    var index = connector.segments.indexOf(this.selectedSegment);\n                    this.blocked = !this.commandHandler.dragControlPoint(connector, tx, ty, false, index);\n                }\n                this.commandHandler.updateSelector();\n            }\n        }\n        this.prevPosition = this.currentPosition;\n        return !this.blocked;\n    };\n    /**   @private  */\n    ConnectorEditing.prototype.mouseUp = function (args) {\n        var connector;\n        if (args.source && args.source.connectors) {\n            connector = args.source.connectors[0];\n        }\n        if (args && args.source && args.info && args.info.ctrlKey && args.info.shiftKey && connector.type === 'Straight') {\n            this.addOrRemoveSegment(connector, this.currentPosition);\n        }\n        else {\n            if (this.endPoint === 'OrthoThumb' && this.selectedSegment) {\n                var index = connector.segments.indexOf(this.selectedSegment);\n                var prev = connector.segments[index - 1];\n                var next = connector.segments[index + 1];\n                if (index === connector.segments.length - 2\n                    && this.updateLastSegment(connector, this.selectedSegment)) {\n                    connector.segments.splice(connector.segments.length - 2, 1);\n                }\n                else {\n                    if (prev && Math.abs(prev.length) < 5) {\n                        if (index !== 1) {\n                            this.removePrevSegment(connector, index);\n                        }\n                    }\n                    else if (next) {\n                        var len = Point.distancePoints(next.points[0], next.points[1]);\n                        var length_1 = ((next.length || next.length === 0) ? next.length : len);\n                        if ((Math.abs(length_1) <= 5)) {\n                            this.removeNextSegment(connector, index);\n                        }\n                    }\n                }\n                this.commandHandler.updateEndPoint(connector);\n            }\n        }\n        if (this.undoElement) {\n            var obj = void 0;\n            obj = cloneObject(args.source);\n            var entry = {\n                type: 'SegmentChanged', redoObject: obj, undoObject: this.undoElement, category: 'Internal'\n            };\n            this.commandHandler.addHistoryEntry(entry);\n        }\n        _super.prototype.mouseUp.call(this, args);\n    };\n    ConnectorEditing.prototype.removePrevSegment = function (connector, index) {\n        var first = connector.segments[index - 2];\n        var next = connector.segments[index + 1];\n        var length = (next.length || next.length === 0) ? next.length : Point.distancePoints(next.points[0], next.points[1]);\n        if (!(length <= 5)) {\n            var last = connector.segments[index + 1];\n            connector.segments.splice(index - 1, 2);\n            var segment = this.selectedSegment;\n            if (segment.direction === 'Left' || segment.direction === 'Right') {\n                first.points[first.points.length - 1].x = last.points[0].x;\n                last.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = last.points[0].y;\n                last.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (segment.length || segment.length === 0) {\n                this.findSegmentDirection(first);\n            }\n            this.findSegmentDirection(last);\n        }\n    };\n    ConnectorEditing.prototype.findSegmentDirection = function (segment) {\n        if (segment.direction && (segment.length || segment.length === 0)) {\n            segment.length = Point.distancePoints(segment.points[0], segment.points[segment.points.length - 1]);\n            segment.direction = Point.direction(segment.points[0], segment.points[segment.points.length - 1]);\n        }\n    };\n    ConnectorEditing.prototype.removeNextSegment = function (connector, index) {\n        var segment = this.selectedSegment;\n        var first = connector.segments[index - 1];\n        var last = connector.segments[index + 2];\n        var next = connector.segments[index + 1];\n        if (next.length || next.length === 0) {\n            connector.segments.splice(index, 2);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                last.points[0].y = segment.points[0].y;\n                first.points[first.points.length - 1].x = last.points[0].x;\n            }\n            else {\n                last.points[0].x = segment.points[0].x;\n                first.points[first.points.length - 1].y = last.points[0].y;\n            }\n        }\n        else {\n            connector.segments.splice(index + 1, 1);\n            if (segment.direction === 'Top' || segment.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = next.points[next.points.length - 1].x;\n            }\n            else {\n                first.points[first.points.length - 1].y = next.points[next.points.length - 1].y;\n            }\n            this.findSegmentDirection(first);\n            segment.length = segment.direction = null;\n        }\n        if (first && last) {\n            first.length = Point.distancePoints(first.points[0], last.points[0]);\n            first.direction = Point.direction(first.points[0], last.points[0]);\n            if (last.length || last.length === 0) {\n                last.length = Point.distancePoints(first.points[first.points.length - 1], last.points[last.points.length - 1]);\n                var point1 = first.points;\n                var point2 = last.points;\n                last.direction = Point.direction(point1[point1.length - 1], point2[point2.length - 1]);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addOrRemoveSegment = function (connector, point) {\n        var updateSeg;\n        var segmentIndex;\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = (connector.segments)[i];\n            if (contains(point, segment.point, connector.hitPadding)) {\n                segmentIndex = i;\n                updateSeg = true;\n            }\n        }\n        if (updateSeg && segmentIndex !== undefined) {\n            if (connector.segments && connector.segments[segmentIndex] && connector.segments[segmentIndex].type === 'Straight') {\n                var segment = connector.segments[segmentIndex];\n                var previous = connector.segments[segmentIndex + 1];\n                if (previous) {\n                    connector.segments.splice(segmentIndex, 1);\n                    previous.points[0] = segment.points[0];\n                }\n            }\n        }\n        else {\n            var index = this.findIndex(connector, point);\n            if (connector.segments && connector.segments[index] && connector.segments[index].type === 'Straight') {\n                var segment = connector.segments[index];\n                var newseg = new StraightSegment(connector, 'segments', { type: 'Straight', point: point }, true);\n                newseg.points[0] = segment.points[0];\n                newseg.points[1] = point;\n                segment.points[0] = point;\n                connector.segments.splice(index, 0, newseg);\n                updateSeg = true;\n            }\n        }\n        if (updateSeg) {\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.findIndex = function (connector, point) {\n        var intersectingSegs = [];\n        for (var i = 0; i < connector.segments.length; i++) {\n            var segment = connector.segments[i];\n            var rect = Rect.toBounds([segment.points[0], segment.points[1]]);\n            rect.Inflate(connector.hitPadding);\n            if (rect.containsPoint(point)) {\n                intersectingSegs.push(segment);\n            }\n        }\n        if (intersectingSegs.length === 1) {\n            return connector.segments.indexOf(intersectingSegs[0]);\n        }\n        else {\n            var ratio = void 0;\n            var min = void 0;\n            var index = void 0;\n            var seg = void 0;\n            var v = void 0;\n            var h = void 0;\n            for (var i = 0; i < intersectingSegs.length; i++) {\n                seg = intersectingSegs[i];\n                v = (point.y - seg.points[0].y) / (seg.points[1].y - point.y);\n                h = (point.x - seg.points[0].x) / (seg.points[1].x - point.x);\n                ratio = Math.abs(v - h);\n                if (i === 0) {\n                    min = ratio;\n                    index = 0;\n                }\n                if (ratio < min) {\n                    min = ratio;\n                    index = i;\n                }\n            }\n            return connector.segments.indexOf(intersectingSegs[index]);\n        }\n    };\n    ConnectorEditing.prototype.dragOrthogonalSegment = function (obj, segment, point, segmentIndex) {\n        var segmentPoint = { x: 0, y: 0 };\n        segmentPoint.x = ((segment.points[segmentIndex].x + segment.points[segmentIndex + 1].x) / 2);\n        segmentPoint.y = ((segment.points[segmentIndex].y + segment.points[segmentIndex + 1].y) / 2);\n        var ty = point.y - segmentPoint.y;\n        var tx = point.x - segmentPoint.x;\n        var index = obj.segments.indexOf(segment);\n        var update = false;\n        var orientation = (segment.points[0].y.toFixed(2) === segment.points[1].y.toFixed(2)) ? 'horizontal' : 'vertical';\n        var prevSegment;\n        var nextSegment;\n        if (index !== -1) {\n            if (index === 0 && obj.segments.length === 1 && segment.points.length === 2) {\n                index = this.addSegments(obj, segment, tx, ty, index);\n                update = true;\n            }\n            else if (index === obj.segments.length - 1 && (segment.direction === null || segment.length === null)) {\n                index = this.addTerminalSegment(obj, segment, tx, ty, segmentIndex);\n                update = true;\n            }\n            else if (index === 0) {\n                index = this.insertFirstSegment(obj, segment, tx, ty, index);\n                update = true;\n            }\n            if (update) {\n                this.selectedSegment = segment = obj.segments[index];\n                this.segmentIndex = 0;\n            }\n            this.updateAdjacentSegments(obj, index, tx, ty);\n            this.commandHandler.updateEndPoint(obj);\n        }\n        return true;\n    };\n    ConnectorEditing.prototype.addSegments = function (obj, segment, tx, ty, coll) {\n        var index;\n        var direction;\n        var segments = [];\n        var len;\n        var length = Point.distancePoints(segment.points[0], segment.points[1]);\n        var segmentDirection = Point.direction(segment.points[0], segment.points[1]);\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 4 }, true));\n        direction = (segment.points[0].y === segment.points[1].y) ? ((ty > 0) ? 'Bottom' : 'Top') : ((tx > 0) ? 'Right' : 'Left');\n        len = (segment.points[0].x === segment.points[1].x) ? ty : tx;\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: len }, true));\n        segments.push(new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: segmentDirection, length: length / 2 }, true));\n        obj.segments = segments.concat(obj.segments);\n        index = coll + 2;\n        return index;\n    };\n    ConnectorEditing.prototype.insertFirstSegment = function (obj, segment, tx, ty, coll) {\n        var direction;\n        var length;\n        var segments = [];\n        var segValues;\n        var index;\n        var insertseg;\n        if (obj.sourcePortID && segment.length && obj.segments[0].points.length > 2) {\n            obj.segments.splice(0, 1);\n            var prev = void 0;\n            for (var i = 0; i < segment.points.length - 1; i++) {\n                var len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n                var dir = Point.direction(segment.points[i], segment.points[i + 1]);\n                insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: dir, length: len }, true);\n                if (insertseg.length === 0) {\n                    if (prev && (prev.direction === 'Top' || prev.direction === 'Bottom')) {\n                        insertseg.direction = tx > 0 ? 'Right' : 'Left';\n                    }\n                    else {\n                        insertseg.direction = ty > 0 ? 'Bottom' : 'Top';\n                    }\n                }\n                prev = insertseg;\n                segments.push(insertseg);\n            }\n            obj.segments = segments.concat(obj.segments);\n            index = 1;\n        }\n        else {\n            segValues = { type: 'Orthogonal', direction: segment.direction, length: segment.length / 3 };\n            segments.push(new OrthogonalSegment(obj, 'segments', segValues, true));\n            if (segment.direction === 'Bottom' || segment.direction === 'Top') {\n                length = Math.abs(tx);\n                direction = tx > 0 ? 'Right' : 'Left';\n            }\n            else {\n                length = Math.abs(ty);\n                direction = ty > 0 ? 'Bottom' : 'Top';\n            }\n            insertseg = new OrthogonalSegment(obj, 'segments', { type: 'Orthogonal', direction: direction, length: length }, true);\n            segments.push(insertseg);\n            var nextseg = obj.segments[1];\n            if (nextseg && nextseg.length) {\n                nextseg.length = (direction !== nextseg.direction) ? nextseg.length + length : nextseg.length - length;\n            }\n            index = 2;\n            segment.length = 2 * segment.length / 3;\n            obj.segments = segments.concat(obj.segments);\n        }\n        return index;\n    };\n    ConnectorEditing.prototype.updateAdjacentSegments = function (obj, index, tx, ty) {\n        var current = obj.segments[index];\n        var endPoint = current.points[current.points.length - 1];\n        var startPoint = current.points[0];\n        var isNextUpdate = true;\n        if (current.type === 'Orthogonal') {\n            current.points[0] = startPoint;\n            current.points[current.points.length - 1] = endPoint;\n            var prev = obj.segments[index - 1];\n            if (prev) {\n                isNextUpdate = this.updatePreviousSegment(tx, ty, obj, index);\n            }\n            if (obj.segments.length - 1 > index && isNextUpdate) {\n                var nextSegment = obj.segments[index + 1];\n                this.updateNextSegment(obj, current, nextSegment, tx, ty);\n            }\n        }\n    };\n    ConnectorEditing.prototype.addTerminalSegment = function (connector, segment, tx, ty, segmentIndex) {\n        var index = connector.segments.indexOf(segment);\n        var first;\n        var insertseg;\n        var len;\n        var dir;\n        connector.segments.pop();\n        var last = connector.segments[connector.segments.length - 1];\n        first = (last && last.type === 'Orthogonal') ? last : null;\n        for (var i = 0; i < segment.points.length - 2; i++) {\n            len = Point.distancePoints(segment.points[i], segment.points[i + 1]);\n            dir = Point.direction(segment.points[i], segment.points[i + 1]);\n            insertseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir }, true);\n            connector.segments.push(insertseg);\n            first = insertseg;\n        }\n        var sec = segmentIndex;\n        if (segment.points.length === 2 || sec === segment.points.length - 2) {\n            if (first) {\n                first.length += 5;\n            }\n            if (sec !== undefined) {\n                var newseg = void 0;\n                len = 2 * Point.distancePoints(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]) / 3;\n                dir = Point.direction(segment.points[segment.points.length - 2], segment.points[segment.points.length - 1]);\n                newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: dir });\n                connector.segments.push(newseg);\n            }\n        }\n        var lastseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n        connector.segments.push(lastseg);\n        this.commandHandler.updateEndPoint(connector);\n        index = index + segmentIndex;\n        return index;\n    };\n    ConnectorEditing.prototype.updatePortSegment = function (prev, connector, index, tx, ty) {\n        if (index === 1 && prev.points.length === 2 && prev.length < 0) {\n            var source = connector.sourceWrapper.corners;\n            var current = connector.segments[index];\n            var next = connector.segments[index + 1];\n            var newseg = void 0;\n            var segment = [];\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: 13, direction: prev.direction });\n            segment.push(newseg);\n            var len = void 0;\n            if (current.direction === 'Left') {\n                len = (current.points[0].x - (source.middleLeft.x - 20));\n            }\n            else if (current.direction === 'Right') {\n                len = ((source.middleRight.x + 20) - current.points[0].x);\n            }\n            else if (current.direction === 'Bottom') {\n                len = ((source.bottomCenter.y + 20) - current.points[0].y);\n            }\n            else {\n                len = (current.points[0].y - (source.topCenter.y - 20));\n            }\n            var dir = current.direction;\n            newseg = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal', length: len, direction: current.direction });\n            segment.push(newseg);\n            current.length = current.length - len;\n            if (next && next.length && next.direction) {\n                if (next.direction === prev.direction) {\n                    next.length -= 13;\n                }\n                else if (next.direction === getOppositeDirection(prev.direction)) {\n                    next.length += 13;\n                }\n            }\n            connector.segments = segment.concat(connector.segments);\n            this.selectedSegment = connector.segments[3];\n        }\n    };\n    ConnectorEditing.prototype.updatePreviousSegment = function (tx, ty, connector, index) {\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var firstSegment = (index === 1) ? true : false;\n        prev.points[prev.points.length - 1] = current.points[0];\n        var isSourceNode = (connector.sourceID && connector.sourcePortID === '') ? false : true;\n        var isNextUpdate = true;\n        if (prev.type === 'Orthogonal') {\n            if (prev.direction === 'Bottom') {\n                prev.length += ty;\n            }\n            else if (prev.direction === 'Top') {\n                prev.length -= ty;\n            }\n            else if (prev.direction === 'Right') {\n                prev.length += tx;\n            }\n            else {\n                prev.length -= tx;\n            }\n            if (connector.sourcePortID !== '' && prev.length < 0) {\n                this.updatePortSegment(prev, connector, index, tx, ty);\n            }\n            else if (connector.sourceID && connector.sourcePortID === '' && prev.length < 0 && index === 1) {\n                isNextUpdate = false;\n                this.updateFirstSegment(connector, current);\n            }\n            if (isSourceNode) {\n                this.changeSegmentDirection(prev);\n            }\n        }\n        return isNextUpdate;\n    };\n    ConnectorEditing.prototype.changeSegmentDirection = function (segment) {\n        if (segment.length < 0) {\n            segment.direction = getOppositeDirection(segment.direction);\n            segment.length *= -1;\n        }\n    };\n    ConnectorEditing.prototype.updateNextSegment = function (obj, current, next, tx, ty) {\n        var pt = current.points[current.points.length - 1];\n        next.points[0] = current.points[current.points.length - 1];\n        if (next && next.type === 'Orthogonal') {\n            if (next.length || next.length === 0) {\n                if (next.direction === 'Left' || next.direction === 'Right') {\n                    if (tx !== 0) {\n                        next.length = (next.direction === 'Right') ? next.length - tx : next.length + tx;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n                else {\n                    if (ty !== 0) {\n                        next.length = (next.direction === 'Bottom') ? next.length - ty : next.length + ty;\n                        if (next.length || next.length === 0) {\n                            this.changeSegmentDirection(next);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    ConnectorEditing.prototype.updateFirstSegment = function (connector, selectedSegment) {\n        var index = connector.segments.indexOf(selectedSegment);\n        var insertfirst = false;\n        var current = connector.segments[index];\n        var prev = connector.segments[index - 1];\n        var con = connector;\n        var sourcePoint;\n        if (prev.length < 0 && connector.sourceID) {\n            var sourceNode = connector.sourceWrapper.corners;\n            var segments = [];\n            var segValues = void 0;\n            var removeCurrentPrev = false;\n            this.changeSegmentDirection(current);\n            var next = connector.segments[index + 1];\n            var nextNext = connector.segments[index + 2];\n            if (next) {\n                this.changeSegmentDirection(next);\n            }\n            if (nextNext) {\n                this.changeSegmentDirection(nextNext);\n            }\n            switch (prev.direction) {\n                case 'Top':\n                case 'Bottom':\n                    sourcePoint = (current.length > 0 && current.direction === 'Left') ? sourceNode.middleLeft : sourceNode.middleRight;\n                    if (current.length > sourceNode.width / 2) {\n                        if (Math.abs(prev.length) < sourceNode.height / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].x = sourcePoint.x;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].y = sourcePoint.y;\n                            next.points[0].x = next.points[next.points.length - 1].x = (current.direction === 'Right') ?\n                                sourcePoint.x + 20 : sourcePoint.x - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n                case 'Left':\n                case 'Right':\n                    sourcePoint = (current.length > 0 && current.direction === 'Top') ? sourceNode.topCenter : sourceNode.bottomCenter;\n                    if (current.length > sourceNode.height / 2) {\n                        if (Math.abs(prev.length) < sourceNode.width / 2) {\n                            prev.length = Point.distancePoints(sourceNode.center, prev.points[prev.points.length - 1]);\n                            current.points[0].y = sourcePoint.y;\n                            current.length = Point.distancePoints(current.points[0], current.points[current.points.length - 1]);\n                            current.length -= 20;\n                            insertfirst = true;\n                        }\n                    }\n                    else {\n                        if (next && next.direction && next.length) {\n                            next.points[0].x = sourcePoint.x;\n                            next.points[0].y = next.points[next.points.length - 1].y = (current.direction === 'Bottom') ?\n                                sourcePoint.y + 20 : sourcePoint.y - 20;\n                        }\n                        insertfirst = true;\n                        removeCurrentPrev = true;\n                    }\n                    break;\n            }\n            this.changeSegmentDirection(prev);\n            this.changeSegmentDirection(current);\n            if (insertfirst) {\n                segValues = { type: 'Orthogonal', direction: current.direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                if (removeCurrentPrev) {\n                    if (next && next.direction && next.length) {\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                    }\n                    if (nextNext && nextNext.direction && nextNext.length) {\n                        nextNext.length = Point.distancePoints(next.points[next.points.length - 1], nextNext.points[nextNext.points.length - 1]);\n                    }\n                    connector.segments.splice(index - 1, 2);\n                }\n                connector.segments = segments.concat(connector.segments);\n            }\n            this.selectedSegment = ((removeCurrentPrev) ? connector.segments[index - 1] :\n                connector.segments[index + 1]);\n            this.commandHandler.updateEndPoint(connector);\n        }\n    };\n    ConnectorEditing.prototype.updateLastSegment = function (connector, selectedSegment) {\n        if (connector.targetID && connector.targetPortID === '') {\n            var line1Start = void 0;\n            var line1End = void 0;\n            var line2Start = void 0;\n            var line2End = void 0;\n            var corners = connector.targetWrapper.corners;\n            var firstSegPoint = selectedSegment.points[0];\n            var lastSegPoint = selectedSegment.points[selectedSegment.points.length - 1];\n            if (selectedSegment.direction === 'Right' || selectedSegment.direction === 'Left') {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: (selectedSegment.direction === 'Left') ? lastSegPoint.x - corners.width / 2 : lastSegPoint.x + corners.width / 2,\n                    y: lastSegPoint.y\n                };\n                line2Start = { x: corners.center.x, y: corners.center.y - corners.height };\n                line2End = { x: corners.center.x, y: corners.center.y + corners.height };\n            }\n            else {\n                line1Start = { x: firstSegPoint.x, y: firstSegPoint.y };\n                line1End = {\n                    x: lastSegPoint.x,\n                    y: (selectedSegment.direction === 'Bottom') ? lastSegPoint.y + corners.height / 2 : lastSegPoint.y - corners.height / 2\n                };\n                line2Start = { x: corners.center.x - corners.width, y: corners.center.y };\n                line2End = { x: corners.center.x + corners.width, y: corners.center.y };\n            }\n            var line1 = { x1: line1Start.x, y1: line1Start.y, x2: line1End.x, y2: line1End.y };\n            var line2 = { x1: line2Start.x, y1: line2Start.y, x2: line2End.x, y2: line2End.y };\n            return (intersect3(line1, line2).enabled);\n        }\n        return false;\n    };\n    /**\n     * To destroy the connector editing module\n     * @return {void}\n     * @private\n     */\n    ConnectorEditing.prototype.destroy = function () {\n        /**\n         * Destroys the connector editing module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorEditing.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'ConnectorEditingTool';\n    };\n    return ConnectorEditing;\n}(ToolBase));\nexport { ConnectorEditing };\n","import { Point } from '../primitives/point';\nimport { Container } from '../core/containers/container';\nimport { Connector } from '../objects/connector';\nimport { NodeDrawingTool, ConnectorDrawingTool, TextDrawingTool, PolygonDrawingTool, PolyLineDrawingTool } from './tool';\nimport { Node } from '../objects/node';\nimport { SelectTool, MoveTool, ResizeTool, RotateTool, ConnectTool, ExpandTool, LabelTool, ZoomPanTool } from './tool';\nimport { LabelDragTool, LabelResizeTool, LabelRotateTool } from './tool';\nimport { ConnectorEditing } from './connector-editing';\nimport { Selector } from './selector';\nimport { findToolToActivate, isSelected, getCursor, contains } from './actions';\nimport { DiagramAction, KeyModifiers, Keys, DiagramEvent, DiagramTools, RendererAction } from '../enum/enum';\nimport { isPointOverConnector, findObjectType, insertObject, getObjectFromCollection, getTooltipOffset } from '../utility/diagram-util';\nimport { getObjectType, getInOutConnectPorts, removeChildNodes } from '../utility/diagram-util';\nimport { canZoomPan, canDraw, canDrag, canZoomTextEdit, canVitualize, canPreventClearSelection } from './../utility/constraints-util';\nimport { canMove, canEnablePointerEvents, canSelect, canEnableToolTip } from './../utility/constraints-util';\nimport { canOutConnect, canInConnect, canPortInConnect, canPortOutConnect, canAllowDrop, canUserInteract, defaultTool } from './../utility/constraints-util';\nimport { updateTooltip } from '../objects/tooltip';\nimport { PortVisibility, NodeConstraints, ConnectorConstraints } from '../enum/enum';\nimport { addTouchPointer, measureHtmlText, getAdornerLayerSvg } from '../utility/dom-util';\nimport { TextElement } from '../core/elements/text-element';\nimport { Size } from '../primitives/size';\nimport { cloneObject as clone, cloneObject } from './../utility/base-util';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix } from './../primitives/matrix';\nimport { removeRulerMarkers, drawRulerMarkers, getRulerSize, updateRuler } from '../ruler/ruler';\nimport { canContinuousDraw, canDrawOnce } from '../utility/constraints-util';\nimport { getFunction, cornersPointsBeforeRotation } from '../utility/base-util';\nimport { updateCanvasBounds, checkChildNodeInContainer, checkParentAsContainer, removeChildInContainer } from './container-interaction';\nimport { moveChildInStack, renderStackHighlighter, } from './container-interaction';\nimport { updateSwimLaneObject } from '../utility/swim-lane-util';\nimport { getConnectors, updateHeaderMaxWidth, laneInterChanged, updateConnectorsProperties } from '../utility/swim-lane-util';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\nimport { randomId } from '../index';\n/**\n * This module handles the mouse and touch events\n */\nvar DiagramEventHandler = /** @class */ (function () {\n    /** @private */\n    function DiagramEventHandler(diagram, commandHandler) {\n        this.currentAction = 'None';\n        /**   @private  */\n        this.focus = false;\n        this.isBlocked = false;\n        this.isMouseDown = false;\n        this.inAction = false;\n        this.doingAutoScroll = false;\n        this.diagram = null;\n        this.objectFinder = null;\n        this.tool = null;\n        this.eventArgs = null;\n        this.diagram = diagram;\n        this.objectFinder = new ObjectFinder();\n        this.commandHandler = commandHandler;\n    }\n    Object.defineProperty(DiagramEventHandler.prototype, \"action\", {\n        get: function () {\n            return this.currentAction;\n        },\n        set: function (action) {\n            if (action !== this.currentAction) {\n                if (this.currentAction === 'PortDraw') {\n                    this.diagram.tool &= ~DiagramTools.DrawOnce;\n                    if (this.tool) {\n                        this.tool.mouseUp({ position: this.currentPosition });\n                    }\n                    this.tool = null;\n                }\n                if (action === 'Rotate' || action === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.add('e-diagram-rotate');\n                }\n                else if (this.currentAction === 'Rotate' || this.currentAction === 'LabelRotate') {\n                    this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n                }\n                this.currentAction = action;\n                if (this.currentAction !== 'None' && this.currentAction !== 'Select' &&\n                    !(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                    this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.ToolAction;\n                }\n                else {\n                    this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.ToolAction;\n                }\n                this.diagram.setCursor(this.diagram.getCursor(action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramEventHandler.prototype, \"blocked\", {\n        get: function () {\n            return this.isBlocked;\n        },\n        set: function (blocked) {\n            this.isBlocked = blocked;\n            if (this.blocked) {\n                this.diagram.setCursor('not-allowed');\n            }\n            else {\n                this.diagram.setCursor(this.diagram.getCursor(this.action, this.inAction));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramEventHandler.prototype.getMousePosition = function (e) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            offsetX = touchArg.changedTouches[0].clientX;\n            offsetY = touchArg.changedTouches[0].clientY;\n        }\n        else {\n            offsetX = e.clientX;\n            offsetY = e.clientY;\n        }\n        var position = new Size();\n        position = getRulerSize(this.diagram);\n        var boundingRect = this.diagram.element.getBoundingClientRect();\n        offsetX = offsetX + this.diagram.diagramCanvas.scrollLeft - boundingRect.left - position.width;\n        offsetY = offsetY + this.diagram.diagramCanvas.scrollTop - boundingRect.top - position.height;\n        offsetX /= this.diagram.scroller.transform.scale;\n        offsetY /= this.diagram.scroller.transform.scale;\n        offsetX -= this.diagram.scroller.transform.tx;\n        offsetY -= this.diagram.scroller.transform.ty;\n        return { x: offsetX, y: offsetY };\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            _this.updateViewPortSize(_this.diagram.element);\n        }, 300);\n        return false;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.updateViewPortSize = function (element) {\n        var container = document.getElementById(element.id);\n        if (container) {\n            var bounds = container.getBoundingClientRect();\n            this.diagram.scroller.setViewPortSize(bounds.width, bounds.height);\n            var position = new Size();\n            position = getRulerSize(this.diagram);\n            var width = this.diagram.getSizeValue(this.diagram.width, position.width);\n            var height = this.diagram.getSizeValue(this.diagram.height, position.height);\n            this.diagram.diagramCanvas.style.width = width;\n            this.diagram.diagramCanvas.style.height = height;\n            this.diagram.scroller.setSize();\n            this.diagram.transformLayers();\n            if (this.diagram.rulerSettings.showRulers) {\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.canHideResizers = function () {\n        return ((this.tool instanceof MoveTool || this.tool instanceof RotateTool) && this.isMouseDown);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.updateCursor = function () {\n        if ((this.diagram.selectedItems.nodes.length === 1 || this.diagram.selectedItems.connectors.length === 1)) {\n            var list = [];\n            list = list.concat(this.diagram.selectedItems.nodes, this.diagram.selectedItems.connectors);\n            this.blocked = (this.isMouseDown && list.length === 1 && this.tool instanceof SelectTool && !canMove(list[0]));\n        }\n    };\n    DiagramEventHandler.prototype.isForeignObject = function (target, isTextBox) {\n        var foreignobject = target;\n        if (foreignobject) {\n            while (foreignobject.parentNode !== null) {\n                if (typeof foreignobject.className === 'string' &&\n                    ((!isTextBox && foreignobject.className.indexOf('foreign-object') !== -1) ||\n                        (isTextBox && foreignobject.className.indexOf('e-diagram-text-edit') !== -1))) {\n                    return foreignobject;\n                }\n                else {\n                    foreignobject = foreignobject.parentNode;\n                }\n            }\n        }\n        return null;\n    };\n    DiagramEventHandler.prototype.isMetaKey = function (evt) {\n        return navigator.platform.match('Mac') ? evt.metaKey : evt.ctrlKey;\n    };\n    DiagramEventHandler.prototype.renderUmlHighLighter = function (args) {\n        this.diagram.commandHandler.removeStackHighlighter();\n        var node = this.diagram.selectedItems.nodes[0];\n        if (node && node.container && node.container.type === 'Stack' && node.shape.type === 'UmlClassifier') {\n            var bound = node.wrapper.bounds;\n            if (!bound.containsPoint(this.currentPosition)) {\n                var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n                var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                if (target && target.parentId && (target.parentId === node.id)) {\n                    var isVertical = this.diagram.nameTable[target.parentId].container.orientation === 'Vertical';\n                    renderStackHighlighter(target.wrapper, isVertical, args.position, this.diagram, true);\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.isDeleteKey = function (key, value) {\n        return (navigator.platform.match('Mac') && key === 'Backspace' && value === 'delete');\n    };\n    DiagramEventHandler.prototype.isMouseOnScrollBar = function (evt) {\n        var x = evt.offsetX;\n        var y = evt.offsetY;\n        var diagramCanvas = this.diagram.diagramCanvas;\n        var height = diagramCanvas.offsetHeight;\n        var width = diagramCanvas.offsetWidth;\n        var topLeft;\n        var topRight;\n        var bottomLeft;\n        var bottomRight;\n        var bounds;\n        if (height < diagramCanvas.scrollHeight) {\n            //default scrollbar width in browser is '17pixels'.\n            topLeft = { x: (width - 17), y: 0 };\n            topRight = { x: width, y: 0 };\n            bottomLeft = { x: (width - 17), y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        if (width < diagramCanvas.scrollWidth) {\n            topLeft = { x: 0, y: (height - 17) };\n            topRight = { x: width, y: (height - 17) };\n            bottomLeft = { x: 0, y: height };\n            bottomRight = { x: width, y: height };\n            bounds = Rect.toBounds([topLeft, topRight, bottomLeft, bottomRight]);\n            if (bounds.containsPoint({ x: x, y: y })) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.updateVirtualization = function () {\n        var _this = this;\n        var delay = 50;\n        var removeObjectInterval;\n        removeObjectInterval = setInterval(function (args) {\n            _this.diagram.removeVirtualObjects(removeObjectInterval);\n        }, delay);\n        setTimeout(function () {\n            _this.diagram.deleteVirtualObject = true;\n        }, delay);\n    };\n    DiagramEventHandler.prototype.mouseDown = function (evt) {\n        this.focus = true;\n        var touches;\n        touches = evt.touches;\n        if (this.isMouseOnScrollBar(evt)) {\n            this.isScrolling = true;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram)) ||\n            (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.action === 'Select' || this.action === 'Drag') {\n                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n            }\n            if (((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                && (evt.button === 2 || evt.buttons === 2))) {\n                var arg = {\n                    element: this.diagram, position: this.currentPosition, count: evt.buttons, actualObject: this.eventArgs.actualObject\n                };\n                this.inAction = false;\n                this.tool.mouseUp(this.eventArgs);\n            }\n            else if (((this.inAction === true) && this.isMouseDown === true &&\n                (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool))) {\n                this.isMouseDown = true;\n                this.eventArgs = {};\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n            }\n            else {\n                this.isMouseDown = true;\n                this.currentPosition = this.prevPosition = this.getMousePosition(evt);\n                this.eventArgs = {};\n                if (this.diagram.textEditing && !this.isMouseOnScrollBar(evt)) {\n                    this.diagram.endEdit();\n                    this.diagram.textEditing = false;\n                }\n                var target = void 0;\n                var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n                var obj = this.objectFinder.findObjectUnderMouse(this.diagram, objects, this.action, this.inAction, this.eventArgs, evt);\n                var sourceElement = null;\n                if (obj !== null) {\n                    sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                    if (sourceElement) {\n                        target = this.commandHandler.findTarget(sourceElement, obj);\n                    }\n                }\n                this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                //work around - correct it\n                var ctrlKey = this.isMetaKey(evt);\n                if (ctrlKey && evt.shiftKey && this.diagram.connectorEditingToolModule) {\n                    this.action = 'SegmentEnd';\n                }\n                else if ((ctrlKey || evt.shiftKey) && (!canZoomPan(this.diagram))) {\n                    this.action = 'Select';\n                }\n                this.tool = this.diagram.getTool(this.action);\n                if (!this.tool) {\n                    this.action = 'Select';\n                    this.tool = this.diagram.getTool(this.action);\n                }\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                if (ctrlKey || evt.shiftKey) {\n                    var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } : { ctrlKey: true };\n                    this.eventArgs.info = info;\n                }\n                this.eventArgs.position = this.currentPosition;\n                this.tool.mouseDown(this.eventArgs);\n                this.initialEventArgs = { source: this.eventArgs.source, sourceWrapper: this.eventArgs.sourceWrapper };\n                this.initialEventArgs.position = this.currentPosition;\n                this.initialEventArgs.info = this.eventArgs.info;\n                this.inAction = false;\n                if (evt.type === 'touchstart') {\n                    if (touches && touches.length >= 2) {\n                        this.touchStartList = addTouchPointer(this.touchStartList, evt, touches);\n                    }\n                    if (!touches) {\n                        evt.preventDefault();\n                    }\n                }\n            }\n        }\n        if (!this.isForeignObject(evt.target) && !this.isForeignObject(evt.target, true) && (!touches)) {\n            evt.preventDefault();\n        }\n    };\n    /**   @private  */\n    DiagramEventHandler.prototype.mouseMoveExtend = function (e, obj) {\n        if (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) {\n            this.tool.mouseMove(this.eventArgs);\n        }\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            this.checkAutoScroll(e);\n        }\n        else {\n            if (!this.blocked) {\n                (this.tool.mouseMove(this.eventArgs));\n            }\n        }\n        if (this.eventArgs.target) {\n            this.hoverElement = this.eventArgs.target;\n        }\n        var isNode = this.eventArgs.target instanceof Node && obj instanceof Node ? false : true;\n        if (this.tool instanceof ConnectTool) {\n            this.diagram.updatePortVisibility(this.hoverElement instanceof Node ? this.hoverElement : this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, isNode);\n        }\n        if (this.hoverElement instanceof Node\n            && this.hoverNode instanceof Node && this.hoverNode && this.hoverNode.id !== this.hoverElement.id) {\n            this.diagram.updatePortVisibility(this.hoverNode, PortVisibility.Connect | PortVisibility.Hover, true);\n        }\n        this.hoverElement = isNode ? null : obj;\n        this.hoverNode = isNode ? null : obj;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.checkAction = function (obj) {\n        if (this.action === 'LabelSelect' && this.eventArgs.sourceWrapper &&\n            (this.eventArgs.sourceWrapper instanceof TextElement || this.eventArgs.sourceWrapper instanceof DiagramHtmlElement)) {\n            var annotation = this.commandHandler.findTarget(this.eventArgs.sourceWrapper, this.eventArgs.source);\n            if (!isSelected(this.diagram, annotation, false, this.eventArgs.sourceWrapper) && canMove(annotation)) {\n                this.action = 'LabelDrag';\n                this.tool = this.getTool(this.action);\n                this.tool.mouseDown(this.initialEventArgs);\n            }\n        }\n        else if (canMove(obj) && canSelect(obj) && this.initialEventArgs &&\n            this.initialEventArgs.source && this.action === 'Select') {\n            if (!isSelected(this.diagram, this.eventArgs.source, false) &&\n                this.eventArgs.source instanceof Selector) {\n                this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n            }\n            if (!(obj instanceof Connector) || (obj instanceof Connector &&\n                !(contains(this.currentPosition, obj.sourcePoint, obj.hitPadding) ||\n                    contains(this.currentPosition, obj.targetPoint, obj.hitPadding)))) {\n                this.action = 'Drag';\n            }\n            this.tool = this.getTool(this.action);\n            this.tool.mouseDown(this.initialEventArgs);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseMove = function (e, touches) {\n        this.focus = true;\n        if (this.isScrolling) {\n            e.preventDefault();\n            return;\n        }\n        if (canUserInteract(this.diagram) || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            this.currentPosition = this.getMousePosition(e);\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            drawRulerMarkers(this.diagram, this.currentPosition);\n            var force = false;\n            var target = void 0;\n            if (e.type === 'touchmove') {\n                touches = e.touches;\n                if (touches && touches.length > 1) {\n                    this.touchMoveList = addTouchPointer(this.touchMoveList, e, touches);\n                    if (this.action !== 'PinchZoom') {\n                        force = true;\n                    }\n                }\n            }\n            if (Point.equals(this.currentPosition, this.prevPosition) === false || this.inAction) {\n                if (this.isMouseDown === false || force) {\n                    this.eventArgs = {};\n                    var sourceElement = null;\n                    if (obj !== null) {\n                        sourceElement = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                        if (obj !== this.hoverElement) {\n                            if (this.hoverElement) {\n                                this.elementLeave();\n                                this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, true);\n                            }\n                            if (obj instanceof Node) {\n                                this.hoverNode = obj;\n                            }\n                            this.hoverElement = obj;\n                            this.elementEnter(this.currentPosition, false);\n                        }\n                        else if (!this.hoverElement && this.hoverElement === obj) {\n                            this.elementEnter(this.currentPosition, true);\n                        }\n                        if (sourceElement) {\n                            target = this.commandHandler.findTarget(sourceElement, obj);\n                        }\n                    }\n                    this.action = this.diagram.findActionToBeDone(obj, sourceElement, this.currentPosition, target);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    this.tool = this.getTool(this.action);\n                    this.mouseEvents();\n                    if (this.tool instanceof ConnectorDrawingTool ||\n                        this.tool instanceof PolyLineDrawingTool ||\n                        this.tool instanceof PolygonDrawingTool) {\n                        this.tool.mouseMove(this.eventArgs);\n                    }\n                    else if (touches && this.tool instanceof ZoomPanTool) {\n                        this.tool.mouseDown(this.eventArgs);\n                    }\n                    this.updateCursor();\n                    this.renderUmlHighLighter(this.eventArgs);\n                    var isNode = false;\n                    if (!(this.hoverElement && (!(this.tool instanceof ZoomPanTool)) && obj instanceof Node &&\n                        (this.diagram.selectedItems.nodes.length === 0 || !isSelected(this.diagram, this.hoverElement)))) {\n                        isNode = true;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, PortVisibility.Hover, isNode);\n                    if (obj === null && this.hoverElement) {\n                        this.hoverElement = null;\n                        this.elementLeave();\n                    }\n                    force = false;\n                }\n                else {\n                    this.eventArgs.position = this.currentPosition;\n                    if (this.action === 'Drag' && !isSelected(this.diagram, this.eventArgs.source, false) &&\n                        this.eventArgs.source instanceof Selector) {\n                        this.getMouseEventArgs(this.currentPosition, this.eventArgs);\n                    }\n                    this.mouseEvents();\n                    if (e.ctrlKey || e.shiftKey) {\n                        var info = (e.ctrlKey && e.shiftKey) ? { ctrlKey: e.ctrlKey, shiftKey: e.shiftKey } : { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    this.checkAction(obj);\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    this.updateCursor();\n                    this.inAction = true;\n                    this.initialEventArgs = null;\n                    if (this.action === 'Drag' || this.action === 'Rotate') {\n                        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Interactions;\n                    }\n                    this.mouseMoveExtend(e, obj);\n                }\n                this.prevPosition = this.currentPosition;\n                if (!this.isForeignObject(e.target, true)) {\n                    e.preventDefault();\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.checkAutoScroll = function (e) {\n        var autoScrollPosition = this.startAutoScroll(e);\n        if (!autoScrollPosition && this.doingAutoScroll) {\n            this.doingAutoScroll = false;\n            clearInterval(this.timeOutValue);\n        }\n        else if (autoScrollPosition) {\n            if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n                || this.tool instanceof SelectTool) && this.inAction) {\n                var diagram_1 = this;\n                var delay_1 = 100;\n                if (this.diagram.scrollSettings.canAutoScroll && autoScrollPosition && !this.doingAutoScroll) {\n                    this.doingAutoScroll = true;\n                    this.timeOutValue = setInterval(function (args) {\n                        diagram_1.doAutoScroll(autoScrollPosition, e, delay_1);\n                    }, delay_1);\n                }\n            }\n        }\n        else {\n            this.blocked = !(this.tool.mouseMove(this.eventArgs));\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseUp = function (evt) {\n        var touches;\n        if (this.diagram.mode === 'SVG' && canVitualize(this.diagram)) {\n            this.updateVirtualization();\n        }\n        this.diagram.previousSelectedObject = null;\n        this.diagram.diagramRenderer.rendererActions =\n            this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n        touches = evt.touches;\n        if (this.isScrolling) {\n            this.isScrolling = false;\n            evt.preventDefault();\n            return;\n        }\n        if (!this.checkEditBoxAsTarget(evt) && (canUserInteract(this.diagram))\n            || (canZoomPan(this.diagram) && !defaultTool(this.diagram))) {\n            if (this.tool && (!(this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool) ||\n                ((this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)\n                    && evt.detail === 2))) {\n                if (!this.isForeignObject(evt.target) && this.isMouseDown) {\n                    document.getElementById(this.diagram.element.id + 'content').focus();\n                }\n                if (!this.inAction && evt.which !== 3) {\n                    if (this.action === 'Drag') {\n                        this.action = 'Select';\n                        var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                        var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                        var isMultipleSelect = true;\n                        if ((!evt.ctrlKey && this.isMouseDown\n                            && (this.diagram.selectedItems.nodes.length + this.diagram.selectedItems.connectors.length) > 1)\n                            && evt.which === 1 && !canPreventClearSelection(this.diagram.diagramActions)) {\n                            isMultipleSelect = false;\n                            this.commandHandler.clearSelection();\n                        }\n                        if (!isSelected(this.diagram, obj) || (!isMultipleSelect)) {\n                            this.commandHandler.selectObjects([obj]);\n                        }\n                    }\n                }\n                var history_1 = this.updateContainerProperties();\n                var isGroupAction = void 0;\n                this.addUmlNode();\n                this.inAction = false;\n                this.isMouseDown = false;\n                this.currentPosition = this.getMousePosition(evt);\n                if (this.diagram.selectedObject.helperObject) {\n                    isGroupAction = this.updateContainerBounds();\n                }\n                if (this.tool && (this.tool.prevPosition || this.tool instanceof LabelTool)) {\n                    this.eventArgs.position = this.currentPosition;\n                    this.getMouseEventArgs(this.currentPosition, this.eventArgs, this.eventArgs.source);\n                    var ctrlKey = this.isMetaKey(evt);\n                    if (ctrlKey || evt.shiftKey) {\n                        var info = (ctrlKey && evt.shiftKey) ? { ctrlKey: ctrlKey, shiftKey: evt.shiftKey } :\n                            { ctrlKey: true };\n                        this.eventArgs.info = info;\n                    }\n                    if (this.diagram.diagramActions & DiagramAction.Interactions) {\n                        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Interactions;\n                    }\n                    this.eventArgs.clickCount = evt.detail;\n                    if (this.diagram.selectedObject.helperObject && (this.tool instanceof MoveTool || this.tool instanceof ResizeTool)) {\n                        if (this.diagram.selectedObject.actualObject &&\n                            this.diagram.selectedObject.actualObject.parentId !== '') {\n                            var parentNode = this.diagram.getObject(this.diagram.selectedObject.actualObject.parentId);\n                            if (parentNode && parentNode.isLane) {\n                                this.commandHandler.isContainer = true;\n                            }\n                        }\n                        this.tool.mouseUp(this.eventArgs, history_1.isPreventHistory);\n                    }\n                    else {\n                        this.tool.mouseUp(this.eventArgs);\n                    }\n                    if (history_1.hasStack) {\n                        this.diagram.endGroupAction();\n                    }\n                }\n                if (isGroupAction) {\n                    this.diagram.endGroupAction();\n                }\n                this.updateContainerBounds(true);\n                if (this.diagram.selectedObject && this.diagram.selectedObject.helperObject) {\n                    this.diagram.remove(this.diagram.selectedObject.helperObject);\n                    this.diagram.selectedObject = { helperObject: undefined, actualObject: undefined };\n                }\n                this.blocked = false;\n                if (this.hoverElement) {\n                    var portVisibility = PortVisibility.Connect;\n                    if (isSelected(this.diagram, this.hoverElement)) {\n                        portVisibility |= PortVisibility.Hover;\n                    }\n                    this.diagram.updatePortVisibility(this.hoverElement, portVisibility, true);\n                    this.hoverElement = null;\n                }\n                this.touchStartList = null;\n                this.touchMoveList = null;\n                if (!(this.tool instanceof TextDrawingTool)) {\n                    this.tool = null;\n                }\n            }\n            if (!touches) {\n                evt.preventDefault();\n            }\n            this.diagram.currentDrawingObject = undefined;\n            var selector = this.diagram.selectedItems;\n            if (!this.inAction && selector.wrapper && selector.userHandles.length > 0) {\n                this.diagram.renderSelector(true);\n            }\n            if (!this.inAction && !this.diagram.currentSymbol && this.eventArgs) {\n                var arg = {\n                    element: this.eventArgs.source || this.diagram, position: this.eventArgs.position, count: evt.detail,\n                    actualObject: this.eventArgs.actualObject\n                };\n                this.diagram.triggerEvent(DiagramEvent.click, arg);\n            }\n            this.eventArgs = {};\n        }\n        this.eventArgs = {};\n        this.diagram.commandHandler.removeStackHighlighter(); // end the corresponding tool\n    };\n    DiagramEventHandler.prototype.addSwimLaneObject = function (selectedNode) {\n        var swimlaneNode;\n        var targetNode;\n        var shape;\n        var value;\n        var canInsert;\n        var index = 0;\n        var offset;\n        var actualShape = selectedNode.shape;\n        var objects = this.objectFinder.findObjectsUnderMouse(this.currentPosition, this.diagram, this.eventArgs, null, this.action);\n        if (!targetNode) {\n            targetNode = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        this.diagram.clearSelectorLayer();\n        if (targetNode && !(targetNode.isLane || targetNode.isPhase || targetNode.isHeader)) {\n            for (var i = 0; i < objects.length; i++) {\n                var laneNode = this.diagram.nameTable[objects[i].id];\n                if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                    targetNode = laneNode;\n                }\n            }\n        }\n        if (targetNode && (actualShape.isPhase || (actualShape.isLane && targetNode.isLane))) {\n            var id = targetNode.parentId;\n            swimlaneNode = this.diagram.nameTable[id];\n        }\n        if (swimlaneNode) {\n            shape = swimlaneNode.shape;\n            canInsert = (actualShape.isLane) ? actualShape.orientation === shape.orientation :\n                actualShape.orientation !== shape.orientation;\n        }\n        if (canInsert && targetNode) {\n            if (shape.header && shape.hasHeader && shape.orientation === 'Horizontal') {\n                index = 1;\n            }\n            if (shape.phases.length > 0) {\n                index += 1;\n            }\n            if (actualShape.isPhase) {\n                if (shape.orientation === 'Horizontal') {\n                    offset = this.currentPosition.x - swimlaneNode.wrapper.bounds.x;\n                }\n                else {\n                    offset = this.currentPosition.y - (swimlaneNode.wrapper.bounds.y + shape.header.height);\n                }\n                var phases = { id: randomId(), offset: offset, header: { annotation: { content: 'Phase' } } };\n                this.diagram.addPhases(swimlaneNode, [phases]);\n            }\n            else {\n                var laneHeight = actualShape.lanes[0].header.height;\n                var lane = {\n                    id: randomId(), style: actualShape.lanes[0].style, header: {\n                        annotation: {\n                            content: actualShape.lanes[0].header.annotation.content,\n                            style: actualShape.lanes[0].header.annotation.style\n                        },\n                        style: actualShape.lanes[0].header.style\n                    },\n                };\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                orientation_1 ? lane.height = actualShape.lanes[0].height : lane.width = actualShape.lanes[0].width;\n                if (shape.orientation === 'Horizontal') {\n                    value = targetNode.rowIndex ? targetNode.rowIndex :\n                        this.diagram.nameTable[targetNode.parentId].rowIndex;\n                    if (targetNode.wrapper.offsetY < this.currentPosition.y) {\n                        value += 1;\n                    }\n                }\n                else {\n                    value = targetNode.columnIndex ? targetNode.columnIndex :\n                        this.diagram.nameTable[targetNode.parentId].columnIndex;\n                    if (this.currentPosition.x < targetNode.wrapper.bounds.center.x) {\n                        value -= 1;\n                    }\n                }\n                if (shape.lanes.length > (value - index)) {\n                    lane.header.width = shape.lanes[value - index].header.width;\n                    lane.header.height = shape.lanes[value - index].header.height;\n                }\n                else {\n                    lane.header.width = shape.lanes[value - index - 1].header.width;\n                    lane.header.height = shape.lanes[value - index - 1].header.height;\n                }\n                this.diagram.addLanes(swimlaneNode, [lane], value - index);\n            }\n            this.commandHandler.select(swimlaneNode);\n        }\n        else if (actualShape.isLane) {\n            var swimLaneobj = {\n                id: randomId(), width: selectedNode.width, height: selectedNode.height,\n                shape: {\n                    type: 'SwimLane', header: {\n                        annotation: { content: 'Header' }, height: 50, style: actualShape.lanes[0].header.style\n                    },\n                    phases: [{ id: randomId(), header: { annotation: { content: 'Phase' } } }],\n                    lanes: [{\n                            id: randomId(), height: selectedNode.height, width: selectedNode.width, style: actualShape.lanes[0].style,\n                            header: {\n                                annotation: {\n                                    content: actualShape.lanes[0].header.annotation.content,\n                                    style: actualShape.lanes[0].header.annotation.style\n                                },\n                                style: actualShape.lanes[0].header.style\n                            },\n                        }], orientation: actualShape.orientation,\n                }\n            };\n            if (actualShape.orientation === 'Vertical') {\n                swimLaneobj.width += 20;\n            }\n            swimLaneobj.offsetX = this.currentPosition.x + (swimLaneobj.width / 2);\n            swimLaneobj.offsetY = this.currentPosition.y + (swimLaneobj.height / 2);\n            this.diagram.add(swimLaneobj);\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseLeave = function (evt) {\n        //Define what has to happen on mouse leave\n        if (this.tool && this.inAction) {\n            this.tool.mouseLeave(this.eventArgs);\n        }\n        if (this.diagram.selectedObject.helperObject) {\n            this.updateContainerProperties();\n            var isGroupAction = this.updateContainerBounds();\n            if (isGroupAction) {\n                this.diagram.endGroupAction();\n            }\n        }\n        if (this.eventArgs && this.eventArgs.source) {\n            this.diagram.updatePortVisibility(this.eventArgs.source, PortVisibility.Hover, true);\n            this.hoverElement = null;\n        }\n        if (this.tool instanceof ConnectTool && this.eventArgs && this.eventArgs.target && this.eventArgs.target instanceof Node) {\n            this.diagram.updatePortVisibility(this.eventArgs.target, PortVisibility.Hover | PortVisibility.Connect, true);\n            this.hoverElement = null;\n        }\n        var selector = this.diagram.selectedItems;\n        if (selector && selector.wrapper) {\n            this.diagram.renderSelector(true);\n        }\n        this.isMouseDown = false;\n        this.focus = false;\n        this.touchStartList = null;\n        this.touchMoveList = null;\n        this.commandHandler.removeSnap();\n        this.inAction = false;\n        this.eventArgs = {};\n        this.tool = null;\n        removeRulerMarkers();\n        if (this.action === 'Rotate') {\n            this.diagram.diagramCanvas.classList.remove('e-diagram-rotate');\n        }\n        evt.preventDefault();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.mouseWheel = function (evt) {\n        var up = (evt.wheelDelta > 0 || -40 * evt.detail > 0) ? true : false;\n        var mousePosition = this.getMousePosition(evt);\n        this.diagram.tooltipObject.close();\n        var ctrlKey = this.isMetaKey(evt);\n        if (ctrlKey) {\n            this.diagram.zoom(up ? (1.2) : 1 / (1.2), mousePosition);\n            evt.preventDefault();\n        }\n        else {\n            var horizontalOffset = this.diagram.scroller.horizontalOffset;\n            var verticalOffset = this.diagram.scroller.verticalOffset;\n            var change = up ? 20 : -20;\n            if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                this.eventArgs = {};\n                this.getMouseEventArgs(mousePosition, this.eventArgs);\n                this.eventArgs.position = mousePosition;\n                this.tool.mouseWheel(this.eventArgs);\n            }\n            if (evt.shiftKey) {\n                this.diagram.scroller.zoom(1, change, 0, mousePosition);\n            }\n            else {\n                this.diagram.scroller.zoom(1, 0, change, mousePosition);\n            }\n            if (horizontalOffset !== this.diagram.scroller.horizontalOffset\n                || verticalOffset !== this.diagram.scroller.verticalOffset) {\n                evt.preventDefault();\n            }\n        }\n        if (this.diagram.textEditing) {\n            this.diagram.isTriggerEvent = true;\n            if (this.diagram.activeLabel.parentId) {\n                var node = this.diagram.getObject(this.diagram.activeLabel.parentId);\n                this.diagram.startTextEdit(node, this.diagram.activeLabel.id);\n            }\n            this.diagram.isTriggerEvent = false;\n        }\n    };\n    /** @private */\n    DiagramEventHandler.prototype.keyDown = function (evt) {\n        if (!(this.diagram.diagramActions & DiagramAction.TextEdit) &&\n            !(this.checkEditBoxAsTarget(evt)) || (evt.key === 'Escape' || evt.keyCode === 27)) {\n            var i = void 0;\n            var command = void 0;\n            var keycode = evt.keyCode ? evt.keyCode : evt.which;\n            var key = evt.key;\n            var ctrlKey = this.isMetaKey(evt);\n            if (this.diagram.commandManager && this.diagram.commands) {\n                var commands = this.diagram.commands;\n                for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n                    var i_1 = _a[_i];\n                    command = this.diagram.commands[i_1];\n                    if (command && (command.gesture.keyModifiers || command.gesture.key)) {\n                        if ((keycode === command.gesture.key || (key === Keys[command.gesture.key])\n                            || this.isDeleteKey(key, i_1))\n                            && (((!command.gesture.keyModifiers) && (!evt.altKey) && (!evt.shiftKey) && (!ctrlKey)) ||\n                                (command.gesture.keyModifiers && (ctrlKey || evt.altKey || evt.shiftKey) &&\n                                    (this.altKeyPressed(command.gesture.keyModifiers) && evt.altKey) ||\n                                    (this.shiftKeyPressed(command.gesture.keyModifiers) && evt.shiftKey) ||\n                                    (this.ctrlKeyPressed(command.gesture.keyModifiers) && ctrlKey)))) {\n                            var canExecute = getFunction(command.canExecute);\n                            if (canExecute && canExecute({\n                                'keyDownEventArgs': KeyboardEvent,\n                                parameter: command.parameter\n                            })) {\n                                evt.preventDefault();\n                                if (evt.key === 'Escape') {\n                                    if (this.checkEditBoxAsTarget(evt)) {\n                                        document.getElementById(this.diagram.diagramCanvas.id).focus();\n                                    }\n                                    else if (this.diagram.currentSymbol) {\n                                        var selectedSymbols = 'selectedSymbols';\n                                        var source = 'sourceElement';\n                                        var intDestroy = 'intDestroy';\n                                        this.diagram.removeFromAQuad(this.diagram.currentSymbol);\n                                        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[this.diagram.currentSymbol.id]);\n                                        this.diagram.removeElements(this.diagram.currentSymbol);\n                                        removeChildNodes(this.diagram.currentSymbol, this.diagram);\n                                        delete this.diagram.nameTable[this.diagram.currentSymbol.id];\n                                        var sourceElement = this.diagram.droppable[source];\n                                        sourceElement.draggable[intDestroy]();\n                                        var element = this.diagram.droppable[selectedSymbols];\n                                        element.parentNode.removeChild(element);\n                                        var diagramActions = this.diagram.diagramActions;\n                                        this.diagram.diagramActions =\n                                            this.diagram.addConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.tool.mouseUp(this.eventArgs);\n                                        this.diagram.diagramRenderer.rendererActions = this.diagram.removeConstraints(this.diagram.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                                        if (this.diagram.previousSelectedObject) {\n                                            this.diagram.select(this.diagram.previousSelectedObject);\n                                        }\n                                        this.action = 'Select';\n                                        this.diagram.previousSelectedObject = null;\n                                        this.diagram.currentSymbol = null;\n                                        this.diagram.diagramActions =\n                                            this.diagram.removeConstraints(diagramActions, DiagramAction.PreventClearSelection);\n                                        this.isMouseDown = false;\n                                    }\n                                }\n                                if (command.execute) {\n                                    // if (i === 'nudgeUp' || i === 'nudgeRight' || i === 'nudgeDown' || i === 'nudgeLeft') {\n                                    //     command.execute()\n                                    // } else {\n                                    var execute = getFunction(command.execute);\n                                    execute({ 'keyDownEventArgs': KeyboardEvent, parameter: command.parameter });\n                                    // }\n                                }\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.startAutoScroll = function (e) {\n        var position = this.getMousePosition(e);\n        position.x *= this.diagram.scroller.currentZoom;\n        position.y *= this.diagram.scroller.currentZoom;\n        var rulerSize = getRulerSize(this.diagram);\n        var movingPosition;\n        var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n        if (this.diagram.scrollSettings.canAutoScroll) {\n            if (position.x + this.diagram.scroller.horizontalOffset + autoScrollBorder.right + rulerSize.width >=\n                this.diagram.scroller.viewPortWidth - 18) {\n                movingPosition = 'right';\n            }\n            else if (position.x + this.diagram.scroller.horizontalOffset < autoScrollBorder.left) {\n                movingPosition = 'left';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset + autoScrollBorder.bottom + rulerSize.height >\n                this.diagram.scroller.viewPortHeight - 18) {\n                movingPosition = 'bottom';\n            }\n            else if (position.y + this.diagram.scroller.verticalOffset < autoScrollBorder.top) {\n                movingPosition = 'top';\n            }\n        }\n        return movingPosition;\n    };\n    DiagramEventHandler.prototype.doAutoScroll = function (option, e, delay, autoScroll) {\n        var position = option;\n        if ((this.tool instanceof MoveTool || this.tool instanceof ResizeTool\n            || this.tool instanceof SelectTool) && this.inAction) {\n            var diagram = this;\n            var pos = this.getMousePosition(e);\n            var autoScrollBorder = this.diagram.scrollSettings.autoScrollBorder;\n            var newDelay = delay ? delay : 100;\n            var left = 0;\n            var top_1 = 0;\n            var point = { x: pos.x, y: pos.y };\n            switch (position) {\n                case 'right':\n                    point.x = pos.x + 10;\n                    left = 10;\n                    break;\n                case 'left':\n                    point.x = pos.x - 10;\n                    left = -10;\n                    break;\n                case 'bottom':\n                    point.y = pos.y + 10;\n                    top_1 = 10;\n                    break;\n                case 'top':\n                    point.y = pos.y - 10;\n                    top_1 = -10;\n                    break;\n            }\n            this.eventArgs.position = { x: point.x, y: point.y };\n            this.tool.mouseMove(this.eventArgs);\n            this.diagram.scroller.zoom(1, -left, -top_1, pos);\n        }\n    };\n    DiagramEventHandler.prototype.mouseEvents = function () {\n        var target = this.diagram.findObjectsUnderMouse(this.currentPosition);\n        for (var i = 0; i < target.length; i++) {\n            if (this.eventArgs.actualObject === target[i]) {\n                target.splice(i, 1);\n            }\n        }\n        var arg = {\n            targets: target,\n            element: (this.eventArgs.source === this.eventArgs.actualObject) ? undefined : this.eventArgs.source,\n            actualObject: this.eventArgs.actualObject\n        };\n        if (this.lastObjectUnderMouse && (!this.eventArgs.actualObject || (this.lastObjectUnderMouse !== this.eventArgs.actualObject))) {\n            var arg_1 = { targets: undefined, element: this.lastObjectUnderMouse, actualObject: undefined };\n            this.diagram.triggerEvent(DiagramEvent.mouseLeave, arg_1);\n            this.lastObjectUnderMouse = null;\n        }\n        if (!this.lastObjectUnderMouse && this.eventArgs.source || (this.lastObjectUnderMouse !== this.eventArgs.actualObject)) {\n            this.lastObjectUnderMouse = this.eventArgs.actualObject;\n            this.diagram.triggerEvent(DiagramEvent.mouseEnter, arg);\n        }\n        if (this.eventArgs.actualObject) {\n            this.diagram.triggerEvent(DiagramEvent.mouseOver, arg);\n        }\n    };\n    DiagramEventHandler.prototype.elementEnter = function (mousePosition, elementOver) {\n        if (!elementOver) {\n            var isPrivateTooltip = ((this.hoverElement instanceof Node) &&\n                this.hoverElement.constraints & NodeConstraints.Tooltip) ||\n                ((this.hoverElement instanceof Connector) && this.hoverElement.constraints & ConnectorConstraints.Tooltip);\n            updateTooltip(this.diagram, isPrivateTooltip ? this.hoverElement : undefined);\n            var offset = getTooltipOffset(this.diagram, mousePosition, this.hoverElement);\n            this.diagram.tooltipObject.close();\n            this.diagram.tooltipObject.offsetX = offset.x;\n            this.diagram.tooltipObject.offsetY = offset.y;\n            this.diagram.tooltipObject.dataBind();\n            if (canEnableToolTip(this.hoverElement, this.diagram)) {\n                this.diagram.tooltipObject.open(this.diagram.element);\n            }\n        }\n    };\n    DiagramEventHandler.prototype.elementLeave = function () {\n        this.diagram.tooltipObject.close();\n    };\n    DiagramEventHandler.prototype.altKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Alt) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.ctrlKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Control) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.shiftKeyPressed = function (keyModifier) {\n        if (keyModifier & KeyModifiers.Shift) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.scrolled = function (evt) {\n        this.diagram.updateScrollOffset();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.doubleClick = function (evt) {\n        if (canUserInteract(this.diagram)) {\n            var annotation = void 0;\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            if (obj !== null && canUserInteract(this.diagram)) {\n                var node = obj;\n                annotation = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n                if (this.tool && (this.tool instanceof PolygonDrawingTool || this.tool instanceof PolyLineDrawingTool)) {\n                    var arg_2 = {\n                        source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n                    };\n                    this.tool.mouseUp(this.eventArgs);\n                    this.isMouseDown = false;\n                    this.eventArgs = {};\n                    this.tool = null;\n                    evt.preventDefault();\n                }\n                else {\n                    var layer = this.diagram.commandHandler.getObjectLayer(obj.id);\n                    if (layer && !layer.lock && layer.visible) {\n                        if (!(this.diagram.diagramActions & DiagramAction.TextEdit)) {\n                            var id = '';\n                            if (obj.shape.shape === 'TextAnnotation') {\n                                id = obj.id.split('_textannotation_')[1];\n                            }\n                            this.diagram.startTextEdit(obj, id || (annotation instanceof TextElement ?\n                                (annotation.id).split(obj.id + '_')[1] : undefined));\n                        }\n                    }\n                }\n            }\n            var arg = {\n                source: obj || this.diagram, position: this.currentPosition, count: evt.detail\n            };\n            this.diagram.triggerEvent(DiagramEvent.doubleClick, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.itemClick = function (actualTarget, diagram) {\n        var obj = actualTarget;\n        if (checkParentAsContainer(this.diagram, obj, true)) {\n            return obj;\n        }\n        return null;\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.inputChange = function (evt) {\n        var minWidth = 90;\n        var maxWidth;\n        var minHeight = 12;\n        var fontsize;\n        var textWrapper;\n        var node;\n        var height;\n        var width;\n        var textBounds;\n        var textBoxWidth;\n        var transforms;\n        var scale;\n        var editTextBox = document.getElementById(this.diagram.element.id + '_editBox');\n        var editTextBoxDiv = document.getElementById(this.diagram.element.id + '_editTextBoxDiv');\n        var text = (editTextBox.value);\n        var line = text.split('\\n');\n        node = (this.diagram.selectedItems.nodes[0]) ? this.diagram.selectedItems.nodes[0] : this.diagram.selectedItems.connectors[0];\n        if ((!node && this.tool instanceof TextDrawingTool) || node.shape.type === 'SwimLane') {\n            node = this.diagram.nameTable[this.diagram.activeLabel.parentId];\n        }\n        if (node && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n            textWrapper = this.diagram.getWrapper(node.wrapper, this.diagram.activeLabel.id);\n            maxWidth = node.wrapper.bounds.width < textWrapper.bounds.width ? node.wrapper.bounds.width : textWrapper.bounds.width;\n            maxWidth = maxWidth > minWidth ? maxWidth : minWidth;\n            textBounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n            fontsize = Number((editTextBox.style.fontSize).split('px')[0]);\n            if (line.length > 1 && line[line.length - 1] === '') {\n                textBounds.height = textBounds.height + fontsize;\n            }\n            transforms = this.diagram.scroller.transform;\n            scale = canZoomTextEdit(this.diagram) ? transforms.scale : 1;\n            width = textBounds.width;\n            width = ((minWidth > width) ? minWidth : width) * scale;\n            height = ((minHeight > textBounds.height) ? minHeight : textBounds.height) * scale;\n            editTextBoxDiv.style.left = ((((textWrapper.bounds.center.x + transforms.tx) * transforms.scale) - width / 2) - 2.5) + 'px';\n            editTextBoxDiv.style.top = ((((textWrapper.bounds.center.y + transforms.ty) * transforms.scale) - height / 2) - 3) + 'px';\n            editTextBoxDiv.style.width = width + 'px';\n            editTextBoxDiv.style.height = height + 'px';\n            editTextBox.style.minHeight = minHeight + 'px';\n            editTextBox.style.minWidth = minWidth + 'px';\n            editTextBox.style.width = width + 'px';\n            editTextBox.style.height = height + 'px';\n        }\n    };\n    /**\n     * @private\n     */\n    DiagramEventHandler.prototype.isAddTextNode = function (node, focusOut) {\n        if (this.tool instanceof TextDrawingTool || focusOut) {\n            this.tool = null;\n            if (node && (!(canContinuousDraw(this.diagram)))) {\n                this.diagram.drawingObject = undefined;\n                this.diagram.currentDrawingObject = undefined;\n            }\n            if (getObjectFromCollection(this.diagram.nodes, node.id) ||\n                getObjectFromCollection(this.diagram.connectors, node.id) ||\n                (this.diagram.bpmnModule && this.diagram.bpmnModule.textAnnotationConnectors.indexOf(node) > -1)) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.checkEditBoxAsTarget = function (evt) {\n        if ((evt.target && evt.target.id === this.diagram.element.id + '_editBox')) {\n            return true;\n        }\n        return false;\n    };\n    DiagramEventHandler.prototype.getMouseEventArgs = function (position, args, source) {\n        args.position = position;\n        var obj;\n        var objects;\n        if (!source) {\n            if (this.action === 'Drag' || this.action === 'ConnectorSourceEnd' || this.action === 'SegmentEnd' ||\n                this.action === 'OrthoThumb' || this.action === 'BezierSourceThumb' || this.action === 'BezierTargetThumb' ||\n                this.action === 'ConnectorTargetEnd' || this.action.indexOf('Rotate') !== -1 || this.action.indexOf('Resize') !== -1) {\n                obj = this.diagram.selectedItems;\n                if (!this.diagram.currentSymbol && this.action === 'Drag' && obj && this.diagram.selectedItems.nodes.length > 0 &&\n                    this.diagram.selectedItems.nodes[0].shape.type === 'SwimLane') {\n                    objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                    obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n                }\n            }\n            else {\n                objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n                obj = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            }\n        }\n        else {\n            objects = this.diagram.findObjectsUnderMouse(this.currentPosition, source);\n            obj = this.diagram.findTargetObjectUnderMouse(objects, this.action, this.inAction, args.position, source);\n        }\n        if (obj && obj.isHeader) {\n            obj = this.diagram.nameTable[obj.parentId];\n            this.eventArgs.actualObject = obj;\n        }\n        var wrapper;\n        if (obj) {\n            wrapper = this.diagram.findElementUnderMouse(obj, this.currentPosition);\n        }\n        if (!source) {\n            args.source = obj;\n            args.sourceWrapper = wrapper;\n        }\n        else {\n            args.target = obj;\n            args.targetWrapper = wrapper;\n        }\n        args.actualObject = this.eventArgs.actualObject;\n        args.startTouches = this.touchStartList;\n        args.moveTouches = this.touchMoveList;\n        return args;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.resetTool = function () {\n        this.action = 'Select';\n        this.hoverElement = null;\n        this.hoverNode = null;\n        this.tool = this.diagram.getTool(this.action);\n        this.updateCursor();\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getTool = function (action) {\n        switch (action) {\n            case 'Select':\n                return new SelectTool(this.commandHandler, true);\n            case 'Drag':\n                return new MoveTool(this.commandHandler);\n            case 'Rotate':\n                return new RotateTool(this.commandHandler);\n            case 'LayoutAnimation':\n                return new ExpandTool(this.commandHandler);\n            case 'Hyperlink':\n                return new LabelTool(this.commandHandler);\n            case 'ResizeSouthEast':\n            case 'ResizeSouthWest':\n            case 'ResizeNorthEast':\n            case 'ResizeNorthWest':\n            case 'ResizeSouth':\n            case 'ResizeNorth':\n            case 'ResizeWest':\n            case 'ResizeEast':\n                return new ResizeTool(this.commandHandler, action);\n            case 'ConnectorSourceEnd':\n            case 'ConnectorTargetEnd':\n            case 'BezierSourceThumb':\n            case 'BezierTargetThumb':\n                return new ConnectTool(this.commandHandler, action);\n            case 'SegmentEnd':\n            case 'OrthoThumb':\n                return new ConnectorEditing(this.commandHandler, action);\n            case 'Draw':\n                var shape = 'shape';\n                var type = findObjectType(this.diagram.drawingObject);\n                if (type === 'Node' && this.diagram.drawingObject.shape.type === 'Text') {\n                    return new TextDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                    !(this.diagram.drawingObject.shape.points)) {\n                    return new PolygonDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Node' ||\n                    (type === 'Node' && this.diagram.drawingObject.shape[shape] === 'Polygon' &&\n                        (this.diagram.drawingObject.shape.points))) {\n                    return new NodeDrawingTool(this.commandHandler, this.diagram.drawingObject);\n                }\n                else if (type === 'Connector' && this.diagram.drawingObject.type === 'Polyline') {\n                    return new PolyLineDrawingTool(this.commandHandler);\n                }\n                else if (type === 'Connector') {\n                    return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n                }\n                break;\n            case 'Pan':\n                return new ZoomPanTool(this.commandHandler, false);\n            case 'PinchZoom':\n                return new ZoomPanTool(this.commandHandler, true);\n            case 'PortDrag':\n                return new MoveTool(this.commandHandler, 'Port');\n            case 'PortDraw':\n                return new ConnectorDrawingTool(this.commandHandler, 'ConnectorSourceEnd', this.diagram.drawingObject);\n            case 'LabelSelect':\n                return new SelectTool(this.commandHandler, true, 'LabelSelect');\n            case 'LabelDrag':\n                return new LabelDragTool(this.commandHandler);\n            case 'LabelResizeSouthEast':\n            case 'LabelResizeSouthWest':\n            case 'LabelResizeNorthEast':\n            case 'LabelResizeNorthWest':\n            case 'LabelResizeSouth':\n            case 'LabelResizeNorth':\n            case 'LabelResizeWest':\n            case 'LabelResizeEast':\n                return new LabelResizeTool(this.commandHandler, action);\n            case 'LabelRotate':\n                return new LabelRotateTool(this.commandHandler);\n            //for coverage\n            // case 'Custom':\n            //     return this.diagram.getTool(action);\n        }\n        return null;\n    };\n    /** @private */\n    DiagramEventHandler.prototype.getCursor = function (action) {\n        var object = (this.diagram.selectedItems.annotation) ?\n            this.diagram.selectedItems.wrapper.children[0] : this.diagram.selectedItems;\n        var rotateAngle = (this.diagram.selectedItems.annotation) ?\n            (object.rotateAngle + object.parentTransform) : object.rotateAngle;\n        return getCursor(action, rotateAngle);\n    };\n    //start region - interface betweend diagram and interaction\n    /** @private */\n    DiagramEventHandler.prototype.findElementUnderMouse = function (obj, position) {\n        return this.objectFinder.findElementUnderSelectedItem(obj, position);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.objectFinder.findObjectsUnderMouse(position, this.diagram, this.eventArgs, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, this.currentPosition);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findTargetUnderMouse = function (objects, action, inAction, position, source) {\n        return this.objectFinder.findObjectUnderMouse(this.diagram, objects, action, inAction, this.eventArgs, position, source);\n    };\n    /** @private */\n    DiagramEventHandler.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return findToolToActivate(obj, wrapper, this.currentPosition, this.diagram, this.touchStartList, this.touchMoveList, target);\n    };\n    DiagramEventHandler.prototype.updateContainerBounds = function (isAfterMouseUp) {\n        var isGroupAction = false;\n        if (this.diagram.selectedObject.helperObject) {\n            var boundsUpdate = (this.tool instanceof ResizeTool) ? true : false;\n            var obj = this.diagram.selectedObject.actualObject;\n            var parentNode = this.diagram.nameTable[obj.parentId];\n            if (isAfterMouseUp) {\n                removeChildInContainer(this.diagram, obj, this.currentPosition, boundsUpdate);\n            }\n            else {\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    this.diagram.updateDiagramObject(obj);\n                }\n                isGroupAction = updateCanvasBounds(this.diagram, obj, this.currentPosition, boundsUpdate);\n                this.diagram.updateSelector();\n                if (obj.isLane || obj.isPhase) {\n                    this.diagram.clearSelection();\n                    this.commandHandler.select(obj);\n                }\n            }\n        }\n        return isGroupAction;\n    };\n    DiagramEventHandler.prototype.updateContainerProperties = function () {\n        var helperObject;\n        var isChangeProperties = false;\n        var hasStack;\n        var connectors;\n        var hasGroup = false;\n        var obj;\n        var history = { hasStack: false, isPreventHistory: false };\n        if (this.diagram.selectedObject.helperObject) {\n            var objects = this.diagram.findObjectsUnderMouse(this.currentPosition);\n            var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n            helperObject = this.diagram.selectedObject.helperObject;\n            obj = this.diagram.selectedObject.actualObject;\n            if (obj.shape.type === 'SwimLane') {\n                connectors = getConnectors(this.diagram, obj.wrapper.children[0], 0, true);\n            }\n            if (obj.shape.type !== 'SwimLane' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane') {\n                if (target instanceof Node && this.diagram.getObject(target.parentId) &&\n                    this.diagram.getObject(target.parentId).shape.type !== 'SwimLane') {\n                    target = this.diagram.getObject(target.parentId);\n                }\n            }\n            if (this.currentAction === 'Drag' && obj.container && obj.container.type === 'Canvas' && obj.parentId &&\n                this.diagram.getObject(obj.parentId).shape.type === 'SwimLane' && target && target !== obj &&\n                target.container && target.container.type === 'Canvas' && target.isLane &&\n                obj.isLane && target.parentId === obj.parentId) {\n                laneInterChanged(this.diagram, obj, target, this.currentPosition);\n                history.isPreventHistory = true;\n            }\n            else {\n                var parentNode = this.diagram.nameTable[obj.parentId];\n                if (!parentNode || (parentNode && parentNode.shape.type !== 'SwimLane')) {\n                    obj.offsetX = helperObject.offsetX;\n                    obj.offsetY = helperObject.offsetY;\n                    if (obj && obj.shape && obj.shape.type !== 'UmlClassifier') {\n                        obj.width = helperObject.width;\n                        obj.height = helperObject.height;\n                    }\n                    obj.rotateAngle = helperObject.rotateAngle;\n                }\n                var undoElement = void 0;\n                if (parentNode && parentNode.container && parentNode.container.type === 'Stack') {\n                    this.diagram.startGroupAction();\n                    hasGroup = true;\n                }\n                if (!target && parentNode && parentNode.container && parentNode.container.type === 'Stack' && this.action === 'Drag') {\n                    var index = parentNode.wrapper.children.indexOf(obj.wrapper);\n                    undoElement = { targetIndex: undefined, target: undefined, sourceIndex: index, source: clone(obj) };\n                    if (index > -1) {\n                        var children = parentNode.children;\n                        children.splice(children.indexOf(obj.id), 1);\n                        this.diagram.nameTable[obj.id].parentId = '';\n                        hasStack = true;\n                        parentNode.wrapper.children.splice(index, 1);\n                    }\n                }\n                moveChildInStack(obj, target, this.diagram, this.action);\n                parentNode = checkParentAsContainer(this.diagram, obj) ? this.diagram.nameTable[obj.parentId] :\n                    (this.diagram.nameTable[obj.parentId] || obj);\n                if (parentNode && parentNode.container && parentNode.container.type === 'Canvas') {\n                    parentNode.wrapper.maxWidth = parentNode.maxWidth = parentNode.wrapper.actualSize.width;\n                    parentNode.wrapper.maxHeight = parentNode.maxHeight = parentNode.wrapper.actualSize.height;\n                    isChangeProperties = true;\n                }\n                if (checkParentAsContainer(this.diagram, obj, true) && parentNode && parentNode.container.type === 'Canvas') {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    history = this.updateContainerPropertiesExtend(parentNode, obj, connectors, helperObject, history);\n                }\n                if (obj.shape.lanes) {\n                    this.updateLaneChildNode(obj);\n                }\n                if (isChangeProperties) {\n                    parentNode.maxWidth = parentNode.wrapper.maxWidth = undefined;\n                    parentNode.maxHeight = parentNode.wrapper.maxHeight = undefined;\n                }\n                if (hasStack) {\n                    this.diagram.nodePropertyChange(parentNode, {}, {\n                        offsetX: parentNode.offsetX, offsetY: parentNode.offsetY, width: parentNode.width, height: parentNode.height,\n                        rotateAngle: parentNode.rotateAngle\n                    });\n                    var entry = {\n                        type: 'StackChildPositionChanged', redoObject: { sourceIndex: undefined, source: undoElement.source },\n                        undoObject: undoElement, category: 'Internal'\n                    };\n                    if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                        this.diagram.addHistoryEntry(entry);\n                    }\n                }\n                if (obj && obj.container && (obj.container.type === 'Stack' ||\n                    (obj.container.type === 'Canvas' && obj.parentId === ''))) {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                    });\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = false;\n                    }\n                }\n            }\n            updateConnectorsProperties(connectors, this.diagram);\n            history.hasStack = hasGroup;\n        }\n        return history;\n    };\n    DiagramEventHandler.prototype.updateLaneChildNode = function (obj) {\n        for (var i = 0; i < (obj.shape.lanes.length); i++) {\n            if (obj.shape.lanes[i].children && obj.shape.lanes[i].children.length > 0) {\n                for (var j = 0; j < obj.shape.lanes[i].children.length; j++) {\n                    var id = obj.shape.lanes[i].children[j].id;\n                    var childNode = this.diagram.nameTable[id];\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n            }\n        }\n    };\n    DiagramEventHandler.prototype.updateContainerPropertiesExtend = function (parentNode, obj, connectors, helperObject, history) {\n        if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth' || obj.shape.type === 'SwimLane') {\n            var undoObj = cloneObject(obj);\n            var isUpdateRow = false;\n            if (parentNode && parentNode.container && parentNode.container.type === 'Grid') {\n                var shape = parentNode.shape.type === 'SwimLane' ? true : false;\n                var container = (shape ? parentNode.wrapper.children[0] : parentNode.wrapper);\n                var padding = shape ? parentNode.shape.padding : undefined;\n                var x = parentNode.wrapper.bounds.x;\n                var y = parentNode.wrapper.bounds.y;\n                if (obj.columnIndex !== undefined && (parentNode.container.orientation === 'Horizontal' &&\n                    ((shape && obj.isPhase) || (!shape && obj.rowIndex === 1))) ||\n                    (parentNode.container.orientation === 'Vertical' &&\n                        ((!shape && obj.rowIndex > 0 && obj.columnIndex > 0) || (shape && obj.isLane)))) {\n                    if (parentNode.container.orientation === 'Horizontal' && obj.isPhase && obj.wrapper.width > obj.maxWidth) {\n                        obj.maxWidth = obj.wrapper.width;\n                        obj.wrapper.maxWidth = obj.wrapper.width;\n                    }\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateColumnWidth(obj.columnIndex, helperObject.width, true, padding);\n                    if (obj.isPhase) {\n                        var id = parentNode.shape.phases[obj.columnIndex].header.id;\n                        var node = this.diagram.nameTable[id];\n                        if (node.maxWidth < helperObject.width) {\n                            node.maxWidth = helperObject.width;\n                            node.wrapper.maxWidth = helperObject.width;\n                        }\n                    }\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.width = (parentNode.width) ? container.width : parentNode.width;\n                        updateHeaderMaxWidth(this.diagram, parentNode);\n                        parentNode.wrapper.width = parentNode.width;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, false);\n                    }\n                }\n                else if (obj.rowIndex !== undefined) {\n                    isUpdateRow = true;\n                    updateSwimLaneObject(this.diagram, obj, parentNode, helperObject);\n                    container.updateRowHeight(obj.rowIndex, helperObject.height, true, padding);\n                    if (parentNode.shape.type === 'SwimLane') {\n                        parentNode.height = (parentNode.height) ? container.height : parentNode.height;\n                        parentNode.wrapper.height = parentNode.height;\n                        connectors = getConnectors(this.diagram, container, obj.rowIndex, true);\n                    }\n                }\n                if (parentNode.shape.type === 'SwimLane') {\n                    history.isPreventHistory = true;\n                }\n                this.diagram.nodePropertyChange(parentNode, {}, {\n                    offsetX: parentNode.offsetX, offsetY: parentNode.offsetY,\n                    rotateAngle: parentNode.rotateAngle\n                });\n                this.diagram.drag(parentNode, x - parentNode.wrapper.bounds.x, y - parentNode.wrapper.bounds.y);\n            }\n            else {\n                if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                    obj.wrapper.measureChildren = true;\n                }\n                this.diagram.nodePropertyChange(obj, {}, {\n                    offsetX: obj.offsetX, offsetY: obj.offsetY, width: obj.width, height: obj.height, rotateAngle: obj.rotateAngle\n                });\n                obj.wrapper.measureChildren = false;\n            }\n            obj.wrapper.measure(new Size(obj.wrapper.width, obj.wrapper.height));\n            obj.wrapper.arrange(obj.wrapper.desiredSize);\n            if (this.currentAction === 'ResizeEast' || this.currentAction === 'ResizeSouth') {\n                var redoObject = cloneObject(obj);\n                var entry = {\n                    category: 'Internal',\n                    type: (isUpdateRow) ? 'RowHeightChanged' : 'ColumnWidthChanged',\n                    undoObject: undoObj, redoObject: redoObject\n                };\n                this.diagram.addHistoryEntry(entry);\n            }\n        }\n        updateConnectorsProperties(connectors, this.diagram);\n        return history;\n    };\n    DiagramEventHandler.prototype.addUmlNode = function () {\n        var node = this.diagram.selectedItems.nodes[0];\n        var objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x + 20, y: this.currentPosition.y });\n        var target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        if (!target) {\n            objects = this.diagram.findObjectsUnderMouse({ x: this.currentPosition.x - 20, y: this.currentPosition.y });\n            target = this.diagram.findObjectUnderMouse(objects, this.action, this.inAction);\n        }\n        if (node && node.container && node.container.type === 'Stack' && target && target.parentId\n            && target.parentId === node.id) {\n            var innerNode = target;\n            var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n            var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n            if (highlighter) {\n                var index = node.wrapper.children.indexOf(target.wrapper) + 1;\n                var temp = new Node(this.diagram, 'nodes', {\n                    style: { fill: node.style.fill, strokeColor: '#ffffff00' },\n                    annotations: target.annotations, verticalAlignment: 'Stretch', horizontalAlignment: 'Stretch',\n                    constraints: (NodeConstraints.Default | NodeConstraints.HideThumbs) & ~(NodeConstraints.Rotate | NodeConstraints.Drag | NodeConstraints.Resize),\n                    minHeight: 25\n                }, true);\n                temp.annotations[0].content = ' + Name : Type';\n                var id = innerNode.id.split('_');\n                temp.id = randomId() + temp.id;\n                temp.parentId = node.id;\n                temp.zIndex = -1;\n                temp.umlIndex = index;\n                this.diagram.startGroupAction();\n                var redoElement = {\n                    sourceIndex: node.wrapper.children.indexOf(temp.wrapper), source: temp,\n                    target: undefined, targetIndex: undefined\n                };\n                this.diagram.add(temp);\n                this.diagram.updateConnectorEdges(node);\n                this.diagram.select([this.diagram.nameTable[temp.id]]);\n                this.diagram.endGroupAction();\n                this.diagram.startTextEdit();\n            }\n        }\n    };\n    return DiagramEventHandler;\n}());\nexport { DiagramEventHandler };\n/** @private */\nvar ObjectFinder = /** @class */ (function () {\n    function ObjectFinder() {\n    }\n    /** @private */\n    ObjectFinder.prototype.findObjectsUnderMouse = function (pt, diagram, eventArgs, source, actions) {\n        // finds the collection of the object that is under the mouse;\n        var actualTarget = [];\n        if (source && source instanceof Selector) {\n            if (source.nodes.length + source.connectors.length === 1) {\n                source = (source.nodes[0] || source.connectors[0]);\n                if (source.children && source.children.length === 0) {\n                    eventArgs.actualObject = source;\n                }\n            }\n        }\n        var container;\n        var bounds;\n        var child;\n        var matrix;\n        var objArray = diagram.spatialSearch.findObjects(new Rect(pt.x - 50, pt.y - 50, 100, 100));\n        var layerObjTable = {};\n        var layerTarger;\n        for (var _i = 0, objArray_1 = objArray; _i < objArray_1.length; _i++) {\n            var obj = objArray_1[_i];\n            var point = pt;\n            bounds = obj.wrapper.outerBounds;\n            var pointInBounds = (obj.rotateAngle) ? false : bounds.containsPoint(point);\n            if ((obj !== source || diagram.currentDrawingObject instanceof Connector) &&\n                (obj instanceof Connector) ? obj !== diagram.currentDrawingObject : true && obj.wrapper.visible) {\n                var layer = diagram.commandHandler.getObjectLayer(obj.id);\n                if (layer && !layer.lock && layer.visible) {\n                    layerTarger = layerObjTable[layer.zIndex] = layerObjTable[layer.zIndex] || [];\n                    if (obj.rotateAngle) {\n                        container = obj.wrapper;\n                        bounds = cornersPointsBeforeRotation(container);\n                        for (var _a = 0, _b = container.children; _a < _b.length; _a++) {\n                            child = _b[_a];\n                            matrix = identityMatrix();\n                            rotateMatrix(matrix, -(child.rotateAngle + child.parentTransform), child.offsetX, child.offsetY);\n                            point = transformPointByMatrix(matrix, pt);\n                            if (cornersPointsBeforeRotation(child).containsPoint(point)) {\n                                pointInBounds = true;\n                            }\n                        }\n                    }\n                    if (!source || (isSelected(diagram, obj) === false)) {\n                        if (canEnablePointerEvents(obj, diagram)) {\n                            if ((obj instanceof Connector) ? isPointOverConnector(obj, pt) : pointInBounds) {\n                                var padding = (obj instanceof Connector) ? obj.hitPadding || 0 : 0;\n                                var element = void 0;\n                                element = this.findElementUnderMouse(obj, pt, padding);\n                                if (element && obj.id !== 'helper') {\n                                    insertObject(obj, 'zIndex', layerTarger);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (var _c = 0, _d = diagram.layers; _c < _d.length; _c++) {\n            var layer = _d[_c];\n            actualTarget = actualTarget.concat(layerObjTable[layer.zIndex] || []);\n            for (var _e = 0, actualTarget_1 = actualTarget; _e < actualTarget_1.length; _e++) {\n                var obj = actualTarget_1[_e];\n                var eventHandler = 'eventHandler';\n                if (obj.shape.type === 'Bpmn' && obj.processId && (!(diagram[eventHandler].tool instanceof MoveTool) ||\n                    (diagram[eventHandler].tool instanceof MoveTool) && canAllowDrop(obj))) {\n                    var index = actualTarget.indexOf(diagram.nameTable[obj.processId]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n                if (obj.shape.type === 'UmlClassifier' && obj.container && obj.container.type === 'Stack') {\n                    var index = actualTarget.indexOf(diagram.nameTable[diagram.nameTable[obj.id].wrapper.children[0].id]);\n                    if (index > -1) {\n                        actualTarget.splice(index, 1);\n                    }\n                }\n            }\n        }\n        for (var i = 0; i < actualTarget.length; i++) {\n            var parentObj = diagram.nameTable[actualTarget[i].parentId];\n            if (parentObj) {\n                var portElement = this.findElementUnderMouse(parentObj, pt);\n                for (var j = 0; j < parentObj.ports.length; j++) {\n                    if (portElement.id.match('_' + parentObj.ports[j].id + '$')) {\n                        var port = parentObj.ports[j];\n                        if (canDrag(port, diagram) || canDraw(port, diagram)) {\n                            return actualTarget;\n                        }\n                    }\n                }\n            }\n            while (parentObj) {\n                var index = actualTarget.indexOf(parentObj);\n                if (index !== -1) {\n                    actualTarget.splice(index, 1);\n                }\n                else {\n                    break;\n                }\n                parentObj = diagram.nameTable[parentObj.parentId];\n            }\n        }\n        if (eventArgs && !eventArgs.source) {\n            for (var i = 0; i < actualTarget.length; i++) {\n                var parentNode = diagram.nameTable[actualTarget[i].parentId];\n                if (parentNode && parentNode.shape.type === 'SwimLane') {\n                    for (var j = 0; j < actualTarget.length; j++) {\n                        var connector = actualTarget[j];\n                        if (connector instanceof Connector) {\n                            actualTarget.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /** @private */\n    ObjectFinder.prototype.isTarget = function (actualTarget, diagram, action) {\n        var connector = diagram.selectedItems.connectors[0];\n        var node;\n        node = action === 'ConnectorSourceEnd' ? diagram.nameTable[connector.targetID] :\n            node = diagram.nameTable[connector.sourceID];\n        if (node && (!node.processId && !actualTarget.processId || node.processId !== actualTarget.processId)) {\n            if (node.processId !== actualTarget.processId) {\n                actualTarget = null;\n            }\n            if (actualTarget && actualTarget.parentId &&\n                diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                actualTarget = diagram.nameTable[actualTarget.parentId];\n            }\n        }\n        if (action === 'ConnectorSourceEnd' && connector.targetID) {\n            var targetNode = diagram.nameTable[connector.targetID];\n            if (targetNode && targetNode.shape && (targetNode.shape.shape === 'TextAnnotation')) {\n                var id = connector.id.split('_');\n                if (((targetNode.shape.type === 'Bpmn') && actualTarget.shape.type !== 'Bpmn') || (id[0] === actualTarget.id) ||\n                    actualTarget.shape.shape === 'TextAnnotation') {\n                    actualTarget = null;\n                }\n                if (actualTarget.parentId &&\n                    diagram.nameTable[actualTarget.parentId].shape.type === 'UmlClassifier') {\n                    actualTarget = diagram.nameTable[actualTarget.parentId];\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:disable */\n    /** @private */\n    ObjectFinder.prototype.findObjectUnderMouse = function (diagram, objects, action, inAction, eventArg, position, source) {\n        //we will get the wrapper object here\n        //we have to choose the object to be interacted with from the given wrapper\n        //Find the object that is under mouse\n        var eventHandler = 'eventHandler';\n        var inPort;\n        var outPort;\n        var actualTarget = null;\n        if (objects.length !== 0) {\n            if (source && source instanceof Selector) {\n                if (source.nodes.length + source.connectors.length === 1) {\n                    source = (source.nodes[0] || source.connectors[0]);\n                }\n            }\n            if ((action === 'ConnectorSourceEnd' && source || action === 'PortDraw') ||\n                ((canDrawOnce(diagram) || canContinuousDraw(diagram)) && getObjectType(diagram.drawingObject) === Connector)) {\n                var connector = diagram.selectedItems.connectors[0];\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    outPort = getInOutConnectPorts(objects[i], false);\n                    if (objects[i] instanceof Node && (canOutConnect(objects[i]) || (canPortOutConnect(outPort)))) {\n                        actualTarget = objects[i];\n                        if (connector) {\n                            actualTarget = this.isTarget(actualTarget, diagram, action);\n                        }\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (action === 'ConnectorTargetEnd' && source) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    inPort = getInOutConnectPorts(objects[i], true);\n                    if (objects[i] instanceof Node && (canInConnect(objects[i]) || (canPortInConnect(inPort)))) {\n                        actualTarget = objects[i];\n                        actualTarget = this.isTarget(actualTarget, diagram, action);\n                        eventArg.actualObject = actualTarget;\n                        return actualTarget;\n                    }\n                }\n            }\n            else if (source && (action === 'Drag' || (diagram[eventHandler].tool instanceof MoveTool))) {\n                var index = 0;\n                for (var i = 0; i < objects.length; i++) {\n                    var temp = objects[i];\n                    if (source !== temp && (temp instanceof Connector ||\n                        !position || temp.wrapper.bounds.containsPoint(position))) {\n                        if (canAllowDrop(temp)) {\n                            if (!actualTarget) {\n                                actualTarget = temp;\n                                index = actualTarget.zIndex;\n                            }\n                            else {\n                                actualTarget = index >= temp.zIndex ? actualTarget : temp;\n                                index = Math.max(index, temp.zIndex);\n                            }\n                        }\n                    }\n                }\n                if (actualTarget && actualTarget.shape.type === 'Bpmn') {\n                    if (diagram.selectedItems.nodes.length > 0 && diagram.selectedItems.nodes[0].shape.type === 'Bpmn') {\n                        actualTarget = actualTarget;\n                    }\n                    else {\n                        actualTarget = null;\n                    }\n                }\n                if (actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n                return actualTarget;\n            }\n            else if (action === 'Select' && diagram[eventHandler].tool) {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Connector) {\n                        if (objects[i - 1] instanceof Node && objects[i - 1].ports) {\n                            var portElement = this.findTargetElement(objects[i - 1].wrapper, position, undefined);\n                            if ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$')))) {\n                                return objects[i - 1];\n                            }\n                            for (var j = 0; j < objects[i - 1].ports.length; j++) {\n                                if (portElement && portElement.id.match('_' + objects[i - 1].ports[j].id + '$')) {\n                                    if (canDraw(objects[i - 1].ports[j], diagram)) {\n                                        return objects[i - 1];\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                actualTarget = objects[objects.length - 1];\n                eventArg.actualObject = actualTarget;\n                if (!diagram[eventHandler].itemClick(actualTarget, true)) {\n                    if (actualTarget.parentId) {\n                        var obj = actualTarget;\n                        var selected = isSelected(diagram, obj);\n                        while (obj) {\n                            if (isSelected(diagram, obj) && !selected) {\n                                break;\n                            }\n                            actualTarget = obj;\n                            obj = diagram.nameTable[obj.parentId];\n                        }\n                    }\n                }\n            }\n            else if (action === 'Pan' || action === 'LayoutAnimation') {\n                for (var i = objects.length - 1; i >= 0; i--) {\n                    if (objects[i] instanceof Node) {\n                        var portElement = this.findTargetElement(objects[i].wrapper, position, undefined);\n                        if ((action === 'LayoutAnimation' || action === 'Pan') || ((portElement && (portElement.id.match('_icon_content_shape$') || portElement.id.match('_icon_content_rect$'))))) {\n                            return objects[i];\n                        }\n                    }\n                }\n            }\n            else {\n                actualTarget = objects[objects.length - 1];\n                if (eventArg && actualTarget) {\n                    eventArg.actualObject = actualTarget;\n                }\n            }\n        }\n        return actualTarget;\n    };\n    /* tslint:enable */\n    /** @private */\n    ObjectFinder.prototype.findElementUnderSelectedItem = function (obj, position) {\n        //rewrite this for multiple selection\n        if (obj instanceof Selector) {\n            if (obj.nodes.length === 1 && (!obj.connectors || !obj.connectors.length)) {\n                return this.findElementUnderMouse(obj.nodes[0], position);\n            }\n            else if ((!obj.nodes || obj.nodes.length) && obj.connectors.length === 1) {\n                return this.findElementUnderMouse(obj.connectors[0], position);\n            }\n        }\n        else {\n            return this.findElementUnderMouse(obj, position);\n        }\n        return null;\n    };\n    ObjectFinder.prototype.findElementUnderMouse = function (obj, position, padding) {\n        return this.findTargetElement(obj.wrapper, position, padding);\n    };\n    /** @private */\n    ObjectFinder.prototype.findTargetElement = function (container, position, padding) {\n        for (var i = container.children.length - 1; i >= 0; i--) {\n            var element = container.children[i];\n            if (element && element.outerBounds.containsPoint(position)) {\n                if (element instanceof Container) {\n                    var target = this.findTargetElement(element, position);\n                    if (target) {\n                        return target;\n                    }\n                }\n                if (element.bounds.containsPoint(position)) {\n                    return element;\n                }\n            }\n        }\n        if (container.bounds.containsPoint(position, padding) && container.style.fill !== 'none') {\n            return container;\n        }\n        return null;\n    };\n    return ObjectFinder;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * A collection of JSON objects where each object represents a layer.\n * Layer is a named category of diagram shapes.\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    // tslint:disable-next-line:no-any\n    function Layer(parent, propName, defaultValue, isArray) {\n        var _this = _super.call(this, parent, propName, defaultValue, isArray) || this;\n        /**  @private   */\n        _this.objectZIndex = -1;\n        /**   @private  */\n        _this.zIndexTable = {};\n        _this.objects = [];\n        return _this;\n    }\n    __decorate([\n        Property('')\n    ], Layer.prototype, \"id\", void 0);\n    __decorate([\n        Property(true)\n    ], Layer.prototype, \"visible\", void 0);\n    __decorate([\n        Property(false)\n    ], Layer.prototype, \"lock\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"objects\", void 0);\n    __decorate([\n        Property()\n    ], Layer.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property(-1)\n    ], Layer.prototype, \"zIndex\", void 0);\n    return Layer;\n}(ChildProperty));\nexport { Layer };\n","import { Connector, getBezierPoints, isEmptyVector } from '../objects/connector';\nimport { Node, BpmnSubEvent, BpmnAnnotation } from '../objects/node';\nimport { PathElement } from '../core/elements/path-element';\nimport { TextElement } from '../core/elements/text-element';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { Rect } from '../primitives/rect';\nimport { identityMatrix, rotateMatrix, transformPointByMatrix, scaleMatrix } from './../primitives/matrix';\nimport { cloneObject as clone, cloneObject, getBounds } from './../utility/base-util';\nimport { completeRegion, getTooltipOffset, sort, findObjectIndex, intersect3, getAnnotationPosition } from './../utility/diagram-util';\nimport { randomId, cornersPointsBeforeRotation } from './../utility/base-util';\nimport { Selector } from './selector';\nimport { hasSelection, isSelected, hasSingleConnection } from './actions';\nimport { DiagramEvent } from '../enum/enum';\nimport { canSelect, canMove, canRotate, canDragSourceEnd, canDragTargetEnd, canSingleSelect, canDrag } from './../utility/constraints-util';\nimport { canMultiSelect, canContinuousDraw } from './../utility/constraints-util';\nimport { canPanX, canPanY, canPageEditable } from './../utility/constraints-util';\nimport { SnapConstraints, DiagramTools, DiagramAction } from '../enum/enum';\nimport { getDiagramElement, getAdornerLayerSvg, getHTMLLayer, getAdornerLayer } from '../utility/dom-util';\nimport { Point } from '../primitives/point';\nimport { Size } from '../primitives/size';\nimport { getObjectType, getPoint, intersect2, getOffsetOfConnector } from './../utility/diagram-util';\nimport { Layer } from '../diagram/layer';\nimport { SelectorConstraints } from '../enum/enum';\nimport { remove } from '@syncfusion/ej2-base';\nimport { getOppositeDirection, getPortDirection, findAngle } from './../utility/connector';\nimport { swapBounds, findPoint, orthoConnection2Segment, getIntersection } from './../utility/connector';\nimport { ShapeAnnotation, PathAnnotation } from '../objects/annotation';\nimport { renderContainerHelper } from './container-interaction';\nimport { checkChildNodeInContainer, checkParentAsContainer, addChildToContainer } from './container-interaction';\nimport { renderStackHighlighter } from './container-interaction';\nimport { getConnectors, updateConnectorsProperties, findLaneIndex } from './../utility/swim-lane-util';\nimport { swimLaneSelection, pasteSwimLane, gridSelection } from '../utility/swim-lane-util';\n/**\n * Defines the behavior of commands\n */\nvar CommandHandler = /** @class */ (function () {\n    function CommandHandler(diagram) {\n        /**   @private  */\n        this.clipboardData = {};\n        /**   @private  */\n        this.connectorsTable = [];\n        /**   @private  */\n        this.processTable = {};\n        /** @private */\n        this.isContainer = false;\n        this.childTable = {};\n        this.parentTable = {};\n        this.diagram = diagram;\n    }\n    Object.defineProperty(CommandHandler.prototype, \"snappingModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.snappingModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CommandHandler.prototype, \"layoutAnimateModule\", {\n        /**   @private  */\n        get: function () {\n            return this.diagram.layoutAnimateModule;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    CommandHandler.prototype.startTransaction = function (protectChange) {\n        this.state = { element: this.diagram.selectedItems, backup: null };\n        if (protectChange) {\n            this.diagram.protectPropertyChange(true);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'none';\n    };\n    /** @private */\n    CommandHandler.prototype.endTransaction = function (protectChange) {\n        this.state = null;\n        if (protectChange) {\n            this.diagram.protectPropertyChange(false);\n        }\n        getAdornerLayer(this.diagram.element.id).style.pointerEvents = 'all';\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.showTooltip = function (node, position, content, toolName, isTooltipVisible) {\n        var _this = this;\n        if (isTooltipVisible) {\n            this.diagram.tooltipObject.position = 'BottomCenter';\n            this.diagram.tooltipObject.animation = { open: { delay: 0, duration: 0 } };\n            this.diagram.tooltip.relativeMode = toolName === 'ConnectTool' ? 'Mouse' : 'Object';\n            this.diagram.tooltipObject.openDelay = 0;\n            this.diagram.tooltipObject.closeDelay = 0;\n        }\n        this.diagram.tooltipObject.content = content;\n        var tooltipOffset = getTooltipOffset(this.diagram, { x: position.x, y: position.y }, node);\n        this.diagram.tooltipObject.offsetX = tooltipOffset.x + (toolName === 'ConnectTool' ? 10 : 0);\n        this.diagram.tooltipObject.offsetY = tooltipOffset.y + 10;\n        this.diagram.tooltipObject.dataBind();\n        if (isTooltipVisible) {\n            setTimeout(function () {\n                _this.diagram.tooltipObject.open(_this.diagram.element);\n            }, 1);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.closeTooltip = function () {\n        this.diagram.tooltipObject.close();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canEnableDefaultTooltip = function () {\n        if (this.diagram.selectedItems.constraints & SelectorConstraints.ToolTip) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateSelector = function () {\n        this.diagram.updateSelector();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.triggerEvent = function (event, args) {\n        if (event === DiagramEvent.drop || event === DiagramEvent.positionChange ||\n            event === DiagramEvent.connectionChange) {\n            if (this.diagram.currentSymbol) {\n                return;\n            }\n            if (event === DiagramEvent.drop) {\n                args.source = this.diagram;\n            }\n            if (this.diagram.currentDrawingObject) {\n                return;\n            }\n        }\n        this.diagram.triggerEvent(event, args);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dragOverElement = function (args, currentPosition) {\n        if (this.diagram.currentSymbol) {\n            var dragOverArg = {\n                element: args.source, target: args.target, mousePosition: currentPosition, diagram: this.diagram\n            };\n            this.triggerEvent(DiagramEvent.dragOver, dragOverArg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.disConnect = function (obj, endPoint) {\n        var oldChanges = {};\n        var newChanges = {};\n        var selectorModel;\n        var connector;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (obj && connector && (hasSingleConnection(this.diagram) || this.diagram.currentDrawingObject)) {\n            if (endPoint && (endPoint === 'ConnectorSourceEnd' || endPoint === 'ConnectorTargetEnd')) {\n                var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n                var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n                if (connector[nodeEndId]) { //connector.sourceID || connector.targetID\n                    oldChanges[nodeEndId] = connector[nodeEndId];\n                    connector[nodeEndId] = '';\n                    newChanges[nodeEndId] = connector[nodeEndId];\n                    if (connector.sourcePortID || connector.targetPortID) {\n                        oldChanges[portEndId] = connector[portEndId];\n                        connector[portEndId] = '';\n                        newChanges[portEndId] = connector[portEndId];\n                    }\n                    this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n                }\n            }\n            else if ((endPoint !== 'OrthoThumb' && endPoint !== 'SegmentEnd') && (connector.sourceID || connector.targetID)) {\n                oldChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                connector.sourceID = '';\n                connector.sourcePortID = '';\n                connector.targetID = '';\n                connector.targetPortID = '';\n                newChanges = {\n                    sourceID: connector.sourceID, sourcePortID: connector.sourcePortID,\n                    targetID: connector.targetID, targetPortID: connector.targetPortID\n                };\n                var arg = {\n                    connector: connector, oldValue: oldChanges,\n                    newValue: newChanges, cancel: false, state: 'Changing', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n                if (arg.cancel) {\n                    connector.sourceID = oldChanges.sourceID;\n                    connector.sourcePortID = oldChanges.sourcePortID;\n                    connector.targetID = oldChanges.targetID;\n                    connector.targetPortID = oldChanges.targetPortID;\n                }\n                else {\n                    this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n                    this.diagram.updateDiagramObject(connector);\n                    arg = {\n                        connector: connector, oldValue: oldChanges,\n                        newValue: newChanges, cancel: false, state: 'Changed', connectorEnd: endPoint\n                    };\n                    this.triggerEvent(DiagramEvent.connectionChange, arg);\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.connectionEventChange = function (connector, oldChanges, newChanges, endPoint) {\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        var arg = {\n            connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n            newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n            cancel: false, state: 'Changing', connectorEnd: endPoint\n        };\n        this.triggerEvent(DiagramEvent.connectionChange, arg);\n        if (arg.cancel) {\n            connector[nodeEndId] = oldChanges[nodeEndId];\n            connector[portEndId] = oldChanges[portEndId];\n            newChanges = oldChanges;\n        }\n        else {\n            this.diagram.connectorPropertyChange(connector, oldChanges, newChanges);\n            this.diagram.updateDiagramObject(connector);\n            arg = {\n                connector: connector, oldValue: { nodeId: oldChanges[nodeEndId], portId: oldChanges[portEndId] },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changed', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findTarget = function (element, argsTarget, source, connection) {\n        var target;\n        if (argsTarget instanceof Node) {\n            if (element && element.id === argsTarget.id + '_content') {\n                return argsTarget;\n            }\n            if (source && argsTarget.shape.type === 'Bpmn' && argsTarget.shape.shape === 'Activity') {\n                if (argsTarget.shape.activity.subProcess.type === 'Transaction') {\n                    var transaction = argsTarget.shape.activity.subProcess.transaction;\n                    if (transaction.success.visible && element.id.indexOf(argsTarget.id + '_success') === 0) {\n                        return transaction.success;\n                    }\n                    if (transaction.cancel.visible && element.id.indexOf(argsTarget.id + '_cancel') === 0) {\n                        return transaction.cancel;\n                    }\n                    if (transaction.failure.visible && element.id.indexOf(argsTarget.id + '_failure') === 0) {\n                        return transaction.failure;\n                    }\n                }\n            }\n            if (element instanceof PathElement) {\n                for (var i = 0; i < argsTarget.ports.length; i++) {\n                    var port = argsTarget.ports[i];\n                    if (element.id === argsTarget.id + '_' + port.id) {\n                        return port;\n                    }\n                }\n            }\n        }\n        if (!connection) {\n            var annotation = void 0;\n            for (var i = 0; i < argsTarget.annotations.length; i++) {\n                annotation = argsTarget.annotations[i];\n                if (element.id === argsTarget.id + '_' + annotation.id) {\n                    return annotation;\n                }\n            }\n        }\n        return argsTarget;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.canDisconnect = function (endPoint, args, targetPortId, targetNodeId) {\n        var selector;\n        var connect;\n        if (args.source instanceof Selector) {\n            selector = args.source;\n            connect = selector.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connect = this.diagram.currentDrawingObject;\n        }\n        var targetObject = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEnd = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEnd = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (connect[nodeEnd] !== targetNodeId || connect[portEnd] !== targetPortId) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.changeAnnotationDrag = function (args) {\n        var selectorModel;\n        var connector;\n        if (args.source && args.source.connectors &&\n            args.source.connectors.length && this.diagram.bpmnModule &&\n            this.diagram.bpmnModule.textAnnotationConnectors.indexOf(args.source.connectors[0]) > -1) {\n            if (args.source instanceof Selector) {\n                selectorModel = args.source;\n                connector = selectorModel.connectors[0];\n            }\n            var id = connector.id.split('_');\n            var annotationId = id[id.length - 1];\n            var nodeId = id[id.length - 3] || id[0];\n            if (args.target && args.target.id !== nodeId &&\n                args.target.shape.shape !== 'TextAnnotation') {\n                this.diagram.startGroupAction();\n                var parentNode = this.diagram.nameTable[id[0]];\n                var clonedNode = this.getAnnotation(parentNode, id[1]);\n                var annotationNode = {\n                    id: id[1] + randomId(),\n                    angle: Point.findAngle(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    text: clonedNode.text,\n                    length: Point.distancePoints(connector.intermediatePoints[0], connector.intermediatePoints[1]),\n                    shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                    nodeId: clonedNode.nodeId\n                };\n                var annotationObj = new BpmnAnnotation(args.target.shape, 'annotations', annotationNode, true);\n                this.diagram.bpmnModule.checkAndRemoveAnnotations(this.diagram.nameTable[connector.targetID], this.diagram);\n                this.diagram.refreshCanvasLayers();\n                annotationObj.id = id[1];\n                this.diagram.addTextAnnotation(annotationObj, args.target);\n                this.diagram.endGroupAction();\n            }\n            else if (connector) {\n                connector.sourceID = nodeId;\n                this.diagram.connectorPropertyChange(connector, {}, { sourceID: nodeId });\n                this.diagram.updateDiagramObject(connector);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.connect = function (endPoint, args) {\n        var newChanges = {};\n        var oldChanges = {};\n        var oldNodeId;\n        var oldPortId;\n        var selectorModel;\n        var connector;\n        if (args.source instanceof Selector) {\n            selectorModel = args.source;\n            connector = selectorModel.connectors[0];\n        }\n        else if (args.source instanceof Connector && this.diagram.currentDrawingObject) {\n            connector = this.diagram.currentDrawingObject;\n        }\n        var target = this.findTarget(args.targetWrapper, args.target, endPoint === 'ConnectorSourceEnd', true);\n        var nodeEndId = endPoint === 'ConnectorSourceEnd' ? 'sourceID' : 'targetID';\n        var portEndId = endPoint === 'ConnectorSourceEnd' ? 'sourcePortID' : 'targetPortID';\n        if (target instanceof Node) {\n            oldChanges[nodeEndId] = connector[nodeEndId];\n            connector[nodeEndId] = target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            oldChanges[portEndId] = connector[portEndId];\n            this.connectionEventChange(connector, oldChanges, newChanges, endPoint);\n        }\n        else {\n            oldNodeId = connector[nodeEndId];\n            oldPortId = connector[portEndId];\n            connector[portEndId] = target.id;\n            connector[nodeEndId] = args.target.id;\n            newChanges[nodeEndId] = connector[nodeEndId];\n            newChanges[portEndId] = connector[portEndId];\n            var arg = {\n                connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] },\n                cancel: false, state: 'Changing', connectorEnd: endPoint\n            };\n            this.triggerEvent(DiagramEvent.connectionChange, arg);\n            if (arg.cancel) {\n                connector[nodeEndId] = oldNodeId;\n                connector[portEndId] = oldPortId;\n                newChanges[nodeEndId] = oldNodeId;\n                newChanges[portEndId] = oldPortId;\n            }\n            else {\n                this.diagram.connectorPropertyChange(connector, {}, newChanges);\n                this.diagram.updateDiagramObject(connector);\n                arg = {\n                    connector: connector, oldValue: { nodeId: oldNodeId, portId: oldPortId },\n                    newValue: { nodeId: newChanges[nodeEndId], portId: newChanges[portEndId] }, cancel: false,\n                    state: 'Changed', connectorEnd: endPoint\n                };\n                this.triggerEvent(DiagramEvent.connectionChange, arg);\n            }\n        }\n        this.renderHighlighter(args, undefined, endPoint === 'ConnectorSourceEnd');\n    };\n    /** @private */\n    CommandHandler.prototype.cut = function () {\n        var index;\n        this.clipboardData.pasteIndex = 0;\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.startGroupAction();\n        }\n        this.clipboardData.clipObject = this.copyObjects();\n        if (this.diagram.undoRedoModule) {\n            this.diagram.historyManager.endGroupAction();\n        }\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addLayer = function (layer, objects) {\n        layer.id = layer.id || randomId();\n        layer.zIndex = this.diagram.layers.length;\n        layer = new Layer(this.diagram, 'layers', layer, true);\n        layer.objectZIndex = -1;\n        layer.zIndexTable = {};\n        this.diagram.layers.push(layer);\n        this.diagram.layerZIndexTable[layer.zIndex] = layer.id;\n        this.diagram.activeLayer = layer;\n        var layers = layer.objects;\n        if (objects) {\n            for (var i = 0; i < objects.length; i++) {\n                this.diagram.add(objects[i]);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getObjectLayer = function (objectName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            var objIndex = layers[i].objects.indexOf(objectName);\n            if (objIndex > -1) {\n                return layers[i];\n            }\n        }\n        return this.diagram.activeLayer;\n    };\n    /** @private */\n    CommandHandler.prototype.getLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        for (var i = 0; i < layers.length; i++) {\n            if (layers[i].id === layerName) {\n                return layers[i];\n            }\n        }\n        return undefined;\n    };\n    /** @private */\n    CommandHandler.prototype.removeLayer = function (layerId) {\n        var layers = this.getLayer(layerId);\n        if (layers) {\n            var index = this.diagram.layers.indexOf(layers);\n            var layerObject = layers.objects;\n            for (var i = layerObject.length - 1; i >= 0; i--) {\n                this.diagram.unSelect(this.diagram.nameTable[layerObject[i]]);\n                this.diagram.remove(this.diagram.nameTable[layerObject[i]]);\n                if (layers.id !== 'default_layer') {\n                    if (this.diagram.activeLayer.id === layerId) {\n                        this.diagram.activeLayer = this.diagram.layers[this.diagram.layers.length - 1];\n                    }\n                }\n            }\n            delete this.diagram.layerZIndexTable[layers.zIndex];\n            this.diagram.layers.splice(index, 1);\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.moveObjects = function (objects, targetLayer) {\n        var layer = this.getLayer(targetLayer) || this.diagram.activeLayer;\n        this.diagram.setActiveLayer(layer.id);\n        var targerNodes;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var i = objects_1[_i];\n            var layer_1 = this.getObjectLayer(i);\n            var index = layer_1.objects.indexOf(i);\n            if (index > -1) {\n                targerNodes = this.diagram.nameTable[i];\n                this.diagram.unSelect(targerNodes);\n                this.diagram.remove(this.diagram.nameTable[i]);\n                this.diagram.add(targerNodes);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.cloneLayer = function (layerName) {\n        var layers = this.diagram.layers;\n        var layer = this.getLayer(layerName);\n        if (layer) {\n            var cloneObject_1 = [];\n            var newlayer = {\n                id: layerName + '_' + randomId(), objects: [], visible: true, lock: false\n            };\n            this.addLayer(newlayer);\n            newlayer.zIndex = this.diagram.layers.length - 1;\n            var multiSelect = cloneObject_1.length !== 1;\n            for (var _i = 0, _a = layer.objects; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                cloneObject_1.push(this.diagram.nameTable[obj]);\n            }\n            this.paste(cloneObject_1);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.copy = function () {\n        this.clipboardData.pasteIndex = 1;\n        this.clipboardData.clipObject = this.copyObjects();\n        return this.clipboardData.clipObject;\n    };\n    /** @private */\n    CommandHandler.prototype.copyObjects = function () {\n        var selectedItems = [];\n        var obj = [];\n        this.clipboardData.childTable = {};\n        if (this.diagram.selectedItems.connectors.length > 0) {\n            selectedItems = this.diagram.selectedItems.connectors;\n            for (var j = 0; j < selectedItems.length; j++) {\n                var element = void 0;\n                if (this.diagram.bpmnModule &&\n                    this.diagram.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[j]) > -1) {\n                    element = cloneObject((this.diagram.nameTable[selectedItems[j].targetID]));\n                }\n                else {\n                    element = cloneObject((selectedItems[j]));\n                }\n                obj.push(element);\n            }\n        }\n        if (this.diagram.selectedItems.nodes.length > 0) {\n            selectedItems = selectedItems.concat(this.diagram.selectedItems.nodes);\n            for (var j = 0; j < this.diagram.selectedItems.nodes.length; j++) {\n                var node = clone(this.diagram.selectedItems.nodes[j]);\n                var processTable = {};\n                this.copyProcesses(node);\n                obj.push(clone(node));\n                var matrix = identityMatrix();\n                rotateMatrix(matrix, -node.rotateAngle, node.offsetX, node.offsetY);\n                if (node.children) {\n                    var childTable = this.clipboardData.childTable;\n                    var tempNode = void 0;\n                    var elements = [];\n                    var nodes = this.getAllDescendants(node, elements, true);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = this.diagram.nameTable[nodes[i].id];\n                        var clonedObject = childTable[tempNode.id] = clone(tempNode);\n                        var newOffset = transformPointByMatrix(matrix, { x: clonedObject.wrapper.offsetX, y: clonedObject.wrapper.offsetY });\n                        if (tempNode instanceof Node) {\n                            clonedObject.offsetX = newOffset.x;\n                            clonedObject.offsetY = newOffset.y;\n                            clonedObject.rotateAngle -= node.rotateAngle;\n                        }\n                    }\n                    this.clipboardData.childTable = childTable;\n                }\n                if (node.shape.type === 'SwimLane') {\n                    var swimlane = this.diagram.getObject(this.diagram.selectedItems.nodes[j].id);\n                    var childTable = this.clipboardData.childTable;\n                    var connectorsList = getConnectors(this.diagram, swimlane.wrapper.children[0], 0, true);\n                    for (var i = 0; i < connectorsList.length; i++) {\n                        var connector = this.diagram.getObject(connectorsList[i]);\n                        childTable[connector.id] = clone(connector);\n                    }\n                }\n                if (node && node.isLane) {\n                    var childTable = this.clipboardData.childTable;\n                    var swimlane = this.diagram.getObject(node.parentId);\n                    var laneIndex = findLaneIndex(swimlane, node);\n                    childTable[node.id] = cloneObject(swimlane.shape.lanes[laneIndex]);\n                    childTable[node.id].width = swimlane.wrapper.actualSize.width;\n                }\n            }\n        }\n        if (this.clipboardData.pasteIndex === 0) {\n            this.startGroupAction();\n            for (var _i = 0, selectedItems_1 = selectedItems; _i < selectedItems_1.length; _i++) {\n                var item = selectedItems_1[_i];\n                if (this.diagram.nameTable[item.id]) {\n                    if (this.diagram.bpmnModule &&\n                        this.diagram.bpmnModule.textAnnotationConnectors.indexOf(item) > -1) {\n                        this.diagram.remove(this.diagram.nameTable[item.targetID]);\n                    }\n                    else {\n                        this.diagram.remove(item);\n                    }\n                }\n            }\n            this.endGroupAction();\n        }\n        this.sortByZIndex(obj, 'zIndex');\n        return obj;\n    };\n    CommandHandler.prototype.copyProcesses = function (node) {\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length > 0) {\n            var processes = node.shape.activity.subProcess.processes;\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var i = processes_1[_i];\n                this.processTable[i] = (clone(this.diagram.nameTable[i]));\n                if (this.processTable[i].shape.activity.subProcess.processes &&\n                    this.processTable[i].shape.activity.subProcess.processes.length > 0) {\n                    this.copyProcesses(this.processTable[i]);\n                }\n            }\n            this.clipboardData.processTable = this.processTable;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.group = function () {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        var obj = {};\n        var group;\n        obj.id = 'group' + randomId();\n        obj = new Node(this.diagram, 'nodes', obj, true);\n        obj.children = [];\n        selectedItems = this.diagram.selectedItems.nodes;\n        selectedItems = selectedItems.concat(this.diagram.selectedItems.connectors);\n        for (var i = 0; i < selectedItems.length; i++) {\n            if (!selectedItems[i].parentId) {\n                obj.children.push(selectedItems[i].id);\n            }\n        }\n        group = this.diagram.add(obj);\n        if (group) {\n            this.select(group);\n        }\n        var entry = { type: 'Group', undoObject: obj, redoObject: obj, category: 'Internal' };\n        this.addHistoryEntry(entry);\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.unGroup = function (obj) {\n        var propName = 'isProtectedOnChange';\n        var protectedChange = this.diagram[propName];\n        this.diagram.protectPropertyChange(true);\n        this.diagram.diagramActions = this.diagram.diagramActions | DiagramAction.Group;\n        var selectedItems = [];\n        if (obj) {\n            selectedItems.push(obj);\n        }\n        else {\n            selectedItems = this.diagram.selectedItems.nodes;\n        }\n        for (var i = 0; i < selectedItems.length; i++) {\n            var node = selectedItems[i];\n            var entry = {\n                type: 'UnGroup', undoObject: cloneObject(node),\n                redoObject: cloneObject(node), category: 'Internal'\n            };\n            if (!(this.diagram.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n            if (node.children) {\n                if (node.ports && node.ports.length > 0) {\n                    this.diagram.removePorts(node, node.ports);\n                }\n                if (node.annotations && node.annotations.length > 0) {\n                    this.diagram.removeLabels(node, node.annotations);\n                }\n                var parentNode = this.diagram.nameTable[node.parentId];\n                for (var j = node.children.length - 1; j >= 0; j--) {\n                    (this.diagram.nameTable[node.children[j]]).parentId = '';\n                    this.diagram.deleteChild(this.diagram.nameTable[node.children[j]], node);\n                    if (node.parentId && node.children[j]) {\n                        this.diagram.addChild(parentNode, node.children[j]);\n                    }\n                }\n                if (node.parentId) {\n                    this.diagram.deleteChild(node, parentNode);\n                }\n            }\n            this.diagram.removeNode(node);\n            this.clearSelection();\n        }\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.Group;\n        this.diagram.protectPropertyChange(protectedChange);\n    };\n    /** @private */\n    CommandHandler.prototype.paste = function (obj) {\n        if (obj || this.clipboardData.clipObject) {\n            this.diagram.protectPropertyChange(true);\n            var copiedItems = obj ? this.getNewObject(obj) :\n                this.clipboardData.clipObject;\n            if (copiedItems) {\n                var multiSelect = copiedItems.length !== 1;\n                var groupAction = false;\n                var objectTable = {};\n                var keyTable = {};\n                if (this.clipboardData.pasteIndex !== 0) {\n                    this.clearSelection();\n                }\n                if (this.diagram.undoRedoModule) {\n                    groupAction = true;\n                    this.diagram.historyManager.startGroupAction();\n                }\n                for (var _i = 0, copiedItems_1 = copiedItems; _i < copiedItems_1.length; _i++) {\n                    var copy = copiedItems_1[_i];\n                    objectTable[copy.id] = copy;\n                }\n                for (var j = 0; j < copiedItems.length; j++) {\n                    var copy = copiedItems[j];\n                    if (getObjectType(copy) === Connector) {\n                        var clonedObj = clone(copy);\n                        var nodeId = clonedObj.sourceID;\n                        clonedObj.sourceID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.sourceID = keyTable[nodeId];\n                        }\n                        nodeId = clonedObj.targetID;\n                        clonedObj.targetID = '';\n                        if (objectTable[nodeId] && keyTable[nodeId]) {\n                            clonedObj.targetID = keyTable[nodeId];\n                        }\n                        var newObj = this.cloneConnector(clonedObj, multiSelect);\n                        keyTable[copy.id] = newObj.id;\n                    }\n                    else {\n                        var newNode = this.cloneNode(copy, multiSelect);\n                        //bpmn text annotations will not be pasted\n                        if (newNode) {\n                            keyTable[copy.id] = newNode.id;\n                            var edges = copy.inEdges;\n                            if (edges) {\n                                for (var _a = 0, edges_1 = edges; _a < edges_1.length; _a++) {\n                                    var edge = edges_1[_a];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.targetID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { targetID: '', targetPortID: '' }, { targetID: newConnector.targetID, targetPortID: newConnector.targetPortID });\n                                    }\n                                }\n                            }\n                            edges = copy.outEdges;\n                            if (edges) {\n                                for (var _b = 0, edges_2 = edges; _b < edges_2.length; _b++) {\n                                    var edge = edges_2[_b];\n                                    if (objectTable[edge] && keyTable[edge]) {\n                                        var newConnector = this.diagram.nameTable[keyTable[edge]];\n                                        newConnector.sourceID = keyTable[copy.id];\n                                        this.diagram.connectorPropertyChange(newConnector, { sourceID: '', sourcePortID: '' }, { sourceID: newConnector.sourceID, sourcePortID: newConnector.sourcePortID });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                if (groupAction === true) {\n                    this.diagram.historyManager.endGroupAction();\n                    groupAction = false;\n                }\n                if (this.diagram.mode !== 'SVG') {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.clipboardData.pasteIndex++;\n                this.diagram.protectPropertyChange(false);\n            }\n        }\n    };\n    CommandHandler.prototype.getNewObject = function (obj) {\n        var newObj;\n        var newobjs = [];\n        this.clipboardData.pasteIndex = 1;\n        for (var i = 0; i < obj.length; i++) {\n            newObj = cloneObject(obj[i]);\n            newobjs.push(newObj);\n        }\n        return newobjs;\n    };\n    CommandHandler.prototype.cloneConnector = function (connector, multiSelect) {\n        var newConnector;\n        var cloneObject = clone(connector);\n        this.translateObject(cloneObject);\n        cloneObject.zIndex = -1;\n        newConnector = this.diagram.add(cloneObject);\n        this.selectObjects([newConnector], multiSelect);\n        return newConnector;\n    };\n    CommandHandler.prototype.cloneNode = function (node, multiSelect, children, groupnodeID) {\n        var newNode;\n        var connectorsTable = {};\n        var cloneObject = clone(node);\n        var process;\n        var temp = this.diagram.nameTable[node.parentId];\n        if (node.shape && node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            process = cloneObject.shape.activity.subProcess.processes;\n            cloneObject.zIndex = -1;\n            cloneObject.shape.activity.subProcess.processes = undefined;\n        }\n        if (node.shape && node.shape.type === 'SwimLane') {\n            pasteSwimLane(node, this.diagram, this.clipboardData);\n        }\n        else if (temp && temp.shape.type === 'SwimLane') {\n            pasteSwimLane(clone(temp), this.diagram, this.clipboardData, node, true);\n        }\n        else if (node.children && node.children.length && (!children || !children.length)) {\n            newNode = this.cloneGroup(node, multiSelect);\n        }\n        else if (node.shape && node.shape.shape === 'TextAnnotation' && node.id.indexOf('_textannotation_') !== -1 &&\n            this.diagram.nameTable[node.id]) {\n            var checkAnnotation = node.id.split('_textannotation_');\n            var parentNode = void 0;\n            var annotation = this.diagram.nameTable[node.id];\n            for (var j = 0; j < annotation.inEdges.length; j++) {\n                var connector = this.diagram.nameTable[annotation.inEdges[j]];\n                if (connector) {\n                    parentNode = this.diagram.nameTable[connector.sourceID];\n                    var clonedNode = this.getAnnotation(parentNode, checkAnnotation[1]);\n                    var annotationNode = {\n                        id: checkAnnotation[1] + randomId(),\n                        angle: clonedNode.angle,\n                        text: clonedNode.text,\n                        length: clonedNode.length,\n                        shape: { shape: 'TextAnnotation', type: 'Bpmn' },\n                        nodeId: clonedNode.nodeId\n                    };\n                    this.diagram.addTextAnnotation(annotationNode, parentNode);\n                }\n            }\n        }\n        else {\n            this.translateObject(cloneObject, groupnodeID);\n            cloneObject.zIndex = -1;\n            if (children) {\n                cloneObject.children = children;\n            }\n            newNode = this.diagram.add(cloneObject);\n        }\n        for (var _i = 0, _a = Object.keys(connectorsTable); _i < _a.length; _i++) {\n            var i = _a[_i];\n            this.diagram.add(connectorsTable[i]);\n        }\n        if (process && process.length) {\n            newNode.shape.activity.subProcess.processes = process;\n            this.cloneSubProcesses(newNode);\n        }\n        if (newNode) {\n            this.selectObjects([newNode], multiSelect);\n        }\n        return newNode;\n    };\n    CommandHandler.prototype.getAnnotation = function (parent, annotationId) {\n        var currentAnnotation = parent.shape.annotations;\n        if (currentAnnotation && currentAnnotation.length) {\n            for (var g = 0; g <= currentAnnotation.length; g++) {\n                if (currentAnnotation[g].id === annotationId) {\n                    return currentAnnotation[g];\n                }\n            }\n        }\n        return undefined;\n    };\n    CommandHandler.prototype.cloneSubProcesses = function (node) {\n        var connector = [];\n        var temp = {};\n        if (node.shape.type === 'Bpmn' && node.shape.activity &&\n            node.shape.activity.subProcess.processes\n            && node.shape.activity.subProcess.processes.length) {\n            var process = node.shape.activity.subProcess.processes;\n            for (var g = 0; g < process.length; g++) {\n                var child = this.diagram.nameTable[process[g]] || this.clipboardData.processTable[process[g]];\n                for (var _i = 0, _a = child.outEdges; _i < _a.length; _i++) {\n                    var j = _a[_i];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                for (var _b = 0, _c = child.inEdges; _b < _c.length; _b++) {\n                    var j = _c[_b];\n                    if (connector.indexOf(j) < 0) {\n                        connector.push(j);\n                    }\n                }\n                var innerChild = cloneObject(this.clipboardData.processTable[process[g]]);\n                innerChild.processId = node.id;\n                var newNode = this.cloneNode(innerChild, false);\n                temp[process[g]] = newNode.id;\n                process[g] = newNode.id;\n                this.diagram.addProcess(newNode, node.id);\n                for (var _d = 0, connector_1 = connector; _d < connector_1.length; _d++) {\n                    var i = connector_1[_d];\n                    var node_1 = this.diagram.nameTable[i] || this.diagram.connectorTable[i];\n                    var clonedNode = cloneObject(node_1);\n                    if (temp[clonedNode.sourceID] && temp[clonedNode.targetID]) {\n                        clonedNode.zIndex = -1;\n                        clonedNode.id += randomId();\n                        clonedNode.sourceID = temp[clonedNode.sourceID];\n                        clonedNode.targetID = temp[clonedNode.targetID];\n                        connector.splice(connector.indexOf(i), 1);\n                        this.diagram.add(clonedNode);\n                    }\n                }\n            }\n        }\n    };\n    CommandHandler.prototype.cloneGroup = function (obj, multiSelect) {\n        var value;\n        var newChildren = [];\n        var children = [];\n        var connectorObj = [];\n        var newObj;\n        var oldID = [];\n        children = children.concat(obj.children);\n        var id = randomId();\n        if (this.clipboardData.childTable || obj.children.length > 0) {\n            for (var i = 0; i < children.length; i++) {\n                var childObj = void 0;\n                if (this.clipboardData.childTable) {\n                    childObj = this.clipboardData.childTable[children[i]];\n                }\n                else {\n                    childObj = this.diagram.nameTable[children[i]];\n                }\n                childObj.parentId = '';\n                if (childObj) {\n                    if (getObjectType(childObj) === Connector) {\n                        connectorObj.push(childObj);\n                    }\n                    else {\n                        newObj = this.cloneNode(childObj, multiSelect, undefined, id);\n                        oldID.push(childObj.id);\n                        newChildren.push(newObj.id);\n                    }\n                }\n            }\n        }\n        for (var k = 0; k < connectorObj.length; k++) {\n            if (connectorObj[k].sourceID || connectorObj[k].targetID) {\n                for (var j = 0; j < oldID.length; j++) {\n                    if (connectorObj[k].sourceID === (oldID[j])) {\n                        connectorObj[k].sourceID += id;\n                    }\n                    if (connectorObj[k].targetID === (oldID[j])) {\n                        connectorObj[k].targetID += id;\n                    }\n                }\n            }\n            newObj = this.cloneConnector(connectorObj[k], multiSelect);\n            newChildren.push(newObj.id);\n        }\n        var parentObj = this.cloneNode(obj, multiSelect, newChildren);\n        if (parentObj && parentObj.container && parentObj.shape && parentObj.shape.type === 'UmlClassifier') {\n            this.diagram.updateDiagramObject(parentObj);\n            parentObj.wrapper.measure(new Size());\n        }\n        return parentObj;\n    };\n    /** @private */\n    CommandHandler.prototype.translateObject = function (obj, groupnodeID) {\n        obj.id += groupnodeID || randomId();\n        var diff = this.clipboardData.pasteIndex * 10;\n        if (getObjectType(obj) === Connector) {\n            obj.sourcePoint = {\n                x: obj.sourcePoint.x + diff, y: obj.sourcePoint.y + diff\n            };\n            obj.targetPoint = {\n                x: obj.targetPoint.x + diff, y: obj.targetPoint.y + diff\n            };\n            if (obj.type === 'Bezier') {\n                var segments = obj.segments;\n                for (var i = 0; i < segments.length; i++) {\n                    if (!Point.isEmptyPoint(segments[i].point1)) {\n                        segments[i].point1 = {\n                            x: segments[i].point1.x + diff, y: segments[i].point1.y + diff\n                        };\n                    }\n                    if (!Point.isEmptyPoint(segments[i].point2)) {\n                        segments[i].point2 = {\n                            x: segments[i].point2.x + diff, y: segments[i].point2.y + diff\n                        };\n                    }\n                }\n            }\n            if (obj.type === 'Straight' || obj.type === 'Bezier') {\n                if (obj.segments && obj.segments.length > 0) {\n                    var segments = obj.segments;\n                    for (var i = 0; i < segments.length - 1; i++) {\n                        segments[i].point.x += diff;\n                        segments[i].point.y += diff;\n                    }\n                }\n            }\n        }\n        else {\n            obj.offsetX += diff;\n            obj.offsetY += diff;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawObject = function (obj) {\n        var newObj;\n        var cloneObject;\n        cloneObject = clone(this.diagram.drawingObject);\n        for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            cloneObject[prop] = obj[prop];\n        }\n        if (getObjectType(this.diagram.drawingObject) === Node) {\n            newObj = new Node(this.diagram, 'nodes', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'node') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        else {\n            newObj = new Connector(this.diagram, 'connectors', cloneObject, true);\n            newObj.id = (this.diagram.drawingObject.id || 'connector') + randomId();\n            this.diagram.initObject(newObj);\n        }\n        this.diagram.updateDiagramObject(newObj);\n        this.diagram.currentDrawingObject = newObj;\n        return newObj;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addObjectToDiagram = function (obj) {\n        var newObj;\n        this.diagram.removeFromAQuad(obj);\n        this.diagram.removeObjectsFromLayer(this.diagram.nameTable[obj.id]);\n        delete this.diagram.nameTable[obj.id];\n        newObj = this.diagram.add(obj);\n        if (this.diagram.mode !== 'SVG') {\n            this.diagram.refreshDiagramLayer();\n        }\n        this.selectObjects([newObj]);\n        if (obj && (!(canContinuousDraw(this.diagram)))) {\n            this.diagram.tool &= ~DiagramTools.DrawOnce;\n            this.diagram.currentDrawingObject = undefined;\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.addText = function (obj, currentPosition) {\n        var annotation = this.diagram.findElementUnderMouse(obj, currentPosition);\n        this.diagram.startTextEdit(obj, annotation instanceof TextElement ? (annotation.id).split('_')[1] : undefined);\n    };\n    /** @private */\n    CommandHandler.prototype.selectObjects = function (obj, multipleSelection, oldValue) {\n        var arg = {\n            oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Addition', cancel: false\n        };\n        var select = true;\n        this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        var canDoMultipleSelection = canMultiSelect(this.diagram);\n        var canDoSingleSelection = canSingleSelect(this.diagram);\n        if (canDoSingleSelection || canDoMultipleSelection) {\n            if (!canDoMultipleSelection && ((obj.length > 1) || (multipleSelection && obj.length === 1))) {\n                if (obj.length === 1) {\n                    this.clearSelection();\n                }\n                else {\n                    return;\n                }\n            }\n            if (!canDoSingleSelection && obj.length === 1 && (!multipleSelection || !hasSelection(this.diagram))) {\n                this.clearSelection();\n                return;\n            }\n        }\n        if (!arg.cancel) {\n            for (var i = 0; i < obj.length; i++) {\n                var newObj = obj[i];\n                select = true;\n                if (!hasSelection(this.diagram)) {\n                    this.select(newObj, i > 0 || multipleSelection, true);\n                }\n                else {\n                    if ((i > 0 || multipleSelection) && newObj.children && !newObj.parentId) {\n                        for (var i_1 = 0; i_1 < this.diagram.selectedItems.nodes.length; i_1++) {\n                            var parentNode = this.diagram.nameTable[this.diagram.selectedItems.nodes[i_1].parentId];\n                            if (parentNode) {\n                                parentNode = this.findParent(parentNode);\n                                if (parentNode) {\n                                    if (newObj.id === parentNode.id) {\n                                        this.selectGroup(newObj);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    this.selectProcesses(newObj);\n                    select = this.selectBpmnSubProcesses(newObj);\n                    if (select) {\n                        this.select(newObj, i > 0 || multipleSelection, true);\n                    }\n                }\n            }\n            arg = {\n                oldValue: oldValue ? oldValue : [], newValue: obj, cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Addition', cancel: false\n            };\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            this.diagram.renderSelector(multipleSelection || (obj && obj.length > 1));\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.findParent = function (node) {\n        if (node.parentId) {\n            node = this.diagram.nameTable[node.parentId];\n            this.findParent(node);\n        }\n        return node;\n    };\n    CommandHandler.prototype.selectProcesses = function (newObj) {\n        if (this.hasProcesses(newObj)) {\n            var processes = (newObj).shape.activity.subProcess.processes;\n            for (var i = 0; i < processes.length; i++) {\n                var innerChild = this.diagram.nameTable[processes[i]];\n                if (this.hasProcesses(innerChild)) {\n                    this.selectObjects([innerChild], true);\n                }\n                this.unSelect(innerChild);\n            }\n        }\n    };\n    CommandHandler.prototype.selectGroup = function (newObj) {\n        for (var j = 0; j < newObj.children.length; j++) {\n            var innerChild = this.diagram.nameTable[newObj.children[j]];\n            if (innerChild.children) {\n                this.selectGroup(innerChild);\n            }\n            this.unSelect(this.diagram.nameTable[newObj.children[j]]);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.selectBpmnSubProcesses = function (node) {\n        var select = true;\n        var parent;\n        if (node.processId) {\n            if (isSelected(this.diagram, this.diagram.nameTable[node.processId])) {\n                select = false;\n            }\n            else {\n                select = this.selectBpmnSubProcesses(this.diagram.nameTable[node.processId]);\n            }\n        }\n        else if (node instanceof Connector) {\n            if (node.sourceID && this.diagram.nameTable[node.sourceID] &&\n                this.diagram.nameTable[node.sourceID].processId) {\n                parent = this.diagram.nameTable[node.sourceID].processId;\n            }\n            if (node.targetID && this.diagram.nameTable[node.targetID] &&\n                this.diagram.nameTable[node.targetID].processId) {\n                parent = this.diagram.nameTable[node.targetID].processId;\n            }\n            if (parent) {\n                if (isSelected(this.diagram, this.diagram.nameTable[parent])) {\n                    return false;\n                }\n                else {\n                    select = this.selectBpmnSubProcesses(this.diagram.nameTable[parent]);\n                }\n            }\n        }\n        return select;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.hasProcesses = function (node) {\n        if (node) {\n            if ((node.shape.type === 'Bpmn') && node.shape.activity &&\n                node.shape.activity.subProcess.processes &&\n                node.shape.activity.subProcess.processes.length > 0) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.select = function (obj, multipleSelection, preventUpdate) {\n        var hasLayer = this.getObjectLayer(obj.id);\n        if ((canSelect(obj) && !(obj instanceof Selector) && !isSelected(this.diagram, obj))\n            && (hasLayer && !hasLayer.lock && hasLayer.visible) && obj.wrapper.visible) {\n            multipleSelection = hasSelection(this.diagram) ? multipleSelection : false;\n            if (!multipleSelection) {\n                this.clearSelection();\n            }\n            var selectorModel = this.diagram.selectedItems;\n            var convert = obj;\n            if (convert instanceof Node) {\n                if (obj.isHeader) {\n                    var node = this.diagram.nameTable[obj.parentId];\n                    selectorModel.nodes.push(node);\n                }\n                else {\n                    selectorModel.nodes.push(obj);\n                }\n            }\n            else {\n                selectorModel.connectors.push(obj);\n            }\n            if (!multipleSelection) {\n                selectorModel.init(this.diagram);\n                if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                    var wrapper = gridSelection(this.diagram, selectorModel);\n                    if (wrapper) {\n                        selectorModel.wrapper.children[0] = wrapper;\n                    }\n                    selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                    selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n                }\n            }\n            else {\n                selectorModel.wrapper.rotateAngle = selectorModel.rotateAngle = 0;\n                selectorModel.wrapper.children.push(obj.wrapper);\n            }\n            if (!preventUpdate) {\n                this.diagram.renderSelector(multipleSelection);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelSelect = function (obj, textWrapper) {\n        var selectorModel = (this.diagram.selectedItems);\n        selectorModel.nodes = selectorModel.connectors = [];\n        if (obj instanceof Node) {\n            selectorModel.nodes[0] = obj;\n        }\n        else {\n            selectorModel.connectors[0] = obj;\n        }\n        selectorModel.annotation = (this.findTarget(textWrapper, obj));\n        selectorModel.init(this.diagram);\n        this.diagram.renderSelector(false);\n    };\n    /** @private */\n    CommandHandler.prototype.unSelect = function (obj) {\n        var objArray = [];\n        objArray.push(obj);\n        var arg = {\n            oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n            state: 'Changing', type: 'Removal', cancel: false\n        };\n        if (!this.diagram.currentSymbol) {\n            this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n        }\n        if (isSelected(this.diagram, obj)) {\n            var selectormodel = this.diagram.selectedItems;\n            var index = void 0;\n            if (obj instanceof Node) {\n                index = selectormodel.nodes.indexOf(obj, 0);\n                selectormodel.nodes.splice(index, 1);\n            }\n            else {\n                index = selectormodel.connectors.indexOf(obj, 0);\n                selectormodel.connectors.splice(index, 1);\n            }\n            arg = {\n                oldValue: objArray, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changed', type: 'Removal', cancel: false\n            };\n            if (!arg.cancel) {\n                index = selectormodel.wrapper.children.indexOf(obj.wrapper, 0);\n                selectormodel.wrapper.children.splice(index, 1);\n                this.diagram.updateSelector();\n                if (!this.diagram.currentSymbol) {\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.getChildElements = function (child) {\n        var children = [];\n        for (var i = 0; i < child.length; i++) {\n            var childNode = child[i];\n            if (childNode.children && childNode.children.length > 0) {\n                children.concat(this.getChildElements(childNode.children));\n            }\n            else {\n                children.push(childNode.id);\n                if (childNode instanceof TextElement) {\n                    children.push(childNode.id + '_text');\n                }\n            }\n        }\n        return children;\n    };\n    CommandHandler.prototype.moveSvgNode = function (nodeId, targetID) {\n        var diagramDiv = getDiagramElement(targetID + '_groupElement', this.diagram.element.id);\n        var backNode = getDiagramElement(nodeId + '_groupElement', this.diagram.element.id);\n        diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n    };\n    /** @private */\n    CommandHandler.prototype.sendLayerBackward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex !== 0) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var currentLayerObject = layer.objects;\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index - 1]).objects[0];\n                if (targetObject) {\n                    for (var _i = 0, currentLayerObject_1 = currentLayerObject; _i < currentLayerObject_1.length; _i++) {\n                        var obj = currentLayerObject_1[_i];\n                        this.moveSvgNode(obj, targetObject);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index - 1]);\n            targetLayer.zIndex = targetLayer.zIndex + 1;\n            layer.zIndex = layer.zIndex - 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index - 1];\n            this.diagram.layerZIndexTable[index - 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringLayerForward = function (layerName) {\n        var layer = this.getLayer(layerName);\n        if (layer && layer.zIndex < this.diagram.layers.length - 1) {\n            var index = layer.zIndex;\n            if (this.diagram.mode === 'SVG') {\n                var targetObject = this.getLayer(this.diagram.layerZIndexTable[index + 1]).objects[0];\n                var currentLayerObject = layer.objects;\n                for (var _i = 0, currentLayerObject_2 = currentLayerObject; _i < currentLayerObject_2.length; _i++) {\n                    var obj = currentLayerObject_2[_i];\n                    if (targetObject) {\n                        this.moveSvgNode(targetObject, obj);\n                    }\n                }\n            }\n            var targetLayer = this.getLayer(this.diagram.layerZIndexTable[index + 1]);\n            targetLayer.zIndex = targetLayer.zIndex - 1;\n            layer.zIndex = layer.zIndex + 1;\n            var temp = this.diagram.layerZIndexTable[index];\n            this.diagram.layerZIndexTable[index] = this.diagram.layerZIndexTable[index + 1];\n            this.diagram.layerZIndexTable[index + 1] = temp;\n            if (this.diagram.mode === 'Canvas') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendToBack = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var index = this.diagram.nameTable[objectId].zIndex;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            for (var i = index; i > 0; i--) {\n                if (zIndexTable[i]) {\n                    //When there are empty records in the zindex table\n                    if (!zIndexTable[i - 1]) {\n                        zIndexTable[i - 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i - 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects forward\n                        zIndexTable[i] = zIndexTable[i - 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[0] = this.diagram.nameTable[objectId].id;\n            this.diagram.nameTable[objectId].zIndex = 0;\n            if (this.diagram.mode === 'SVG') {\n                var i = 1;\n                var target = zIndexTable[i];\n                while (!target && i < index) {\n                    target = zIndexTable[++i];\n                }\n                this.moveSvgNode(objectId, target);\n                this.updateNativeNodeIndex(objectId);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.bringToFront = function () {\n        if (hasSelection(this.diagram)) {\n            var objectName = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectName));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            //find the maximum zIndex of the tabel\n            var tabelLength = Number(Object.keys(zIndexTable).sort(function (a, b) { return Number(a) - Number(b); }).reverse()[0]);\n            var index = this.diagram.nameTable[objectName].zIndex;\n            for (var i = index; i < tabelLength; i++) {\n                //When there are empty records in the zindex table\n                if (zIndexTable[i]) {\n                    if (!zIndexTable[i + 1]) {\n                        zIndexTable[i + 1] = zIndexTable[i];\n                        this.diagram.nameTable[zIndexTable[i + 1]].zIndex = i;\n                        delete zIndexTable[i];\n                    }\n                    else {\n                        //bringing the objects backward\n                        zIndexTable[i] = zIndexTable[i + 1];\n                        this.diagram.nameTable[zIndexTable[i]].zIndex = i;\n                    }\n                }\n            }\n            zIndexTable[tabelLength] = this.diagram.nameTable[objectName].id;\n            this.diagram.nameTable[objectName].zIndex = tabelLength;\n            if (this.diagram.mode === 'SVG') {\n                var diagramLayer = this.diagram.diagramLayer;\n                var child = this.getChildElements(this.diagram.nameTable[objectName].wrapper.children);\n                var targerNodes = [];\n                var element = getDiagramElement(objectName + '_groupElement', this.diagram.element.id);\n                element.parentNode.removeChild(element);\n                var nodes = this.diagram.selectedItems.nodes;\n                if (nodes.length > 0 && (nodes[0].shape.type === 'Native' || nodes[0].shape.type === 'HTML')) {\n                    for (var j = 0; j < this.diagram.views.length; j++) {\n                        element = getDiagramElement(objectName + (nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement'), this.diagram.views[j]);\n                        var lastChildNode = element.parentNode.lastChild;\n                        lastChildNode.parentNode.insertBefore(element, lastChildNode.nextSibling);\n                    }\n                }\n                var htmlLayer = getHTMLLayer(this.diagram.element.id);\n                this.diagram.diagramRenderer.renderElement(this.diagram.nameTable[objectName].wrapper, diagramLayer, htmlLayer);\n            }\n            else {\n                this.diagram.refreshCanvasLayers();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sortByZIndex = function (nodeArray, sortID) {\n        var id = sortID ? sortID : 'zIndex';\n        nodeArray = nodeArray.sort(function (a, b) {\n            return a[id] - b[id];\n        });\n        return nodeArray;\n    };\n    /** @private */\n    CommandHandler.prototype.sendForward = function () {\n        if (hasSelection(this.diagram)) {\n            var nodeId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerIndex = this.diagram.layers.indexOf(this.getObjectLayer(nodeId));\n            var zIndexTable = this.diagram.layers[layerIndex].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var index = this.diagram.nameTable[nodeId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(index.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_1 = temp; _i < temp_1.length; _i++) {\n                var i = temp_1[_i];\n                if (index.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerIndex === currentLayer && (Number(this.diagram.nameTable[nodeId].zIndex) < Number(i.zIndex)) &&\n                        index.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                        break;\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[0].zIndex;\n                var currentObject = index.zIndex;\n                var temp_2 = zIndexTable[overlapObject];\n                //swap the nodes\n                this.diagram.layers[0].zIndexTable[overlapObject] = index.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                this.diagram.layers[0].zIndexTable[currentObject] = intersectArray[0].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                    this.updateNativeNodeIndex(zIndexTable[Number(intersectArray[0].zIndex)], nodeId);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sendBackward = function () {\n        if (hasSelection(this.diagram)) {\n            var objectId = this.diagram.selectedItems.nodes.length ? this.diagram.selectedItems.nodes[0].id\n                : this.diagram.selectedItems.connectors[0].id;\n            var layerNum = this.diagram.layers.indexOf(this.getObjectLayer(objectId));\n            var zIndexTable = this.diagram.layers[layerNum].zIndexTable;\n            var tabelLength = Object.keys(zIndexTable).length;\n            var node = this.diagram.nameTable[objectId];\n            var intersectArray = [];\n            var temp = this.diagram.spatialSearch.findObjects(node.wrapper.bounds);\n            if (temp.length > 2) {\n                temp = this.sortByZIndex(temp);\n            }\n            for (var _i = 0, temp_3 = temp; _i < temp_3.length; _i++) {\n                var i = temp_3[_i];\n                if (node.id !== i.id) {\n                    var currentLayer = this.getObjectLayer(i.id).zIndex;\n                    if (layerNum === currentLayer && (Number(this.diagram.nameTable[objectId].zIndex) > Number(i.zIndex)) &&\n                        node.wrapper.bounds.intersects(i.wrapper.bounds)) {\n                        intersectArray.push(i);\n                    }\n                }\n            }\n            if (intersectArray.length > 0) {\n                var overlapObject = intersectArray[intersectArray.length - 1].zIndex;\n                var currentObject = node.zIndex;\n                var temp_4 = zIndexTable[overlapObject];\n                //swap the nodes\n                zIndexTable[overlapObject] = node.id;\n                this.diagram.nameTable[zIndexTable[overlapObject]].zIndex = overlapObject;\n                zIndexTable[currentObject] = intersectArray[intersectArray.length - 1].id;\n                this.diagram.nameTable[zIndexTable[currentObject]].zIndex = currentObject;\n                if (this.diagram.mode === 'SVG') {\n                    this.moveSvgNode(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                    this.updateNativeNodeIndex(objectId, zIndexTable[intersectArray[intersectArray.length - 1].zIndex]);\n                }\n                else {\n                    this.diagram.refreshCanvasLayers();\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.updateNativeNodeIndex = function (nodeId, targetID) {\n        var nodes = this.diagram.selectedItems.nodes;\n        for (var i = 0; i < this.diagram.views.length; i++) {\n            if (nodes.length > 0\n                && (nodes[0].shape.type === 'HTML'\n                    || nodes[0].shape.type === 'Native')) {\n                var id = nodes[0].shape.type === 'HTML' ? '_content_html_element' : '_content_groupElement';\n                var backNode = getDiagramElement(nodeId + id, this.diagram.views[i]);\n                var diagramDiv = targetID ? getDiagramElement(targetID + id, this.diagram.views[i])\n                    : backNode.parentElement.firstChild;\n                if (backNode.parentNode.id === diagramDiv.parentNode.id) {\n                    diagramDiv.parentNode.insertBefore(backNode, diagramDiv);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.initSelectorWrapper = function () {\n        var selectorModel = this.diagram.selectedItems;\n        selectorModel.init(this.diagram);\n        if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n            selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.rotateAngle = selectorModel.nodes[0].rotateAngle;\n            selectorModel.wrapper.pivot = selectorModel.nodes[0].pivot;\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.doRubberBandSelection = function (region) {\n        this.clearSelectionRectangle();\n        this.clearSelection();\n        var selArray = [];\n        var rubberArray = [];\n        selArray = this.diagram.getNodesConnectors(selArray);\n        if (this.diagram.selectedItems.rubberBandSelectionMode === 'CompleteIntersect') {\n            rubberArray = completeRegion(region, selArray);\n        }\n        else {\n            rubberArray = this.diagram.spatialSearch.findObjects(region);\n        }\n        if (rubberArray.length) {\n            this.selectObjects(rubberArray, true);\n        }\n    };\n    CommandHandler.prototype.clearSelectionRectangle = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var element = adornerSvg.getElementById(this.diagram.element.id + '_diagramAdorner_selected_region');\n        if (element) {\n            remove(element);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragConnectorEnds = function (endPoint, obj, point, segment, target, targetPortId) {\n        var selectorModel;\n        var connector;\n        var node;\n        var tx;\n        var segmentPoint;\n        var ty;\n        var index;\n        var checkBezierThumb = false;\n        if (obj instanceof Selector) {\n            selectorModel = obj;\n            connector = selectorModel.connectors[0];\n        }\n        else if (obj instanceof Connector && this.diagram.currentDrawingObject) {\n            this.clearSelection();\n            connector = this.diagram.currentDrawingObject;\n        }\n        if (endPoint === 'BezierSourceThumb' || endPoint === 'BezierTargetThumb') {\n            checkBezierThumb = true;\n        }\n        if (endPoint === 'ConnectorSourceEnd' || endPoint === 'BezierSourceThumb') {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint1.x : connector.sourcePoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint1.y : connector.sourcePoint.y);\n            return this.dragSourceEnd(connector, tx, ty, null, point, endPoint, undefined, target, targetPortId, undefined, segment);\n        }\n        else {\n            tx = point.x - (checkBezierThumb ? segment.bezierPoint2.x : connector.targetPoint.x);\n            ty = point.y - (checkBezierThumb ? segment.bezierPoint2.y : connector.targetPoint.y);\n            return this.dragTargetEnd(connector, tx, ty, null, point, endPoint, undefined, segment);\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.getSelectedObject = function () {\n        var selectormodel = this.diagram.selectedItems;\n        return (selectormodel.nodes).concat(selectormodel.connectors);\n    };\n    /** @private */\n    CommandHandler.prototype.clearSelection = function (triggerAction) {\n        if (hasSelection(this.diagram)) {\n            var selectormodel = this.diagram.selectedItems;\n            var arrayNodes = this.getSelectedObject();\n            if (this.diagram.currentSymbol) {\n                this.diagram.previousSelectedObject = arrayNodes;\n            }\n            var arg = {\n                oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                state: 'Changing', type: 'Removal', cancel: false\n            };\n            if (triggerAction) {\n                this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n            }\n            if (!arg.cancel) {\n                selectormodel.offsetX = 0;\n                selectormodel.offsetY = 0;\n                selectormodel.width = 0;\n                selectormodel.height = 0;\n                selectormodel.rotateAngle = 0;\n                selectormodel.nodes = [];\n                selectormodel.connectors = [];\n                selectormodel.wrapper = null;\n                selectormodel.annotation = undefined;\n                this.diagram.clearSelectorLayer();\n                if (triggerAction) {\n                    arg = {\n                        oldValue: arrayNodes, newValue: [], cause: this.diagram.diagramActions,\n                        state: 'Changed', type: 'Removal', cancel: false\n                    };\n                    this.diagram.triggerEvent(DiagramEvent.selectionChange, arg);\n                }\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeStackHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.diagram.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_stack_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderStackHighlighter = function (args, target) {\n        var source = this.diagram.selectedItems.nodes[0];\n        var symbolDrag;\n        var node;\n        var selectorModel;\n        if (!target) {\n            var objects = this.diagram.findObjectsUnderMouse(args.position);\n            target = this.diagram.findObjectUnderMouse(objects, 'Drag', true);\n            if (target && !(target.isLane || target.isPhase || target.isHeader)) {\n                for (var i = 0; i < objects.length; i++) {\n                    var laneNode = this.diagram.nameTable[objects[i].id];\n                    if (laneNode.isLane || laneNode.isPhase || laneNode.isHeader) {\n                        target = laneNode;\n                    }\n                }\n            }\n        }\n        if (source && target && target.isLane && source.shape && !source.shape.isPhase) {\n            node = this.diagram.nameTable[target.parentId];\n            if (this.diagram.currentSymbol && node.shape.type === 'SwimLane') {\n                symbolDrag = true;\n            }\n            if ((source && !source.parentId && source.shape.type !== 'SwimLane') ||\n                (source && source.parentId && this.diagram.nameTable[source.parentId] && this.diagram.nameTable[source.parentId].isLane &&\n                    (source.parentId !== target.parentId && source.parentId !== target.id))) {\n                selectorModel = this.diagram.selectedItems;\n                var canvas = gridSelection(this.diagram, selectorModel, target.id, true);\n                if (canvas) {\n                    selectorModel.wrapper.children[0] = canvas;\n                }\n                this.diagram.renderSelector(false, true);\n                selectorModel.wrapper.children[0] = selectorModel.nodes[0].wrapper;\n            }\n        }\n        if (source && target && target.parentId && source.shape && source.shape.isPhase) {\n            var node_2 = this.diagram.nameTable[target.parentId];\n            if (node_2.shape.type === 'SwimLane') {\n                this.diagram.selectedItems.wrapper.children[0] = this.diagram.nameTable[target.parentId].wrapper;\n                this.diagram.renderSelector(false, true);\n            }\n        }\n        if ((symbolDrag && this.diagram.currentSymbol.shape.isLane) || (source && target &&\n            source.parentId && target.parentId && !source.isPhase && (source.parentId === target.parentId)\n            && (source.id !== target.id) && node &&\n            (node.container && (node.container.type === 'Stack' || node.container.type === 'Grid')))) {\n            var canvas = void 0;\n            var value = node.container.orientation === 'Vertical';\n            var isVertical = node.container === 'Stack' ? value : !value;\n            if (node.container.type === 'Grid' && target.isLane &&\n                ((!this.diagram.currentSymbol &&\n                    (node.shape.orientation === 'Horizontal' && target.rowIndex !== source.rowIndex) ||\n                    (node.shape.orientation === 'Vertical' && target.columnIndex !== source.columnIndex))\n                    || (this.diagram.currentSymbol &&\n                        this.diagram.currentSymbol.shape.orientation === node.container.orientation))) {\n                selectorModel = this.diagram.selectedItems;\n                canvas = gridSelection(this.diagram, selectorModel, target.id, symbolDrag);\n            }\n            var wrapper = node.container.type === 'Stack' ? target.wrapper : canvas;\n            if (wrapper) {\n                renderStackHighlighter(wrapper, isVertical, args.position, this.diagram, false, true);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drag = function (obj, tx, ty) {\n        var tempNode;\n        var elements = [];\n        if (canMove(obj) && this.checkBoundaryConstraints(tx, ty, obj.wrapper.bounds) && canPageEditable(this.diagram)) {\n            if (obj instanceof Node) {\n                var oldValues = { offsetX: obj.offsetX, offsetY: obj.offsetY };\n                obj.offsetX += tx;\n                obj.offsetY += ty;\n                if (obj.children && !(obj.container)) {\n                    var nodes = this.getAllDescendants(obj, elements);\n                    for (var i = 0; i < nodes.length; i++) {\n                        tempNode = (this.diagram.nameTable[nodes[i].id]);\n                        this.drag(tempNode, tx, ty);\n                    }\n                    this.updateInnerParentProperties(obj);\n                }\n                if (checkParentAsContainer(this.diagram, obj, true)) {\n                    checkChildNodeInContainer(this.diagram, obj);\n                }\n                else {\n                    if (obj && obj.shape && obj.shape.type === 'UmlClassifier') {\n                        obj.wrapper.measureChildren = true;\n                    }\n                    this.diagram.nodePropertyChange(obj, oldValues, { offsetX: obj.offsetX, offsetY: obj.offsetY });\n                    obj.wrapper.measureChildren = false;\n                }\n                if (obj.shape.type === 'SwimLane' && !this.diagram.currentSymbol) {\n                    var grid = obj.wrapper.children[0];\n                    var connectors = getConnectors(this.diagram, grid, 0, true);\n                    updateConnectorsProperties(connectors, this.diagram);\n                }\n            }\n            else {\n                var connector = obj;\n                var update = connector.type === 'Bezier' ? true : false;\n                var hasEnds = false;\n                if (!connector.sourceWrapper) {\n                    this.dragSourceEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!connector.targetWrapper) {\n                    this.dragTargetEnd(connector, tx, ty, true, null, '', update);\n                }\n                else {\n                    hasEnds = true;\n                }\n                if (!hasEnds) {\n                    this.dragControlPoint(connector, tx, ty, true);\n                    var conn = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, conn);\n                }\n            }\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.connectorSegmentChange = function (actualObject, existingInnerBounds, isRotate) {\n        var tx;\n        var ty;\n        var segmentChange = true;\n        if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n            if (actualObject.outEdges.length > 0) {\n                for (var k = 0; k < actualObject.outEdges.length; k++) {\n                    var connector = this.diagram.nameTable[actualObject.outEdges[k]];\n                    if (connector.targetID !== '') {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.targetID]) ? false : true;\n                    }\n                    else {\n                        segmentChange = this.isSelected(this.diagram.nameTable[connector.id]) ? false : true;\n                    }\n                    if (connector.type === 'Orthogonal' && connector.segments && connector.segments.length > 1) {\n                        if (!isRotate) {\n                            if (segmentChange) {\n                                switch (connector.segments[0].direction) {\n                                    case 'Bottom':\n                                        tx = actualObject.wrapper.bounds.bottomCenter.x - existingInnerBounds.bottomCenter.x;\n                                        ty = actualObject.wrapper.bounds.bottomCenter.y - existingInnerBounds.bottomCenter.y;\n                                        break;\n                                    case 'Top':\n                                        tx = actualObject.wrapper.bounds.topCenter.x - existingInnerBounds.topCenter.x;\n                                        ty = actualObject.wrapper.bounds.topCenter.y - existingInnerBounds.topCenter.y;\n                                        break;\n                                    case 'Left':\n                                        tx = actualObject.wrapper.bounds.middleLeft.x - existingInnerBounds.middleLeft.x;\n                                        ty = actualObject.wrapper.bounds.middleLeft.y - existingInnerBounds.middleLeft.y;\n                                        break;\n                                    case 'Right':\n                                        tx = actualObject.wrapper.bounds.middleRight.x - existingInnerBounds.middleRight.x;\n                                        ty = actualObject.wrapper.bounds.middleRight.y - existingInnerBounds.middleRight.y;\n                                        break;\n                                }\n                                this.dragSourceEnd(connector, tx, ty, true, null, 'ConnectorSourceEnd', undefined, undefined, undefined, true);\n                            }\n                        }\n                        else {\n                            var firstSegment = connector.segments[0];\n                            var secondSegment = connector.segments[1];\n                            var cornerPoints = swapBounds(actualObject.wrapper, actualObject.wrapper.corners, actualObject.wrapper.bounds);\n                            var sourcePoint = findPoint(cornerPoints, firstSegment.direction);\n                            sourcePoint = getIntersection(connector, connector.sourceWrapper, sourcePoint, { x: connector.sourceWrapper.offsetX, y: connector.sourceWrapper.offsetY }, false);\n                            var source = {\n                                corners: undefined, point: sourcePoint, margin: undefined, direction: firstSegment.direction\n                            };\n                            var target = {\n                                corners: undefined, point: secondSegment.points[1], margin: undefined, direction: undefined\n                            };\n                            var intermediatePoints = orthoConnection2Segment(source, target);\n                            firstSegment.length = Point.distancePoints(intermediatePoints[0], intermediatePoints[1]);\n                            if (secondSegment.direction && secondSegment.length) {\n                                secondSegment.length = Point.distancePoints(intermediatePoints[1], intermediatePoints[2]);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.updateEndPoint = function (connector) {\n        var conn = {\n            sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint,\n            sourceID: connector.sourceID ? connector.sourceID : undefined,\n            targetID: connector.targetID ? connector.targetID : undefined,\n            sourcePortID: connector.sourcePortID ? connector.sourcePortID : undefined,\n            targetPortID: connector.targetPortID ? connector.targetPortID : undefined,\n            segments: connector.segments ? connector.segments : undefined\n        };\n        this.diagram.connectorPropertyChange(connector, {}, conn);\n        // this.diagram.refreshDiagramLayer();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.dragSourceEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, target, targetPortId, isDragSource, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var checkBoundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragSourceEnd(connector) && checkBoundaryConstraints\n            && (endPoint !== 'BezierSourceThumb') && canPageEditable(this.diagram)) {\n            connector.sourcePoint.x += tx;\n            connector.sourcePoint.y += ty;\n            if (endPoint === 'ConnectorSourceEnd' && connector.type === 'Orthogonal') {\n                this.changeSegmentLength(connector, target, targetPortId, isDragSource);\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorSourceEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Upadte the connector segments when change the source node\n     */\n    CommandHandler.prototype.changeSegmentLength = function (connector, target, targetPortId, isDragSource) {\n        if (connector.segments && connector.segments[0].direction !== null\n            && ((!target && connector.sourceID === '') || isDragSource)) {\n            var first = connector.segments[0];\n            var second = connector.segments[1];\n            var node = this.diagram.nameTable[connector.sourceID];\n            var secPoint = void 0;\n            first.points[0] = connector.sourcePoint;\n            if (first.direction === 'Top' || first.direction === 'Bottom') {\n                first.points[first.points.length - 1].x = connector.sourcePoint.x;\n                second.points[0].y = first.points[first.points.length - 1].y;\n            }\n            else {\n                first.points[first.points.length - 1].y = connector.sourcePoint.y;\n                second.points[0].x = first.points[first.points.length - 1].x;\n            }\n            if (first.direction && (first.length || first.length === 0)) {\n                first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n            }\n            if (second.direction && (second.length || second.length === 0)) {\n                second.length = Point.distancePoints(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n                second.direction = Point.direction(first.points[first.points.length - 1], second.points[second.points.length - 1]);\n            }\n            if (connector.sourcePortID !== '' && first.length < 10) {\n                if (connector.segments.length > 2) {\n                    var next = connector.segments[2];\n                    var nextDirection = Point.direction(next.points[0], next.points[1]);\n                    if (first.direction === getOppositeDirection(nextDirection)) {\n                        if (first.direction === 'Right') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleRight.x + 20;\n                        }\n                        else if (first.direction === 'Left') {\n                            next.points[0].x = first.points[first.points.length - 1].x = node.wrapper.corners.middleLeft.x - 20;\n                        }\n                        else if (first.direction === 'Top') {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.topCenter.y - 20;\n                        }\n                        else {\n                            next.points[0].y = first.points[first.points.length - 1].y = node.wrapper.corners.bottomCenter.y + 20;\n                        }\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        }\n                        first.length = Point.distancePoints(first.points[0], first.points[first.points.length - 1]);\n                    }\n                    else if (first.direction === nextDirection && next.direction && next.length) {\n                        if (first.direction === 'Top' || first.direction === 'Bottom') {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].x = next.points[0].x;\n                        }\n                        else {\n                            next.points[0] = first.points[0];\n                            next.points[next.points.length - 1].y = next.points[0].y;\n                        }\n                        next.length = Point.distancePoints(next.points[0], next.points[next.points.length - 1]);\n                        connector.segments.splice(0, 2);\n                    }\n                    else {\n                        first.length = 20;\n                    }\n                }\n                else {\n                    first.length = 20;\n                }\n            }\n            else if (first.length < 1) {\n                if (connector.sourceID !== '') {\n                    if (second.direction === 'Right') {\n                        secPoint = node.wrapper.corners.middleRight;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Left') {\n                        secPoint = node.wrapper.corners.middleLeft;\n                        second.points[second.points.length - 1].y = secPoint.y;\n                    }\n                    else if (second.direction === 'Top') {\n                        secPoint = node.wrapper.corners.topCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    else {\n                        secPoint = node.wrapper.corners.bottomCenter;\n                        second.points[second.points.length - 1].x = secPoint.x;\n                    }\n                    second.length = Point.distancePoints(secPoint, second.points[second.points.length - 1]);\n                    if (connector.segments.length > 2) {\n                        var next = connector.segments[2];\n                        if (next.direction && next.length) {\n                            next.length = Point.distancePoints(second.points[second.points.length - 1], next.points[next.points.length - 1]);\n                        }\n                    }\n                    connector.segments.splice(0, 1);\n                }\n                else {\n                    connector.segments.splice(0, 1);\n                }\n            }\n        }\n        else {\n            if (target && !targetPortId && connector.sourceID !== target.id &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToNode(connector, target);\n            }\n            if (target && targetPortId && connector.sourcePortID !== targetPortId &&\n                connector.segments && connector.segments[0].direction !== null && target && target instanceof Node) {\n                this.changeSourceEndToPort(connector, target, targetPortId);\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint to port\n     */\n    CommandHandler.prototype.changeSourceEndToPort = function (connector, target, targetPortId) {\n        var port = this.diagram.getWrapper(target.wrapper, targetPortId);\n        var point = { x: port.offsetX, y: port.offsetY };\n        var direction = getPortDirection(point, cornersPointsBeforeRotation(target.wrapper), target.wrapper.bounds, false);\n        var firstSegment = connector.segments[0];\n        var secondSegment = connector.segments[1];\n        if (firstSegment.direction !== direction) {\n            var segments = [];\n            var segValues = {};\n            if (firstSegment.direction === getOppositeDirection(direction)) {\n                segValues = {};\n                var segValues1 = void 0;\n                if (direction === 'Top' || direction === 'Bottom') {\n                    segValues1 = (direction === 'Top') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].y - point.y)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.y - firstSegment.points[0].y)\n                        };\n                    segValues = (firstSegment.points[0].x > point.x) ?\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Right', length: (firstSegment.points[0].x - point.x) } :\n                        { type: 'Orthogonal', isTerminal: true, direction: 'Left', length: (point.x - firstSegment.points[0].x) };\n                }\n                else {\n                    segValues1 = (direction === 'Right') ? {\n                        type: 'Orthogonal', isTerminal: true, direction: direction,\n                        length: Math.abs(firstSegment.points[0].x - point.x)\n                    } :\n                        {\n                            type: 'Orthogonal', isTerminal: true, direction: direction,\n                            length: Math.abs(point.x - firstSegment.points[0].x)\n                        };\n                    segValues = (firstSegment.points[0].y > point.y) ?\n                        { type: 'Orthogonal', direction: 'Top', isTerminal: true, length: (firstSegment.points[0].y - point.y) } :\n                        { type: 'Orthogonal', direction: 'Bottom', isTerminal: true, length: (point.y - firstSegment.points[0].y) };\n                }\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues1, true));\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            else {\n                segValues = { type: 'Orthogonal', direction: direction, length: 20, isTerminal: true };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n            }\n            if (firstSegment.direction !== getOppositeDirection(direction)) {\n                if (direction === 'Top' || direction === 'Bottom') {\n                    firstSegment.points[0].x = point.x;\n                    firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = (direction === 'Top') ?\n                        point.y - 20 : point.y + 20;\n                }\n                else {\n                    firstSegment.points[0].y = point.y;\n                    firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = (direction === 'Right') ?\n                        point.x + 20 : point.x - 20;\n                }\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n            }\n            connector.segments = segments.concat(connector.segments);\n        }\n        else {\n            firstSegment.points[0] = point;\n            if (direction === 'Top' || direction === 'Bottom') {\n                firstSegment.points[firstSegment.points.length - 1].x = point.x;\n            }\n            else {\n                firstSegment.points[firstSegment.points.length - 1].y = point.y;\n            }\n            firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n            secondSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], secondSegment.points[secondSegment.points.length - 1]);\n        }\n    };\n    /**\n     * @private\n     * Remove terinal segment in initial\n     */\n    CommandHandler.prototype.removeTerminalSegment = function (connector, changeTerminal) {\n        for (var i = 0; i < connector.segments.length - 2; i++) {\n            var segment = connector.segments[0];\n            if (segment.isTerminal) {\n                if (changeTerminal) {\n                    segment.isTerminal = false;\n                }\n                else {\n                    connector.segments.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n    };\n    /**\n     * Change the connector endPoint from point to node\n     */\n    CommandHandler.prototype.changeSourceEndToNode = function (connector, target) {\n        this.removeTerminalSegment(connector);\n        var sourceWrapper = target.wrapper.children[0].corners;\n        var sourcePoint;\n        var sourcePoint2;\n        var firstSegment = connector.segments[0];\n        var nextSegment = connector.segments[1];\n        var segments = [];\n        if (firstSegment.direction === 'Right' || firstSegment.direction === 'Left') {\n            sourcePoint = (firstSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n            if (firstSegment.length > sourceWrapper.width || ((firstSegment.direction === 'Left' &&\n                sourcePoint.x >= firstSegment.points[0].x) || (firstSegment.direction === 'Right' &&\n                sourcePoint.x <= firstSegment.points[0].x))) {\n                firstSegment.points[0].y = firstSegment.points[firstSegment.points.length - 1].y = sourcePoint.y;\n                firstSegment.points[0].x = sourcePoint.x;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                sourcePoint2 = (direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Top') ? firstSegment.points[firstSegment.points.length - 1].y - (sourcePoint2.y + 20) :\n                            (sourcePoint2.y + 20) - firstSegment.points[firstSegment.points.length - 1].y;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].x - sourcePoint2.x;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Right' : 'Left';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n        else {\n            sourcePoint = (firstSegment.direction === 'Bottom') ? sourceWrapper.bottomCenter : sourceWrapper.topCenter;\n            if (firstSegment.length > sourceWrapper.height || ((firstSegment.direction === 'Top' &&\n                sourcePoint.y >= firstSegment.points[0].y) ||\n                (firstSegment.direction === 'Bottom' && sourcePoint.y <= firstSegment.points[0].y))) {\n                firstSegment.points[0].x = firstSegment.points[firstSegment.points.length - 1].x = sourcePoint.x;\n                firstSegment.points[0].y = sourcePoint.y;\n                firstSegment.length = Point.distancePoints(firstSegment.points[0], firstSegment.points[firstSegment.points.length - 1]);\n                nextSegment.length = Point.distancePoints(firstSegment.points[firstSegment.points.length - 1], nextSegment.points[nextSegment.points.length - 1]);\n            }\n            else {\n                sourcePoint2 = (nextSegment.direction === 'Left') ? sourceWrapper.middleLeft : sourceWrapper.middleRight;\n                var direction = void 0;\n                if (nextSegment.direction) {\n                    direction = nextSegment.direction;\n                }\n                else {\n                    direction = Point.direction(nextSegment.points[0], nextSegment.points[nextSegment.points.length - 1]);\n                }\n                if (nextSegment.length && nextSegment.direction) {\n                    nextSegment.length =\n                        (direction === 'Left') ? firstSegment.points[firstSegment.points.length - 1].x - (sourcePoint2.x + 20) :\n                            (sourcePoint2.x + 20) - firstSegment.points[firstSegment.points.length - 1].x;\n                }\n                firstSegment.length = firstSegment.points[firstSegment.points.length - 1].y - sourcePoint2.y;\n                firstSegment.direction = (firstSegment.length > 0) ? 'Bottom' : 'Top';\n                var segValues = { type: 'Orthogonal', direction: direction, length: 20 };\n                segments.push(new OrthogonalSegment(connector, 'segments', segValues, true));\n                connector.segments = segments.concat(connector.segments);\n            }\n        }\n    };\n    /**\n     * Translate the bezier points during the interaction\n     */\n    CommandHandler.prototype.translateBezierPoints = function (connector, value, tx, ty, seg, point, update) {\n        var index = (connector.segments.indexOf(seg));\n        var segment = connector.segments[index];\n        if (segment) {\n            if (value === 'BezierSourceThumb' && (segment.vector1.angle || segment.vector1.distance)) {\n                segment.vector1 = {\n                    distance: connector.distance(connector.sourcePoint, point),\n                    angle: Point.findAngle(connector.sourcePoint, point),\n                };\n            }\n            else if (value === 'BezierTargetThumb' && (segment.vector2.angle || segment.vector2.distance)) {\n                segment.vector2 = {\n                    distance: connector.distance(connector.targetPoint, point),\n                    angle: Point.findAngle(connector.targetPoint, point),\n                };\n            }\n            else if ((value === 'ConnectorSourceEnd' && !connector.sourceID || value === 'ConnectorTargetEnd' && !connector.targetID)\n                && update && isEmptyVector(segment.vector1) && isEmptyVector(segment.vector2)) {\n                if (Point.isEmptyPoint(segment.point1)) {\n                    segment.bezierPoint1 = getBezierPoints(connector.sourcePoint, connector.targetPoint);\n                }\n                if (Point.isEmptyPoint(segment.point2)) {\n                    segment.bezierPoint2 = getBezierPoints(connector.targetPoint, connector.sourcePoint);\n                }\n            }\n            else if (value === 'BezierSourceThumb' || (value === 'ConnectorSourceEnd' && !update && isEmptyVector(segment.vector1))) {\n                segment.bezierPoint1.x += tx;\n                segment.bezierPoint1.y += ty;\n                if ((!Point.isEmptyPoint(segment.point1)) || (update)) {\n                    segment.point1 = { x: segment.bezierPoint1.x, y: segment.bezierPoint1.y };\n                }\n            }\n            else if (value === 'BezierTargetThumb' || (value === 'ConnectorTargetEnd' && !update && isEmptyVector(segment.vector2))) {\n                segment.bezierPoint2.x += tx;\n                segment.bezierPoint2.y += ty;\n                if ((!Point.isEmptyPoint(segment.point2)) || (update)) {\n                    segment.point2 = { x: segment.bezierPoint2.x, y: segment.bezierPoint2.y };\n                }\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dragTargetEnd = function (obj, tx, ty, preventUpdate, point, endPoint, update, segment) {\n        var connector = this.diagram.nameTable[obj.id];\n        var boundaryConstraints = this.checkBoundaryConstraints(tx, ty, connector.wrapper.bounds);\n        if (canDragTargetEnd(connector) && endPoint !== 'BezierTargetThumb'\n            && boundaryConstraints && canPageEditable(this.diagram)) {\n            connector.targetPoint.x += tx;\n            connector.targetPoint.y += ty;\n            if (endPoint === 'ConnectorTargetEnd' && connector.type === 'Orthogonal' &&\n                connector.segments && connector.segments.length > 0) {\n                var prev = connector.segments[connector.segments.length - 2];\n                if (prev && connector.segments[connector.segments.length - 1].points.length === 2) {\n                    if (prev.direction === 'Left' || prev.direction === 'Right') {\n                        prev.points[prev.points.length - 1].x = connector.targetPoint.x;\n                    }\n                    else {\n                        prev.points[prev.points.length - 1].y = connector.targetPoint.y;\n                    }\n                    prev.length = Point.distancePoints(prev.points[0], prev.points[prev.points.length - 1]);\n                    prev.direction = Point.direction(prev.points[0], prev.points[prev.points.length - 1]);\n                }\n            }\n        }\n        if (connector.type === 'Bezier') {\n            if (segment) {\n                this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, segment, point, !update);\n            }\n            else {\n                for (var i = 0; i < obj.segments.length; i++) {\n                    this.translateBezierPoints(obj, (endPoint === '') ? 'ConnectorTargetEnd' : endPoint, tx, ty, obj.segments[i], point, !update);\n                }\n            }\n        }\n        if (!preventUpdate) {\n            this.updateEndPoint(connector);\n        }\n        this.diagram.refreshCanvasLayers();\n        return boundaryConstraints;\n    };\n    /** @private */\n    CommandHandler.prototype.dragControlPoint = function (obj, tx, ty, preventUpdate, segmentNumber) {\n        var connector = this.diagram.nameTable[obj.id];\n        if ((connector.type === 'Straight' || connector.type === 'Bezier') && connector.segments.length > 0) {\n            if (segmentNumber !== undefined && connector.segments[segmentNumber]) {\n                connector.segments[segmentNumber].point.x += tx;\n                connector.segments[segmentNumber].point.y += ty;\n            }\n            else {\n                for (var i = 0; i < connector.segments.length - 1; i++) {\n                    connector.segments[i].point.x += tx;\n                    connector.segments[i].point.y += ty;\n                }\n            }\n            if (!preventUpdate) {\n                this.updateEndPoint(connector);\n            }\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.rotateObjects = function (parent, objects, angle, pivot, includeParent) {\n        pivot = pivot || {};\n        var matrix = identityMatrix();\n        rotateMatrix(matrix, angle, pivot.x, pivot.y);\n        for (var _i = 0, objects_2 = objects; _i < objects_2.length; _i++) {\n            var obj = objects_2[_i];\n            if (obj instanceof Node) {\n                if (canRotate(obj) && canPageEditable(this.diagram)) {\n                    if (includeParent !== false || parent !== obj) {\n                        obj.rotateAngle += angle;\n                        obj.rotateAngle = (obj.rotateAngle + 360) % 360;\n                        var newOffset = transformPointByMatrix(matrix, { x: obj.offsetX, y: obj.offsetY });\n                        obj.offsetX = newOffset.x;\n                        obj.offsetY = newOffset.y;\n                        this.diagram.nodePropertyChange(obj, {}, { offsetX: obj.offsetX, offsetY: obj.offsetY, rotateAngle: obj.rotateAngle });\n                    }\n                    if (obj.processId) {\n                        var parent_1 = this.diagram.nameTable[obj.processId];\n                        var bound = this.diagram.bpmnModule.getChildrenBound(parent_1, obj.id, this.diagram);\n                        this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n                    }\n                    if (obj.children && obj.children.length && !obj.container) {\n                        this.getChildren(obj, objects);\n                    }\n                }\n            }\n            else {\n                this.rotatePoints(obj, angle, pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY });\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        this.diagram.refreshCanvasLayers();\n        this.diagram.updateSelector();\n    };\n    /** @private */\n    CommandHandler.prototype.snapConnectorEnd = function (currentPosition) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            this.diagram.snappingModule.snapConnectorEnd(currentPosition);\n        }\n        return currentPosition;\n    };\n    /**   @private  */\n    CommandHandler.prototype.snapAngle = function (angle) {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToLines)\n            && this.snappingModule) {\n            return this.snappingModule.snapAngle(this.diagram, angle);\n        }\n        else {\n            return 0;\n        }\n    };\n    /**   @private  */\n    CommandHandler.prototype.rotatePoints = function (conn, angle, pivot) {\n        if (!conn.sourceWrapper || !conn.targetWrapper) {\n            var matrix = identityMatrix();\n            rotateMatrix(matrix, angle, pivot.x, pivot.y);\n            conn.sourcePoint = transformPointByMatrix(matrix, conn.sourcePoint);\n            conn.targetPoint = transformPointByMatrix(matrix, conn.targetPoint);\n            var newProp = { sourcePoint: conn.sourcePoint, targetPoint: conn.targetPoint };\n            this.diagram.connectorPropertyChange(conn, {}, newProp);\n        }\n    };\n    CommandHandler.prototype.updateInnerParentProperties = function (tempNode) {\n        var elements = [];\n        var protect = 'isProtectedOnChange';\n        var protectChange = this.diagram[protect];\n        this.diagram.protectPropertyChange(true);\n        var innerParents = this.getAllDescendants(tempNode, elements, false, true);\n        for (var i = 0; i < innerParents.length; i++) {\n            var obj = this.diagram.nameTable[innerParents[i].id];\n            obj.offsetX = obj.wrapper.offsetX;\n            obj.offsetY = obj.wrapper.offsetY;\n            obj.width = obj.wrapper.width;\n            obj.height = obj.wrapper.height;\n        }\n        this.diagram.protectPropertyChange(protectChange);\n    };\n    /** @private */\n    CommandHandler.prototype.scale = function (obj, sw, sh, pivot, refObject) {\n        var node = this.diagram.nameTable[obj.id];\n        var tempNode = node;\n        var elements = [];\n        var element = node.wrapper;\n        if (!refObject) {\n            refObject = obj;\n        }\n        var refWrapper = refObject.wrapper;\n        var x = refWrapper.offsetX - refWrapper.actualSize.width * refWrapper.pivot.x;\n        var y = refWrapper.offsetY - refWrapper.actualSize.height * refWrapper.pivot.y;\n        var refPoint = getPoint(x, y, refWrapper.actualSize.width, refWrapper.actualSize.height, refWrapper.rotateAngle, refWrapper.offsetX, refWrapper.offsetY, pivot);\n        if (element.actualSize.width !== undefined && element.actualSize.height !== undefined && canPageEditable(this.diagram)) {\n            if (tempNode.children && !(tempNode.container)) {\n                var nodes = this.getAllDescendants(tempNode, elements);\n                for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                    var temp = nodes_1[_i];\n                    this.scaleObject(sw, sh, refPoint, temp, element, refObject);\n                }\n                obj.wrapper.measure(new Size());\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                this.diagram.updateGroupOffset(node);\n                this.updateInnerParentProperties(tempNode);\n            }\n            else {\n                this.scaleObject(sw, sh, refPoint, node, element, refObject);\n            }\n            var bounds = getBounds(obj.wrapper);\n            var checkBoundaryConstraints = this.checkBoundaryConstraints(undefined, undefined, bounds);\n            if (!checkBoundaryConstraints) {\n                this.scale(obj, 1 / sw, 1 / sh, pivot);\n                return false;\n            }\n            this.diagram.updateDiagramObject(obj);\n        }\n        return true;\n    };\n    /** @private */\n    CommandHandler.prototype.getAllDescendants = function (node, nodes, includeParent, innerParent) {\n        var temp = node;\n        var parentNodes = [];\n        for (var i = 0; i < temp.children.length; i++) {\n            node = (this.diagram.nameTable[temp.children[i]]);\n            if (node) {\n                if (!node.children) {\n                    nodes.push(node);\n                }\n                else {\n                    if (includeParent) {\n                        nodes.push(node);\n                    }\n                    if (innerParent) {\n                        parentNodes.push(node);\n                    }\n                    nodes = this.getAllDescendants(node, nodes);\n                }\n            }\n        }\n        return (innerParent) ? parentNodes : nodes;\n    };\n    /**   @private  */\n    CommandHandler.prototype.getChildren = function (node, nodes) {\n        var temp = node;\n        if (node.children) {\n            for (var i = 0; i < temp.children.length; i++) {\n                node = (this.diagram.nameTable[temp.children[i]]);\n                nodes.push(node);\n            }\n        }\n        return nodes;\n    };\n    /** @private */\n    CommandHandler.prototype.cloneChild = function (id) {\n        var node = this.diagram.nameTable[id];\n        return node;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleObject = function (sw, sh, pivot, obj, element, refObject) {\n        sw = sw < 0 ? 1 : sw;\n        sh = sh < 0 ? 1 : sh;\n        var process;\n        var oldValues = {\n            offsetX: obj.wrapper.offsetX, offsetY: obj.wrapper.offsetY,\n            width: obj.wrapper.actualSize.width, height: obj.wrapper.actualSize.height\n        };\n        if (sw !== 1 || sh !== 1) {\n            var width = void 0;\n            var height = void 0;\n            if (obj instanceof Node) {\n                var node = obj;\n                var isResize = void 0;\n                var bound = void 0;\n                if (node.shape.type === 'Bpmn' && node.shape.activity.subProcess.processes\n                    && node.shape.activity.subProcess.processes.length > 0) {\n                    bound = this.diagram.bpmnModule.getChildrenBound(node, node.id, this.diagram);\n                    isResize = node.wrapper.bounds.containsRect(bound);\n                }\n                width = node.wrapper.actualSize.width * sw;\n                height = node.wrapper.actualSize.height * sh;\n                if (node.maxWidth !== undefined && node.maxWidth !== 0) {\n                    width = Math.min(node.maxWidth, width);\n                }\n                if (node.minWidth !== undefined && node.minWidth !== 0) {\n                    width = Math.max(node.minWidth, width);\n                }\n                if (node.maxHeight !== undefined && node.maxHeight !== 0) {\n                    height = Math.min(node.maxHeight, height);\n                }\n                if (node.minHeight !== undefined && node.minHeight !== 0) {\n                    height = Math.max(node.minHeight, height);\n                }\n                if (isResize) {\n                    width = Math.max(width, (bound.right - node.wrapper.bounds.x));\n                    height = Math.max(height, (bound.bottom - node.wrapper.bounds.y));\n                }\n                sw = width / node.actualSize.width;\n                sh = height / node.actualSize.height;\n            }\n            var matrix = identityMatrix();\n            var refWrapper = void 0;\n            if (!refObject) {\n                refObject = obj;\n            }\n            refWrapper = refObject.wrapper;\n            rotateMatrix(matrix, -refWrapper.rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, sw, sh, pivot.x, pivot.y);\n            rotateMatrix(matrix, refWrapper.rotateAngle, pivot.x, pivot.y);\n            if (obj instanceof Node) {\n                var node = obj;\n                var left = void 0;\n                var top_1;\n                var newPosition = transformPointByMatrix(matrix, { x: node.wrapper.offsetX, y: node.wrapper.offsetY });\n                var oldleft = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                var oldtop = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                if (width > 0) {\n                    if (node.processId) {\n                        var parent_2 = this.diagram.nameTable[node.processId];\n                        if (!parent_2.maxWidth || ((node.margin.left + width) < parent_2.maxWidth)) {\n                            node.width = width;\n                            node.offsetX = newPosition.x;\n                        }\n                    }\n                    else {\n                        node.width = width;\n                        node.offsetX = newPosition.x;\n                    }\n                }\n                if (height > 0) {\n                    if (node.processId) {\n                        var parent_3 = this.diagram.nameTable[node.processId];\n                        if (!parent_3.maxHeight || ((node.margin.top + height) < parent_3.maxHeight)) {\n                            node.height = height;\n                            node.offsetY = newPosition.y;\n                        }\n                    }\n                    else {\n                        node.height = height;\n                        node.offsetY = newPosition.y;\n                    }\n                }\n                left = node.wrapper.offsetX - node.wrapper.actualSize.width * node.pivot.x;\n                top_1 = node.wrapper.offsetY - node.wrapper.actualSize.height * node.pivot.y;\n                var parent_4 = this.diagram.nameTable[node.processId];\n                if (parent_4 && ((node.margin.top + (top_1 - oldtop)) <= 0 ||\n                    (node.margin.left + (left - oldleft) <= 0))) {\n                    this.diagram.nodePropertyChange(obj, {}, {\n                        margin: { top: node.margin.top, left: node.margin.left }\n                    });\n                }\n                else {\n                    if (checkParentAsContainer(this.diagram, obj, true)) {\n                        checkChildNodeInContainer(this.diagram, obj);\n                    }\n                    else {\n                        this.diagram.nodePropertyChange(obj, {}, {\n                            width: node.width, height: node.height, offsetX: node.offsetX, offsetY: node.offsetY,\n                            margin: { top: node.margin.top + (top_1 - oldtop), left: node.margin.left + (left - oldleft) }\n                        });\n                    }\n                }\n            }\n            else {\n                var connector = obj;\n                if (!connector.sourceWrapper || !connector.targetWrapper) {\n                    connector.sourcePoint = transformPointByMatrix(matrix, connector.sourcePoint);\n                    connector.targetPoint = transformPointByMatrix(matrix, connector.targetPoint);\n                    var newProp = { sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint };\n                    this.diagram.connectorPropertyChange(connector, {}, newProp);\n                }\n            }\n            var parentNode = this.diagram.nameTable[obj.processId];\n            if (parentNode) {\n                var parent_5 = parentNode.wrapper.bounds;\n                var child = obj.wrapper.bounds;\n                var bound = this.diagram.bpmnModule.getChildrenBound(parentNode, obj.id, this.diagram);\n                this.diagram.bpmnModule.updateSubProcessess(bound, obj, this.diagram);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.portDrag = function (obj, portElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var port = this.findTarget(portElement, obj);\n        var bounds = getBounds(obj.wrapper);\n        if (port && canDrag(port, this.diagram)) {\n            oldValues = this.getPortChanges(obj, port);\n            port.offset.x += (tx / bounds.width);\n            port.offset.y += (ty / bounds.height);\n            changedvalues = this.getPortChanges(obj, port);\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.labelDrag = function (obj, textElement, tx, ty) {\n        var oldValues;\n        var changedvalues;\n        var label;\n        label = this.findTarget(textElement, obj);\n        var bounds = cornersPointsBeforeRotation(obj.wrapper);\n        oldValues = this.getAnnotationChanges(obj, label);\n        if (label instanceof ShapeAnnotation) {\n            label.offset.x += (tx / bounds.width);\n            label.offset.y += (ty / bounds.height);\n        }\n        else {\n            this.updatePathAnnotationOffset(obj, label, tx, ty);\n            if (label instanceof PathAnnotation) {\n                label.alignment = 'Center';\n            }\n        }\n        changedvalues = this.getAnnotationChanges(obj, label);\n        if (obj instanceof Node) {\n            this.diagram.nodePropertyChange(obj, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(obj, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(obj);\n        if (!isSelected(this.diagram, label, false, textElement)) {\n            this.labelSelect(obj, textElement);\n        }\n    };\n    CommandHandler.prototype.updatePathAnnotationOffset = function (object, label, tx, ty, newPosition, size) {\n        var textWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var offsetX = textWrapper.offsetX;\n        var offsetY = textWrapper.offsetY;\n        var offset;\n        var intermediatePoints = object.intermediatePoints;\n        var prev;\n        var pointLength = 0;\n        var totalLength = 0;\n        var intersectingOffset;\n        var currentPosition = (newPosition) ? newPosition : { x: offsetX + tx, y: offsetY + ty };\n        var intersetingPts = this.getInterceptWithSegment(currentPosition, intermediatePoints);\n        var newOffset = intermediatePoints[intermediatePoints.length - 1];\n        totalLength = Point.getLengthFromListOfPoints(intermediatePoints);\n        if (intersetingPts.length > 0) {\n            if (label.dragLimit.top || label.dragLimit.bottom || label.dragLimit.left || label.dragLimit.right) {\n                var minDistance = { minDistance: null };\n                newOffset = this.getRelativeOffset(currentPosition, intermediatePoints, minDistance);\n                var distance = { minDistance: null };\n                intersectingOffset = this.getRelativeOffset(currentPosition, intersetingPts, distance);\n                if (minDistance != null && distance.minDistance < minDistance.minDistance) {\n                    newOffset = intersectingOffset;\n                }\n                else {\n                    var connectorOffset = getOffsetOfConnector(object.intermediatePoints, label, object.wrapper.bounds);\n                    newOffset = connectorOffset.point;\n                }\n            }\n            else {\n                intersectingOffset = intersetingPts[intersetingPts.length - 1];\n                newOffset = intersectingOffset;\n            }\n            if (newOffset) {\n                var p = void 0;\n                var bounds = void 0;\n                for (p = 0; p < intermediatePoints.length; p++) {\n                    if (prev != null) {\n                        bounds = Rect.toBounds([prev, intermediatePoints[p]]);\n                        if (bounds.containsPoint(newOffset)) {\n                            pointLength += Point.findLength(prev, newOffset);\n                            break;\n                        }\n                        else {\n                            pointLength += Point.findLength(prev, intermediatePoints[p]);\n                        }\n                    }\n                    prev = intermediatePoints[p];\n                }\n                offset = { x: pointLength / totalLength, y: 0 };\n            }\n            this.updateLabelMargin(object, label, offset, currentPosition, size, tx, ty);\n        }\n        else {\n            this.updateLabelMargin(object, label, null, currentPosition, size, tx, ty);\n        }\n    };\n    CommandHandler.prototype.getRelativeOffset = function (currentPosition, points, minDistance) {\n        var newOffset;\n        var distance;\n        var pt;\n        var i;\n        for (i = 0; i < points.length; i++) {\n            pt = points[i];\n            distance = Math.round(Math.sqrt(Math.pow((currentPosition.x - pt.x), 2) +\n                Math.pow((currentPosition.y - pt.y), 2)));\n            if (minDistance.minDistance === null ||\n                Math.min(Math.abs(minDistance.minDistance), Math.abs(distance)) === Math.abs(distance)) {\n                newOffset = pt;\n                minDistance.minDistance = distance;\n            }\n        }\n        return newOffset;\n    };\n    ;\n    CommandHandler.prototype.dragLimitValue = function (label, point, tempPt, contentDimension) {\n        var x = false;\n        var y = false;\n        if ((tempPt.x >= (point.x - label.dragLimit.left - (contentDimension.width / 2))) &&\n            (tempPt.x <= point.x + label.dragLimit.right + (contentDimension.width / 2))) {\n            x = true;\n        }\n        if ((tempPt.y >= (point.y - label.dragLimit.top - (contentDimension.height / 2))) &&\n            (tempPt.y <= point.y + label.dragLimit.bottom + (contentDimension.height / 2))) {\n            y = true;\n        }\n        return { x: x, y: y };\n    };\n    ;\n    CommandHandler.prototype.updateLabelMargin = function (node, label, offset, tempPt, size, tx, ty) {\n        offset = offset ? offset : { x: label.offset, y: 0 };\n        if (label && offset && offset.x > 0 && offset.x < 1) {\n            var point = void 0;\n            var length_1 = Point.getLengthFromListOfPoints(node.intermediatePoints);\n            point = this.getPointAtLength(length_1 * offset.x, node.intermediatePoints, 0);\n            var curZoomfactor = this.diagram.scrollSettings.currentZoom;\n            var dragLimit = label.dragLimit;\n            if (dragLimit.top || dragLimit.bottom || dragLimit.left || dragLimit.right) {\n                var labelBounds = this.diagram.getWrapper(node.wrapper, label.id);\n                var contentDimension = new Rect(0, 0, 0, 0);\n                var annotationWrtapper = this.diagram.getWrapper(node.wrapper, label.id);\n                contentDimension.x = ((annotationWrtapper).offsetX / curZoomfactor) + tx;\n                contentDimension.y = (annotationWrtapper.offsetY / curZoomfactor) + ty;\n                contentDimension.width = annotationWrtapper.bounds.width / curZoomfactor;\n                contentDimension.height = annotationWrtapper.bounds.height / curZoomfactor;\n                var draggableBounds = new Rect(point.x - (dragLimit.left || 0) - contentDimension.width / 2, point.y - (dragLimit.top || 0) - contentDimension.height / 2, (dragLimit.left || 0) + (dragLimit.right || 0) + contentDimension.width, (dragLimit.top || 0) + (dragLimit.bottom || 0) + contentDimension.height);\n                if (draggableBounds.containsPoint(tempPt)) {\n                    tempPt = tempPt;\n                }\n                else {\n                    var lineIntersects = void 0;\n                    var line1 = [point, tempPt];\n                    lineIntersects = this.boundsInterSects(line1, draggableBounds, false);\n                    for (var _i = 0, lineIntersects_1 = lineIntersects; _i < lineIntersects_1.length; _i++) {\n                        var i = lineIntersects_1[_i];\n                        var ptt = i;\n                        tempPt = ptt;\n                    }\n                }\n                var cursorLimit = this.dragLimitValue(label, point, tempPt, contentDimension);\n                label.margin = {\n                    left: cursorLimit.x ? tempPt.x - point.x : label.margin.left,\n                    top: cursorLimit.y ? tempPt.y - point.y : label.margin.top, right: 0, bottom: 0\n                };\n            }\n            else {\n                label.margin = { left: tempPt.x - point.x, top: tempPt.y - point.y, right: 0, bottom: 0 };\n            }\n            label.offset = offset.x;\n            if (size) {\n                label.width = size.width;\n                label.height = size.height;\n            }\n        }\n    };\n    CommandHandler.prototype.boundsInterSects = function (polyLine, bounds, self) {\n        var intersects;\n        if (bounds) {\n            var polyLine2 = [\n                { x: bounds.x, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y },\n                { x: bounds.x + bounds.width, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y + bounds.height },\n                { x: bounds.x, y: bounds.y }\n            ];\n            intersects = this.intersect(polyLine, polyLine2, self);\n        }\n        return intersects;\n    };\n    ;\n    CommandHandler.prototype.intersect = function (polyLine1, polyLine2, self) {\n        var intersect = [];\n        for (var i = 0; i < polyLine1.length - 1; i++) {\n            for (var j = 0; j < polyLine2.length - 1; j++) {\n                var p = intersect2(polyLine1[i], polyLine1[i + 1], polyLine2[j], polyLine2[j + 1]);\n                if (p.x !== 0 && p.y !== 0) {\n                    intersect.push(p);\n                }\n            }\n        }\n        return intersect;\n    };\n    ;\n    CommandHandler.prototype.getPointAtLength = function (length, points, angle) {\n        angle = 0;\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        var pt;\n        for (var i = 0; i < points.length; i++) {\n            pt = points[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = Point.findLength(pre, pt);\n                var r = void 0;\n                var deg = void 0;\n                var x = void 0;\n                var y = void 0;\n                if (run + l >= length) {\n                    r = length - run;\n                    deg = Point.findAngle(pre, pt);\n                    x = r * Math.cos(deg * Math.PI / 180);\n                    y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    angle = deg;\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    CommandHandler.prototype.getInterceptWithSegment = function (currentPosition, conPoints) {\n        var intercepts = [];\n        var imgLine = [];\n        var segemnt = [];\n        var tarAngle;\n        var srcAngle;\n        var maxLength;\n        maxLength = Point.findLength({ x: 0, y: 0 }, { x: this.diagram.scroller.viewPortWidth, y: this.diagram.scroller.viewPortHeight });\n        for (var i = 1; i < conPoints.length; i++) {\n            segemnt = [conPoints[i - 1], conPoints[i]];\n            imgLine = [];\n            srcAngle = Math.round(Point.findAngle(segemnt[0], segemnt[1]) % 360);\n            tarAngle = Math.round(Point.findAngle(segemnt[1], segemnt[0]) % 360);\n            var angleAdd = (srcAngle > 0 && srcAngle <= 90) || (srcAngle > 180 && srcAngle <= 270) ? 90 : -90;\n            imgLine.push(Point.transform(currentPosition, srcAngle + angleAdd, maxLength));\n            imgLine.push(Point.transform(currentPosition, tarAngle + angleAdd, maxLength));\n            var lineUtil1 = { x1: segemnt[0].x, y1: segemnt[0].y, x2: segemnt[1].x, y2: segemnt[1].y };\n            var lineUtil2 = { x1: imgLine[0].x, y1: imgLine[0].y, x2: imgLine[1].x, y2: imgLine[1].y };\n            var line3 = intersect3(lineUtil1, lineUtil2);\n            if (line3.enabled) {\n                intercepts.push(line3.intersectPt);\n            }\n        }\n        return intercepts;\n    };\n    /** @private */\n    CommandHandler.prototype.getAnnotationChanges = function (object, label) {\n        var index = findObjectIndex(object, label.id, true);\n        var annotations = {};\n        annotations[index] = {\n            width: label.width, height: label.height, offset: (object instanceof Node) ? ({\n                x: label.offset.x,\n                y: label.offset.y\n            }) : label.offset,\n            rotateAngle: label.rotateAngle,\n            margin: { left: label.margin.left, right: label.margin.right, top: label.margin.top, bottom: label.margin.bottom },\n            horizontalAlignment: label.horizontalAlignment, verticalAlignment: label.verticalAlignment,\n            alignment: ((object instanceof Connector) ? label.alignment : undefined)\n        };\n        return { annotations: annotations };\n    };\n    /** @private */\n    CommandHandler.prototype.getPortChanges = function (object, port) {\n        var index = findObjectIndex(object, port.id, false);\n        var ports = {};\n        ports[index] = { offset: port.offset };\n        return { ports: ports };\n    };\n    /** @private */\n    CommandHandler.prototype.labelRotate = function (object, label, currentPosition, selector) {\n        var oldValues;\n        var changedvalues;\n        oldValues = this.getAnnotationChanges(object, label);\n        var matrix = identityMatrix();\n        var rotateAngle = label.rotateAngle;\n        var labelWrapper = this.diagram.getWrapper(object.wrapper, label.id);\n        var angle = findAngle({ x: labelWrapper.offsetX, y: labelWrapper.offsetY }, currentPosition) + 90;\n        var snapAngle = this.snapAngle(angle);\n        angle = snapAngle !== 0 ? snapAngle : angle;\n        if (label instanceof PathAnnotation && label.segmentAngle) {\n            var getPointloop = getAnnotationPosition(object.intermediatePoints, label, object.wrapper.bounds);\n            angle -= getPointloop.angle;\n        }\n        angle = (angle + 360) % 360;\n        label.rotateAngle += angle - (label.rotateAngle + labelWrapper.parentTransform);\n        label.margin.bottom += (labelWrapper.verticalAlignment === 'Top') ? (-label.height / 2) : ((labelWrapper.verticalAlignment === 'Bottom') ? (label.height / 2) : 0);\n        label.margin.right += (labelWrapper.horizontalAlignment === 'Left') ? (-label.width / 2) : ((labelWrapper.horizontalAlignment === 'Right') ? (label.width / 2) : 0);\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        else {\n            label.horizontalAlignment = label.verticalAlignment = 'Center';\n        }\n        selector.wrapper.rotateAngle = selector.rotateAngle = label.rotateAngle;\n        changedvalues = this.getAnnotationChanges(object, label);\n        if (object instanceof Node) {\n            this.diagram.nodePropertyChange(object, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(object, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(object);\n    };\n    /** @private */\n    CommandHandler.prototype.labelResize = function (node, label, deltaWidth, deltaHeight, pivot, selector) {\n        var oldValues;\n        var changedvalues;\n        var rotateAngle;\n        oldValues = this.getAnnotationChanges(node, label);\n        var textElement = selector.wrapper.children[0];\n        if ((deltaWidth && deltaWidth !== 1) || (deltaHeight && deltaHeight !== 1)) {\n            var newMat = identityMatrix();\n            var matrix = identityMatrix();\n            rotateMatrix(newMat, -node.rotateAngle, node.offsetX, node.offsetY);\n            rotateAngle = ((textElement.rotateAngle + ((node instanceof Node) ? node.rotateAngle : 0)) + 360) % 360;\n            rotateMatrix(matrix, -rotateAngle, pivot.x, pivot.y);\n            scaleMatrix(matrix, deltaWidth, deltaHeight, pivot.x, pivot.y);\n            rotateMatrix(matrix, rotateAngle, pivot.x, pivot.y);\n            var newPosition = transformPointByMatrix(matrix, { x: textElement.offsetX, y: textElement.offsetY });\n            var height = textElement.actualSize.height * deltaHeight;\n            var width = textElement.actualSize.width * deltaWidth;\n            var shape = this.findTarget(textElement, node);\n            if (shape instanceof PathAnnotation) {\n                this.updatePathAnnotationOffset(node, label, 0, 0, newPosition, new Size(width, height));\n            }\n            else {\n                var bounds = cornersPointsBeforeRotation(node.wrapper);\n                newPosition = transformPointByMatrix(newMat, newPosition);\n                newPosition.x = newPosition.x - textElement.margin.left + textElement.margin.right;\n                newPosition.y = newPosition.y - textElement.margin.top + textElement.margin.bottom;\n                newPosition.y += (shape.verticalAlignment === 'Top') ? (-height / 2) : ((shape.verticalAlignment === 'Bottom') ? (height / 2) : 0);\n                newPosition.x += (shape.horizontalAlignment === 'Left') ? (-width / 2) : ((shape.horizontalAlignment === 'Right') ? (width / 2) : 0);\n                var offsetx = bounds.width / (newPosition.x - bounds.x);\n                var offsety = bounds.height / (newPosition.y - bounds.y);\n                if (width > 1) {\n                    shape.width = width;\n                    shape.offset.x = 1 / offsetx;\n                }\n                if (height > 1) {\n                    shape.height = height;\n                    shape.offset.y = 1 / offsety;\n                }\n            }\n        }\n        if (label instanceof PathAnnotation) {\n            label.alignment = 'Center';\n        }\n        changedvalues = this.getAnnotationChanges(node, label);\n        if (node instanceof Node) {\n            this.diagram.nodePropertyChange(node, oldValues, changedvalues);\n        }\n        else {\n            this.diagram.connectorPropertyChange(node, oldValues, changedvalues);\n        }\n        this.diagram.updateDiagramObject(node);\n    };\n    /** @private */\n    CommandHandler.prototype.getSubProcess = function (source) {\n        var selector = { nodes: [], connectors: [] };\n        var process;\n        if (source instanceof Node) {\n            process = source.processId;\n        }\n        else if (source && source.nodes && (source.nodes.length)\n            && source.nodes[0].processId) {\n            process = source.nodes[0].processId;\n        }\n        if (process) {\n            selector.nodes.push(clone(this.diagram.nameTable[process]));\n            return selector;\n        }\n        return selector;\n    };\n    /**   @private  */\n    CommandHandler.prototype.checkBoundaryConstraints = function (tx, ty, nodeBounds) {\n        var pageSettings = this.diagram.pageSettings;\n        var boundaryConstraints = this.diagram.pageSettings.boundaryConstraints;\n        var scroller = this.diagram.scroller;\n        if (boundaryConstraints === 'Page' || boundaryConstraints === 'Diagram') {\n            var selectorBounds = !nodeBounds ? this.diagram.selectedItems.wrapper.bounds : undefined;\n            var width = boundaryConstraints === 'Page' ? pageSettings.width : scroller.viewPortWidth;\n            var height = boundaryConstraints === 'Page' ? pageSettings.height : scroller.viewPortHeight;\n            var bounds = nodeBounds;\n            var right = (nodeBounds ? bounds.right : selectorBounds.right) + (tx || 0);\n            var left = (nodeBounds ? bounds.left : selectorBounds.left) + (tx || 0);\n            var top_2 = (nodeBounds ? bounds.top : selectorBounds.top) + (ty || 0);\n            var bottom = (nodeBounds ? bounds.bottom : selectorBounds.bottom) + (ty || 0);\n            if (right <= width && left >= 0\n                && bottom <= height && top_2 >= 0) {\n                return true;\n            }\n            return false;\n        }\n        return true;\n    };\n    //interfaces\n    /** @private */\n    CommandHandler.prototype.dragSelectedObjects = function (tx, ty) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        if (this.checkBoundaryConstraints(tx, ty)) {\n            this.diagram.drag(obj, tx, ty);\n            this.diagram.refreshCanvasLayers();\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    CommandHandler.prototype.scaleSelectedItems = function (sx, sy, pivot) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.offsetX = obj.offsetX;\n            this.state.backup.offsetY = obj.offsetY;\n            this.state.backup.width = obj.width;\n            this.state.backup.height = obj.height;\n            this.state.backup.pivot = pivot;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.scale(obj, sx, sy, pivot);\n    };\n    /** @private */\n    CommandHandler.prototype.rotateSelectedItems = function (angle) {\n        var obj = this.diagram.selectedItems;\n        if (this.state && !this.state.backup) {\n            this.state.backup = {};\n            this.state.backup.angle = obj.rotateAngle;\n        }\n        obj = renderContainerHelper(this.diagram, obj) || obj;\n        return this.diagram.rotate(obj, angle);\n    };\n    /** @private */\n    CommandHandler.prototype.hasSelection = function () {\n        return hasSelection(this.diagram);\n    };\n    /** @private */\n    CommandHandler.prototype.isSelected = function (element) {\n        return isSelected(this.diagram, element);\n    };\n    /**\n     * initExpand is used for layout expand and collapse interaction\n     */\n    CommandHandler.prototype.initExpand = function (args) {\n        var node = (args.target || args.source);\n        var oldValues = { isExpanded: node.isExpanded };\n        node.isExpanded = !node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.diagramActions |= DiagramAction.PreventIconsUpdate;\n        this.diagram.nodePropertyChange(node, oldValues, { isExpanded: node.isExpanded });\n        this.diagram.diagramActions = this.diagram.diagramActions & ~DiagramAction.PreventIconsUpdate;\n        this.diagram.preventNodesUpdate = false;\n    };\n    /** @private */\n    CommandHandler.prototype.expandNode = function (node, diagram) {\n        var animation;\n        var objects;\n        var preventNodesUpdate = this.diagram.preventNodesUpdate;\n        var expand = node.isExpanded;\n        this.diagram.preventNodesUpdate = true;\n        this.diagram.preventConnectorsUpdate = true;\n        this.expandCollapse(node, expand, this.diagram);\n        node.isExpanded = expand;\n        this.diagram.layout.fixedNode = node.id;\n        if (this.diagram.layoutAnimateModule && this.diagram.layout.enableAnimation && this.diagram.organizationalChartModule) {\n            this.diagram.organizationalChartModule.isAnimation = true;\n        }\n        objects = this.diagram.doLayout();\n        this.diagram.preventNodesUpdate = preventNodesUpdate;\n        this.diagram.preventConnectorsUpdate = false;\n        if (this.diagram.layoutAnimateModule && this.diagram.organizationalChartModule) {\n            this.layoutAnimateModule.expand(this.diagram.layout.enableAnimation, objects, node, this.diagram);\n        }\n        else {\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            this.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n        return objects;\n    };\n    CommandHandler.prototype.getparentexpand = function (target, diagram, visibility, connector) {\n        var boolean;\n        for (var i = 0; i < target.inEdges.length; i++) {\n            var newConnector = diagram.nameTable[target.inEdges[i]];\n            var previousNode = diagram.nameTable[newConnector.sourceID];\n            if (previousNode.isExpanded && !visibility && previousNode.id !== connector.sourceID && newConnector.visible) {\n                return false;\n            }\n            else {\n                boolean = true;\n            }\n        }\n        return boolean;\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    CommandHandler.prototype.expandCollapse = function (source, visibility, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            var value = this.getparentexpand(target, diagram, visibility, connector);\n            connector.visible = visibility;\n            var oldValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            var newValues = {\n                visible: target.visible,\n                style: { opacity: target.style.opacity }\n            };\n            if (value) {\n                if (target.isExpanded) {\n                    this.expandCollapse(target, visibility, diagram);\n                }\n                target.visible = visibility;\n                target.style.opacity = (this.diagram.layoutAnimateModule &&\n                    this.diagram.layout.enableAnimation && visibility) ? 0.1 : target.style.opacity;\n                diagram.nodePropertyChange(target, oldValues, newValues);\n            }\n            diagram.connectorPropertyChange(connector, oldValues, newValues);\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateNodeDimension = function (obj, rect) {\n        if (obj instanceof Node) {\n            obj.offsetX = rect.x + rect.width / 2;\n            obj.offsetY = rect.y + rect.height / 2;\n            obj.width = rect.width;\n            obj.height = rect.height;\n            obj.wrapper.children[0].canMeasurePath = true;\n            this.diagram.nodePropertyChange(obj, {}, {\n                width: rect.width, height: rect.height, offsetX: obj.offsetX,\n                offsetY: obj.offsetY\n            });\n            if (this.diagram.mode !== 'SVG') {\n                this.diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.updateConnectorPoints = function (obj, rect) {\n        if (obj instanceof Connector) {\n            this.diagram.connectorPropertyChange(obj, {}, {\n                targetPoint: obj.targetPoint\n            });\n            this.diagram.updateDiagramObject(obj);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.diagram.drawSelectionRectangle(x, y, width, height);\n    };\n    /** @private */\n    CommandHandler.prototype.startGroupAction = function () {\n        this.diagram.startGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.endGroupAction = function () {\n        this.diagram.endGroupAction();\n    };\n    /** @private */\n    CommandHandler.prototype.removeChildFromBPmn = function (child, newTarget, oldTarget) {\n        var obj = this.diagram.nameTable[child.id] || child.nodes[0];\n        if (oldTarget) {\n            if ((obj) && obj.processId && obj.processId === oldTarget.wrapper.id) {\n                var node = clone(obj);\n                node.processId = obj.processId;\n                this.diagram.startGroupAction();\n                var edges = [];\n                edges = edges.concat(obj.outEdges, obj.inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    var connector = this.diagram.nameTable[edges[i]];\n                    if (connector) {\n                        this.diagram.remove(connector);\n                    }\n                }\n                var nodeCollection = void 0;\n                nodeCollection = (this.diagram.nameTable[obj.processId].shape.activity.subProcess.processes) || [];\n                nodeCollection.splice(nodeCollection.indexOf((obj).id), 1);\n                this.diagram.bpmnModule.removeChildFromBPMN(this.diagram.nameTable[obj.processId].wrapper, (obj).id);\n                this.diagram.nameTable[(obj).id].processId = '';\n                obj.offsetX = obj.wrapper.offsetX;\n                obj.offsetY = obj.wrapper.offsetY;\n                var undoElement = clone(obj);\n                var entry = {\n                    type: 'PositionChanged', redoObject: { nodes: [undoElement] }, undoObject: { nodes: [node] }, category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n                this.diagram.endGroupAction();\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.isDroppable = function (source, targetNodes) {\n        var node = this.diagram.nameTable[source.id] || source.nodes[0];\n        if (node) {\n            if (node.shape.shape === 'TextAnnotation') {\n                return true;\n            }\n            if (node && node.shape.type === 'Bpmn') {\n                if ((node.processId === targetNodes.id) || (node.id === targetNodes.processId) ||\n                    targetNodes.shape.type === 'Bpmn'\n                        && targetNodes.shape.activity.subProcess.collapsed) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderHighlighter = function (args, connectHighlighter, source) {\n        var bounds = new Rect();\n        if (args.target instanceof Node || (connectHighlighter && args.source instanceof Node)) {\n            var tgt = connectHighlighter ? args.source : args.target;\n            var tgtWrap = connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            var target = this.findTarget(tgtWrap, tgt, source, true);\n            var element = void 0;\n            if (target instanceof BpmnSubEvent) {\n                var portId = target.id;\n                var node = args.target;\n                var parent_6 = node.wrapper.children[0].children[0].children[2];\n                for (var _i = 0, _a = parent_6.children; _i < _a.length; _i++) {\n                    var child = _a[_i];\n                    if (child.id === node.id + '_' + portId) {\n                        element = child.children[0];\n                        break;\n                    }\n                }\n            }\n            else {\n                element = target instanceof Node ?\n                    target.wrapper : connectHighlighter ? args.sourceWrapper : args.targetWrapper;\n            }\n            this.diagram.renderHighlighter(element);\n        }\n    };\n    //additional events\n    /** @private */\n    CommandHandler.prototype.mouseOver = function (source, target, position) {\n        //mouse over\n        //returns whether the source can move over the target or not\n        return true;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.snapPoint = function (startPoint, endPoint, tx, ty) {\n        var obj = this.diagram.selectedItems;\n        var point;\n        var towardsLeft = endPoint.x < startPoint.x;\n        var towardsTop = endPoint.y < startPoint.y;\n        point = { x: tx, y: ty };\n        var snappedPoint = point;\n        if (this.snappingModule) {\n            snappedPoint = this.diagram.snappingModule.snapPoint(this.diagram, obj, towardsLeft, towardsTop, point, startPoint, endPoint);\n        }\n        return snappedPoint;\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeSnap = function () {\n        if ((this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) && this.snappingModule) {\n            this.snappingModule.removeGuidelines(this.diagram);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.dropAnnotation = function (source, target) {\n        var node = (source instanceof Node) ? source : source.nodes[0];\n        if (this.diagram.bpmnModule && target.shape.type === 'Bpmn'\n            && node.shape.shape === 'TextAnnotation') {\n            var hasTarget = 'hasTarget';\n            node[hasTarget] = target.id;\n            node.shape.annotation.nodeId = target.id;\n            if (!this.diagram.currentSymbol) {\n                this.diagram.addTextAnnotation(node.shape.annotation, target);\n                node.shape.annotation.nodeId = '';\n                this.diagram.remove(node);\n            }\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    ;\n    /** @private */\n    CommandHandler.prototype.drop = function (source, target, position) {\n        //drop\n        if (this.diagram.bpmnModule) {\n            this.diagram.bpmnModule.dropBPMNchild(target, (source instanceof Node) ? source : source.nodes[0], this.diagram);\n            this.diagram.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.addHistoryEntry = function (entry) {\n        this.diagram.addHistoryEntry(entry);\n    };\n    /** @private */\n    CommandHandler.prototype.align = function (objects, option, type) {\n        if (objects.length > 0) {\n            var i = 0;\n            var bounds = (type === 'Object') ? getBounds(objects[0].wrapper) : this.diagram.selectedItems.wrapper.bounds;\n            var undoObj = { nodes: [], connectors: [] };\n            var redoObj = { nodes: [], connectors: [] };\n            for (i = ((type === 'Object') ? (i + 1) : i); i < objects.length; i++) {\n                var tx = 0;\n                var ty = 0;\n                var objectBounds = getBounds(objects[i].wrapper);\n                if (option === 'Left') {\n                    tx = bounds.left + objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Right') {\n                    tx = bounds.right - objectBounds.width / 2 - objectBounds.center.x;\n                }\n                else if (option === 'Top') {\n                    ty = bounds.top + objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Bottom') {\n                    ty = bounds.bottom - objectBounds.height / 2 - objectBounds.center.y;\n                }\n                else if (option === 'Center') {\n                    tx = bounds.center.x - objectBounds.center.x;\n                }\n                else if (option === 'Middle') {\n                    ty = bounds.center.y - objectBounds.center.y;\n                }\n                undoObj = this.storeObject(undoObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoObj = this.storeObject(redoObj, objects[i]);\n            }\n            undoObj = clone(undoObj);\n            redoObj = clone(redoObj);\n            var entry = {\n                type: 'Align', category: 'Internal',\n                undoObject: cloneObject(undoObj), redoObject: cloneObject(redoObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.distribute = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var j = 0;\n            var rect = new Rect();\n            var b = [];\n            var temp = void 0;\n            var right = 0;\n            var left = 0;\n            var top_3 = 0;\n            var bottom = 0;\n            var center = 0;\n            var middle = 0;\n            var btt = 0;\n            var sum = 0;\n            var undoSelectorObj = { nodes: [], connectors: [] };\n            var redoSelectorObj = { nodes: [], connectors: [] };\n            objects = sort(objects, option);\n            for (i = 1; i < objects.length; i++) {\n                right = right + objects[i].wrapper.bounds.topRight.x - objects[i - 1].wrapper.bounds.topRight.x;\n                left = left + objects[i].wrapper.bounds.topLeft.x - objects[i - 1].wrapper.bounds.topLeft.x;\n                top_3 = top_3 + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.topRight.y;\n                bottom = bottom + objects[i].wrapper.bounds.bottomRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n                center = center + objects[i].wrapper.bounds.center.x - objects[i - 1].wrapper.bounds.center.x;\n                middle = middle + objects[i].wrapper.bounds.center.y - objects[i - 1].wrapper.bounds.center.y;\n                btt = btt + objects[i].wrapper.bounds.topRight.y - objects[i - 1].wrapper.bounds.bottomRight.y;\n            }\n            for (i = 1; i < objects.length - 1; i++) {\n                var tx = 0;\n                var ty = 0;\n                var prev = getBounds(objects[i - 1].wrapper);\n                var current = getBounds(objects[i].wrapper);\n                if (option === 'RightToLeft' || option === 'Center') {\n                    tx = prev.center.x - current.center.x + (center / (objects.length - 1));\n                }\n                else if (option === 'Right') {\n                    tx = prev.topRight.x - current.topRight.x + (right / (objects.length - 1));\n                }\n                else if (option === 'Left') {\n                    tx = prev.topLeft.x - current.topLeft.x + (left / (objects.length - 1));\n                }\n                else if (option === 'Middle') {\n                    ty = prev.center.y - current.center.y + (middle / (objects.length - 1));\n                }\n                else if (option === 'Top') {\n                    ty = prev.topRight.y - current.topRight.y + (top_3 / (objects.length - 1));\n                }\n                else if (option === 'Bottom') {\n                    ty = prev.bottomRight.y - current.bottomRight.y + (bottom / (objects.length - 1));\n                }\n                else if (option === 'BottomToTop') {\n                    ty = prev.bottomRight.y - current.topRight.y + (btt / (objects.length - 1));\n                }\n                undoSelectorObj = this.storeObject(undoSelectorObj, objects[i]);\n                this.drag(objects[i], tx, ty);\n                this.diagram.updateSelector();\n                redoSelectorObj = this.storeObject(redoSelectorObj, objects[i]);\n            }\n            undoSelectorObj = clone(undoSelectorObj);\n            redoSelectorObj = clone(redoSelectorObj);\n            var entry = {\n                type: 'Distribute', category: 'Internal',\n                undoObject: cloneObject(undoSelectorObj), redoObject: cloneObject(redoSelectorObj)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.sameSize = function (objects, option) {\n        if (objects.length > 0) {\n            var i = 0;\n            var pivot = void 0;\n            pivot = { x: 0.5, y: 0.5 };\n            var bounds = getBounds(objects[0].wrapper);\n            var undoObject = { nodes: [], connectors: [] };\n            var redoObject = { nodes: [], connectors: [] };\n            for (i = 1; i < objects.length; i++) {\n                var rect = getBounds(objects[i].wrapper);\n                var sw = 1;\n                var sh = 1;\n                if (option === 'Width') {\n                    sw = bounds.width / rect.width;\n                }\n                else if (option === 'Height') {\n                    sh = bounds.height / rect.height;\n                }\n                else if (option === 'Size') {\n                    sw = bounds.width / rect.width;\n                    sh = bounds.height / rect.height;\n                }\n                undoObject = this.storeObject(undoObject, objects[i]);\n                this.scale(objects[i], sw, sh, pivot);\n                redoObject = this.storeObject(redoObject, objects[i]);\n            }\n            this.diagram.updateSelector();\n            undoObject = clone(undoObject);\n            redoObject = clone(redoObject);\n            var entry = {\n                type: 'Sizing', category: 'Internal',\n                undoObject: cloneObject(undoObject), redoObject: cloneObject(redoObject)\n            };\n            this.addHistoryEntry(entry);\n        }\n    };\n    CommandHandler.prototype.storeObject = function (selectorObject, obj) {\n        if (obj instanceof Node) {\n            selectorObject.nodes.push(clone(obj));\n        }\n        else {\n            selectorObject.connectors.push(clone(obj));\n        }\n        return selectorObject;\n    };\n    /** @private */\n    CommandHandler.prototype.scroll = function (scrollX, scrollY, focusPoint) {\n        var panx = canPanX(this.diagram);\n        var pany = canPanY(this.diagram);\n        this.diagram.pan((scrollX = panx ? scrollX : 0) * this.diagram.scroller.currentZoom, (scrollY = pany ? scrollY : 0) * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.drawHighlighter = function (element) {\n        this.diagram.renderHighlighter(element.wrapper);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.removeHighlighter = function () {\n        this.diagram.clearHighlighter();\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.renderContainerHelper = function (node) {\n        return renderContainerHelper(this.diagram, node);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.isParentAsContainer = function (node, isChild) {\n        return checkParentAsContainer(this.diagram, node, isChild);\n    };\n    /**\n     * @private\n     */\n    CommandHandler.prototype.dropChildToContainer = function (parent, node) {\n        addChildToContainer(this.diagram, parent, node);\n    };\n    /** @private */\n    CommandHandler.prototype.checkSelection = function (selector, corner) {\n        var node;\n        var wrapper;\n        var child;\n        var index;\n        var shape;\n        if (selector.nodes.length === 1 && selector.connectors.length === 0) {\n            if (checkParentAsContainer(this.diagram, selector.nodes[0], true)) {\n                node = (selector.nodes[0].shape === 'SwimLane') ? selector.nodes[0] :\n                    this.diagram.nameTable[selector.nodes[0].parentId];\n                var child_1 = selector.nodes[0];\n                if (node.shape.type === 'SwimLane') {\n                    var orientation_1 = (node.shape.orientation === 'Horizontal') ? true : false;\n                    if ((child_1.isPhase && ((orientation_1 && corner === 'ResizeSouth') || (!orientation_1 && corner === 'ResizeEast'))) ||\n                        (child_1.isLane && ((orientation_1 && corner === 'ResizeEast') || (!orientation_1 && corner === 'ResizeSouth')))) {\n                        swimLaneSelection(this.diagram, node, corner);\n                    }\n                }\n                else if (node.container.type === 'Grid') {\n                    if (((node.container.orientation === 'Horizontal' && child_1.rowIndex === 1) ||\n                        (node.container.orientation === 'Vertical' && child_1.rowIndex > 0 && child_1.columnIndex > 0))) {\n                        if (corner === 'ResizeSouth') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === node.rows.length - 1 && obj.columnIndex === 0) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (corner === 'ResizeEast') {\n                            for (var i = 0; i < this.diagram.nodes.length; i++) {\n                                var obj = this.diagram.nodes[i];\n                                if (obj.rowIndex === 1 && obj.columnIndex === node.columns.length - 1) {\n                                    this.select(obj);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                swimLaneSelection(this.diagram, selector.nodes[0], corner);\n            }\n        }\n    };\n    /** @private */\n    CommandHandler.prototype.zoom = function (scale, scrollX, scrollY, focusPoint) {\n        this.diagram.scroller.zoom(scale, scrollX * this.diagram.scroller.currentZoom, scrollY * this.diagram.scroller.currentZoom, focusPoint);\n    };\n    return CommandHandler;\n}());\nexport { CommandHandler };\n","import { Rect } from '../primitives/rect';\nimport { RealAction } from '../enum/enum';\nimport { identityMatrix, scaleMatrix, translateMatrix, transformPointByMatrix, multiplyMatrix } from '../primitives/matrix';\nimport { updateRuler } from '../ruler/ruler';\nimport { canZoom, canPan, canVitualize } from './../utility/constraints-util';\n/**\n */\nvar DiagramScroller = /** @class */ (function () {\n    function DiagramScroller(diagram) {\n        /** @private */\n        this.transform = { tx: 0, ty: 0, scale: 1 };\n        /**   @private  */\n        this.oldCollectionObjects = [];\n        /**   @private  */\n        this.removeCollection = [];\n        this.vPortWidth = 0;\n        this.vPortHeight = 0;\n        this.currentZoomFActor = 1;\n        this.hOffset = 0;\n        this.vOffset = 0;\n        this.scrolled = false;\n        this.hScrollSize = 0;\n        this.vScrollSize = 0;\n        this.diagram = diagram;\n        this.objects = [];\n        this.transform = diagram.scroller ? diagram.scroller.transform : { tx: 0, ty: 0, scale: 1 };\n        this.vPortWidth = diagram.scrollSettings.viewPortWidth;\n        this.vPortHeight = diagram.scrollSettings.viewPortHeight;\n        this.currentZoomFActor = diagram.scrollSettings.currentZoom;\n        this.hOffset = diagram.scrollSettings.horizontalOffset;\n        this.vOffset = diagram.scrollSettings.verticalOffset;\n    }\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortHeight\", {\n        /** @private */\n        get: function () {\n            return this.vPortHeight;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortHeight = offset;\n            this.diagram.scrollSettings.viewPortHeight = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"currentZoom\", {\n        /** @private */\n        get: function () {\n            return this.currentZoomFActor;\n        },\n        /** @private */\n        set: function (offset) {\n            this.currentZoomFActor = offset;\n            this.diagram.scrollSettings.currentZoom = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"viewPortWidth\", {\n        /** @private */\n        get: function () {\n            return this.vPortWidth;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vPortWidth = offset;\n            this.diagram.scrollSettings.viewPortWidth = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"horizontalOffset\", {\n        /** @private */\n        get: function () {\n            return this.hOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.hOffset = offset;\n            if (Math.abs(this.hOffset - this.diagram.scrollSettings.horizontalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.hScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.horizontalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DiagramScroller.prototype, \"verticalOffset\", {\n        /** @private */\n        get: function () {\n            return this.vOffset;\n        },\n        /** @private */\n        set: function (offset) {\n            this.vOffset = offset;\n            if (Math.abs(this.vOffset - this.diagram.scrollSettings.verticalOffset) > 1) {\n                this.diagram.realActions = this.diagram.realActions | RealAction.vScrollbarMoved;\n                this.scrolled = true;\n            }\n            this.diagram.scrollSettings.verticalOffset = offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @private */\n    DiagramScroller.prototype.updateScrollOffsets = function (hOffset, vOffset) {\n        var offsetX = 0;\n        var offsetY = 0;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        offsetX = Math.max(0, hOffset - pageBounds.left);\n        offsetY = Math.max(0, vOffset - pageBounds.top);\n        if (hOffset !== undefined && vOffset !== undefined) {\n            this.horizontalOffset = offsetX;\n            this.verticalOffset = offsetY;\n            this.diagram.setOffset(offsetX, offsetY);\n        }\n        else {\n            this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n    };\n    /** @private */\n    DiagramScroller.prototype.setScrollOffset = function (hOffset, vOffset) {\n        this.scrolled = false;\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = -pageBounds.left;\n        var y = -pageBounds.top;\n        var set = false;\n        var viewWidth = this.viewPortWidth * this.currentZoom;\n        var viewHeight = this.viewPortHeight * this.currentZoom;\n        var newX = x - hOffset;\n        if (newX !== this.horizontalOffset) {\n            if (x < this.horizontalOffset) {\n                if (this.horizontalOffset > newX) {\n                    this.horizontalOffset -= hOffset;\n                }\n                else {\n                    this.horizontalOffset = newX;\n                }\n                set = true;\n            }\n            var right = Math.max(pageBounds.right + this.vScrollSize, viewWidth);\n            if (!set && right < -newX + this.viewPortWidth) {\n                var actualRight = -newX + viewWidth - this.vScrollSize;\n                var currentRight = -this.horizontalOffset + viewWidth - this.vScrollSize;\n                if (actualRight < currentRight) {\n                    //define\n                    this.horizontalOffset = newX;\n                }\n                else {\n                    if (actualRight - pageBounds.right > actualRight - currentRight) {\n                        this.horizontalOffset = newX;\n                    }\n                    else {\n                        this.horizontalOffset = -(pageBounds.right + this.vScrollSize - viewWidth);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.horizontalOffset = x - hOffset;\n            }\n        }\n        set = false;\n        //vertical offset\n        var newY = y - vOffset;\n        if (newY !== this.verticalOffset) {\n            if (y < this.verticalOffset) {\n                if (this.verticalOffset > newY) {\n                    this.verticalOffset -= vOffset;\n                }\n                else {\n                    this.verticalOffset = newY;\n                }\n                set = true;\n            }\n            var bottom = Math.max(pageBounds.bottom + this.hScrollSize, viewHeight);\n            if (!set && bottom < -newY + viewHeight) {\n                var actualBottom = -newY + viewHeight - this.hScrollSize;\n                var currentBottom = -this.verticalOffset + viewHeight - this.hScrollSize;\n                if (actualBottom < currentBottom) {\n                    //define\n                    this.verticalOffset = newY;\n                }\n                else {\n                    if (actualBottom - pageBounds.bottom > actualBottom - currentBottom) {\n                        this.verticalOffset = newY;\n                    }\n                    else {\n                        this.verticalOffset = -(pageBounds.bottom + this.hScrollSize - viewHeight);\n                    }\n                }\n                set = true;\n            }\n            if (!set) {\n                this.verticalOffset = y - vOffset;\n            }\n        }\n        this.transform = {\n            tx: Math.max(this.horizontalOffset, -pageBounds.left) / this.currentZoom, ty: Math.max(this.verticalOffset, -pageBounds.top) / this.currentZoom,\n            scale: this.currentZoom\n        };\n        this.setSize();\n    };\n    /** @private */\n    DiagramScroller.prototype.getObjects = function (coll1, coll2) {\n        var objects = [];\n        for (var i = 0; i < coll1.length; i++) {\n            var isExist = false;\n            for (var j = 0; j < coll2.length; j++) {\n                if (coll1[i] === coll2[j]) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isExist) {\n                objects.push(coll1[i]);\n            }\n        }\n        return objects;\n    };\n    /**   @private  */\n    DiagramScroller.prototype.virtualizeElements = function () {\n        var viewWidth = this.viewPortWidth / this.currentZoom;\n        var viewHeight = this.viewPortHeight / this.currentZoom;\n        var oObjects = this.diagram.spatialSearch.findObjects(new Rect(-this.horizontalOffset / this.currentZoom, -this.verticalOffset / this.currentZoom, viewWidth, viewHeight));\n        var oObjectsID = [];\n        for (var i = 0; i < oObjects.length; i++) {\n            oObjectsID.push(oObjects[i].id);\n        }\n        var newObjects = this.getObjects(oObjectsID, this.oldCollectionObjects);\n        if (this.oldCollectionObjects.length === 0) {\n            this.oldCollectionObjects = oObjectsID;\n        }\n        var removeObjects = this.getObjects(this.oldCollectionObjects, oObjectsID);\n        this.diagram.updateVirtualObjects(newObjects, false, removeObjects);\n        this.oldCollectionObjects = oObjectsID;\n    };\n    /** @private */\n    DiagramScroller.prototype.setSize = function () {\n        var pageBounds = this.getPageBounds(undefined, undefined, true);\n        pageBounds.x *= this.currentZoom;\n        pageBounds.y *= this.currentZoom;\n        pageBounds.width *= this.currentZoom;\n        pageBounds.height *= this.currentZoom;\n        var x = Math.min(pageBounds.x, -this.horizontalOffset);\n        var y = Math.min(pageBounds.y, -this.verticalOffset);\n        var difX = -this.horizontalOffset + this.viewPortWidth - pageBounds.right;\n        var difY = -this.verticalOffset + this.viewPortHeight - pageBounds.bottom;\n        var hScrollSize = this.scrollerWidth;\n        var vScrollSize = this.scrollerWidth;\n        if (-this.verticalOffset <= pageBounds.y && -this.verticalOffset + this.viewPortHeight >= pageBounds.bottom) {\n            vScrollSize = 0;\n        }\n        if (-this.horizontalOffset <= pageBounds.x && -this.horizontalOffset + this.viewPortWidth >= pageBounds.right) {\n            hScrollSize = 0;\n        }\n        this.hScrollSize = hScrollSize;\n        this.vScrollSize = vScrollSize;\n        var oldWidth = this.diagramWidth;\n        var oldHeight = this.diagramHeight;\n        this.diagramWidth = Math.max(pageBounds.right, -this.horizontalOffset + this.viewPortWidth - vScrollSize) - x;\n        this.diagramHeight = Math.max(pageBounds.bottom, -this.verticalOffset + this.viewPortHeight - hScrollSize) - y;\n        if (oldWidth !== this.diagramWidth || oldHeight !== this.diagramHeight) {\n            this.diagram.setSize(this.diagramWidth, this.diagramHeight);\n        }\n        this.diagram.transformLayers();\n        this.diagram.element.style.overflow = 'hidden';\n    };\n    /** @private */\n    DiagramScroller.prototype.setViewPortSize = function (width, height) {\n        this.viewPortWidth = width;\n        this.viewPortHeight = height;\n    };\n    /**\n     * To get page pageBounds\n     * @private\n     */\n    DiagramScroller.prototype.getPageBounds = function (boundingRect, region, hasPadding) {\n        var rect = new Rect();\n        var pageBounds;\n        var temp = 0;\n        if (region !== 'Content' && this.diagram.pageSettings.width !== null && this.diagram.pageSettings.height !== null) {\n            var width = this.diagram.pageSettings.width;\n            var height = this.diagram.pageSettings.height;\n            var negwidth = 0;\n            var negheight = 0;\n            if (this.diagram.pageSettings.multiplePage) {\n                rect = this.diagram.spatialSearch.getPageBounds(0, 0);\n                if (rect.right > width) {\n                    var x = Math.ceil(rect.right / width);\n                    width = width * x;\n                }\n                if (rect.bottom > height) {\n                    var x = Math.ceil(rect.bottom / height);\n                    height = height * x;\n                }\n                if (rect.left < 0 && Math.abs(rect.left) > negwidth) {\n                    var x = Math.ceil(Math.abs(rect.left) / this.diagram.pageSettings.width);\n                    negwidth = this.diagram.pageSettings.width * x;\n                }\n                if (rect.top < 0 && Math.abs(rect.top) > negheight) {\n                    var x = Math.ceil(Math.abs(rect.top) / this.diagram.pageSettings.height);\n                    negheight = this.diagram.pageSettings.height * x;\n                }\n            }\n            pageBounds = new Rect((-negwidth), (-negheight), width + negwidth, height + negheight);\n        }\n        else {\n            var origin = boundingRect ? undefined : 0;\n            pageBounds = this.diagram.spatialSearch.getPageBounds(origin, origin);\n        }\n        if (hasPadding) {\n            var scrollpadding = this.diagram.scrollSettings.padding;\n            pageBounds.x -= scrollpadding.left;\n            pageBounds.y -= scrollpadding.top;\n            pageBounds.width += (scrollpadding.left + scrollpadding.right);\n            pageBounds.height += (scrollpadding.top + scrollpadding.bottom);\n        }\n        return pageBounds;\n    };\n    /**\n     * To get page break when PageBreak is set as true\n     * @private\n     */\n    DiagramScroller.prototype.getPageBreak = function (pageBounds) {\n        var i = 0;\n        var j = 0;\n        var v = -1;\n        var collection = [];\n        var x1 = 0;\n        var x2 = 0;\n        var y1 = 0;\n        var y2 = 0;\n        var left = this.diagram.pageSettings.margin.left;\n        var right = this.diagram.pageSettings.margin.right;\n        var top = this.diagram.pageSettings.margin.top;\n        var bottom = this.diagram.pageSettings.margin.bottom;\n        var widthCount = 1;\n        var heightCount = 1;\n        var segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n        while (pageBounds.width > i) {\n            i = i + (this.diagram.pageSettings.width ? this.diagram.pageSettings.width : pageBounds.width);\n            if (i === this.diagram.pageSettings.width) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.left + left, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n            if (i < pageBounds.width) {\n                x1 = pageBounds.topLeft.x + this.diagram.pageSettings.width * widthCount;\n                y1 = pageBounds.topLeft.y + top;\n                x2 = pageBounds.bottomLeft.x + this.diagram.pageSettings.width * widthCount;\n                y2 = pageBounds.bottomLeft.y - bottom;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                widthCount++;\n            }\n            if (pageBounds.width === i) {\n                segment = {\n                    x1: pageBounds.right - right, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        while (pageBounds.height > j) {\n            j = j + (this.diagram.pageSettings.height ? this.diagram.pageSettings.height : pageBounds.height);\n            if (j === this.diagram.pageSettings.height) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.top + top,\n                    x2: pageBounds.right - right, y2: pageBounds.top + top\n                };\n                collection[++v] = segment;\n            }\n            if (j < pageBounds.height) {\n                x1 = pageBounds.topLeft.x + left;\n                y1 = pageBounds.topLeft.y + this.diagram.pageSettings.height * heightCount;\n                x2 = pageBounds.topRight.x - right;\n                y2 = pageBounds.topRight.y + this.diagram.pageSettings.height * heightCount;\n                segment = { x1: x1, y1: y1, x2: x2, y2: y2 };\n                collection[++v] = segment;\n                heightCount++;\n            }\n            if (pageBounds.height === j) {\n                segment = {\n                    x1: pageBounds.left + left, y1: pageBounds.bottom - bottom,\n                    x2: pageBounds.right - right, y2: pageBounds.bottom - bottom\n                };\n                collection[++v] = segment;\n            }\n        }\n        return collection;\n    };\n    /** @private */\n    DiagramScroller.prototype.zoom = function (factor, deltaX, deltaY, focusPoint) {\n        if (canZoom(this.diagram) && factor !== 1 || (canPan(this.diagram) && factor === 1)) {\n            var matrix = identityMatrix();\n            scaleMatrix(matrix, this.currentZoom, this.currentZoom);\n            translateMatrix(matrix, this.horizontalOffset, this.verticalOffset);\n            focusPoint = focusPoint || {\n                x: (this.viewPortWidth / 2 - this.horizontalOffset) / this.currentZoom,\n                y: (this.viewPortHeight / 2 - this.verticalOffset) / this.currentZoom\n            };\n            focusPoint = transformPointByMatrix(matrix, focusPoint);\n            if ((this.currentZoom * factor) >= this.diagram.scrollSettings.minZoom &&\n                (this.currentZoom * factor) <= this.diagram.scrollSettings.maxZoom) {\n                this.currentZoom *= factor;\n                var pageBounds = this.getPageBounds(undefined, undefined, true);\n                pageBounds.x *= this.currentZoom;\n                pageBounds.y *= this.currentZoom;\n                //target Matrix\n                var targetMatrix = identityMatrix();\n                scaleMatrix(targetMatrix, factor, factor, focusPoint.x, focusPoint.y);\n                translateMatrix(targetMatrix, deltaX || 0, deltaY || 0);\n                multiplyMatrix(matrix, targetMatrix);\n                var newOffset = transformPointByMatrix(matrix, { x: 0, y: 0 });\n                if (factor === 1) {\n                    newOffset = this.applyScrollLimit(newOffset.x, newOffset.y);\n                }\n                this.transform = {\n                    tx: Math.max(newOffset.x, -pageBounds.left) / this.currentZoom,\n                    ty: Math.max(newOffset.y, -pageBounds.top) / this.currentZoom,\n                    scale: this.currentZoom\n                };\n                this.horizontalOffset = newOffset.x;\n                this.verticalOffset = newOffset.y;\n                this.setSize();\n                if (this.diagram.mode !== 'SVG' && canVitualize(this.diagram)) {\n                    this.diagram.scroller.virtualizeElements();\n                }\n                if (this.diagram.mode !== 'SVG' && !canVitualize(this.diagram)) {\n                    this.diagram.refreshDiagramLayer();\n                }\n                this.diagram.setOffset(-this.horizontalOffset - pageBounds.x, -this.verticalOffset - pageBounds.y);\n                updateRuler(this.diagram);\n            }\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.fitToPage = function (options) {\n        options = options || {};\n        var mode = options.mode;\n        var region = options.region;\n        var margin = options.margin || {};\n        var canZoomIn = options.canZoomIn;\n        var customBounds = options.customBounds;\n        margin.bottom = margin.bottom || 25;\n        margin.top = margin.top || 25;\n        margin.left = margin.left || 25;\n        margin.right = margin.right || 25;\n        var bounds = customBounds;\n        var factor;\n        var deltaX = -this.horizontalOffset;\n        var deltaY = -this.verticalOffset;\n        region = region ? region : 'PageSettings';\n        //fit mode\n        if ((region === 'PageSettings' && this.diagram.pageSettings.width && this.diagram.pageSettings.height)\n            || (this.diagram.nodes.length > 0 || this.diagram.connectors.length > 0)) {\n            mode = mode ? mode : 'Page';\n            if (region !== 'CustomBounds') {\n                bounds = this.getPageBounds(true, region, true);\n            }\n            var scale = { x: 0, y: 0 };\n            scale.x = (this.viewPortWidth - (margin.left + margin.right)) / (bounds.width);\n            scale.y = (this.viewPortHeight - (margin.top + margin.bottom)) / (bounds.height);\n            if (!canZoomIn && ((bounds.width - this.horizontalOffset) < this.viewPortWidth) &&\n                (bounds.height - this.verticalOffset) < this.viewPortHeight) {\n                scale.x = Math.min(1, scale.x);\n                scale.y = Math.min(1, scale.y);\n            }\n            var zoomFactor = void 0;\n            var centerX = void 0;\n            var centerY = void 0;\n            switch (mode) {\n                case 'Width':\n                    zoomFactor = scale.x;\n                    factor = zoomFactor / this.currentZoom;\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY -= -this.verticalOffset * factor;\n                    deltaY = region !== 'CustomBounds' ? deltaY : deltaY - this.verticalOffset * factor;\n                    break;\n                case 'Height':\n                    zoomFactor = scale.y;\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = ((this.viewPortWidth - (bounds.width) * zoomFactor) / 2) - bounds.x * zoomFactor;\n                    centerY = ((this.viewPortHeight - (bounds.height) * zoomFactor) / 2) - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n                case 'Page':\n                    zoomFactor = Math.min(scale.x, scale.y);\n                    factor = (zoomFactor / this.currentZoom);\n                    centerX = (this.viewPortWidth - (bounds.width) * zoomFactor) / 2 - bounds.x * zoomFactor;\n                    centerY = (this.viewPortHeight - (bounds.height) * zoomFactor) / 2 - bounds.y * zoomFactor;\n                    deltaX += centerX + (margin.left - margin.right) / 2 * zoomFactor;\n                    deltaY += centerY + (margin.top - margin.bottom) / 2 * zoomFactor;\n                    break;\n            }\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n        else {\n            factor = 1 / this.currentZoom;\n            this.zoom(factor, deltaX, deltaY, { x: 0, y: 0 });\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringIntoView = function (rect) {\n        var x = 0;\n        var y = 0;\n        var scale = this.currentZoom;\n        var bounds = rect;\n        var hoffset = -this.horizontalOffset;\n        var voffset = -this.verticalOffset;\n        bounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var view = new Rect(hoffset, voffset, this.viewPortWidth, this.viewPortHeight);\n        if (!(view.containsRect(bounds))) {\n            if (bounds.right > (-hoffset + this.viewPortWidth)) {\n                x = bounds.right - this.viewPortWidth;\n            }\n            if (bounds.x < -hoffset) {\n                x = bounds.x;\n            }\n            if (bounds.bottom > (-voffset + this.viewPortHeight)) {\n                y = bounds.bottom - this.viewPortHeight;\n            }\n            if (bounds.y < -voffset) {\n                y = bounds.y;\n            }\n            this.zoom(1, -this.horizontalOffset - x, -this.verticalOffset - y, null);\n        }\n    };\n    /** @private */\n    DiagramScroller.prototype.bringToCenter = function (bounds) {\n        var scale = this.currentZoom;\n        var actualbounds = new Rect(bounds.x * scale, bounds.y * scale, bounds.width * scale, bounds.height * scale);\n        var hoffset = actualbounds.x + actualbounds.width / 2 - this.viewPortWidth / 2;\n        var voffset = actualbounds.y + actualbounds.height / 2 - this.viewPortHeight / 2;\n        this.zoom(1, -this.horizontalOffset - hoffset, -this.verticalOffset - voffset, null);\n    };\n    DiagramScroller.prototype.applyScrollLimit = function (hOffset, vOffset) {\n        if (this.diagram.scrollSettings.scrollLimit !== 'Infinity') {\n            var bounds = void 0;\n            if (this.diagram.scrollSettings.scrollLimit === 'Limited') {\n                bounds = this.diagram.scrollSettings.scrollableArea;\n            }\n            bounds = bounds || this.getPageBounds(true);\n            bounds.x *= this.currentZoom;\n            bounds.y *= this.currentZoom;\n            bounds.width *= this.currentZoom;\n            bounds.height *= this.currentZoom;\n            hOffset *= -1;\n            vOffset *= -1;\n            var allowedRight = Math.max(bounds.right, this.viewPortWidth);\n            if (!(hOffset <= bounds.x && (hOffset + this.viewPortWidth >= bounds.right ||\n                hOffset >= bounds.right - this.viewPortWidth)\n                || hOffset >= bounds.x && (hOffset + this.viewPortWidth <= allowedRight))) {\n                //not allowed case\n                if (hOffset >= bounds.x) {\n                    hOffset = Math.max(bounds.x, Math.min(hOffset, hOffset - (hOffset + this.viewPortWidth - this.vScrollSize - allowedRight)));\n                }\n                else {\n                    var allowed = bounds.right - this.viewPortWidth;\n                    hOffset = Math.min(allowed, bounds.x);\n                }\n            }\n            var allowedBottom = Math.max(bounds.bottom, this.viewPortHeight);\n            if (!(vOffset <= bounds.y && vOffset + this.viewPortHeight >= bounds.bottom\n                || vOffset >= bounds.y && vOffset + this.viewPortHeight <= allowedBottom)) {\n                //not allowed case\n                if (vOffset >= bounds.y) {\n                    vOffset = Math.max(bounds.y, Math.min(vOffset, vOffset - (vOffset + this.viewPortHeight - this.hScrollSize - allowedBottom)));\n                }\n                else {\n                    var allowed = bounds.bottom - this.viewPortHeight;\n                    vOffset = Math.min(bounds.y, allowed);\n                }\n            }\n            hOffset *= -1;\n            vOffset *= -1;\n        }\n        return { x: hOffset, y: vOffset };\n    };\n    return DiagramScroller;\n}());\nexport { DiagramScroller };\n","/**\n * Quad helps to maintain a set of objects that are contained within the particular region\n */\n/** @private */\nvar Quad = /** @class */ (function () {\n    /** @private */\n    function Quad(left, top, width, height, spatialSearching) {\n        this.objects = [];\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.spatialSearch = spatialSearching;\n    }\n    /** @private */\n    Quad.prototype.findQuads = function (currentViewPort, quads) {\n        if (this.first != null && this.first.isIntersect(currentViewPort)) {\n            this.first.findQuads(currentViewPort, quads);\n        }\n        if (this.second != null && this.second.isIntersect(currentViewPort)) {\n            this.second.findQuads(currentViewPort, quads);\n        }\n        if (this.third != null && this.third.isIntersect(currentViewPort)) {\n            this.third.findQuads(currentViewPort, quads);\n        }\n        if (this.fourth != null && this.fourth.isIntersect(currentViewPort)) {\n            this.fourth.findQuads(currentViewPort, quads);\n        }\n        if (this.objects.length > 0) {\n            quads.push(this);\n        }\n    };\n    Quad.prototype.isIntersect = function (t) {\n        if (this.left + this.width < t.left || this.top + this.height < t.top || this.left > t.right || this.top > t.bottom) {\n            return false;\n        }\n        return true;\n    };\n    /** @private */\n    Quad.prototype.selectQuad = function () {\n        var target = null;\n        var current = this;\n        var quadSet;\n        while (current != null) {\n            quadSet = current.getQuad(target);\n            current = quadSet.source;\n            target = quadSet.target || target;\n        }\n        return target;\n    };\n    Quad.prototype.getQuad = function (target) {\n        target = null;\n        var halfWidth = this.width / 2;\n        var halfHeight = this.height / 2;\n        if (halfWidth >= 1000 && halfHeight >= 1000) {\n            var xCenter = this.left + halfWidth;\n            var yCenter = this.top + halfHeight;\n            if (this.spatialSearch.childRight <= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.first) {\n                        var newQuad = new Quad(this.left, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.first = newQuad;\n                    }\n                    return { source: this.first };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.third) {\n                        var newQuad = new Quad(this.left, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.third = newQuad;\n                    }\n                    return { source: this.third };\n                }\n            }\n            else if (this.spatialSearch.childLeft >= xCenter) {\n                if (this.spatialSearch.childBottom <= yCenter) {\n                    if (!this.second) {\n                        var newQuad = new Quad(xCenter, this.top, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.second = newQuad;\n                    }\n                    return { source: this.second };\n                }\n                if (this.spatialSearch.childTop >= yCenter) {\n                    if (!this.fourth) {\n                        var newQuad = new Quad(xCenter, yCenter, halfWidth, halfHeight, this.spatialSearch);\n                        newQuad.parent = this;\n                        this.fourth = newQuad;\n                    }\n                    return { source: this.fourth };\n                }\n            }\n        }\n        target = this;\n        this.objects.push(this.spatialSearch.childNode);\n        return { target: this };\n    };\n    /** @private */\n    Quad.prototype.isContained = function () {\n        if (this.spatialSearch.childLeft >= this.left && this.spatialSearch.childRight <= this.left + this.width &&\n            this.spatialSearch.childTop >= this.top && this.spatialSearch.childBottom <= this.top + this.height) {\n            return true;\n        }\n        return false;\n    };\n    /** @private */\n    Quad.prototype.addIntoAQuad = function (node) {\n        var quadAddition = {};\n        this.spatialSearch.setCurrentNode(node);\n        var quad = null;\n        while (!quadAddition.isAdded) {\n            quadAddition = this.spatialSearch.parentQuad.add(quad);\n            quad = quadAddition.quad;\n        }\n        return quad;\n    };\n    Quad.prototype.add = function (quad) {\n        quad = null;\n        if (this.isContained()) {\n            quad = this.selectQuad();\n            return { isAdded: true, quad: quad };\n        }\n        else {\n            var newParent = void 0;\n            var isempty = this.objects.length === 0 && !this.first && !this.second && !this.third &&\n                !this.fourth;\n            var newWidth = this.width * 2;\n            var newHeight = this.height * 2;\n            if (this.spatialSearch.childLeft < this.left) {\n                if (this.spatialSearch.childTop < this.top) {\n                    newParent = new Quad(this.left - this.width, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.fourth = this;\n                    }\n                }\n                else {\n                    newParent = new Quad(this.left - this.width, this.top, newWidth, newHeight, this.spatialSearch);\n                    if (!isempty) {\n                        newParent.second = this;\n                    }\n                }\n            }\n            else if (this.spatialSearch.childTop < this.top) {\n                newParent = new Quad(this.left, this.top - this.height, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.third = this;\n                }\n            }\n            else {\n                newParent = new Quad(this.left, this.top, newWidth, newHeight, this.spatialSearch);\n                if (!isempty) {\n                    newParent.first = this;\n                }\n            }\n            this.parent = newParent;\n            this.spatialSearch.parentQuad = newParent;\n            return { isAdded: false, quad: quad };\n            //newParent.AddIntoaQuad(node);\n        }\n    };\n    return Quad;\n}());\nexport { Quad };\n","import { Rect } from '../../primitives/rect';\nimport { Quad } from './quad';\n/**\n * Spatial search module helps to effectively find the objects over diagram\n */\nvar SpatialSearch = /** @class */ (function () {\n    /** @private */\n    function SpatialSearch(objectTable) {\n        this.quadSize = 500;\n        this.objectTable = objectTable;\n        this.parentQuad = new Quad(0, 0, this.quadSize * 2, this.quadSize * 2, this);\n        this.pageLeft = Number.MAX_VALUE;\n        this.pageRight = -Number.MAX_VALUE;\n        this.pageTop = Number.MAX_VALUE;\n        this.pageBottom = -Number.MAX_VALUE;\n        this.quadTable = {};\n    }\n    /** @private */\n    SpatialSearch.prototype.removeFromAQuad = function (node) {\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            var index = this.objectIndex(quad.objects, node);\n            if (index !== -1) {\n                quad.objects.splice(index, 1);\n                this.update(quad);\n                delete this.quadTable[node.id];\n            }\n        }\n    };\n    SpatialSearch.prototype.update = function (quad) {\n        if (quad.parent && quad.objects.length === 0 && quad.first && quad.second && quad.third && quad.fourth) {\n            var parent_1 = quad.parent;\n            if (parent_1.first === quad) {\n                parent_1.first = null;\n            }\n            else if (parent_1.second === quad) {\n                parent_1.second = null;\n            }\n            else if (parent_1.third === quad) {\n                parent_1.third = null;\n            }\n            else if (parent_1.fourth === quad) {\n                parent_1.fourth = null;\n            }\n            this.update(quad.parent);\n        }\n        else {\n            if (quad === this.parentQuad && !quad.first && !quad.second && !quad.third && !quad.fourth) {\n                quad.left = 0;\n                quad.width = 1000;\n                quad.top = 0;\n                quad.height = 1000;\n            }\n            return;\n        }\n    };\n    SpatialSearch.prototype.addIntoAQuad = function (node) {\n        var quad = this.parentQuad.addIntoAQuad(node);\n        this.quadTable[node.id] = quad;\n    };\n    /** @private */\n    SpatialSearch.prototype.objectIndex = function (objects, node) {\n        for (var i = 0; i < objects.length; i++) {\n            if ((objects[i]).id === node.id) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateQuad = function (node) {\n        this.setCurrentNode(node);\n        var nodBounds = node.outerBounds;\n        if (!(!isNaN(nodBounds.x) && !isNaN(nodBounds.y) &&\n            !isNaN(nodBounds.width) && !isNaN(nodBounds.height))) {\n            return false;\n        }\n        //nodBounds = new Rect(nodBounds.X.Valid(), nodBounds.Y.Valid(), nodBounds.Width.Valid(), nodBounds.Height.Valid());\n        if (this.quadTable[node.id]) {\n            var quad = this.quadTable[node.id];\n            if (!quad.isContained()) {\n                this.removeFromAQuad(node);\n                this.addIntoAQuad(node);\n            }\n        }\n        else {\n            this.addIntoAQuad(node);\n        }\n        if (this.isWithinPageBounds(nodBounds) &&\n            this.leftElement !== node &&\n            this.topElement !== node &&\n            this.rightElement !== node &&\n            this.bottomElement !== node) {\n            //contained - no change\n        }\n        else {\n            var modified = false;\n            if (this.pageLeft !== this.childLeft || node !== this.leftElement) {\n                if (this.pageLeft >= this.childLeft) {\n                    this.pageLeft = this.childLeft;\n                    this.leftElement = node;\n                    modified = true;\n                }\n                else if (node === this.leftElement) {\n                    this.pageLeft = Number.MAX_VALUE;\n                    this.findLeft(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageTop !== this.childTop || node !== this.topElement) {\n                if (this.pageTop >= this.childTop) {\n                    this.pageTop = this.childTop;\n                    this.topElement = node;\n                    modified = true;\n                }\n                else if (node === this.topElement) {\n                    this.pageTop = Number.MAX_VALUE;\n                    this.findTop(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageBottom !== this.childBottom || node !== this.bottomElement) {\n                if (this.pageBottom <= this.childBottom) {\n                    modified = true;\n                    this.pageBottom = this.childBottom;\n                    this.bottomElement = node;\n                }\n                else if (node === this.bottomElement) {\n                    this.pageBottom = -Number.MAX_VALUE;\n                    this.findBottom(this.parentQuad);\n                    modified = true;\n                }\n            }\n            if (this.pageRight !== this.childRight || node !== this.rightElement) {\n                if (this.pageRight <= this.childRight) {\n                    this.pageRight = this.childRight;\n                    this.rightElement = node;\n                    modified = true;\n                }\n                else if (node === this.rightElement) {\n                    this.pageRight = -Number.MAX_VALUE;\n                    this.findRight(this.parentQuad);\n                    modified = true;\n                }\n            }\n            return modified;\n        }\n        this.setCurrentNode(null);\n        return false;\n    };\n    SpatialSearch.prototype.isWithinPageBounds = function (node) {\n        if (node.left >= this.pageLeft && node.right <= this.pageRight && node.top >= this.pageTop\n            && node.bottom <= this.pageBottom) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.findQuads = function (region) {\n        var quads = [];\n        this.parentQuad.findQuads(region, quads);\n        return quads;\n    };\n    /** @private */\n    SpatialSearch.prototype.findObjects = function (region) {\n        var quads = this.findQuads(region);\n        var objects = [];\n        for (var _i = 0, quads_1 = quads; _i < quads_1.length; _i++) {\n            var quad = quads_1[_i];\n            for (var _a = 0, _b = quad.objects; _a < _b.length; _a++) {\n                var obj = _b[_a];\n                if (obj.outerBounds.intersects(region)) {\n                    objects.push(this.objectTable[obj.id]);\n                }\n            }\n        }\n        return objects;\n    };\n    /** @private */\n    SpatialSearch.prototype.updateBounds = function (node) {\n        var modified = false;\n        if (node === this.topElement) {\n            this.pageTop = Number.MAX_VALUE;\n            this.topElement = null;\n            this.findTop(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.leftElement) {\n            this.pageLeft = Number.MAX_VALUE;\n            this.leftElement = null;\n            this.findLeft(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.rightElement) {\n            this.pageRight = -Number.MAX_VALUE;\n            this.rightElement = null;\n            this.findRight(this.parentQuad);\n            modified = true;\n        }\n        if (node === this.bottomElement) {\n            this.pageBottom = -Number.MAX_VALUE;\n            this.bottomElement = null;\n            this.findBottom(this.parentQuad);\n            modified = true;\n        }\n        return modified;\n    };\n    SpatialSearch.prototype.findBottom = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.third || quad.fourth) {\n                if (quad.third) {\n                    this.findBottom(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findBottom(quad.fourth);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findBottom(quad.second);\n                }\n                if (quad.first) {\n                    this.findBottom(quad.first);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageBottom <= node.outerBounds.bottom) {\n                this.pageBottom = node.outerBounds.bottom;\n                this.bottomElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findRight = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.second || quad.fourth) {\n                if (quad.second) {\n                    this.findRight(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findRight(quad.fourth);\n                }\n            }\n            else {\n                if (quad.first) {\n                    this.findRight(quad.first);\n                }\n                if (quad.third) {\n                    this.findRight(quad.third);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageRight <= node.outerBounds.right) {\n                this.pageRight = node.outerBounds.right;\n                this.rightElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findLeft = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.third) {\n                if (quad.first) {\n                    this.findLeft(quad.first);\n                }\n                if (quad.third) {\n                    this.findLeft(quad.third);\n                }\n            }\n            else {\n                if (quad.second) {\n                    this.findLeft(quad.second);\n                }\n                if (quad.fourth) {\n                    this.findLeft(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageLeft >= node.outerBounds.left) {\n                this.pageLeft = node.outerBounds.left;\n                this.leftElement = node;\n            }\n        }\n    };\n    SpatialSearch.prototype.findTop = function (quad) {\n        //if (quad.Quads.Count === 4)\n        {\n            if (quad.first || quad.second) {\n                if (quad.first) {\n                    this.findTop(quad.first);\n                }\n                if (quad.second) {\n                    this.findTop(quad.second);\n                }\n            }\n            else {\n                if (quad.third) {\n                    this.findTop(quad.third);\n                }\n                if (quad.fourth) {\n                    this.findTop(quad.fourth);\n                }\n            }\n        }\n        for (var _i = 0, _a = quad.objects; _i < _a.length; _i++) {\n            var node = _a[_i];\n            if (this.pageTop >= node.outerBounds.top) {\n                this.pageTop = node.outerBounds.top;\n                this.topElement = node;\n            }\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.setCurrentNode = function (node) {\n        this.childNode = node;\n        if (node) {\n            var r = node.outerBounds;\n            this.childLeft = Number(r.left);\n            this.childTop = Number(r.top);\n            this.childRight = Number(r.right);\n            this.childBottom = Number(r.bottom);\n        }\n        else {\n            this.childLeft = Number.MAX_VALUE;\n            this.childTop = Number.MAX_VALUE;\n            this.childRight = -Number.MAX_VALUE;\n            this.childBottom = -Number.MAX_VALUE;\n        }\n    };\n    /** @private */\n    SpatialSearch.prototype.getPageBounds = function (originX, originY) {\n        if (this.pageLeft === Number.MAX_VALUE) {\n            return new Rect(0, 0, 0, 0);\n        }\n        var left = originX !== undefined ? Math.min(this.pageLeft, 0) : this.pageLeft;\n        var top = originY !== undefined ? Math.min(this.pageTop, 0) : this.pageTop;\n        return new Rect(Math.round(left), Math.round(top), Math.round(this.pageRight - left), Math.round(this.pageBottom - top));\n    };\n    /** @private */\n    SpatialSearch.prototype.getQuad = function (node) {\n        return this.quadTable[node.id];\n    };\n    return SpatialSearch;\n}());\nexport { SpatialSearch };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Defines the serialization settings of diagram\n * ```html\n * <div id='diagram'></div>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * ...\n * serializationSettings: { preventDefaults: true },\n * ...\n * });\n * diagram.appendTo('#diagram');\n * ```\n * @default {}\n */\nvar SerializationSettings = /** @class */ (function (_super) {\n    __extends(SerializationSettings, _super);\n    function SerializationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], SerializationSettings.prototype, \"preventDefaults\", void 0);\n    return SerializationSettings;\n}(ChildProperty));\nexport { SerializationSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, Collection, EventHandler, L10n, Droppable, remove, Ajax } from '@syncfusion/ej2-base';\nimport { Browser, Event } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { SvgRenderer } from './rendering/svg-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { PageSettings, ScrollSettings } from './diagram/page-settings';\nimport { ServiceLocator } from './objects/service';\nimport { Container } from './core/containers/container';\nimport { Node, BpmnShape } from './objects/node';\nimport { flipConnector, updatePortEdges, alignElement } from './utility/diagram-util';\nimport { Connector } from './objects/connector';\nimport { SnapSettings } from './diagram/grid-lines';\nimport { RulerSettings } from './diagram/ruler-settings';\nimport { removeRulerElements, updateRuler, getRulerSize } from './ruler/ruler';\nimport { renderRuler, renderOverlapElement } from './ruler/ruler';\nimport { Size } from './primitives/size';\nimport { Keys, KeyModifiers, DiagramTools, AnnotationConstraints, NodeConstraints, RendererAction } from './enum/enum';\nimport { DiagramConstraints, SelectorConstraints, PortVisibility, DiagramEvent } from './enum/enum';\nimport { DiagramAction, ThumbsConstraints } from './enum/enum';\nimport { RealAction, ElementAction, PortConstraints } from './enum/enum';\nimport { PathElement } from './core/elements/path-element';\nimport { TextElement } from './core/elements/text-element';\nimport { updateStyle, removeItem, updateConnector, updateShape, setUMLActivityDefaults, findNodeByName } from './utility/diagram-util';\nimport { setSwimLaneDefaults } from './utility/diagram-util';\nimport { checkPortRestriction, serialize, deserialize, updateHyperlink, getObjectType, removeGradient } from './utility/diagram-util';\nimport { Rect } from './primitives/rect';\nimport { getPortShape } from './objects/dictionary/common';\nimport { ShapeAnnotation, PathAnnotation } from './objects/annotation';\nimport { Canvas } from './core/containers/canvas';\nimport { GridPanel, ColumnDefinition } from './core/containers/grid';\nimport { DataSource } from './diagram/data-source';\nimport { Layout } from './layout/layout-base';\nimport { Selector } from './interaction/selector';\nimport { DiagramEventHandler } from './interaction/event-handlers';\nimport { CommandHandler } from './interaction/command-manager';\nimport { DiagramScroller } from './interaction/scroller';\nimport { isSelected } from './interaction/actions';\nimport { SpatialSearch } from './interaction/spatial-search/spatial-search';\nimport { setAttributeSvg, setAttributeHtml, measureHtmlText, removeElement, createMeasureElements, getDomIndex } from './utility/dom-util';\nimport { getDiagramElement, getScrollerWidth, getHTMLLayer } from './utility/dom-util';\nimport { getBackgroundLayer, createHtmlElement, createSvgElement, getNativeLayerSvg } from './utility/dom-util';\nimport { getPortLayerSvg, getDiagramLayerSvg } from './utility/dom-util';\nimport { getAdornerLayerSvg, getSelectorElement, getGridLayerSvg, getBackgroundLayerSvg } from './utility/dom-util';\nimport { CommandManager, ContextMenuSettings } from './diagram/keyboard-commands';\nimport { canDelete, canInConnect, canOutConnect, canRotate, canVitualize, canDrawThumbs } from './utility/constraints-util';\nimport { canPortInConnect, canPortOutConnect } from './utility/constraints-util';\nimport { canResize, canSingleSelect, canZoomPan, canZoomTextEdit } from './utility/constraints-util';\nimport { canDragSourceEnd, canDragTargetEnd, canDragSegmentThumb, enableReadOnly, canMove } from './utility/constraints-util';\nimport { findAnnotation, arrangeChild, getInOutConnectPorts, removeChildNodes } from './utility/diagram-util';\nimport { randomId, cloneObject, extendObject, getFunction, getBounds } from './utility/base-util';\nimport { DiagramTooltip, initTooltip } from './objects/tooltip';\nimport { PointPort } from './objects/port';\nimport { canShadow } from './utility/constraints-util';\nimport { Layer } from './diagram/layer';\nimport { DiagramNativeElement } from './core/elements/native-element';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { canAllowDrop } from './utility/constraints-util';\nimport { checkParentAsContainer, addChildToContainer, updateLaneBoundsAfterAddChild } from './interaction/container-interaction';\nimport { getConnectors, updateConnectorsProperties, phaseDefine } from './utility/swim-lane-util';\nimport { swimLaneMeasureAndArrange } from './utility/swim-lane-util';\nimport { arrangeChildNodesInSwimLane, updateHeaderMaxWidth, updatePhaseMaxWidth } from './utility/swim-lane-util';\nimport { addLane, addPhase } from './utility/swim-lane-util';\nimport { SerializationSettings } from './diagram/serialization-settings';\nimport { removeSwimLane, removeLane, removePhase, removeLaneChildNode } from './utility/swim-lane-util';\nimport { RowDefinition } from './core/containers/grid';\n/**\n * Represents the Diagram control\n * ```html\n * <div id='diagram'/>\n * ```\n * ```typescript\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * ```\n */\nvar Diagram = /** @class */ (function (_super) {\n    __extends(Diagram, _super);\n    /**\n     * Constructor for creating the widget\n     */\n    function Diagram(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.version = 17.1;\n        /** @private */\n        _this.connectorTable = {};\n        /** @private */\n        _this.groupTable = {};\n        /** @private */\n        _this.activeLabel = { id: '', parentId: '', isGroup: false };\n        /** @private */\n        _this.textEditing = false;\n        /** @private */\n        _this.isTriggerEvent = false;\n        /** @private */\n        _this.preventNodesUpdate = false;\n        /** @private */\n        _this.preventConnectorsUpdate = false;\n        /** @private */\n        _this.selectionConnectorsList = [];\n        /** @private */\n        _this.deleteVirtualObject = false;\n        _this.crudDeleteNodes = [];\n        /** @private */\n        _this.selectedObject = { helperObject: undefined, actualObject: undefined };\n        _this.renderTimer = null;\n        var child;\n        var node;\n        for (var i = 0; options && options.nodes && i < options.nodes.length; i++) {\n            child = options.nodes[i];\n            node = _this.nodes[i];\n            if (child.children && child.children.length > 0) {\n                if (!child.style || !child.style.fill) {\n                    node.style.fill = 'transparent';\n                }\n                if (!child.style || !child.style.strokeColor) {\n                    node.style.strokeColor = 'transparent';\n                }\n            }\n            if (child.shape && child.shape.type === 'UmlActivity') {\n                setUMLActivityDefaults(child, node);\n            }\n            if (child.shape && child.shape.type === 'SwimLane') {\n                setSwimLaneDefaults(child, node);\n            }\n        }\n        return _this;\n    }\n    Diagram.prototype.clearCollection = function (isConnector) {\n        var collection = [];\n        var obj;\n        for (var _i = 0, _a = Object.keys(this.nameTable); _i < _a.length; _i++) {\n            var key = _a[_i];\n            obj = this.nameTable[key];\n            if (obj && ((isConnector && obj instanceof Connector) || (!isConnector && obj instanceof Node))) {\n                collection.push(obj);\n            }\n        }\n        this.clearObjects(collection);\n    };\n    /**\n     * Updates the diagram control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    /* tslint:disable */\n    Diagram.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // Model Changed\n        var objectArray = [];\n        var refreshLayout = false;\n        var refereshColelction = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                case 'height':\n                    this.element.style.width = this.getSizeValue(this.width);\n                    this.element.style.height = this.getSizeValue(this.height);\n                    this.eventHandler.updateViewPortSize(this.element);\n                    for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                        var view = _c[_b];\n                        var temp = this.views[view];\n                        if (!(temp instanceof Diagram)) {\n                            temp.updateView(temp);\n                        }\n                    }\n                    break;\n                case 'nodes':\n                    if (newProp.nodes.length > 0 && oldProp.nodes.length === 0) {\n                        this.clearCollection();\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _d = 0, _e = Object.keys(newProp.nodes); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var index = Number(key);\n                            var actualObject = this.nodes[index];\n                            var changedProp = newProp.nodes[index];\n                            refreshLayout = refreshLayout || changedProp.excludeFromLayout !== undefined;\n                            this.nodePropertyChange(actualObject, oldProp.nodes[index], changedProp, undefined, true);\n                            objectArray.push(actualObject);\n                        }\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'connectors':\n                    var oldObject = void 0;\n                    if (newProp.connectors.length > 0 && oldProp.connectors.length === 0) {\n                        this.clearCollection(true);\n                        refereshColelction = true;\n                    }\n                    else {\n                        for (var _f = 0, _g = Object.keys(newProp.connectors); _f < _g.length; _f++) {\n                            var key = _g[_f];\n                            var index = Number(key);\n                            var actualObject = this.connectors[index];\n                            var changedProp = newProp.connectors[index];\n                            this.connectorPropertyChange(actualObject, oldProp.connectors[index], changedProp, true);\n                            objectArray.push(actualObject);\n                            if (actualObject && actualObject.parentId && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier') {\n                                this.updateConnectorEdges(this.nameTable[actualObject.parentId] || actualObject);\n                            }\n                        }\n                        this.updateBridging();\n                        if (this.mode === 'Canvas') {\n                            this.refreshDiagramLayer();\n                        }\n                    }\n                    break;\n                case 'bridgeDirection':\n                    this.updateBridging();\n                    if (this.mode === 'Canvas') {\n                        this.refreshDiagramLayer();\n                    }\n                    break;\n                case 'backgroundColor':\n                    this.intOffPageBackground();\n                    break;\n                case 'pageSettings':\n                    this.validatePageSize();\n                    this.updatePage();\n                    break;\n                case 'selectedItems':\n                    if (newProp.selectedItems.userHandles && this.selectedItems.wrapper && this.selectedItems.userHandles) {\n                        if (this.selectedItems.userHandles.length > 0) {\n                            this.renderSelector(true);\n                            break;\n                        }\n                    }\n                    if (newProp.selectedItems.constraints) {\n                        this.renderSelector(true);\n                        break;\n                    }\n                    break;\n                case 'snapSettings':\n                    this.updateSnapSettings(newProp);\n                    break;\n                case 'commandManager':\n                    this.initCommands();\n                    break;\n                case 'layout':\n                    refreshLayout = true;\n                    break;\n                case 'dataSourceSettings':\n                    this.clear();\n                    this.initObjects();\n                    if (this.layout.type === 'None') {\n                        refereshColelction = true;\n                    }\n                    else {\n                        refreshLayout = true;\n                    }\n                    break;\n                case 'tooltip':\n                    initTooltip(this);\n                    break;\n                case 'rulerSettings':\n                    this.updateRulerSettings(newProp);\n                    break;\n                case 'layers':\n                    this.updateLayer(newProp);\n                    break;\n                case 'scrollSettings':\n                    this.updateScrollSettings(newProp);\n                    break;\n                case 'locale':\n                    this.realActions |= RealAction.PreventDataInit;\n                    _super.prototype.refresh.call(this);\n                    this.realActions &= ~RealAction.PreventDataInit;\n                    break;\n                case 'contextMenuSettings':\n                    if (newProp.contextMenuSettings.showCustomMenuOnly !== undefined) {\n                        this.contextMenuSettings.showCustomMenuOnly = newProp.contextMenuSettings.showCustomMenuOnly;\n                    }\n                    if (newProp.contextMenuSettings.show !== undefined) {\n                        this.contextMenuSettings.show = newProp.contextMenuSettings.show;\n                    }\n                    if (newProp.contextMenuSettings.items) {\n                        var items = newProp.contextMenuSettings.items;\n                        for (var _h = 0, _j = Object.keys(items); _h < _j.length; _h++) {\n                            var key = _j[_h];\n                            var index = Number(key);\n                            this.contextMenuSettings.items[index] = items[index];\n                        }\n                    }\n                    break;\n                case 'serializationSettings':\n                    if (newProp.serializationSettings.preventDefaults !== undefined) {\n                        this.serializationSettings.preventDefaults = newProp.serializationSettings.preventDefaults;\n                    }\n                    break;\n            }\n        }\n        if (refreshLayout) {\n            this.doLayout();\n        }\n        var args = { element: objectArray, cause: this.diagramActions, oldValue: oldProp, newValue: newProp };\n        this.triggerEvent(DiagramEvent.propertyChange, args);\n        if (!refereshColelction && (this.canLogChange()) && (this.modelChanged(newProp, oldProp))) {\n            var entry = { type: 'PropertyChanged', undoObject: oldProp, redoObject: newProp, category: 'Internal' };\n            this.addHistoryEntry(entry);\n        }\n        this.resetDiagramActions();\n        if (refereshColelction) {\n            this.initObjects(true);\n            this.refreshDiagramLayer();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.updateSnapSettings = function (newProp) {\n        if (newProp.snapSettings.constraints !== undefined || newProp.snapSettings.horizontalGridlines ||\n            newProp.snapSettings.verticalGridlines) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n    };\n    Diagram.prototype.updateRulerSettings = function (newProp) {\n        if (newProp.rulerSettings.dynamicGrid !== undefined) {\n            this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        }\n        if (newProp.rulerSettings.showRulers !== undefined) {\n            this.intOffPageBackground();\n            this.scroller.setSize();\n            this.renderRulers();\n        }\n        else if (newProp.rulerSettings.horizontalRuler !== undefined ||\n            newProp.rulerSettings.verticalRuler !== undefined) {\n            if (newProp.rulerSettings.horizontalRuler.thickness !== undefined ||\n                newProp.rulerSettings.verticalRuler.thickness !== undefined) {\n                removeRulerElements(this);\n                this.intOffPageBackground();\n                this.scroller.setSize();\n                this.renderRulers();\n            }\n            else {\n                updateRuler(this);\n            }\n        }\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Diagram.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Diagram.prototype.preRender = function () {\n        this.initializePrivateVariables();\n        this.isProtectedOnChange = true;\n        this.serviceLocator = new ServiceLocator;\n        this.initializeServices();\n        this.setCulture();\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        this.initDiagram();\n        this.initViews();\n        this.unWireEvents();\n        this.wireEvents();\n        this.element.classList.add('e-diagram');\n    };\n    Diagram.prototype.initializePrivateVariables = function () {\n        this.defaultLocale = {\n            Copy: 'Copy',\n            Cut: 'Cut',\n            Paste: 'Paste',\n            Undo: 'Undo',\n            Redo: 'Redo',\n            SelectAll: 'Select All',\n            Grouping: 'Grouping',\n            Group: 'Group',\n            UnGroup: 'Un Group',\n            Order: 'Order',\n            BringToFront: 'Bring To Front',\n            MoveForward: 'Move Forward',\n            SendToBack: 'Send To Back',\n            SendBackward: 'Send Backward'\n        };\n        this.layerZIndex = -1;\n        this.layerZIndexTable = {};\n        this.nameTable = {};\n        this.pathTable = {};\n        this.groupTable = {};\n        this.commands = {};\n        if (!this.isLoading) {\n            this.views = [];\n        }\n        this.commandHandler = new CommandHandler(this);\n        this.eventHandler = new DiagramEventHandler(this, this.commandHandler);\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.scroller = new DiagramScroller(this);\n    };\n    Diagram.prototype.initializeServices = function () {\n        this.serviceLocator.register('localization', this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale));\n    };\n    /**\n     * Method to set culture for chart\n     */\n    Diagram.prototype.setCulture = function () {\n        this.localeObj = new L10n(this.getModuleName(), this.defaultLocale, this.locale);\n    };\n    /**\n     * Renders the diagram control with nodes and connectors\n     */\n    Diagram.prototype.render = function () {\n        var collapsedNode = [];\n        if (this.dataSourceSettings.crudAction.read) {\n            this.renderInitialCrud();\n        }\n        this.initHistory();\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), this.mode === 'SVG');\n        this.initLayers();\n        this.initializeDiagramLayers();\n        this.diagramRenderer.setLayers();\n        this.initObjects(true);\n        this.doLayout();\n        this.validatePageSize();\n        this.renderPageBreaks();\n        this.diagramRenderer.renderSvgGridlines(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.commandHandler.initSelectorWrapper();\n        /**\n         * Used to render context menu\n         */\n        this.notify('initial-load', {});\n        /**\n         * Used to load context menu\n         */\n        this.trigger('load');\n        this.scroller.setSize();\n        this.scroller.updateScrollOffsets();\n        this.refreshDiagramLayer();\n        if (this.scrollSettings.verticalOffset > 0 || this.scrollSettings.horizontalOffset > 0) {\n            this.updateScrollOffset();\n        }\n        /**\n         * Used to end the context menu rendering\n         */\n        if (Browser.isDevice) {\n            this.tool = DiagramTools.ZoomPan | DiagramTools.SingleSelect;\n        }\n        this.notify('initial-end', {});\n        this.isProtectedOnChange = false;\n        this.tooltipObject = initTooltip(this);\n        this.diagramActions = DiagramAction.Render;\n        var nodes = this.nodes;\n        for (var i = 0; i < nodes.length; i++) {\n            if (!nodes[i].isExpanded) {\n                collapsedNode.push(nodes[i]);\n            }\n        }\n        if (collapsedNode.length) {\n            for (var i = collapsedNode.length - 1; i >= 0; i--) {\n                this.commandHandler.expandNode(collapsedNode[i], this);\n            }\n        }\n        this.initCommands();\n        this.isLoading = false;\n    };\n    Diagram.prototype.renderInitialCrud = function () {\n        var tempObj = this;\n        if (tempObj.dataSourceSettings.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n        if (tempObj.dataSourceSettings.connectionDataSource.crudAction.read) {\n            var callback = new Ajax(tempObj.dataSourceSettings.connectionDataSource.crudAction.read, 'GET', false);\n            callback.onSuccess = function (data) {\n                tempObj.dataSourceSettings.connectionDataSource.dataManager = JSON.parse(data);\n                tempObj.dataBind();\n            };\n            callback.send().then();\n        }\n    };\n    /**\n     * Returns the module name of the diagram\n     */\n    Diagram.prototype.getModuleName = function () {\n        return 'diagram';\n    };\n    /**\n     * @private\n     * Returns the name of class Diagram\n     */\n    Diagram.prototype.getClassName = function () {\n        return 'Diagram';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    Diagram.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        modules.push({\n            member: 'Bridging',\n            args: []\n        });\n        modules.push({\n            member: 'ConnectorEditingTool',\n            args: []\n        });\n        if (this.constraints & DiagramConstraints.UndoRedo) {\n            modules.push({\n                member: 'UndoRedo',\n                args: []\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.enableAnimation) {\n            modules.push({\n                member: 'LayoutAnimate',\n                args: []\n            });\n        }\n        if (this.snapSettings.constraints) {\n            modules.push({\n                member: 'Snapping',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'PrintandExport',\n            args: [this]\n        });\n        if (this.contextMenuSettings.show) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this, this.serviceLocator]\n            });\n        }\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree') {\n            modules.push({\n                member: 'OrganizationalChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'ComplexHierarchicalTree') {\n            modules.push({\n                member: 'ComplexHierarchicalTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'MindMap') {\n            modules.push({\n                member: 'MindMapChart',\n                args: []\n            });\n        }\n        if (this.layout.type === 'RadialTree') {\n            modules.push({\n                member: 'RadialTree',\n                args: []\n            });\n        }\n        if (this.layout.type === 'SymmetricalLayout') {\n            modules.push({\n                member: 'SymmetricalLayout',\n                args: []\n            });\n        }\n        if (this.dataSourceSettings.dataManager || this.dataSourceSettings.data ||\n            this.dataSourceSettings.crudAction.read || this.dataSourceSettings.connectionDataSource.crudAction.read) {\n            modules.push({\n                member: 'DataBinding',\n                args: []\n            });\n        }\n        return modules;\n    };\n    /**\n     * Destroys the diagram control\n     */\n    Diagram.prototype.destroy = function () {\n        clearInterval(this.renderTimer);\n        this.renderTimer = null;\n        if (this.hRuler && this.vRuler) {\n            this.hRuler.destroy();\n            this.vRuler.destroy();\n        }\n        this.tooltipObject.destroy();\n        this.droppable.destroy();\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-diagram');\n            var tooltipelement = document.getElementsByClassName('e-tooltip-wrap');\n            while (tooltipelement.length > 0) {\n                tooltipelement[0].parentNode.removeChild(tooltipelement[0]);\n            }\n            var content = document.getElementById(this.element.id + 'content');\n            if (content) {\n                this.element.removeChild(content);\n            }\n            var measureElement = 'measureElement';\n            if (window[measureElement]) {\n                window[measureElement].usageCount -= 1;\n                if (window[measureElement].usageCount === 0) {\n                    window[measureElement].parentNode.removeChild(window[measureElement]);\n                    window[measureElement] = null;\n                }\n            }\n        }\n    };\n    /**\n     * Wires the mouse events with diagram control\n     */\n    Diagram.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.diagramCanvas, startEvent, this.eventHandler.mouseDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'keydown', this.eventHandler.keyDown, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, 'scroll', this.eventHandler.scrolled, this.eventHandler);\n        EventHandler.add(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel, this.eventHandler);\n        EventHandler.add(window, 'resize', this.eventHandler.windowResize, this.eventHandler);\n        this.initDroppables();\n    };\n    /**\n     * Unwires the mouse events from diagram control\n     */\n    Diagram.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stopEvent = Browser.touchEndEvent;\n        EventHandler.remove(this.diagramCanvas, startEvent, this.eventHandler.mouseDown);\n        EventHandler.remove(this.diagramCanvas, moveEvent, this.eventHandler.mouseMove);\n        EventHandler.remove(this.diagramCanvas, stopEvent, this.eventHandler.mouseUp);\n        EventHandler.remove(this.diagramCanvas, cancelEvent, this.eventHandler.mouseLeave);\n        EventHandler.remove(this.diagramCanvas, 'keydown', this.eventHandler.keyDown);\n        EventHandler.remove(this.diagramCanvas, 'dblclick', this.eventHandler.doubleClick);\n        EventHandler.remove(this.diagramCanvas, 'scroll', this.eventHandler.scrolled);\n        EventHandler.remove(this.diagramCanvas, wheelEvent, this.eventHandler.mouseWheel);\n        EventHandler.remove(window, 'resize', this.eventHandler.windowResize);\n    };\n    //public methods - start region\n    /**\n     * Selects the given collection of objects\n     * @param objects Defines the collection of nodes and connectors to be selected\n     * @param multipleSelection Defines whether the existing selection has to be cleared or not\n     */\n    Diagram.prototype.select = function (objects, multipleSelection) {\n        if (objects != null) {\n            this.commandHandler.selectObjects(objects, multipleSelection);\n        }\n    };\n    /**\n     * Selects the all the objects.\n     */\n    Diagram.prototype.selectAll = function () {\n        var selectedItems = [];\n        selectedItems = this.getObjectsOfLayer(this.activeLayer.objects);\n        this.select(selectedItems);\n    };\n    /**\n     * Removes the given object from selection list\n     * @param obj Defines the object to be unselected\n     */\n    Diagram.prototype.unSelect = function (obj) {\n        if (obj && isSelected(this, obj)) {\n            this.commandHandler.unSelect(obj);\n        }\n    };\n    /**\n     * Removes all elements from the selection list\n     */\n    Diagram.prototype.clearSelection = function () {\n        this.commandHandler.clearSelection(true);\n    };\n    /**\n     * Update the diagram clipboard dimension\n     */\n    Diagram.prototype.updateViewPort = function () {\n        this.eventHandler.updateViewPortSize(this.element);\n    };\n    Diagram.prototype.cutCommand = function () {\n        this.cut();\n    };\n    /**\n     * Removes the selected nodes and connectors from diagram and moves them to diagram clipboard\n     */\n    Diagram.prototype.cut = function () {\n        this.commandHandler.cut();\n    };\n    /**\n     * Add a process into the sub-process\n     */\n    Diagram.prototype.addProcess = function (process, parentId) {\n        if (this.bpmnModule) {\n            this.bpmnModule.addProcess(process, parentId, this);\n        }\n    };\n    /**\n     * Remove a process from the sub-process\n     */\n    Diagram.prototype.removeProcess = function (id) {\n        if (this.bpmnModule) {\n            this.bpmnModule.removeProcess(id, this);\n        }\n    };\n    Diagram.prototype.pasteCommand = function () {\n        this.paste();\n    };\n    /**\n     * Adds the given objects/ the objects in the diagram clipboard to diagram control\n     * @param obj Defines the objects to be added to diagram\n     */\n    Diagram.prototype.paste = function (obj) {\n        this.commandHandler.paste(obj);\n    };\n    /**\n     * fit the diagram to the page with respect to mode and region\n     */\n    Diagram.prototype.fitToPage = function (options) {\n        this.scroller.fitToPage(options);\n    };\n    /**\n     * bring the specified bounds into the viewport\n     */\n    Diagram.prototype.bringIntoView = function (bound) {\n        this.scroller.bringIntoView(bound);\n    };\n    /**\n     * bring the specified bounds to the center of the viewport\n     */\n    Diagram.prototype.bringToCenter = function (bound) {\n        this.scroller.bringToCenter(bound);\n    };\n    Diagram.prototype.copyCommand = function () {\n        this.copy();\n    };\n    /**\n     * Copies the selected nodes and connectors to diagram clipboard\n     */\n    Diagram.prototype.copy = function () {\n        var obj = this.commandHandler.copy();\n        return obj;\n    };\n    /**\n     * Group the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.group = function () {\n        this.commandHandler.group();\n    };\n    /**\n     * UnGroup the selected nodes and connectors in diagram\n     */\n    Diagram.prototype.unGroup = function () {\n        this.commandHandler.unGroup();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendToBack = function () {\n        this.commandHandler.sendToBack();\n    };\n    /**\n     * set the active layer\n     *  @param layerName defines the name of the layer which is to be active layer\n     */\n    Diagram.prototype.setActiveLayer = function (layerName) {\n        var layer = this.commandHandler.getLayer(layerName);\n        this.activeLayer = layer;\n    };\n    /**\n     * add the layer into diagram\n     * @param layer defines the layer model which is to be added\n     * @param layerObject defines the object of the layer\n     */\n    Diagram.prototype.addLayer = function (layer, layerObject) {\n        this.commandHandler.addLayer(layer, layerObject);\n    };\n    /**\n     * remove the layer from diagram\n     * @param layerId define the id of the layer\n     */\n    Diagram.prototype.removeLayer = function (layerId) {\n        this.commandHandler.removeLayer(layerId);\n    };\n    /**\n     * move objects from the layer to another layer from diagram\n     * @param objects define the objects id of string array\n     */\n    Diagram.prototype.moveObjects = function (objects, targetLayer) {\n        this.commandHandler.moveObjects(objects, targetLayer);\n    };\n    /**\n     * move the layer backward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.sendLayerBackward = function (layerName) {\n        this.commandHandler.sendLayerBackward(layerName);\n    };\n    /**\n     * move the layer forward\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.bringLayerForward = function (layerName) {\n        this.commandHandler.bringLayerForward(layerName);\n    };\n    /**\n     * clone a layer with its object\n     * @param layerName define the name of the layer\n     */\n    Diagram.prototype.cloneLayer = function (layerName) {\n        this.commandHandler.cloneLayer(layerName);\n    };\n    /**\n     * bring the selected nodes or connectors to front\n     */\n    Diagram.prototype.bringToFront = function () {\n        this.commandHandler.bringToFront();\n    };\n    /**\n     * send the selected nodes or connectors forward\n     */\n    Diagram.prototype.moveForward = function () {\n        this.commandHandler.sendForward();\n    };\n    /**\n     * send the selected nodes or connectors back\n     */\n    Diagram.prototype.sendBackward = function () {\n        this.commandHandler.sendBackward();\n    };\n    /**\n     * gets the node or connector having the given name\n     */\n    Diagram.prototype.getObject = function (name) {\n        return this.nameTable[name];\n    };\n    /**\n     * gets the active layer back\n     */\n    Diagram.prototype.getActiveLayer = function () {\n        return this.activeLayer;\n    };\n    Diagram.prototype.nudgeCommand = function (direction, x, y) {\n        if (typeof direction !== 'object') {\n            this.nudge(direction);\n        }\n    };\n    /**\n     * Moves the selected objects towards the given direction\n     * @param direction Defines the direction by which the objects have to be moved\n     * @param x Defines the distance by which the selected objects have to be horizontally moved\n     * @param y Defines the distance by which the selected objects have to be vertically moved\n     */\n    Diagram.prototype.nudge = function (direction, x, y) {\n        var tx = 0;\n        var ty = 0;\n        var negativeDirection;\n        if (direction === 'Left' || direction === 'Right') {\n            negativeDirection = (direction === 'Left');\n            tx = (negativeDirection ? -1 : 1) * (x ? x : 1);\n        }\n        else {\n            negativeDirection = (direction === 'Up');\n            ty = (negativeDirection ? -1 : 1) * (y ? y : 1);\n        }\n        var obj = this.selectedItems;\n        var annotation = this.selectedItems.wrapper.children[0];\n        if (annotation instanceof TextElement) {\n            this.commandHandler.labelDrag(obj.nodes[0], annotation, tx, ty);\n        }\n        else {\n            this.drag(obj, tx, ty);\n        }\n        this.refreshCanvasLayers();\n    };\n    /**\n     * Drags the given object by the specified pixels\n     * @param obj Defines the nodes/connectors to be dragged\n     * @param tx Defines the distance by which the given objects have to be horizontally moved\n     * @param ty Defines the distance by which the given objects have to be vertically moved\n     */\n    Diagram.prototype.drag = function (obj, tx, ty) {\n        if (this.bpmnModule && (obj instanceof Node)) {\n            var updated = this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n            if (updated) {\n                return;\n            }\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = true;\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    this.drag(node, tx, ty);\n                    if (node.parentId) {\n                        var parent_1 = this.nameTable[node.parentId];\n                        if (parent_1.isLane) {\n                            var swimlane = this.nameTable[parent_1.parentId];\n                            updateLaneBoundsAfterAddChild(parent_1, swimlane, node, this);\n                        }\n                    }\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.drag(conn, tx, ty);\n                    if (this.selectionConnectorsList.indexOf(conn) === -1) {\n                        this.selectionConnectorsList.push(conn);\n                    }\n                }\n            }\n            this.updateSelector();\n        }\n        else {\n            if (obj instanceof Node) {\n                if (this.bpmnModule) {\n                    this.bpmnModule.updateAnnotationDrag(obj, this, tx, ty);\n                }\n            }\n            this.commandHandler.drag(obj, tx, ty);\n        }\n        if (obj instanceof Selector) {\n            this.preventConnectorsUpdate = false;\n            for (var _d = 0, _e = this.selectionConnectorsList; _d < _e.length; _d++) {\n                var connectors = _e[_d];\n                this.updateConnectorProperties(this.nameTable[connectors.id]);\n            }\n            this.selectionConnectorsList = [];\n        }\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            this.updateSelector();\n        }\n    };\n    /**\n     * Scales the given objects by the given ratio\n     * @param obj Defines the objects to be resized\n     * @param sx Defines the ratio by which the objects have to be horizontally scaled\n     * @param sy Defines the ratio by which the objects have to be vertically scaled\n     * @param pivot Defines the reference point with respect to which the objects will be resized\n     */\n    Diagram.prototype.scale = function (obj, sx, sy, pivot) {\n        var checkBoundaryConstraints = true;\n        if (obj instanceof Selector) {\n            if (obj.nodes && obj.nodes.length) {\n                for (var _i = 0, _a = obj.nodes; _i < _a.length; _i++) {\n                    var node = _a[_i];\n                    checkBoundaryConstraints = this.commandHandler.scale(node, sx, sy, pivot, obj);\n                }\n            }\n            if (obj.connectors && obj.connectors.length) {\n                for (var _b = 0, _c = obj.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    this.commandHandler.scale(conn, sx, sy, pivot, obj);\n                }\n            }\n            this.updateSelector();\n            this.refreshCanvasLayers();\n        }\n        else {\n            this.commandHandler.scale(obj, sx, sy, pivot, (obj.children ? obj : undefined));\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Rotates the given nodes/connectors by the given angle\n     * @param obj Defines the objects to be rotated\n     * @param angle Defines the angle by which the objects have to be rotated\n     * @param pivot Defines the reference point with reference to which the objects have to be rotated\n     */\n    Diagram.prototype.rotate = function (obj, angle, pivot) {\n        var checkBoundaryConstraints;\n        if (obj) {\n            pivot = pivot || { x: obj.wrapper.offsetX, y: obj.wrapper.offsetY };\n            if (obj instanceof Selector) {\n                obj.rotateAngle += angle;\n                obj.wrapper.rotateAngle += angle;\n                var bounds = getBounds(obj.wrapper);\n                checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bounds);\n                if (!checkBoundaryConstraints) {\n                    obj.rotateAngle -= angle;\n                    obj.wrapper.rotateAngle -= angle;\n                    return checkBoundaryConstraints;\n                }\n                var objects = [];\n                objects = objects.concat(obj.nodes);\n                objects = objects.concat(obj.connectors);\n                this.commandHandler.rotateObjects(obj, objects, angle, pivot);\n            }\n            else {\n                this.commandHandler.rotateObjects(obj, [obj], angle, pivot);\n            }\n        }\n        return checkBoundaryConstraints;\n    };\n    /**\n     * Moves the source point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragSourceEnd = function (obj, tx, ty) {\n        this.commandHandler.dragSourceEnd(obj, tx, ty);\n    };\n    /**\n     * Moves the target point of the given connector\n     * @param obj Defines the connector, the end points of which has to be moved\n     * @param tx Defines the distance by which the end point has to be horizontally moved\n     * @param ty Defines the distance by which the end point has to be vertically moved\n     */\n    Diagram.prototype.dragTargetEnd = function (obj, tx, ty) {\n        this.commandHandler.dragTargetEnd(obj, tx, ty);\n    };\n    /**\n     * Finds all the objects that is under the given mouse position\n     * @param position Defines the position, the objects under which has to be found\n     * @param source Defines the object, the objects under which has to be found\n     */\n    Diagram.prototype.findObjectsUnderMouse = function (position, source) {\n        return this.eventHandler.findObjectsUnderMouse(position, source);\n    };\n    /**\n     * Finds the object that is under the given mouse position\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findObjectUnderMouse = function (objects, action, inAction) {\n        return this.eventHandler.findObjectUnderMouse(objects, action, inAction);\n    };\n    /**\n     * Finds the object that is under the given active object (Source)\n     * @param objects Defines the collection of objects, from which the object has to be found.\n     * @param action Defines the action, using which the relevant object has to be found.\n     * @param inAction Defines the active state of the action.\n     */\n    Diagram.prototype.findTargetObjectUnderMouse = function (objects, action, inAction, position, source) {\n        return this.eventHandler.findTargetUnderMouse(objects, action, inAction, position, source);\n    };\n    /**\n     * Finds the child element of the given object at the given position\n     * @param obj Defines the object, the child element of which has to be found\n     * @param position Defines the position, the child element under which has to be found\n     */\n    Diagram.prototype.findElementUnderMouse = function (obj, position) {\n        return this.eventHandler.findElementUnderMouse(obj, position);\n    };\n    /**\n     * Defines the action to be done, when the mouse hovers the given element of the given object\n     * @param obj Defines the object under mouse\n     * @param wrapper Defines the target element of the object under mouse\n     * @param position Defines the current mouse position\n     * @private\n     */\n    Diagram.prototype.findActionToBeDone = function (obj, wrapper, position, target) {\n        return this.eventHandler.findActionToBeDone(obj, wrapper, position, target);\n    };\n    /**\n     * Returns the tool that handles the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getTool = function (action) {\n        var tool;\n        var getCustomTool = getFunction(this.getCustomTool);\n        if (getCustomTool) {\n            tool = getCustomTool(action);\n            if (tool) {\n                return tool;\n            }\n        }\n        return this.eventHandler.getTool(action);\n    };\n    /**\n     * Defines the cursor that corresponds to the given action\n     * @param action Defines the action that is going to be performed\n     */\n    Diagram.prototype.getCursor = function (action, active) {\n        var cursor;\n        var getCustomCursor = getFunction(this.getCustomCursor);\n        if (getCustomCursor) {\n            cursor = getCustomCursor(action, active);\n            if (cursor) {\n                return cursor;\n            }\n        }\n        return this.eventHandler.getCursor(action);\n    };\n    /**\n     * Initializes the undo redo actions\n     * @private\n     */\n    Diagram.prototype.initHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.initHistory(this);\n        }\n    };\n    /**\n     * Adds the given change in the diagram control to the track\n     * @param entry Defines the entry/information about a change in diagram\n     */\n    Diagram.prototype.addHistoryEntry = function (entry) {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo) && !this.currentSymbol) {\n            if (entry.undoObject && entry.undoObject.id === 'helper') {\n                return;\n            }\n            this.undoRedoModule.addHistoryEntry(entry, this);\n            if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n                this.historyChangeTrigger(entry);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.historyChangeTrigger = function (entry) {\n        var change = {};\n        var oldValue = 'oldValue';\n        var newValue = 'newValue';\n        var type = 'type';\n        var source = [];\n        if (entry && entry.redoObject && ((entry.redoObject.nodes) instanceof Array) &&\n            ((entry.redoObject.connectors) instanceof Array)) {\n            source = entry.redoObject.nodes.concat(entry.redoObject.connectors);\n        }\n        else {\n            if (entry.redoObject) {\n                source.push(entry.redoObject);\n            }\n        }\n        change[type] = entry.type;\n        switch (entry.type) {\n            case 'PositionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n            case 'RotationChanged':\n                change[oldValue] = { rotateAngle: entry.undoObject.rotateAngle };\n                change[newValue] = { rotateAngle: entry.redoObject.rotateAngle };\n                break;\n            case 'SizeChanged':\n                change[oldValue] = {\n                    offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY,\n                    width: entry.undoObject.width, height: entry.undoObject.height\n                };\n                change[newValue] = {\n                    offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY,\n                    width: entry.redoObject.width, height: entry.redoObject.height\n                };\n                break;\n            case 'CollectionChanged':\n                change[entry.changeType] = source;\n                break;\n            case 'ConnectionChanged':\n                change[oldValue] = { offsetX: entry.undoObject.offsetX, offsetY: entry.undoObject.offsetY };\n                change[newValue] = { offsetX: entry.redoObject.offsetX, offsetY: entry.redoObject.offsetY };\n                break;\n        }\n        var arg = {\n            cause: entry.category, source: source, change: change\n        };\n        if (source.length) {\n            this.triggerEvent(DiagramEvent.historyChange, arg);\n        }\n    };\n    /**\n     * Starts grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.startGroupAction = function () {\n        var entry = { type: 'StartGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Closes grouping the actions that will be undone/restored as a whole\n     */\n    Diagram.prototype.endGroupAction = function () {\n        var entry = { type: 'EndGroup', category: 'Internal' };\n        this.addHistoryEntry(entry);\n    };\n    /**\n     * Restores the last action that is performed\n     */\n    Diagram.prototype.undo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.undo(this);\n        }\n    };\n    /**\n     * Restores the last undone action\n     */\n    Diagram.prototype.redo = function () {\n        if (this.undoRedoModule && (this.constraints & DiagramConstraints.UndoRedo)) {\n            this.undoRedoModule.redo(this);\n        }\n    };\n    /**\n     * Aligns the group of objects to with reference to the first object in the group\n     * @param objects Defines the objects that have to be aligned\n     * @param option Defines the factor, by which the objects have to be aligned\n     */\n    Diagram.prototype.align = function (option, objects, type) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.align(objects, option, (type ? type : 'Object'));\n    };\n    /**\n     * Arranges the group of objects with equal intervals, but within the group of objects\n     * @param objects Defines the objects that have to be equally spaced\n     * @param option Defines the factor to distribute the shapes\n     */\n    Diagram.prototype.distribute = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.distribute(objects, option);\n    };\n    /**\n     * Scales the given objects to the size of the first object in the group\n     * @param objects Defines the collection of objects that have to be scaled\n     * @param option Defines whether the node has to be horizontally scaled, vertically scaled or both\n     */\n    Diagram.prototype.sameSize = function (option, objects) {\n        if (!objects) {\n            objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n        this.commandHandler.sameSize(objects, option);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param factor Defines the factor by which the diagram is zoomed\n     * @param focusedPoint Defines the point with respect to which the diagram has to be zoomed\n     */\n    Diagram.prototype.zoom = function (factor, focusedPoint) {\n        this.scroller.zoom(factor, 0, 0, focusedPoint);\n    };\n    /**\n     * Scales the diagram control by the given factor\n     * @param options used to define the zoom factor, focus point and zoom type.\n     *\n     */\n    Diagram.prototype.zoomTo = function (options) {\n        var factor = options.zoomFactor ? options.zoomFactor : 0.2;\n        factor = options.type === 'ZoomOut' ? 1 / (1 + factor) : (1 + factor);\n        this.scroller.zoom(factor, 0, 0, options.focusPoint);\n    };\n    /**\n     * Pans the diagram control to the given horizontal and vertical offsets\n     * @param horizontalOffset Defines the horizontal distance to which the diagram has to be scrolled\n     * @param verticalOffset Defines the vertical distance to which the diagram has to be scrolled\n     */\n    Diagram.prototype.pan = function (horizontalOffset, verticalOffset, focusedPoint) {\n        this.scroller.zoom(1, horizontalOffset, verticalOffset, focusedPoint);\n    };\n    /**\n     * Resets the zoom and scroller offsets to default values\n     */\n    Diagram.prototype.reset = function () {\n        this.scroller.zoom(1 / this.scroller.currentZoom, -this.scroller.horizontalOffset, -this.scroller.verticalOffset, { x: 0, y: 0 });\n    };\n    /** @private */\n    Diagram.prototype.triggerEvent = function (eventName, args) {\n        if (args) {\n            this.updateEventValue(args);\n        }\n        this.trigger(DiagramEvent[eventName], args);\n    };\n    Diagram.prototype.updateEventValue = function (args) {\n        var element = args.element;\n        if (args.element && element instanceof Selector && (element.nodes.length + element.connectors.length === 1)) {\n            args.element = (element.nodes.length === 1) ? element.nodes[0] : element.connectors[0];\n        }\n    };\n    /**\n     * Adds the given object to diagram control\n     * @param obj Defines the object that has to be added to diagram\n     */\n    Diagram.prototype.add = function (obj, group) {\n        var newObj;\n        if (obj) {\n            obj = cloneObject(obj);\n            var args = {\n                element: obj, cause: this.diagramActions, state: 'Changing', type: 'Addition', cancel: false\n            };\n            if (obj.id !== 'helper') {\n                this.triggerEvent(DiagramEvent.collectionChange, args);\n            }\n            var activeLayer = void 0;\n            this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n            obj.id = obj.id || randomId();\n            var layers = this.activeLayer;\n            if (!args.cancel && !layers.lock) {\n                if (layers.objects.indexOf(obj.id) < 0 && !layers.lock) {\n                    if (!layers.visible) {\n                        layers.visible = true;\n                        this.dataBind();\n                    }\n                    layers.objects.push(obj.id);\n                }\n                if (getObjectType(obj) === Connector) {\n                    newObj = new Connector(this, 'connectors', obj, true);\n                    newObj.status = 'New';\n                    this.connectors.push(newObj);\n                    this.initObject(newObj);\n                    if (obj.visible === false) {\n                        this.updateElementVisibility(newObj.wrapper, newObj, obj.visible);\n                    }\n                    this.updateEdges(newObj);\n                }\n                else {\n                    newObj = new Node(this, 'nodes', obj, true);\n                    newObj.parentId = obj.parentId;\n                    newObj.umlIndex = obj.umlIndex;\n                    newObj.status = 'New';\n                    this.nodes.push(newObj);\n                    this.initObject(newObj, layers, undefined, group);\n                    if (this.bpmnModule) {\n                        if (newObj.shape.annotations && newObj.shape.annotations.length !== 0) {\n                            for (var _i = 0, _a = this.bpmnModule.getTextAnnotationConn(newObj); _i < _a.length; _i++) {\n                                var obj_1 = _a[_i];\n                                this.initConnectors(obj_1, layers, false);\n                            }\n                        }\n                        if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                            newObj.shape.activity.subProcess.processes.length) {\n                            this.bpmnModule.updateDocks(newObj, this);\n                        }\n                    }\n                    if (newObj.umlIndex > -1 && obj.parentId && this.nameTable[obj.parentId] &&\n                        this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                        var parent_2 = this.nameTable[obj.parentId];\n                        parent_2.children.splice(newObj.umlIndex, 0, newObj.id);\n                        parent_2.wrapper.children.splice(newObj.umlIndex, 0, newObj.wrapper);\n                        parent_2.wrapper.measure(new Size());\n                        parent_2.wrapper.arrange(parent_2.wrapper.desiredSize);\n                        this.updateDiagramObject(parent_2);\n                    }\n                }\n                args = {\n                    element: newObj, cause: this.diagramActions, state: 'Changed', type: 'Addition', cancel: false\n                };\n                if (obj.id !== 'helper') {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group) &&\n                    !(this.diagramActions & DiagramAction.PreventHistory)) {\n                    var entry = {\n                        type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(obj),\n                        redoObject: cloneObject(obj), category: 'Internal'\n                    };\n                    this.addHistoryEntry(entry);\n                }\n                if (this.mode === 'SVG') {\n                    this.updateSvgNodes(newObj);\n                    this.updateDiagramObject(newObj);\n                    if (newObj.shape.activity && newObj.shape.activity.subProcess.processes &&\n                        newObj.shape.activity.subProcess.processes.length) {\n                        this.updateProcesses(newObj);\n                    }\n                    this.updateBridging();\n                }\n            }\n        }\n        this.resetDiagramActions(DiagramAction.PublicMethod);\n        return newObj;\n    };\n    Diagram.prototype.updateSvgNodes = function (node) {\n        if (node.children) {\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var j = _a[_i];\n                if (this.nameTable[j] && this.nameTable[j].parentId) {\n                    var child = getDiagramElement(j + '_groupElement', this.element.id);\n                    child.parentNode.removeChild(child);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateProcesses = function (node) {\n        if (this.bpmnModule && node && node.shape && node.shape.activity &&\n            node.shape.activity.subProcess.processes &&\n            node.shape.activity.subProcess.processes.length) {\n            var processes = node.shape.activity.subProcess.processes;\n            this.moveSvgNode(node.id);\n            for (var _i = 0, processes_1 = processes; _i < processes_1.length; _i++) {\n                var j = processes_1[_i];\n                this.moveSvgNode(j);\n                var edges = [];\n                edges = edges.concat(this.nameTable[j].outEdges, this.nameTable[j].inEdges);\n                for (var i = edges.length - 1; i >= 0; i--) {\n                    this.moveSvgNode(edges[i]);\n                }\n            }\n            for (var _a = 0, processes_2 = processes; _a < processes_2.length; _a++) {\n                var j = processes_2[_a];\n                if (this.nameTable[j].shape.activity.subProcess.processes &&\n                    this.nameTable[j].shape.activity.subProcess.processes.length) {\n                    this.updateProcesses(this.nameTable[j]);\n                }\n            }\n        }\n        else {\n            this.moveSvgNode(node.id);\n        }\n    };\n    /** @private */\n    Diagram.prototype.moveSvgNode = function (nodeId) {\n        var child = getDiagramElement(nodeId + '_groupElement', this.element.id);\n        var parent = child.parentElement;\n        child.parentNode.removeChild(child);\n        parent.appendChild(child);\n    };\n    /**\n     * Adds the given annotation to the given node\n     * @param annotation Defines the annotation to be added\n     * @param node Defines the node to which the annotation has to be added\n     */\n    Diagram.prototype.addTextAnnotation = function (annotation, node) {\n        if (this.bpmnModule) {\n            var connector = this.bpmnModule.addAnnotation(node, annotation, this);\n            this.initConnectors(connector, this.commandHandler.getObjectLayer(node.id), false);\n            this.updateDiagramObject(node);\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'CollectionChanged', changeType: 'Insert', undoObject: cloneObject(annotation),\n                    redoObject: cloneObject(annotation), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n    };\n    /**\n     * Splice the InEdge and OutEdge of the for the node with respect to corresponding connectors that is deleting\n     */\n    Diagram.prototype.spliceConnectorEdges = function (connector, isSource) {\n        var node;\n        var edges = [];\n        node = isSource ? this.nameTable[connector.sourceID] : this.nameTable[connector.targetID];\n        if (node) {\n            edges = isSource ? node.outEdges : node.inEdges;\n            for (var i = edges.length - 1; i >= 0; i--) {\n                if (edges[i] === connector.id) {\n                    edges.splice(i, 1);\n                }\n            }\n        }\n    };\n    /**\n     * Remove the dependent connectors if the node is deleted\n     * @private\n     */\n    Diagram.prototype.removeDependentConnector = function (node) {\n        var connector;\n        var edges = [];\n        edges = edges.concat(node.outEdges, node.inEdges);\n        for (var i = edges.length - 1; i >= 0; i--) {\n            connector = this.nameTable[edges[i]];\n            if (connector) {\n                this.connectorTable[connector.id] = cloneObject(connector);\n                this.remove(connector);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeObjectsFromLayer = function (obj) {\n        if (obj.children) {\n            for (var i = 0; i < obj.children.length; i++) {\n                var object = this.nameTable[obj.children[i]];\n                if (object) {\n                    this.removeObjectsFromLayer(object);\n                }\n            }\n        }\n        var layer = this.layers.indexOf(this.commandHandler.getObjectLayer(obj.id));\n        var objects = this.layers[layer].objects;\n        var objIndex = objects.indexOf(obj.id);\n        if (objIndex > -1) {\n            if (isSelected(this, obj)) {\n                this.unSelect(obj);\n            }\n            this.layers[layer].objects.splice(objIndex, 1);\n            delete this.layers[layer].zIndexTable[this.nameTable[obj.id].zIndex];\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeElements = function (currentObj) {\n        if (this.mode === 'SVG' || (this.mode === 'Canvas' && currentObj.shape.type === 'Native')) {\n            var removeElement_1 = getDiagramElement(currentObj.id + '_groupElement', this.element.id);\n            if (removeElement_1) {\n                removeElement_1.parentNode.removeChild(removeElement_1);\n            }\n        }\n        this.refreshCanvasLayers();\n        var children = currentObj.wrapper.children;\n        var element;\n        var view;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] instanceof DiagramNativeElement || ((children[i].id) && (children[i].id).indexOf('icon_content') > 0)) {\n                if ((children[i].id).indexOf('icon_content') > 0 && this.mode === 'SVG') {\n                    element = getDiagramElement(children[i].id + '_shape_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                    element = getDiagramElement(children[i].id + '_rect_groupElement', this.element.id);\n                    element.parentNode.removeChild(element);\n                }\n                for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                    var elementId = _a[_i];\n                    removeElement(children[i].id + '_groupElement', elementId);\n                }\n            }\n            else if (children[i] instanceof DiagramHtmlElement) {\n                for (var _b = 0, _c = this.views; _b < _c.length; _b++) {\n                    var elementId = _c[_b];\n                    removeElement(children[i].id + '_html_element', elementId);\n                }\n            }\n            removeGradient(children[i].id);\n        }\n    };\n    Diagram.prototype.removeCommand = function () {\n        this.remove();\n    };\n    /**\n     * Removes the given object from diagram\n     * @param obj Defines the object that has to be removed from diagram\n     */\n    /* tslint:disable */\n    Diagram.prototype.remove = function (obj) {\n        var selectedItems = [];\n        selectedItems = selectedItems.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n        var args;\n        var groupAction = false;\n        if (obj) {\n            obj = this.nameTable[obj.id];\n            if (obj && obj.shape && obj.shape.type === 'SwimLane') {\n                removeSwimLane(this, obj);\n            }\n            if (obj && (canDelete(obj) || (this.diagramActions & DiagramAction.Clear))) {\n                args = {\n                    element: obj, cause: this.diagramActions,\n                    state: 'Changing', type: 'Removal', cancel: false\n                };\n                if (!(this.diagramActions & DiagramAction.Clear) && (obj.id !== 'helper')) {\n                    this.triggerEvent(DiagramEvent.collectionChange, args);\n                }\n                if (!args.cancel) {\n                    if (this.bpmnModule) {\n                        if (this.bpmnModule.checkAndRemoveAnnotations(obj, this)) {\n                            this.refreshCanvasLayers();\n                            return;\n                        }\n                    }\n                    if ((!(this.diagramActions & DiagramAction.UndoRedo)) && !(this.diagramActions & DiagramAction.PreventHistory) &&\n                        (obj instanceof Node || obj instanceof Connector)) {\n                        var entry = {\n                            type: 'CollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj),\n                            redoObject: cloneObject(obj), category: 'Internal'\n                        };\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            if (selectedItems.length > 0 && this.undoRedoModule && !this.layout.type) {\n                                this.historyManager.startGroupAction();\n                                groupAction = true;\n                            }\n                        }\n                        if (obj instanceof Node) {\n                            this.removeDependentConnector(obj);\n                        }\n                        if (!obj.isLane && !obj.isPhase) {\n                            if (!(this.diagramActions & DiagramAction.Clear) && !this.isStackChild(obj)) {\n                                this.addHistoryEntry(entry);\n                            }\n                        }\n                    }\n                    if (obj.children && !obj.isLane && !obj.isPhase) {\n                        this.deleteGroup(obj);\n                    }\n                    if (obj.parentId) {\n                        this.deleteChild(obj);\n                        if (this.nameTable[obj.parentId] && this.nameTable[obj.parentId].shape.type === 'UmlClassifier') {\n                            this.updateDiagramObject(this.nameTable[obj.parentId]);\n                            this.updateConnectorEdges(this.nameTable[obj.parentId]);\n                        }\n                    }\n                    var index = void 0;\n                    this.diagramActions = this.diagramActions | DiagramAction.PublicMethod;\n                    var currentObj = this.nameTable[obj.id];\n                    if (currentObj instanceof Node) {\n                        if (currentObj.shape.type === 'Bpmn' && this.bpmnModule) {\n                            this.bpmnModule.removeBpmnProcesses(currentObj, this);\n                        }\n                        if (currentObj.isLane || currentObj.isPhase || currentObj.shape.type === 'SwimLane') {\n                            var swimLaneNode = (currentObj.isLane || currentObj.isPhase) ?\n                                this.nameTable[currentObj.parentId] : this.nameTable[currentObj.id];\n                            var grid = swimLaneNode.wrapper.children[0];\n                            if (currentObj.isLane) {\n                                removeLane(this, currentObj, swimLaneNode);\n                            }\n                            else if (currentObj.isPhase) {\n                                removePhase(this, currentObj, swimLaneNode);\n                            }\n                        }\n                        index = this.nodes.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.nodes.splice(index, 1);\n                            this.updateNodeEdges(currentObj);\n                        }\n                    }\n                    else {\n                        index = this.connectors.indexOf(currentObj);\n                        if (index !== -1) {\n                            this.crudDeleteNodes.push(this.nameTable[currentObj.id]);\n                            this.connectors.splice(index, 1);\n                        }\n                        this.updateEdges(currentObj);\n                        this.spliceConnectorEdges(obj, true);\n                        this.spliceConnectorEdges(obj, false);\n                    }\n                    if (groupAction) {\n                        this.historyManager.endGroupAction();\n                    }\n                    if (isSelected(this, currentObj)) {\n                        this.unSelect(currentObj);\n                    }\n                    if (!currentObj.isPhase) {\n                        this.removeObjectsFromLayer(obj);\n                        if (this.currentDrawingObject) {\n                            this.currentDrawingObject.wrapper = undefined;\n                        }\n                        delete this.nameTable[obj.id];\n                        if (selectedItems.length > 0 && selectedItems[0].id === currentObj.id && currentObj.parentId) {\n                            var parentnode = this.nameTable[currentObj.parentId];\n                            if (parentnode && parentnode.isLane && this.nameTable[parentnode.parentId].shape.type === 'SwimLane') {\n                                var swimLaneNode = this.nameTable[parentnode.parentId];\n                                removeLaneChildNode(this, swimLaneNode, parentnode, currentObj);\n                            }\n                        }\n                        this.removeElements(currentObj);\n                        this.updateBridging();\n                        if (this.mode !== 'SVG') {\n                            this.refreshDiagramLayer();\n                        }\n                        if (!(this.diagramActions & DiagramAction.Clear)) {\n                            this.removeFromAQuad(currentObj);\n                            args = {\n                                element: obj, cause: this.diagramActions,\n                                state: 'Changed', type: 'Removal', cancel: false\n                            };\n                            if (obj.id !== 'helper') {\n                                this.triggerEvent(DiagramEvent.collectionChange, args);\n                            }\n                            this.resetTool();\n                        }\n                    }\n                }\n            }\n        }\n        else if (selectedItems.length > 0) {\n            if (this.undoRedoModule) {\n                this.historyManager.startGroupAction();\n                groupAction = true;\n            }\n            for (var i = 0; i < selectedItems.length; i++) {\n                var node = selectedItems[i];\n                if (this.nameTable[selectedItems[i].id]) {\n                    if ((selectedItems[i] instanceof Connector) && this.bpmnModule &&\n                        this.bpmnModule.textAnnotationConnectors.indexOf(selectedItems[i]) > -1) {\n                        this.remove(this.nameTable[selectedItems[i].targetID]);\n                        return;\n                    }\n                    this.remove(selectedItems[i]);\n                }\n            }\n            if (groupAction) {\n                this.historyManager.endGroupAction();\n            }\n            this.clearSelection();\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.isStackChild = function (obj) {\n        var isstack;\n        var parent = this.nameTable[obj.parentId];\n        if (obj && obj.parentId && parent.container &&\n            (parent.container.type === 'Stack' &&\n                this.nameTable[obj.parentId].shape.type !== 'UmlClassifier')) {\n            isstack = true;\n            var redoElement = {\n                sourceIndex: parent.wrapper.children.indexOf(obj.wrapper), source: obj,\n                target: undefined, targetIndex: undefined\n            };\n            var entry = {\n                type: 'StackChildPositionChanged', redoObject: {\n                    sourceIndex: undefined, source: obj,\n                    target: undefined, targetIndex: undefined\n                },\n                undoObject: redoElement,\n                category: 'Internal'\n            };\n            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                this.addHistoryEntry(entry);\n            }\n        }\n        return isstack;\n    };\n    /** @private */\n    Diagram.prototype.deleteChild = function (node, parentNode) {\n        var id;\n        parentNode = parentNode ? this.nameTable[parentNode.id] : this.nameTable[node.parentId];\n        if (typeof node === 'string') {\n            id = node;\n        }\n        else {\n            id = node.id;\n        }\n        if (parentNode && parentNode.children) {\n            for (var i = 0; i < parentNode.children.length; i++) {\n                if (parentNode.children[i] === id) {\n                    parentNode.children.splice(i, 1);\n                    for (var j = 0; j < parentNode.wrapper.children.length; j++) {\n                        if (parentNode.wrapper.children[j].id === id) {\n                            parentNode.wrapper.children.splice(j, 1);\n                        }\n                    }\n                }\n            }\n            parentNode.wrapper.measure(new Size());\n            parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n        }\n    };\n    /** @private  */\n    Diagram.prototype.addChild = function (node, child, index) {\n        var id;\n        var parentNode = this.nameTable[node.id];\n        if (!parentNode.children) {\n            parentNode.children = [];\n        }\n        if (parentNode.children) {\n            if (typeof child === 'string') {\n                if (this.nameTable[child]) {\n                    id = child;\n                }\n            }\n            else {\n                id = child.id = child.id || randomId();\n                this.add(child);\n            }\n            if (id && (!child.umlIndex || child.umlIndex === -1)) {\n                var childNode = this.nameTable[id];\n                childNode.parentId = parentNode.id;\n                if (parentNode.container && parentNode.container.type === 'Stack') {\n                    this.updateStackProperty(parentNode, childNode);\n                }\n                if (index) {\n                    parentNode.children.splice(index, 0, id);\n                    parentNode.wrapper.children.splice(index, 0, childNode.wrapper);\n                }\n                else {\n                    parentNode.children.push(id);\n                    parentNode.wrapper.children.push(childNode.wrapper);\n                }\n                parentNode.wrapper.measure(new Size());\n                parentNode.wrapper.arrange(parentNode.wrapper.desiredSize);\n                if (parentNode.container !== undefined) {\n                    childNode.offsetX = childNode.wrapper.offsetX;\n                    childNode.offsetY = childNode.wrapper.offsetY;\n                }\n                if (!parentNode.parentId ||\n                    (this.nameTable[parentNode.parentId] &&\n                        this.nameTable[parentNode.parentId].shape.type !== 'SwimLane')) {\n                    this.updateDiagramObject(parentNode);\n                }\n            }\n        }\n    };\n    /**\n     * Clears all nodes and objects in the diagram\n     */\n    Diagram.prototype.clear = function () {\n        this.clearObjects();\n    };\n    Diagram.prototype.clearObjects = function (collection) {\n        var objects = [];\n        if (!collection) {\n            objects = objects.concat(this.nodes);\n            objects = objects.concat(this.connectors);\n        }\n        else {\n            objects = collection;\n        }\n        this.diagramActions = this.diagramActions | DiagramAction.Clear;\n        for (var _i = 0, objects_1 = objects; _i < objects_1.length; _i++) {\n            var obj = objects_1[_i];\n            if (this.nameTable[obj.id]) {\n                this.remove(obj);\n            }\n        }\n        this.diagramActions = this.diagramActions & ~DiagramAction.Clear;\n        this.spatialSearch = new SpatialSearch(this.nameTable);\n        this.initHistory();\n    };\n    Diagram.prototype.startEditCommad = function () {\n        var laneHeader;\n        var node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : undefined;\n        if (node && node instanceof Node) {\n            if (node.isLane && node.parentId) {\n                var swimlane = this.nameTable[node.parentId];\n                var lanes = swimlane.shape.lanes;\n                var canvasId = (node.id.slice(swimlane.id.length));\n                var currentParentId = canvasId.substring(0, canvasId.length - 1);\n                for (var i = 0; i < lanes.length; i++) {\n                    if (node.isLane && currentParentId === lanes[i].id) {\n                        laneHeader = this.nameTable[lanes[i].header.id];\n                    }\n                }\n            }\n            else if (node.shape.type === 'SwimLane' && node.shape.header && node.shape.hasHeader) {\n                var id = node.wrapper.children[0].rows[0].cells[0].children[0].id;\n                laneHeader = this.nameTable[id];\n            }\n        }\n        this.startTextEdit(laneHeader);\n    };\n    /**\n     * Specified annotation to edit mode\n     * @param node Defines node/connector that contains the annotation to be edited\n     * @param id Defines annotation id to be edited in the node\n     */\n    Diagram.prototype.startTextEdit = function (node, id) {\n        if (!canZoomPan(this) || canSingleSelect(this)) {\n            this.textEditing = true;\n            var transform = this.scroller.transform;\n            var scale = canZoomTextEdit(this) ? transform.scale : 1;\n            var minWidth = 90;\n            var text = void 0;\n            var bounds = void 0;\n            var attributes = void 0;\n            var x = void 0;\n            var y = void 0;\n            var textWrapper = void 0;\n            if (!node) {\n                node = (this.selectedItems.nodes[0]) ? this.selectedItems.nodes[0] : this.selectedItems.connectors[0];\n            }\n            if (node) {\n                if (node.shape && node.shape.type === 'UmlClassifier') {\n                    node = this.nameTable[node.children[0]];\n                }\n                var bpmnAnnotation = false;\n                if (this.bpmnModule) {\n                    textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, id);\n                    if (textWrapper) {\n                        node = this.nameTable[node.id.split('_textannotation_')[0]];\n                    }\n                }\n                if (!textWrapper) {\n                    if (node.shape.type !== 'Text' && node.annotations.length === 0) {\n                        if (!(node.constraints & NodeConstraints.ReadOnly)) {\n                            this.activeLabel.isGroup = true;\n                            this.startGroupAction();\n                            this.addLabels(node, [{ id: randomId(), content: '' }]);\n                        }\n                    }\n                    if (!id && ((node.shape.type !== 'Text' && node.annotations.length > 0) || (node.shape.type === 'Text'))) {\n                        id = (node.shape.type === 'Text') ? (node.wrapper.children[0].id).split('_')[1] : node.annotations[0].id;\n                    }\n                    if (id) {\n                        textWrapper = this.getWrapper(node.wrapper, id);\n                    }\n                }\n                else {\n                    bpmnAnnotation = true;\n                }\n                if (node && textWrapper && !(textWrapper instanceof DiagramHtmlElement) &&\n                    (!enableReadOnly(textWrapper, node) || bpmnAnnotation)) {\n                    var style = (textWrapper.style);\n                    var maxWidth = void 0;\n                    maxWidth = textWrapper.bounds.width < node.wrapper.bounds.width ? textWrapper.bounds.width : node.wrapper.bounds.width;\n                    maxWidth = minWidth > maxWidth ? minWidth : maxWidth;\n                    var textEditing = document.getElementById(this.element.id + '_editTextBoxDiv');\n                    var textArea = document.getElementById(this.element.id + '_editBox');\n                    text = textArea ? textArea.value : textWrapper.content;\n                    if (!textEditing && !textArea) {\n                        textEditing = createHtmlElement('div', {});\n                        textArea = createHtmlElement('textarea', {});\n                        this.diagramCanvas.appendChild(textEditing);\n                        textEditing.appendChild(textArea);\n                        textArea.appendChild(document.createTextNode(text));\n                    }\n                    bounds = measureHtmlText(textWrapper.style, text, undefined, undefined, maxWidth);\n                    if (bounds.isEmpty()) {\n                        if (node.shape.type !== 'Text') {\n                            bounds = new Size(findAnnotation(node, (textWrapper.id).split(node.id + '_')[1]).width || 50, textWrapper.style.fontSize);\n                        }\n                        else {\n                            bounds = new Size((node.width > 50) ? 50 : node.width, textWrapper.style.fontSize);\n                        }\n                    }\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier') {\n                        bounds.width = node.wrapper.bounds.width - 20;\n                        x = ((((node.wrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((node.wrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                        textWrapper.style.textAlign = 'Left';\n                    }\n                    else {\n                        bounds.width = Math.max(bounds.width, 50);\n                        x = ((((textWrapper.bounds.center.x + transform.tx) * transform.scale) - (bounds.width / 2) * scale) - 2.5);\n                        y = ((((textWrapper.bounds.center.y + transform.ty) * transform.scale) - (bounds.height / 2) * scale) - 3);\n                    }\n                    attributes = {\n                        'id': this.element.id + '_editTextBoxDiv', 'style': 'position: absolute' + ';left:' + x + 'px;top:' +\n                            y + 'px;width:' + ((bounds.width + 1) * scale) + 'px;height:' + (bounds.height * scale) +\n                            'px; containerName:' + node.id + ';'\n                    };\n                    setAttributeHtml(textEditing, attributes);\n                    attributes = {\n                        'id': this.element.id + '_editBox', 'style': 'width:' + ((bounds.width + 1) * scale) +\n                            'px;height:' + (bounds.height * scale) + 'px;resize: none;outline: none;overflow: hidden;' +\n                            ';font-family:' + style.fontFamily +\n                            ';font-size:' + (style.fontSize * scale) + 'px;text-align:' +\n                            (textWrapper.style.textAlign.toLocaleLowerCase()) + ';', 'class': 'e-diagram-text-edit'\n                    };\n                    setAttributeHtml(textArea, attributes);\n                    textArea.style.fontWeight = (style.bold) ? 'bold' : '';\n                    textArea.style.fontStyle = (style.italic) ? 'italic' : '';\n                    textArea.style.lineHeight = (style.fontSize * 1.2 + 'px;').toString();\n                    textArea.style.textDecoration = (style.textDecoration) ? style.textDecoration : '';\n                    this.activeLabel.parentId = node.id;\n                    this.activeLabel.id = id;\n                    textWrapper.visible = false;\n                    this.updateDiagramObject(node);\n                    this.diagramActions = this.diagramActions | DiagramAction.TextEdit;\n                    if (!this.isTriggerEvent) {\n                        EventHandler.add(textArea, 'input', this.eventHandler.inputChange, this.eventHandler);\n                        EventHandler.add(textArea, 'focusout', this.focusOutEdit, this);\n                        textArea.select();\n                    }\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateNodeExpand = function (node, visibility) {\n        for (var i = 0; i < node.outEdges.length; i++) {\n            var connector = this.nameTable[node.outEdges[i]];\n            var target = this.nameTable[connector.targetID];\n            connector.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(connector.wrapper, connector, false);\n                target.isExpanded = visibility;\n            }\n            this.updateNodeExpand(target, target.isExpanded);\n            target.visible = visibility;\n            if (!visibility) {\n                this.updateElementVisibility(target.wrapper, target, false);\n            }\n        }\n    };\n    Diagram.prototype.updateConnectorAnnotation = function (connector) {\n        if (connector.annotations.length) {\n            var annotationWrapper = void 0;\n            for (var _i = 0, _a = connector.annotations; _i < _a.length; _i++) {\n                var annotation = _a[_i];\n                annotationWrapper = this.getWrapper(connector.wrapper, annotation.id);\n                connector.updateAnnotation(annotation, connector.intermediatePoints, connector.wrapper.bounds, annotationWrapper, (this.diagramActions & DiagramAction.Interactions));\n            }\n        }\n        connector.wrapper.measure(new Size(connector.wrapper.width, connector.wrapper.height));\n        connector.wrapper.arrange(connector.wrapper.desiredSize);\n    };\n    /**\n     * Automatically updates the diagram objects based on the type of the layout\n     */\n    Diagram.prototype.doLayout = function () {\n        var update = false;\n        var layout;\n        var propChange = this.isProtectedOnChange;\n        this.protectPropertyChange(true);\n        var viewPort = { x: this.scroller.viewPortWidth, y: this.scroller.viewPortHeight };\n        if (this.organizationalChartModule) {\n            layout = this.organizationalChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.diagramActions);\n            update = true;\n            if (this.layoutAnimateModule && layout.rootNode && !this.diagramActions) {\n                this.updateNodeExpand(layout.rootNode, layout.rootNode.isExpanded);\n            }\n        }\n        else if (this.mindMapChartModule) {\n            this.mindMapChartModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort, this.dataSourceSettings.id, this.dataSourceSettings.root);\n            update = true;\n        }\n        else if (this.radialTreeModule) {\n            this.radialTreeModule.updateLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.symmetricalLayoutModule) {\n            this.symmetricalLayoutModule.maxIteration = this.layout.maxIteration;\n            this.symmetricalLayoutModule.springLength = this.layout.springLength;\n            this.symmetricalLayoutModule.springFactor = this.layout.springFactor;\n            this.symmetricalLayoutModule.updateLayout(this.nodes, this.connectors, this.symmetricalLayoutModule, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        else if (this.complexHierarchicalTreeModule) {\n            this.complexHierarchicalTreeModule.doLayout(this.nodes, this.nameTable, this.layout, viewPort);\n            update = true;\n        }\n        if (update) {\n            this.preventUpdate = true;\n            var connectors = {};\n            for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n                var obj = _a[_i];\n                var node = obj;\n                if (!this.preventNodesUpdate && (!this.diagramActions || !(this.diagramActions & DiagramAction.PreventIconsUpdate))) {\n                    this.updateIcon(node);\n                    this.updateDefaultLayoutIcons(node);\n                }\n                this.preventNodesUpdate = true;\n                this.nodePropertyChange(node, {}, { offsetX: node.offsetX, offsetY: node.offsetY }, true);\n                this.preventNodesUpdate = false;\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n                this.updateDiagramObject(node, true);\n                if (node.inEdges.length > 0) {\n                    for (var j = 0; j < node.inEdges.length; j++) {\n                        var connector = this.nameTable[node.inEdges[j]];\n                        connectors[connector.id] = connector;\n                    }\n                }\n                if (node.outEdges.length > 0) {\n                    for (var k = 0; k < node.outEdges.length; k++) {\n                        var connection = this.nameTable[node.outEdges[k]];\n                        connectors[connection.id] = connection;\n                    }\n                }\n            }\n            for (var _b = 0, _c = Object.keys(connectors); _b < _c.length; _b++) {\n                var conn = _c[_b];\n                var connector = connectors[conn];\n                var points = this.getPoints(connector);\n                updateConnector(connector, points);\n                connector.wrapper.measure(new Size(undefined, undefined));\n                connector.wrapper.arrange(connector.wrapper.desiredSize);\n                this.updateConnectorAnnotation(connector);\n                this.updateQuad(connector);\n                this.updateDiagramObject(connector, true);\n            }\n            this.preventUpdate = false;\n            this.updatePage();\n            if ((!(this.diagramActions & DiagramAction.Render)) || this.mode === 'Canvas') {\n                this.refreshDiagramLayer();\n            }\n        }\n        if (!propChange) {\n            this.protectPropertyChange(propChange);\n        }\n        return layout;\n    };\n    /**\n     * Serializes the diagram control as a string\n     */\n    Diagram.prototype.saveDiagram = function () {\n        return serialize(this);\n    };\n    /**\n     * Converts the given string as a Diagram Control\n     * @param data Defines the behavior of the diagram to be loaded\n     */\n    Diagram.prototype.loadDiagram = function (data) {\n        return deserialize(data, this);\n    };\n    /**\n     * To  get the html diagram content\n     * @param styleSheets defines the collection of style files to be considered while exporting.\n     */\n    Diagram.prototype.getDiagramContent = function (styleSheets) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.getDiagramContent(styleSheets);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To export diagram native/html image\n     * @param image defines image content to be exported.\n     * @param options defines the image properties.\n     */\n    Diagram.prototype.exportImage = function (image, options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To print native/html nodes of diagram\n     * @param image defines image content.\n     * @param options defines the properties of the image\n     */\n    Diagram.prototype.printImage = function (image, options) {\n        if (this.printandExportModule) {\n            options.printOptions = true;\n            this.printandExportModule.exportImages(image, options);\n        }\n    };\n    /**\n     * To limit the history entry of the diagram\n     * @param stackLimit defines stackLimit of the history manager.\n     */\n    Diagram.prototype.setStackLimit = function (stackLimit) {\n        if (this.undoRedoModule && stackLimit) {\n            this.historyManager.stackLimit = stackLimit;\n            this.undoRedoModule.applyLimit(this.historyManager.currentEntry, stackLimit, this, true);\n        }\n    };\n    /**\n     * To clear history of the diagram\n     */\n    Diagram.prototype.clearHistory = function () {\n        if (this.undoRedoModule) {\n            this.undoRedoModule.clearHistory(this);\n        }\n    };\n    /**\n     * To get the bound of the diagram\n     */\n    Diagram.prototype.getDiagramBounds = function () {\n        if (this.printandExportModule) {\n            var bounds = this.printandExportModule.getDiagramBounds('', {});\n            bounds.width = bounds.width > this.scrollSettings.viewPortWidth ?\n                bounds.width + (bounds.x > 0 ? bounds.x : 0) : this.scrollSettings.viewPortWidth;\n            bounds.height = bounds.height > this.scrollSettings.viewPortHeight ?\n                bounds.height + (bounds.y > 0 ? bounds.y : 0) : this.scrollSettings.viewPortHeight;\n            bounds.x = bounds.x > 0 ? 0 : bounds.x;\n            bounds.y = bounds.y > 0 ? 0 : bounds.y;\n            return bounds;\n        }\n        return new Rect();\n    };\n    /**\n     * To export Diagram\n     * @param options defines the how the image to be exported.\n     */\n    Diagram.prototype.exportDiagram = function (options) {\n        if (this.printandExportModule) {\n            var data = this.printandExportModule.exportDiagram(options);\n            return data;\n        }\n        return '';\n    };\n    /**\n     * To print Diagram\n     * @param optons defines how the image to be printed.\n     */\n    Diagram.prototype.print = function (options) {\n        if (this.printandExportModule) {\n            this.printandExportModule.print(options);\n        }\n    };\n    /**\n     * Add ports at the run time\n     */\n    Diagram.prototype.addPorts = function (obj, ports) {\n        this.protectPropertyChange(true);\n        var newObj;\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < ports.length; i++) {\n            newObj = new PointPort(obj, 'ports', ports[i], true);\n            obj.ports.push(newObj);\n            if (obj.children) {\n                var container = obj.wrapper;\n                obj.initPorts(this.getDescription, obj.wrapper.children[container.children.length - 1]);\n            }\n            else {\n                var canvas = obj.wrapper;\n                canvas.children.push(obj.initPortWrapper(obj.ports[obj.ports.length - 1]));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'PortCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(obj.width, obj.height));\n        obj.wrapper.arrange(obj.wrapper.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add constraints at run time\n     */\n    Diagram.prototype.addConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType | constraintsValue;\n    };\n    /**\n     * Remove constraints at run time\n     */\n    Diagram.prototype.removeConstraints = function (constraintsType, constraintsValue) {\n        return constraintsType & ~constraintsValue;\n    };\n    /**\n     * Add Labels at the run time\n     */\n    Diagram.prototype.addLabels = function (obj, labels) {\n        this.protectPropertyChange(true);\n        var canvas = obj.wrapper;\n        var newObj;\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var i = 0; i < labels.length; i++) {\n            if (obj instanceof Node) {\n                newObj = new ShapeAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                if (obj.children) {\n                    var node = obj;\n                    for (var i_1 = 0; i_1 < node.wrapper.children.length; i_1++) {\n                        if (node.wrapper.children[i_1].id === node.id + 'group_container') {\n                            var container = node.wrapper.children[i_1];\n                            container.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                        }\n                    }\n                }\n                else {\n                    canvas.children.push(obj.initAnnotationWrapper(obj.annotations[obj.annotations.length - 1], this.element.id));\n                }\n            }\n            else if (obj instanceof Connector) {\n                newObj = new PathAnnotation(obj, 'annotations', labels[i], true);\n                obj.annotations.push(newObj);\n                var segment = canvas.children[0];\n                var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n                canvas.children.push(obj.getAnnotationElement(obj.annotations[obj.annotations.length - 1], obj.intermediatePoints, bounds, this.getDescription, this.element.id));\n            }\n            if (!(this.diagramActions & DiagramAction.UndoRedo) && !(this.diagramActions & DiagramAction.Group)) {\n                var entry = {\n                    type: 'LabelCollectionChanged', changeType: 'Insert', undoObject: cloneObject(newObj),\n                    redoObject: cloneObject(obj), category: 'Internal'\n                };\n                this.addHistoryEntry(entry);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n        obj.wrapper.measure(new Size(canvas.width, canvas.height));\n        obj.wrapper.arrange(canvas.desiredSize);\n        this.updateDiagramObject(obj);\n        this.protectPropertyChange(false);\n    };\n    /**\n     * Add dynamic Lanes to swimLane at runtime\n     */\n    Diagram.prototype.addLanes = function (node, lane, index) {\n        for (var i = 0; i < lane.length; i++) {\n            addLane(this, node, lane[i], index);\n            if (index !== undefined) {\n                index += 1;\n            }\n        }\n    };\n    /**\n     * Add a phase to a swimLane at runtime\n     */\n    Diagram.prototype.addPhases = function (node, phases) {\n        for (var i = 0; i < phases.length; i++) {\n            addPhase(this, node, phases[i]);\n        }\n    };\n    Diagram.prototype.removelabelExtension = function (obj, labels, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if ((canvas instanceof TextElement) || (canvas instanceof DiagramHtmlElement)) {\n                if (canvas.id.match('_' + labels[j].id + '$')) {\n                    for (var k = 0; k < obj.annotations.length; k++) {\n                        if (canvas.id.match('_' + obj.annotations[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'LabelCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.annotations[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.annotations.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        if (element) {\n                            var element_1 = getDiagramElement(canvas.id, this.element.id);\n                            element_1.parentNode.removeChild(element_1);\n                        }\n                        var textElement = getDiagramElement(canvas.id + '_text', this.element.id);\n                        if (textElement) {\n                            element = getDiagramElement(canvas.id + '_text', this.element.id);\n                            element.parentNode.removeChild(element);\n                        }\n                        var htmlElement = getDiagramElement(canvas.id + '_html_element', this.element.id);\n                        if (htmlElement) {\n                            htmlElement.parentNode.removeChild(htmlElement);\n                        }\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Labels at the run time\n     */\n    Diagram.prototype.removeLabels = function (obj, labels) {\n        if (labels.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = labels.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removelabelExtension(obj, labels, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removelabelExtension(obj, labels, j, obj.wrapper);\n            }\n        }\n        if (labels.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    Diagram.prototype.removePortsExtenion = function (obj, ports, j, wrapper) {\n        for (var i = 0; i < wrapper.children.length; i++) {\n            var canvas = wrapper.children[i];\n            if (canvas instanceof PathElement) {\n                if (canvas.id.match('_' + ports[j].id + '$')) {\n                    for (var k = 0; k < obj.ports.length; k++) {\n                        if (canvas.id.match('_' + obj.ports[k].id + '$')) {\n                            if (!(this.diagramActions & DiagramAction.UndoRedo)) {\n                                var entry = {\n                                    type: 'PortCollectionChanged', changeType: 'Remove', undoObject: cloneObject(obj.ports[k]),\n                                    redoObject: cloneObject(obj), category: 'Internal'\n                                };\n                                this.addHistoryEntry(entry);\n                            }\n                            obj.ports.splice(k, 1);\n                        }\n                    }\n                    wrapper.children.splice(i, 1);\n                    if (this.mode === 'SVG') {\n                        var element = getDiagramElement(canvas.id, this.element.id);\n                        element.parentNode.removeChild(element);\n                    }\n                    else {\n                        this.refreshCanvasLayers();\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Remove Ports at the run time\n     */\n    Diagram.prototype.removePorts = function (obj, ports) {\n        if (ports.length > 1) {\n            this.startGroupAction();\n        }\n        for (var j = ports.length - 1; j >= 0; j--) {\n            if (obj.children && obj.children.length > 0) {\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    this.removePortsExtenion(obj, ports, j, obj.wrapper.children[k]);\n                }\n            }\n            else {\n                this.removePortsExtenion(obj, ports, j, obj.wrapper);\n            }\n        }\n        if (ports.length > 1) {\n            this.endGroupAction();\n        }\n    };\n    //public methods - end region\n    //helper methods - start region\n    /**\n     * @private\n     * @param real\n     * @param rulerSize\n     */\n    Diagram.prototype.getSizeValue = function (real, rulerSize) {\n        var value;\n        if (real.toString().indexOf('px') > 0) {\n            value = real.toString();\n        }\n        else if (real.toString().indexOf('%') > 0) {\n            value = rulerSize !== undefined ? '100%' : real.toString();\n        }\n        else {\n            value = real.toString() + 'px';\n        }\n        if (rulerSize) {\n            var position = getRulerSize(this);\n            value = 'calc(' + value + ' - ' + rulerSize + 'px)';\n        }\n        return value;\n    };\n    Diagram.prototype.renderRulers = function () {\n        if (this.rulerSettings.showRulers) {\n            renderOverlapElement(this);\n            renderRuler(this, true);\n            renderRuler(this, false);\n        }\n        else {\n            removeRulerElements(this);\n        }\n    };\n    Diagram.prototype.intOffPageBackground = function () {\n        var position = new Size();\n        position = getRulerSize(this);\n        var element = document.getElementById(this.element.id + 'content');\n        var width = this.getSizeValue(this.width, position.width);\n        var height = this.getSizeValue(this.height, position.height);\n        var style = this.rulerSettings.showRulers ?\n            'width:' + width + '; height:' + height + ';' +\n                'top:' + position.height + 'px;left:' + position.width + 'px;' +\n                'overflow: scroll;position:absolute;overflow:auto;' :\n            'width:' + width + '; height:' + height + ';position:absolute;' +\n                ' left:0px;  top:0px;overflow: auto;';\n        var attr = {\n            'id': this.element.id + 'content',\n            'tabindex': '0',\n            'style': style\n        };\n        if (!element) {\n            this.diagramCanvas = createHtmlElement('div', attr);\n            this.element.appendChild(this.diagramCanvas);\n        }\n        else {\n            this.diagramCanvas = element;\n            this.diagramCanvas.setAttribute('style', style);\n        }\n        this.diagramCanvas.style.background = this.backgroundColor;\n    };\n    Diagram.prototype.initDiagram = function () {\n        this.intOffPageBackground();\n        setAttributeHtml(this.element, {\n            style: 'width:' + this.getSizeValue(this.width) + '; height:'\n                + this.getSizeValue(this.height) + ';position:relative;overflow:hidden;'\n        });\n    };\n    ;\n    Diagram.prototype.renderBackgroundLayer = function (bounds, commonStyle) {\n        var bgLayer = this.createSvg(this.element.id + '_backgroundLayer_svg', bounds.width, bounds.height);\n        bgLayer.setAttribute('style', commonStyle);\n        var backgroundImage = createSvgElement('g', {\n            'id': this.element.id + '_backgroundImageLayer',\n            'class': 'e-background-image-layer'\n        });\n        bgLayer.appendChild(backgroundImage);\n        var attr = { 'id': this.element.id + '_backgroundLayer', 'class': 'e-background-layer' };\n        var background = createSvgElement('g', attr);\n        bgLayer.appendChild(background);\n        this.diagramCanvas.appendChild(bgLayer);\n    };\n    Diagram.prototype.renderGridLayer = function (bounds, commonStyle) {\n        var svgGridSvg = this.createSvg(this.element.id + '_gridline_svg', bounds.width, bounds.height);\n        svgGridSvg.setAttribute('class', 'e-grid-layer');\n        var svgGrid = createSvgElement('g', { 'id': this.element.id + '_gridline', 'width': '100%', 'height': '100%' });\n        var rect = createSvgElement('rect', {\n            'id': this.element.id + '_grid_rect', 'x': '0', 'y': '0', 'width': '100%', 'height': '100%',\n            'fill': 'url(#' + this.element.id + '_pattern)'\n        });\n        svgGrid.appendChild(rect);\n        svgGridSvg.appendChild(svgGrid);\n        this.diagramCanvas.appendChild(svgGridSvg);\n        setAttributeSvg(svgGridSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderDiagramLayer = function (bounds, commonStyle) {\n        var attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;' + commonStyle\n        };\n        this.diagramLayerDiv = createHtmlElement('div', attributes);\n        if (this.mode === 'SVG') {\n            var diagramSvg = this.createSvg(this.element.id + '_diagramLayer_svg', bounds.width, bounds.height);\n            diagramSvg.setAttribute('style', ' pointer-events: none; ');\n            diagramSvg.setAttribute('class', 'e-diagram-layer');\n            var diagramLayer = createSvgElement('g', { 'id': this.element.id + '_diagramLayer' });\n            var transformationLayer = createSvgElement('g', {});\n            this.diagramLayer = diagramLayer;\n            diagramLayer.setAttribute('style', 'pointer-events: all;');\n            transformationLayer.appendChild(diagramLayer);\n            diagramSvg.appendChild(transformationLayer);\n            this.diagramLayerDiv.appendChild(diagramSvg);\n        }\n        else {\n            this.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagram', bounds.width, bounds.height);\n            this.diagramLayer.setAttribute('style', 'position:absolute;left:0px;top:0px;');\n            this.diagramLayerDiv.appendChild(this.diagramLayer);\n        }\n        this.diagramCanvas.appendChild(this.diagramLayerDiv);\n    };\n    Diagram.prototype.initLayers = function () {\n        var commonStyle = 'position:absolute;top:0px;left:0px;overflow:hidden;pointer-events:none;';\n        var container = document.getElementById(this.element.id);\n        var bounds = container.getBoundingClientRect();\n        var scrollerSize = getScrollerWidth();\n        this.scroller.scrollerWidth = scrollerSize;\n        this.scroller.setViewPortSize(bounds.width, bounds.height);\n        this.renderRulers();\n        createMeasureElements();\n        // this.renderBackgroundImageLayer(bounds, commonStyle);\n        this.renderBackgroundLayer(bounds, commonStyle);\n        this.renderGridLayer(bounds, commonStyle);\n        this.renderDiagramLayer(bounds, commonStyle);\n        this.renderHTMLLayer(bounds, commonStyle);\n        this.renderPortsExpandLayer(bounds, commonStyle);\n        this.renderNativeLayer(bounds, commonStyle);\n        this.renderAdornerLayer(bounds, commonStyle);\n    };\n    Diagram.prototype.renderAdornerLayer = function (bounds, commonStyle) {\n        var divElement = createHtmlElement('div', {\n            'id': this.element.id + '_diagramAdornerLayer',\n            'style': 'width:' + bounds.width + 'px;height:' + bounds.height + 'px;' + commonStyle\n        });\n        var svgAdornerSvg = this.createSvg(this.element.id + '_diagramAdorner_svg', bounds.width, bounds.height);\n        svgAdornerSvg.setAttribute('class', 'e-adorner-layer');\n        svgAdornerSvg.setAttribute('style', 'pointer-events:none;');\n        this.adornerLayer = createSvgElement('g', { 'id': this.element.id + '_diagramAdorner' });\n        this.adornerLayer.setAttribute('style', ' pointer-events: all; ');\n        svgAdornerSvg.appendChild(this.adornerLayer);\n        divElement.appendChild(svgAdornerSvg);\n        this.diagramCanvas.appendChild(divElement);\n        var svgSelector = createSvgElement('g', { 'id': this.element.id + '_SelectorElement' });\n        this.adornerLayer.appendChild(svgSelector);\n        setAttributeSvg(svgAdornerSvg, { style: 'pointer-events:none;' });\n    };\n    Diagram.prototype.renderPortsExpandLayer = function (bounds, commonStyle) {\n        var svgPortsSvg = this.createSvg(this.element.id + '_diagramPorts_svg', bounds.width, bounds.height);\n        svgPortsSvg.setAttribute('class', 'e-ports-expand-layer');\n        var svgPortsLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramPorts',\n            'class': 'e-ports-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgPortsLayer);\n        var svgExpandLayer = createSvgElement('g', {\n            'id': this.element.id + '_diagramExpander',\n            'class': 'e-expand-layer',\n            'style': 'pointer-events: all;'\n        });\n        svgPortsSvg.appendChild(svgExpandLayer);\n        this.diagramCanvas.appendChild(svgPortsSvg);\n        setAttributeSvg(svgPortsSvg, { 'style': commonStyle });\n    };\n    Diagram.prototype.renderHTMLLayer = function (bounds, commonStyle) {\n        this.htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer',\n            'style': 'width:' + bounds.width + 'px; height:' + bounds.height + 'px;position:absolute;top:0px;' +\n                'left:0px;overflow:hidden;pointer-events:none;',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;pointer-events:all;'\n        });\n        this.htmlLayer.appendChild(htmlLayerDiv);\n        this.diagramCanvas.appendChild(this.htmlLayer);\n    };\n    Diagram.prototype.renderNativeLayer = function (bounds, commonStyle) {\n        var nativeLayerSvg = this.createSvg(this.element.id + '_nativeLayer_svg', bounds.width, bounds.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer', 'style': 'pointer-events:all;' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        this.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer', 'style': commonStyle });\n    };\n    /** @private */\n    Diagram.prototype.createSvg = function (id, width, height) {\n        var svgObj = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        setAttributeSvg(svgObj, { 'id': id, 'width': width, 'height': height });\n        return svgObj;\n    };\n    Diagram.prototype.initObjects = function (isLoad) {\n        if (!this.isLoading) {\n            this.initData();\n        }\n        this.initLayerObjects();\n        this.updateBridging(isLoad);\n    };\n    /** @private */\n    Diagram.prototype.initLayerObjects = function () {\n        var hasLayers = this.layers.length > 1;\n        var set = false;\n        var connectors = [];\n        var tempTabel = {};\n        var bpmnTable = {};\n        var tempNode = [];\n        var groups = [];\n        var i = 0;\n        for (var _i = 0, _a = this.nodes; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _b = 0, _c = this.connectors; _b < _c.length; _b++) {\n            var obj = _c[_b];\n            obj.id = obj.id || randomId();\n            this.addToLayer(obj, hasLayers);\n            tempTabel[obj.id] = obj;\n        }\n        for (var _d = 0, _e = this.layers; _d < _e.length; _d++) {\n            var layer = _e[_d];\n            for (var _f = 0, _g = layer.objects; _f < _g.length; _f++) {\n                var obj = _g[_f];\n                if (tempTabel[obj]) {\n                    if (!(tempTabel[obj] instanceof Connector)) {\n                        if (tempTabel[obj].children) {\n                            groups.push(obj);\n                        }\n                        else if ((tempTabel[obj].shape instanceof BpmnShape) &&\n                            tempTabel[obj].shape.activity.subProcess.processes &&\n                            tempTabel[obj].shape.activity.subProcess.processes.length > 0) {\n                            bpmnTable[tempTabel[obj].id] = obj;\n                        }\n                        else {\n                            this.initNodes(tempTabel[obj], layer);\n                        }\n                    }\n                    else {\n                        var connector = tempTabel[obj];\n                        if (connector.sourceID && connector.targetID) {\n                            var sourceNode = tempTabel[connector.sourceID];\n                            var targetNode = tempTabel[connector.targetID];\n                            if (sourceNode && sourceNode.wrapper && targetNode && targetNode.wrapper) {\n                                this.initConnectors(tempTabel[obj], layer);\n                            }\n                            else {\n                                connectors.push(tempTabel[obj]);\n                            }\n                        }\n                        else {\n                            this.initConnectors(tempTabel[obj], layer);\n                        }\n                    }\n                }\n            }\n            if (this.bpmnModule) {\n                for (var _h = 0, _j = this.bpmnModule.textAnnotationConnectors; _h < _j.length; _h++) {\n                    var obj = _j[_h];\n                    this.initConnectors(obj, layer, false);\n                }\n            }\n        }\n        for (var _k = 0, _l = Object.keys(bpmnTable); _k < _l.length; _k++) {\n            var obj = _l[_k];\n            this.initObject(tempTabel[obj]);\n            this.bpmnModule.updateDocks(tempTabel[obj], this);\n        }\n        for (var _m = 0, groups_1 = groups; _m < groups_1.length; _m++) {\n            var obj = groups_1[_m];\n            var layer = this.commandHandler.getObjectLayer(obj);\n            this.initNodes(tempTabel[obj], layer);\n        }\n        for (var _o = 0, connectors_1 = connectors; _o < connectors_1.length; _o++) {\n            var connector = connectors_1[_o];\n            var layer = this.commandHandler.getObjectLayer(connector.id);\n            this.initConnectors(connector, layer);\n        }\n    };\n    Diagram.prototype.addToLayer = function (obj, hasLayers) {\n        var layer;\n        if (hasLayers) {\n            layer = this.commandHandler.getObjectLayer(obj.id);\n        }\n        if (!hasLayers || !layer) {\n            if (this.activeLayer.objects.indexOf(obj.id) === -1) {\n                this.activeLayer.objects.push(obj.id);\n            }\n        }\n        this.setZIndex(layer || this.activeLayer, obj);\n    };\n    Diagram.prototype.updateLayer = function (newProp) {\n        for (var _i = 0, _a = Object.keys(newProp.layers); _i < _a.length; _i++) {\n            var key = _a[_i];\n            var layerObject = this.layers[key].objects;\n            for (var _b = 0, layerObject_1 = layerObject; _b < layerObject_1.length; _b++) {\n                var obj = layerObject_1[_b];\n                var node = this.nameTable[obj];\n                if (newProp.layers[key].visible !== undefined) {\n                    this.updateElementVisibility(node.wrapper, node, newProp.layers[key].visible);\n                }\n                else if (newProp.layers[key].lock === true) {\n                    this.unSelect(node);\n                }\n            }\n            if (newProp.layers[key].lock !== undefined) {\n                this.layers[key].lock = newProp.layers[key].lock;\n            }\n        }\n        if (this.mode !== 'SVG') {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateScrollSettings = function (newProp) {\n        var hPan = (-this.scroller.horizontalOffset + newProp.scrollSettings.horizontalOffset || 0);\n        var vPan = (this.scroller.verticalOffset - newProp.scrollSettings.verticalOffset || 0);\n        var oldValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        if (hPan !== 0 || vPan !== 0) {\n            this.pan(hPan, vPan);\n        }\n        var newValue = {\n            VerticalOffset: this.scrollSettings.verticalOffset, HorizontalOffset: this.scrollSettings.horizontalOffset,\n            ViewportHeight: this.scrollSettings.viewPortHeight, ViewportWidth: this.scrollSettings.viewPortWidth,\n            CurrentZoom: this.scroller.currentZoom\n        };\n        var arg = {\n            oldValue: oldValue, newValue: newValue, source: this\n        };\n        this.triggerEvent(DiagramEvent.scrollChange, arg);\n        if (this.mode === 'Canvas' && (this.constraints & DiagramConstraints.Virtualization)) {\n            this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.initData = function () {\n        var dataSourceSettings = {};\n        if (this.dataBindingModule && !(this.realActions & RealAction.PreventDataInit)) {\n            if (this.dataSourceSettings.dataManager && this.dataSourceSettings.connectionDataSource.dataManager) {\n                this.nodes = this.generateData(this.dataSourceSettings.dataManager, true);\n                this.connectors = this.generateData(this.dataSourceSettings.connectionDataSource.dataManager, false);\n            }\n            else if (this.dataSourceSettings.dataManager && this.dataSourceSettings.dataManager.dataSource &&\n                this.dataSourceSettings.dataManager.dataSource.url !== undefined) {\n                this.dataBindingModule.initSource(this.dataSourceSettings, this);\n            }\n            else {\n                this.dataBindingModule.initData(this.dataSourceSettings, this);\n            }\n        }\n    };\n    Diagram.prototype.generateData = function (dataSource, isNode) {\n        var nodes = [];\n        var i;\n        for (i = 0; i < dataSource.length; i++) {\n            var row = dataSource[i];\n            var node = isNode ? this.makeData(row, true) : this.makeData(row, false);\n            if (node && node.id && (!findNodeByName(nodes, node.id) || !findNodeByName(nodes, node.id))) {\n                nodes.push(node);\n            }\n        }\n        return (nodes);\n    };\n    Diagram.prototype.makeData = function (row, isNode) {\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        var data = {};\n        data.id = row[fields.id] ? row[fields.id] : randomId();\n        if (fields.sourceID) {\n            data.sourceID = row[fields.sourceID];\n        }\n        if (fields.targetID) {\n            data.targetID = row[fields.targetID];\n        }\n        if (row[fields.sourcePointX] && row[fields.sourcePointY]) {\n            data.sourcePoint = { 'x': Number(row[fields.sourcePointX]), 'y': Number(row[fields.sourcePointY]) };\n        }\n        if (row[fields.targetPointX] && row[fields.targetPointY]) {\n            data.targetPoint = { 'x': Number(row[fields.targetPointX]), 'y': Number(row[fields.targetPointY]) };\n        }\n        if (fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++) {\n                data[fields.crudAction.customFields[i]] = row[fields.crudAction.customFields[i]];\n            }\n        }\n        return data;\n    };\n    Diagram.prototype.initNodes = function (obj, layer) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.initConnectors = function (obj, layer, independentObj) {\n        this.preventUpdate = true;\n        this.initObject(obj, layer, independentObj);\n        this.updateEdges(obj);\n        this.preventUpdate = false;\n    };\n    Diagram.prototype.setZIndex = function (layer, obj) {\n        //should be changed\n        var currentLayer = layer;\n        if ((obj).zIndex === -1) {\n            while (currentLayer.zIndexTable[currentLayer.objectZIndex + 1]) {\n                layer.objectZIndex++;\n            }\n            obj.zIndex = ++currentLayer.objectZIndex;\n        }\n        else {\n            var index = obj.zIndex;\n            if (currentLayer.zIndexTable[index]) {\n                var tabelLength = Object.keys(currentLayer.zIndexTable).length;\n                var j = 0;\n                for (var i = 0; i < tabelLength; i++) {\n                    if (i === index) {\n                        for (var j_1 = tabelLength; j_1 > index; j_1--) {\n                            currentLayer.zIndexTable[j_1] = currentLayer.zIndexTable[j_1 - 1];\n                            if (this.nameTable[currentLayer.zIndexTable[j_1]]) {\n                                this.nameTable[currentLayer.zIndexTable[j_1]].zIndex = j_1;\n                            }\n                        }\n                        currentLayer.zIndexTable[i] = obj.id;\n                    }\n                    j++;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initializeDiagramLayers = function () {\n        for (var _i = 0, _a = this.layers; _i < _a.length; _i++) {\n            var layer = _a[_i];\n            layer.zIndex = this.layers.indexOf(layer);\n            this.layerZIndexTable[layer.zIndex] = layer.id;\n        }\n        if (this.layers.length === 0) {\n            var defaultLayer = {\n                id: 'default_layer', visible: true, lock: false, objects: [], zIndex: 0,\n                objectZIndex: -1, zIndexTable: {}\n            };\n            this.commandHandler.addLayer(defaultLayer);\n        }\n        this.setActiveLayer(this.layers[this.layers.length - 1].id);\n    };\n    /** @private */\n    Diagram.prototype.resetTool = function () {\n        this.eventHandler.resetTool();\n    };\n    Diagram.prototype.initObjectExtend = function (obj, layer, independentObj) {\n        if (independentObj) {\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, obj.wrapper.bounds);\n            layer.zIndexTable[obj.zIndex] = obj.id;\n            if (!checkBoundaryConstraints) {\n                var node = obj instanceof Node ? this.nodes : this.connectors;\n                for (var i = 0; i <= node.length; i++) {\n                    if (node[i] && obj.id === node[i].id) {\n                        node.splice(i, 1);\n                    }\n                }\n                delete layer.zIndexTable[obj.zIndex];\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.initObject = function (obj, layer, independentObj, group) {\n        if (independentObj === void 0) { independentObj = true; }\n        if (obj !== undefined) {\n            if (independentObj) {\n                if (!layer) {\n                    this.addToLayer(obj, false);\n                    layer = this.activeLayer;\n                }\n                //Move the common properties like zindex and id to an abstract class\n                if (obj instanceof Node || obj instanceof Connector) {\n                    this.setZIndex(layer, obj);\n                }\n            }\n            if (obj instanceof Node) {\n                if (independentObj) {\n                    if (obj.id !== 'helper') {\n                        var getDefaults = getFunction(this.getNodeDefaults);\n                        if (getDefaults) {\n                            var defaults = getDefaults(obj, this);\n                            if (defaults && defaults !== obj) {\n                                extendObject(defaults, obj);\n                            }\n                        }\n                    }\n                    this.initNode(obj, this.element.id);\n                }\n            }\n            else if (obj instanceof Connector) {\n                var getDefaults = getFunction(this.getConnectorDefaults);\n                if (getDefaults) {\n                    var defaults = getDefaults(obj, this);\n                    if (defaults && defaults !== obj) {\n                        extendObject(defaults, obj);\n                    }\n                    if (obj.segments.length) {\n                        if (obj.type !== obj.segments[0].type) {\n                            obj.segments = [];\n                        }\n                    }\n                }\n                var sourceNode = this.nameTable[obj.sourceID];\n                var targetNode = this.nameTable[obj.targetID];\n                if (sourceNode !== undefined && canOutConnect(sourceNode)) {\n                    obj.sourceWrapper = this.getEndNodeWrapper(sourceNode, obj, true);\n                    if (obj.sourcePortID) {\n                        var port = this.getConnectedPort(sourceNode, obj);\n                        if (port && port.constraints && !(port.constraints & PortConstraints.None)) {\n                            obj.sourcePortWrapper = this.getWrapper(sourceNode.wrapper, obj.sourcePortID);\n                        }\n                    }\n                }\n                if (targetNode !== undefined && canInConnect(targetNode)) {\n                    obj.targetWrapper = this.getEndNodeWrapper(targetNode, obj, false);\n                    if (obj.targetPortID) {\n                        var targetPort = this.getConnectedPort(targetNode, obj);\n                        if (targetPort && targetPort.constraints && !(targetPort.constraints & PortConstraints.None)) {\n                            obj.targetPortWrapper = this.getWrapper(targetNode.wrapper, obj.targetPortID);\n                        }\n                    }\n                }\n                if (!independentObj) {\n                    var points = obj.getConnectorPoints(obj.type);\n                    updateConnector(obj, points);\n                }\n                if (independentObj) {\n                    obj.init(this);\n                }\n                for (var k = 0; k < obj.wrapper.children.length; k++) {\n                    if (this.pathTable[obj.wrapper.children[k].data]) {\n                        obj.wrapper.children[k].absoluteBounds =\n                            this.pathTable[obj.wrapper.children[k].data].absoluteBounds;\n                    }\n                }\n                obj.wrapper.measure(new Size(undefined, undefined));\n                obj.wrapper.arrange(obj.wrapper.desiredSize);\n                for (var j = 0; j < obj.wrapper.children.length; j++) {\n                    this.pathTable[obj.wrapper.children[j].data] = {};\n                    this.pathTable[obj.wrapper.children[j].data].absoluteBounds =\n                        obj.wrapper.children[j].absoluteBounds;\n                }\n            }\n            if (obj instanceof Node && obj.children && obj.container) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    this.nameTable[obj.children[i]].offsetX = this.nameTable[obj.children[i]].wrapper.offsetX;\n                    this.nameTable[obj.children[i]].offsetY = this.nameTable[obj.children[i]].wrapper.offsetY;\n                }\n            }\n            if (this.bpmnModule && obj instanceof Node\n                && obj.shape.type === 'Bpmn' && obj.shape.annotations.length > 0) {\n                this.bpmnModule.updateQuad(obj, this);\n            }\n            this.initObjectExtend(obj, layer, independentObj);\n            this.nameTable[obj.id] = obj;\n            if (obj instanceof Node && obj.children) {\n                if (!group && !obj.container) {\n                    this.updateGroupOffset(obj, true);\n                }\n                this.groupTable[obj.id] = obj.children;\n                for (var i = 0; i < obj.children.length; i++) {\n                    var node = (this.nameTable[obj.children[i]]);\n                    if (node) {\n                        node.parentId = obj.id;\n                    }\n                }\n                if (!this.isLoading && obj.rotateAngle && !obj.container) {\n                    this.commandHandler.rotateObjects(obj, [obj], obj.rotateAngle, { x: obj.offsetX, y: obj.offsetY }, false);\n                }\n            }\n            this.updateQuad(obj);\n        }\n        if (obj.visible === false) {\n            this.updateElementVisibility(obj.wrapper, obj, false);\n        }\n    };\n    Diagram.prototype.getConnectedPort = function (node, connector) {\n        if (node && node.ports) {\n            for (var _i = 0, _a = node.ports; _i < _a.length; _i++) {\n                var port = _a[_i];\n                if (port.id === connector.sourcePortID) {\n                    return port;\n                }\n                else if (port.id === connector.targetPortID) {\n                    return port;\n                }\n            }\n        }\n        return null;\n    };\n    Diagram.prototype.scaleObject = function (obj, size, isWidth) {\n        var actualSize = isWidth ? obj.wrapper.actualSize.width : obj.wrapper.actualSize.height;\n        var sw = (isWidth) ? 1 + ((size - actualSize) / actualSize) : 1;\n        var sh = (isWidth) ? 1 : 1 + ((size - actualSize) / actualSize);\n        var groupOffsetX = obj.offsetX;\n        var groupOffsetY = obj.offsetY;\n        this.realActions |= RealAction.PreventDrag;\n        this.scale(obj, sw, sh, { x: 0.5, y: 0.5 });\n        this.realActions &= ~RealAction.PreventDrag;\n    };\n    Diagram.prototype.updateDefaultLayoutIcons = function (node) {\n        if (this.layout.type === 'OrganizationalChart' || this.layout.type === 'HierarchicalTree' ||\n            this.layout.type === 'ComplexHierarchicalTree') {\n            {\n                this.updateDefaultLayoutIcon(node, node.expandIcon);\n                this.updateDefaultLayoutIcon(node, node.collapseIcon);\n            }\n        }\n    };\n    Diagram.prototype.updateDefaultLayoutIcon = function (node, icon) {\n        if (icon.shape !== 'None') {\n            if (icon.horizontalAlignment === 'Auto' && icon.verticalAlignment === 'Auto' &&\n                icon.offset.x === .5 && icon.offset.y === 1) {\n                var iconWrapper = this.getWrapper(node.wrapper, 'icon_content');\n                var offsetX = void 0;\n                var offsetY = void 0;\n                if (this.layout.orientation === 'TopToBottom' || this.layout.orientation === 'BottomToTop') {\n                    offsetX = .5;\n                    offsetY = this.layout.orientation === 'TopToBottom' ? 1 : 0;\n                }\n                else if (this.layout.orientation === 'RightToLeft' || this.layout.orientation === 'LeftToRight') {\n                    offsetX = this.layout.orientation === 'LeftToRight' ? 1 : 0;\n                    offsetY = .5;\n                }\n                iconWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                iconWrapper.horizontalAlignment = 'Center';\n                iconWrapper.verticalAlignment = 'Center';\n                node.wrapper.measure(new Size(node.wrapper.width, node.wrapper.height));\n                node.wrapper.arrange(node.wrapper.desiredSize);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.updateGroupOffset = function (node, isUpdateSize) {\n        if ((node.children && node.children.length > 0 && (!node.container)) || (node.processId)) {\n            var node1 = this.nameTable[node.id];\n            if (!(this.realActions & RealAction.PreventScale) && !(this.realActions & RealAction.PreventDrag)) {\n                if (node1.offsetX && !(this.diagramActions & DiagramAction.ToolAction)\n                    && !(this.diagramActions & DiagramAction.PublicMethod)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffX = (node1.offsetX - node.wrapper.offsetX);\n                    node1.offsetX = node.wrapper.offsetX;\n                    if (node.flip === 'None') {\n                        this.drag(node1, diffX, 0);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetX = node.wrapper.offsetX;\n                }\n                if (node1.offsetY && !(this.diagramActions & DiagramAction.ToolAction)) {\n                    this.realActions |= RealAction.PreventScale;\n                    var diffY = (node1.offsetY - node.wrapper.offsetY);\n                    node1.offsetY = node.wrapper.offsetY;\n                    if (node.flip === 'None') {\n                        this.drag(node1, 0, diffY);\n                    }\n                    this.realActions &= ~RealAction.PreventScale;\n                }\n                else {\n                    node1.offsetY = node.wrapper.offsetY;\n                }\n                if (this.diagramActions) {\n                    node1.width = node.wrapper.actualSize.width;\n                    node1.height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n        if (isUpdateSize) {\n            if ((node.children && node.children.length > 0)) {\n                if (this.nameTable[node.id].width !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].width, true);\n                }\n                else {\n                    this.nameTable[node.id].width = node.wrapper.actualSize.width;\n                }\n                if (this.nameTable[node.id].height !== undefined) {\n                    this.scaleObject(node, this.nameTable[node.id].height, false);\n                }\n                else {\n                    this.nameTable[node.id].height = node.wrapper.actualSize.height;\n                }\n            }\n        }\n    };\n    Diagram.prototype.initNode = function (obj, diagramId, group) {\n        var canvas = obj.initContainer();\n        var portContainer = new Canvas();\n        var content;\n        if (!canvas.children) {\n            canvas.children = [];\n        }\n        if (obj.children) {\n            canvas.measureChildren = false;\n            if (obj.container && (obj.container.type === 'Grid')) {\n                for (var i = 0; i < obj.children.length; i++) {\n                    var childCollection = new Canvas();\n                    var child = this.nameTable[obj.children[i]];\n                    childCollection.children = [];\n                    childCollection.children.push(child.wrapper);\n                    if (child) {\n                        canvas.addObject(child.wrapper, child.rowIndex, child.columnIndex, child.rowSpan, child.columnSpan);\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < obj.children.length; i++) {\n                    if (this.nameTable[obj.children[i]]) {\n                        var child = this.nameTable[obj.children[i]];\n                        this.updateStackProperty(obj, child, i);\n                        canvas.children.push(child.wrapper);\n                        canvas.elementActions = canvas.elementActions | ElementAction.ElementIsGroup;\n                        child.wrapper.flip = child.wrapper.flip === 'None' ?\n                            obj.wrapper.flip : child.wrapper.flip;\n                    }\n                }\n            }\n            portContainer.id = obj.id + 'group_container';\n            portContainer.style.fill = 'none';\n            portContainer.style.strokeColor = 'none';\n            portContainer.horizontalAlignment = 'Stretch';\n            portContainer.verticalAlignment = 'Stretch';\n            canvas.style = obj.style;\n            portContainer.children = [];\n            portContainer.preventContainer = true;\n            if (obj.container) {\n                portContainer.relativeMode = 'Object';\n            }\n            if (!obj.container || (obj.container.type !== 'Grid')) {\n                canvas.children.push(portContainer);\n            }\n        }\n        else {\n            var setNodeTemplate = getFunction(this.setNodeTemplate);\n            if (setNodeTemplate) {\n                content = setNodeTemplate(obj, this);\n            }\n            if (!content) {\n                content = obj.init(this);\n            }\n            canvas.children.push(content);\n        }\n        // tslint:disable-next-line:no-any\n        var wrapperContent;\n        wrapperContent = getFunction(this.getDescription);\n        if (wrapperContent) {\n            (obj.children ? canvas : content).description = wrapperContent;\n        }\n        else {\n            (obj.children ? canvas : content).description = obj.annotations.length ? obj.annotations[0].content : obj.id;\n        }\n        var container = obj.children ? portContainer : canvas;\n        obj.initAnnotations(this.getDescription, container, this.element.id, canVitualize(this) ? true : false);\n        obj.initPorts(this.getDescription, container);\n        obj.initIcons(this.getDescription, this.layout, container, diagramId);\n        if (obj.shape.type === 'SwimLane' && obj.wrapper && obj.wrapper.children.length > 0 &&\n            obj.wrapper.children[0] instanceof GridPanel) {\n            swimLaneMeasureAndArrange(obj);\n            arrangeChildNodesInSwimLane(this, obj);\n        }\n        else {\n            canvas.measure(new Size(obj.width, obj.height));\n            if (canvas instanceof GridPanel) {\n                canvas.arrange(canvas.desiredSize, true);\n            }\n            else {\n                canvas.arrange(canvas.desiredSize);\n            }\n        }\n        if (obj.wrapper.flip !== 'None' && obj.wrapper.elementActions & ElementAction.ElementIsGroup) {\n            alignElement(obj.wrapper, obj.wrapper.offsetX, obj.wrapper.offsetY, this, obj.wrapper.flip);\n        }\n        if (obj instanceof Node && obj.container && (obj.width < canvas.outerBounds.width || obj.height < canvas.outerBounds.height) &&\n            canvas.bounds.x <= canvas.outerBounds.x && canvas.bounds.y <= canvas.outerBounds.y) {\n            obj.width = canvas.width = canvas.outerBounds.width;\n            obj.height = canvas.height = canvas.outerBounds.height;\n            canvas.measure(new Size(obj.width, obj.height));\n            canvas.arrange(canvas.desiredSize);\n        }\n        if (obj.container && obj.container.type === 'Grid' && obj.children && obj.children.length > 0) {\n            this.updateChildPosition(obj);\n        }\n    };\n    Diagram.prototype.updateChildPosition = function (obj) {\n        for (var i = 0; i < obj.children.length; i++) {\n            var child = this.getObject(obj.children[i]);\n            child.offsetX = child.wrapper.offsetX;\n            child.offsetY = child.wrapper.offsetY;\n            if (child.children && child.children.length > 0) {\n                this.updateChildPosition(child);\n            }\n        }\n    };\n    Diagram.prototype.canExecute = function () {\n        return true;\n    };\n    Diagram.prototype.updateStackProperty = function (obj, child, index) {\n        if (obj.container && obj.container.type === 'Stack') {\n            if (!child.width) {\n                child.wrapper.horizontalAlignment = 'Stretch';\n                child.horizontalAlignment = 'Stretch';\n            }\n            if (!child.height) {\n                child.verticalAlignment = 'Stretch';\n                child.wrapper.verticalAlignment = 'Stretch';\n            }\n            if (index && obj.shape.type === 'UmlClassifier') {\n                child.umlIndex = index;\n            }\n        }\n    };\n    Diagram.prototype.initViews = function () {\n        if (!this.isLoading) {\n            this.views.push(this.element.id);\n            this.views[this.element.id] = this;\n        }\n    };\n    Diagram.prototype.initCommands = function () {\n        var i;\n        var newCommands = this.commandManager.commands;\n        var commands = {\n            'copy': {\n                execute: this.copyCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.C, keyModifiers: KeyModifiers.Control }\n            },\n            'paste': {\n                execute: this.pasteCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.V, keyModifiers: KeyModifiers.Control }\n            },\n            'cut': {\n                execute: this.cutCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.X, keyModifiers: KeyModifiers.Control }\n            },\n            'delete': {\n                execute: this.removeCommand.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Delete }\n            },\n            'selectAll': {\n                execute: this.selectAll.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.A, keyModifiers: KeyModifiers.Control }\n            },\n            'undo': {\n                execute: this.undo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Z, keyModifiers: KeyModifiers.Control }\n            },\n            'redo': {\n                execute: this.redo.bind(this), canExecute: this.canExecute.bind(this),\n                gesture: { key: Keys.Y, keyModifiers: KeyModifiers.Control }\n            },\n            'nudgeUp': {\n                execute: this.nudgeCommand.bind(this, 'Up'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Up },\n                parameter: 'up'\n            },\n            'nudgeRight': {\n                execute: this.nudgeCommand.bind(this, 'Right'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Right },\n                parameter: 'right'\n            },\n            'nudgeDown': {\n                execute: this.nudgeCommand.bind(this, 'Down'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Down },\n                parameter: 'down'\n            },\n            'nudgeLeft': {\n                execute: this.nudgeCommand.bind(this, 'Left'),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Left },\n                parameter: 'left'\n            },\n            'startEdit': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.F2 }\n            },\n            'endEdit': {\n                execute: this.endEditCommand.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Escape }\n            },\n            'focusToNextItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab }\n            },\n            'focusToPreviousItem': {\n                // execute: this.focusToItem.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Tab, keyModifiers: KeyModifiers.Control }\n            },\n            'selectFocusedItem': {\n                execute: this.startEditCommad.bind(this),\n                canExecute: this.canExecute.bind(this), gesture: { key: Keys.Enter }\n            },\n        };\n        this.initCommandManager(newCommands, commands);\n    };\n    Diagram.prototype.overrideCommands = function (newCommand, commands) {\n        var command;\n        for (var _i = 0, _a = Object.keys(commands); _i < _a.length; _i++) {\n            var key = _a[_i];\n            command = commands[key];\n            if (newCommand.gesture.key === command.gesture.key && newCommand.gesture.keyModifiers === command.gesture.keyModifiers) {\n                delete commands[key];\n                break;\n            }\n        }\n    };\n    Diagram.prototype.initCommandManager = function (newCommands, commands) {\n        var i = 0;\n        if (newCommands) {\n            for (i = 0; i < newCommands.length; i++) {\n                if (commands[newCommands[i].name] && newCommands[i]) {\n                    if (newCommands[i].canExecute) {\n                        commands[newCommands[i].name].canExecute = newCommands[i].canExecute;\n                    }\n                    if (newCommands[i].execute) {\n                        commands[newCommands[i].name].execute = newCommands[i].execute;\n                    }\n                    if (newCommands[i].gesture.key || newCommands[i].gesture.keyModifiers) {\n                        commands[newCommands[i].name].gesture = newCommands[i].gesture;\n                    }\n                    if (newCommands[i].parameter !== '') {\n                        commands[newCommands[i].name].parameter = newCommands[i].parameter;\n                    }\n                }\n                else {\n                    this.overrideCommands(newCommands[i], commands);\n                    commands[newCommands[i].name] = {\n                        execute: newCommands[i].execute, canExecute: newCommands[i].canExecute, gesture: newCommands[i].gesture,\n                        parameter: newCommands[i].parameter\n                    };\n                }\n            }\n        }\n        this.commands = commands;\n    };\n    /** @private */\n    Diagram.prototype.updateNodeEdges = function (node) {\n        for (var _i = 0, _a = node.inEdges; _i < _a.length; _i++) {\n            var edge = _a[_i];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].targetID = '';\n            }\n        }\n        for (var _b = 0, _c = node.outEdges; _b < _c.length; _b++) {\n            var edge = _c[_b];\n            if (this.nameTable[edge]) {\n                this.nameTable[edge].sourceID = '';\n            }\n        }\n        node.inEdges = [];\n        node.outEdges = [];\n    };\n    /** @private */\n    Diagram.prototype.updateIconVisibility = function (node, visibility) {\n        for (var i = 0; i < node.wrapper.children.length; i++) {\n            var child = node.wrapper.children[i];\n            var id = child.id.split(node.id)[1];\n            if (child.id && id && id.match('^_icon')) {\n                child.visible = visibility;\n                this.updateDiagramContainerVisibility(child, visibility);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateEdges = function (obj) {\n        if (obj.sourceID !== undefined && obj.sourceID !== '') {\n            var node = this.nameTable[obj.sourceID];\n            if (node && node.outEdges && node.outEdges.length === 0) {\n                node.outEdges = [];\n            }\n            if (node && node.outEdges && node.outEdges.indexOf(obj.id) === -1) {\n                node.outEdges.push(obj.id);\n            }\n        }\n        if (obj.targetID !== undefined && obj.targetID !== '') {\n            var node = this.nameTable[obj.targetID];\n            if (node && node.inEdges && node.inEdges.length === 0) {\n                node.inEdges = [];\n            }\n            if (node && node.inEdges && node.inEdges.indexOf(obj.id) === -1) {\n                node.inEdges.push(obj.id);\n            }\n            if (node && node.visible && node.outEdges) {\n                var value = node.outEdges.length === 0 ? false : true;\n                this.updateIconVisibility(node, value);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagram = function () {\n        this.initLayerObjects();\n        this.doLayout();\n        this.updateBridging();\n        this.scroller.setSize();\n    };\n    Diagram.prototype.updateCanupdateStyle = function (element, value) {\n        for (var j = 0; j < element.length; j++) {\n            if (element[j].children) {\n                this.updateCanupdateStyle(element[j].children, value);\n            }\n            element[j].canApplyStyle = value;\n        }\n    };\n    Diagram.prototype.getZindexPosition = function (obj, viewId) {\n        var objects = [];\n        var index = undefined;\n        objects = objects.concat(this.nodes);\n        objects = objects.concat(this.connectors);\n        var type;\n        if (obj.zIndex !== -1) {\n            for (var i = 0; i < objects.length; i++) {\n                if (objects[i].zIndex > obj.zIndex) {\n                    if (obj.shape.type === 'HTML' || obj.shape.type === 'Native') {\n                        type = obj.shape.type === 'HTML' ? 'html' : 'native';\n                    }\n                    index = getDomIndex(viewId, objects[i].id, type);\n                }\n            }\n        }\n        return index;\n    };\n    /** @private */\n    Diagram.prototype.updateDiagramObject = function (obj, canIgnoreIndex) {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (this.diagramActions) {\n                if (view.mode === 'SVG') {\n                    var htmlLayer = getHTMLLayer(this.element.id);\n                    var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.updateCanupdateStyle(obj.wrapper.children, true);\n                    }\n                    this.diagramRenderer.updateNode(obj.wrapper, diagramElementsLayer, htmlLayer, undefined, canIgnoreIndex ? undefined : this.getZindexPosition(obj, view.element.id));\n                    this.updateCanupdateStyle(obj.wrapper.children, true);\n                }\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.updateGridContainer = function (grid) {\n        var view;\n        var htmlLayer = getHTMLLayer(this.element.id);\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            if (view.mode === 'SVG' && this.diagramActions) {\n                var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n                this.diagramRenderer.updateNode(grid, diagramElementsLayer, htmlLayer, undefined);\n            }\n            else {\n                this.refreshCanvasDiagramLayer(view);\n            }\n        }\n    };\n    /** @private  */\n    Diagram.prototype.getObjectsOfLayer = function (objectArray) {\n        var nodeArray = [];\n        for (var _i = 0, objectArray_1 = objectArray; _i < objectArray_1.length; _i++) {\n            var obj = objectArray_1[_i];\n            if (this.nameTable[obj]) {\n                nodeArray.push(this.nameTable[obj]);\n            }\n        }\n        return nodeArray;\n    };\n    /** @private */\n    Diagram.prototype.refreshDiagramLayer = function () {\n        var view;\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var temp = _a[_i];\n            view = this.views[temp];\n            switch (view.mode) {\n                case 'SVG':\n                    this.refreshSvgDiagramLayer(view);\n                    break;\n                case 'Canvas':\n                    this.refreshCanvasLayers(view);\n                    break;\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasLayers = function (view) {\n        if (!view) {\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view_1 = this.views[temp];\n                this.refreshCanvasDiagramLayer(view_1);\n            }\n        }\n        else {\n            this.refreshCanvasDiagramLayer(view);\n        }\n    };\n    Diagram.prototype.renderBasicElement = function (view) {\n        var htmlLayer = getHTMLLayer(view.element.id);\n        for (var i = 0; i < this.basicElements.length; i++) {\n            var element = this.basicElements[i];\n            if (element instanceof Container) {\n                element.prevRotateAngle = 0;\n            }\n            element.measure(new Size(element.width, element.height));\n            element.arrange(element.desiredSize);\n            view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n        }\n    };\n    Diagram.prototype.refreshElements = function (view) {\n        if (!this.isDestroyed) {\n            this.clearCanvas(view);\n            if (view instanceof Diagram) {\n                view.diagramLayer.getContext('2d').setTransform(view.scroller.currentZoom, 0, 0, view.scroller.currentZoom, 0, 0);\n                view.diagramLayer.getContext('2d').scale(1.5, 1.5);\n            }\n            var htmlLayer = getHTMLLayer(view.element.id);\n            var bounds = this.spatialSearch.getPageBounds();\n            this.renderDiagramElements(view.diagramLayer, view.diagramRenderer, htmlLayer);\n            for (var i = 0; i < this.basicElements.length; i++) {\n                var element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize);\n                view.diagramRenderer.renderElement(element, view.diagramLayer, htmlLayer);\n            }\n            if (view instanceof Diagram) {\n                view.diagramLayer.style.transform = 'scale(' + (2 / 3) + ')';\n                view.diagramLayer.style.transformOrigin = '0 0';\n            }\n            this.renderTimer = null;\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshCanvasDiagramLayer = function (view) {\n        var _this = this;\n        if (view.mode !== 'SVG' && !this.isDestroyed) {\n            if (this.basicElements.length > 0) {\n                this.renderBasicElement(view);\n            }\n            if ((!this.diagramActions || (this.diagramActions & DiagramAction.Render) === 0)\n                || (DiagramAction.ToolAction & this.diagramActions) || canVitualize(this) || (this.scroller.currentZoom !== 1)) {\n                this.refreshElements(view);\n            }\n            else if (!this.renderTimer) {\n                this.renderTimer = setTimeout(function () {\n                    _this.refreshElements(view);\n                }, 40);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePortVisibility = function (node, portVisibility, inverse) {\n        var portElement;\n        var drawingObject = !(this.drawingObject && this.drawingObject.shape) ? true : false;\n        if (node instanceof Node && drawingObject && canMove(node)) {\n            var ports = node.ports;\n            var changed = false;\n            for (var i = 0; i < ports.length; i++) {\n                portElement = this.getWrapper(node.wrapper, ports[i].id);\n                if ((portVisibility & PortVisibility.Hover || portVisibility & PortVisibility.Connect)) {\n                    if (checkPortRestriction(ports[i], portVisibility)) {\n                        portElement.visible = !inverse;\n                        changed = true;\n                    }\n                }\n            }\n            if (changed) {\n                this.updateDiagramObject(node);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.refreshSvgDiagramLayer = function (view) {\n        var element;\n        var diagramElementsLayer = document.getElementById(view.element.id + '_diagramLayer');\n        var htmlLayer = getHTMLLayer(view.element.id);\n        if (!canVitualize(this)) {\n            for (var i = 0; i < this.basicElements.length; i++) {\n                element = this.basicElements[i];\n                element.measure(new Size(element.width, element.height));\n                element.arrange(element.desiredSize, (!(this.diagramActions & DiagramAction.Render) ? true : false));\n                this.diagramRenderer.renderElement(element, diagramElementsLayer, htmlLayer);\n            }\n            this.renderDiagramElements(diagramElementsLayer, this.diagramRenderer, htmlLayer);\n        }\n        else {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeVirtualObjects = function (clearIntervalVal) {\n        if (this.deleteVirtualObject) {\n            for (var i = 0; i < this.scroller.removeCollection.length; i++) {\n                var obj = this.nameTable[this.scroller.removeCollection[i]];\n                this.removeElements(obj);\n            }\n            this.deleteVirtualObject = false;\n        }\n        clearInterval(clearIntervalVal);\n    };\n    /** @private */\n    Diagram.prototype.updateTextElementValue = function (object) {\n        for (var j = 0; j < object.wrapper.children.length; j++) {\n            var element = object.wrapper.children[j];\n            if (element instanceof TextElement) {\n                element.canMeasure = true;\n                element.measure(new Size(object.width, object.height));\n                element.arrange(element.desiredSize);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateVirtualObjects = function (collection, remove, tCollection) {\n        var diagramElementsLayer = document.getElementById('diagram_diagramLayer');\n        var htmlLayer = getHTMLLayer('diagram');\n        if (this.mode === 'SVG') {\n            for (var i = 0; i < collection.length; i++) {\n                var index = this.scroller.removeCollection.indexOf(collection[i]);\n                if (index >= 0) {\n                    this.scroller.removeCollection.splice(index, 1);\n                }\n                var object = this.nameTable[collection[i]];\n                this.updateTextElementValue(object);\n                this.diagramRenderer.renderElement(object.wrapper, diagramElementsLayer, htmlLayer, undefined, undefined, undefined, undefined, object.zIndex);\n            }\n            for (var k = 0; k < tCollection.length; k++) {\n                this.scroller.removeCollection.push(tCollection[k]);\n            }\n            if (this.scroller.currentZoom !== 1) {\n                this.eventHandler.updateVirtualization();\n            }\n        }\n        else if (this.diagramActions) {\n            this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderDiagramElements = function (canvas, renderer, htmlLayer, transform, fromExport, isOverView) {\n        if (transform === void 0) { transform = true; }\n        var pageBounds = this.scroller.getPageBounds();\n        pageBounds.x *= this.scroller.currentZoom;\n        pageBounds.y *= this.scroller.currentZoom;\n        pageBounds.width *= this.scroller.currentZoom;\n        pageBounds.height *= this.scroller.currentZoom;\n        var difX = -this.scroller.horizontalOffset - pageBounds.x;\n        var difY = -this.scroller.verticalOffset - pageBounds.y;\n        for (var _i = 0, _a = Object.keys(this.layerZIndexTable); _i < _a.length; _i++) {\n            var layerId = _a[_i];\n            var layer = this.commandHandler.getLayer(this.layerZIndexTable[layerId]);\n            var left = void 0;\n            var top_1 = void 0;\n            if (this.mode === 'Canvas' && canVitualize(this) && !this.diagramActions) {\n                this.scroller.virtualizeElements();\n            }\n            var id = (this.mode === 'Canvas' && canVitualize(this) &&\n                this.scroller.oldCollectionObjects.length > 0) ?\n                this.scroller.oldCollectionObjects : undefined;\n            for (var _b = 0, _c = Object.keys(id || layer.zIndexTable); _b < _c.length; _b++) {\n                var node = _c[_b];\n                var renderNode = id ? this.nameTable[id[node]] : this.nameTable[layer.zIndexTable[node]];\n                if (renderNode && !(renderNode.parentId) &&\n                    !(renderNode.processId)) {\n                    var transformValue = {\n                        tx: this.scroller.transform.tx,\n                        ty: this.scroller.transform.ty,\n                        scale: this.scroller.transform.scale\n                    };\n                    if (canVitualize(this)) {\n                        if (this.scroller.currentZoom < 1) {\n                            if (pageBounds.x < 0 || this.scroller.horizontalOffset < 0) {\n                                var verticalValue = this.scroller.verticalOffset < 0 ? this.scroller.verticalOffset : 0;\n                                left = (difX > 0 ? difX : 0) + 'px';\n                                top_1 = ((this.realActions & RealAction.vScrollbarMoved) ? 0 : -verticalValue) + 'px';\n                            }\n                            else {\n                                left = 0 + 'px';\n                                top_1 = 0 + 'px';\n                            }\n                            if (this.realActions & RealAction.hScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.hScrollbarMoved;\n                            }\n                            if (this.realActions & RealAction.vScrollbarMoved) {\n                                this.realActions = this.realActions & ~RealAction.vScrollbarMoved;\n                            }\n                        }\n                        else {\n                            left = (pageBounds.x < 0 ? difX : -this.scroller.horizontalOffset) + 'px';\n                            top_1 = (pageBounds.y < 0 ? difY : -this.scroller.verticalOffset) + 'px';\n                        }\n                        this.diagramLayer.style.left = left;\n                        this.diagramLayer.style.top = top_1;\n                        transformValue.tx = this.scroller.horizontalOffset / transformValue.scale;\n                        transformValue.ty = this.scroller.verticalOffset / transformValue.scale;\n                    }\n                    var status_1 = true;\n                    if (fromExport) {\n                        status_1 = false;\n                    }\n                    this.updateTextElementValue(renderNode);\n                    renderer.renderElement(renderNode.wrapper, canvas, htmlLayer, (!renderer.isSvgMode && transform) ? transformValue : undefined, undefined, undefined, status_1 && (!this.diagramActions || isOverView));\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateBridging = function (isLoad) {\n        if (this.bridgingModule) {\n            for (var i = 0; i < this.connectors.length; i++) {\n                var connector = this.connectors[i];\n                this.bridgingModule.updateBridging(connector, this);\n                var canvas = this.connectors[i].wrapper;\n                if (canvas) {\n                    var pathSegment = canvas.children[0];\n                    var data = pathSegment.data;\n                    connector.getSegmentElement(connector, pathSegment);\n                    if (pathSegment.data !== data) {\n                        canvas.measure(new Size());\n                        canvas.arrange(canvas.desiredSize);\n                        if (this.mode === 'SVG' && !isLoad) {\n                            this.updateDiagramObject(connector);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.setCursor = function (cursor) {\n        this.diagramRenderer.setCursor(this.diagramCanvas, cursor);\n    };\n    /** @private */\n    Diagram.prototype.clearCanvas = function (view) {\n        var width;\n        var height;\n        width = view.contentWidth || view.diagramLayer.width / this.scroller.currentZoom;\n        height = view.contentHeight || view.diagramLayer.height / this.scroller.currentZoom;\n        if (view.mode !== 'SVG') {\n            var ctx = CanvasRenderer.getContext(view.diagramLayer);\n            ctx.clearRect(0, 0, width, height);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateScrollOffset = function () {\n        this.scroller.setScrollOffset(this.diagramCanvas.scrollLeft, this.diagramCanvas.scrollTop);\n        updateRuler(this);\n        if (canVitualize(this)) {\n            this.scroller.virtualizeElements();\n        }\n    };\n    /** @private */\n    Diagram.prototype.setOffset = function (offsetX, offsetY) {\n        var container = document.getElementById(this.element.id + 'content');\n        if (container) {\n            container.scrollLeft = offsetX;\n            container.scrollTop = offsetY;\n        }\n    };\n    /** @private */\n    Diagram.prototype.setSize = function (width, height) {\n        if (this.diagramLayer && !this.preventUpdate) {\n            var position = getRulerSize(this);\n            width -= position.width;\n            height -= position.height;\n            var bounds = this.spatialSearch.getPageBounds();\n            bounds.x *= this.scroller.currentZoom;\n            bounds.y *= this.scroller.currentZoom;\n            bounds.width *= this.scroller.currentZoom;\n            bounds.height *= this.scroller.currentZoom;\n            var factor = this.mode === 'SVG' ? 1 : 1.5;\n            var diagramLayer = this.mode === 'SVG' ?\n                getDiagramLayerSvg(this.element.id) : this.diagramLayer;\n            var w = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortWidth : width;\n            var h = (this.mode === 'Canvas' &&\n                (this.constraints & DiagramConstraints.Virtualization)) ? this.scroller.viewPortHeight : height;\n            diagramLayer.setAttribute('width', (factor * w).toString());\n            diagramLayer.setAttribute('height', (factor * h).toString());\n            var attr = { 'width': width.toString(), 'height': height.toString() };\n            this.diagramLayerDiv.style.width = width + 'px';\n            this.diagramLayerDiv.style.height = height + 'px';\n            setAttributeSvg(getNativeLayerSvg(this.element.id), attr);\n            setAttributeSvg(getPortLayerSvg(this.element.id), attr);\n            var adornerSVG = getAdornerLayerSvg(this.element.id);\n            setAttributeSvg(adornerSVG, attr);\n            adornerSVG.parentNode.style.width = width + 'px';\n            adornerSVG.parentNode.style.height = height + 'px';\n            var gridLayer = getGridLayerSvg(this.element.id);\n            setAttributeSvg(gridLayer, attr);\n            this.diagramRenderer.updateGrid(this.snapSettings, gridLayer, this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n            setAttributeSvg(getBackgroundLayerSvg(this.element.id), attr);\n            this.htmlLayer.style.width = width + 'px';\n            this.htmlLayer.style.height = height + 'px';\n            if (this.mode !== 'SVG' && !(canVitualize(this))) {\n                this.refreshDiagramLayer();\n            }\n            if (this.mode === 'SVG' && canVitualize(this)) {\n                this.scroller.virtualizeElements();\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.transformLayers = function () {\n        var bounds = this.spatialSearch.getPageBounds();\n        bounds.x *= this.scroller.currentZoom;\n        bounds.y *= this.scroller.currentZoom;\n        bounds.width *= this.scroller.currentZoom;\n        bounds.height *= this.scroller.currentZoom;\n        this.diagramRenderer.updateGrid(this.snapSettings, getGridLayerSvg(this.element.id), this.scroller.transform, this.rulerSettings, this.hRuler, this.vRuler);\n        this.diagramRenderer.transformLayers(this.scroller.transform, this.mode === 'SVG');\n        this.updateSelector();\n        this.renderPageBreaks(bounds);\n    };\n    /**\n     * Defines how to remove the Page breaks\n     * @private\n     */\n    Diagram.prototype.removePageBreaks = function () {\n        if (this.diagramLayer) {\n            var line = getBackgroundLayer(this.element.id);\n            if (line && line.childNodes) {\n                var length_1 = line.childNodes.length;\n                for (var i = 0; i < length_1; i++) {\n                    line.removeChild(line.childNodes[0]);\n                }\n            }\n        }\n    };\n    /**\n     * Defines how the page breaks has been rendered\n     * @private\n     */\n    Diagram.prototype.renderPageBreaks = function (bounds) {\n        this.removePageBreaks();\n        var backgroundLayer = getBackgroundLayer(this.element.id);\n        if (backgroundLayer) {\n            var i = 0;\n            bounds = this.scroller.getPageBounds(true);\n            var x = (this.scroller.transform.tx + bounds.x) * this.scroller.currentZoom;\n            var y = (this.scroller.transform.ty + bounds.y) * this.scroller.currentZoom;\n            var height = bounds.height * this.scroller.currentZoom;\n            var width = bounds.width * this.scroller.currentZoom;\n            DiagramRenderer.renderSvgBackGroundImage(this.pageSettings.background, this.element, x, y, width, height);\n            var options = {\n                id: backgroundLayer.id + 'rect', x: x,\n                y: y,\n                height: height,\n                width: width, angle: 0, stroke: '', strokeWidth: 1,\n                fill: this.pageSettings.background.color, opacity: 1,\n                pivotX: 0, pivotY: 0, visible: true, dashArray: '0',\n            };\n            this.diagramRenderer.drawRect(backgroundLayer, options);\n            if (this.pageSettings.showPageBreaks) {\n                var collection = this.scroller.getPageBreak(bounds);\n                for (i = 0; i < collection.length; i++) {\n                    this.diagramRenderer.drawLine(backgroundLayer, {\n                        class: 'e-diagram-page-break',\n                        fill: 'none', stroke: '#aaaaaa', strokeWidth: 1, dashArray: '10 10',\n                        opacity: 2, x: 0, y: 0, width: 0, height: 0, angle: 0, pivotX: 0, pivotY: 0, visible: true,\n                        startPoint: {\n                            x: (collection[i].x1 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y1 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        },\n                        endPoint: {\n                            x: (collection[i].x2 + this.scroller.transform.tx) * this.scroller.currentZoom,\n                            y: (collection[i].y2 + this.scroller.transform.ty) * this.scroller.currentZoom\n                        }, id: collection[i].y1 === collection[i].y2 ? 'HorizontalLines' : 'VerticalLines'\n                    });\n                }\n            }\n        }\n    };\n    Diagram.prototype.validatePageSize = function () {\n        var temp = 0;\n        if (this.pageSettings.orientation === 'Portrait') {\n            if (this.pageSettings.width > this.pageSettings.height) {\n                temp = this.pageSettings.height;\n                this.pageSettings.height = this.pageSettings.width;\n                this.pageSettings.width = temp;\n            }\n        }\n        else {\n            if (this.pageSettings.height > this.pageSettings.width) {\n                temp = this.pageSettings.width;\n                this.pageSettings.width = this.pageSettings.height;\n                this.pageSettings.height = temp;\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.setOverview = function (overview, id) {\n        if (overview) {\n            if (overview) {\n                this.views.push(overview.id);\n                this.views[overview.id] = overview;\n                overview.renderDocument(overview);\n                overview.diagramRenderer.setLayers();\n                overview.updateView(overview);\n                this.renderNodes(overview);\n            }\n        }\n        else {\n            for (var i = 0; i < this.views.length; i++) {\n                if (this.views[i] === id) {\n                    overview = (this.views[id]);\n                }\n            }\n            this.views[id] = undefined;\n            var index = this.views.indexOf(id);\n            this.views.splice(index, 1);\n        }\n    };\n    Diagram.prototype.renderNodes = function (overview) {\n        if (overview) {\n            var renderer = new DiagramRenderer(overview.id, new SvgRenderer(), false);\n            var g = document.getElementById(overview.element.id + '_diagramLayer');\n            var htmlLayer = getHTMLLayer(overview.element.id);\n            this.renderDiagramElements(g, overview.diagramRenderer || renderer, htmlLayer, undefined, undefined, true);\n        }\n    };\n    Diagram.prototype.updateThumbConstraints = function (node, selectorModel, canInitialize) {\n        var state = 0;\n        var length = node.length;\n        for (var i = 0; i < length; i++) {\n            var obj = node[i];\n            var hideRotate = false;\n            var hideResize = false;\n            var thumbConstraints = selectorModel.thumbsConstraints;\n            if (obj instanceof Node) {\n                hideRotate = (obj.shape.type === 'Bpmn' && (obj.shape.shape === 'Activity' &&\n                    (obj.shape.activity.subProcess.collapsed === false)) ||\n                    obj.shape.shape === 'TextAnnotation');\n                hideResize = (obj.shape.type === 'Bpmn' && obj.shape.shape === 'TextAnnotation');\n                if (!canRotate(obj) || !(thumbConstraints & ThumbsConstraints.Rotate) || hideRotate) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n                if (!canResize(obj, 'SouthEast') || !(thumbConstraints & ThumbsConstraints.ResizeSouthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthEast;\n                }\n                if (!canResize(obj, 'NorthWest') || !(thumbConstraints & ThumbsConstraints.ResizeNorthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthWest;\n                }\n                if (!canResize(obj, 'East') || !(thumbConstraints & ThumbsConstraints.ResizeEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeEast;\n                }\n                if (!canResize(obj, 'West') || !(thumbConstraints & ThumbsConstraints.ResizeWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeWest;\n                }\n                if (!canResize(obj, 'North') || !(thumbConstraints & ThumbsConstraints.ResizeNorth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorth;\n                }\n                if (!canResize(obj, 'South') || !(thumbConstraints & ThumbsConstraints.ResizeSouth) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouth;\n                }\n                if (!canResize(obj, 'NorthEast') || !(thumbConstraints & ThumbsConstraints.ResizeNorthEast) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeNorthEast;\n                }\n                if (!canResize(obj, 'SouthWest') || !(thumbConstraints & ThumbsConstraints.ResizeSouthWest) || hideResize) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ResizeSouthWest;\n                }\n            }\n            else if (obj instanceof Connector) {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (canDragSourceEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorSource;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorSource;\n                }\n                if (canDragTargetEnd(obj)) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.ConnectorTarget;\n                }\n                else {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.ConnectorTarget;\n                }\n            }\n            else {\n                if (!canInitialize) {\n                    thumbConstraints = thumbConstraints | ThumbsConstraints.Default;\n                }\n                if (!canResize(obj)) {\n                    thumbConstraints = thumbConstraints & ~(ThumbsConstraints.ResizeSouthEast | ThumbsConstraints.ResizeSouthWest |\n                        ThumbsConstraints.ResizeSouth | ThumbsConstraints.ResizeEast | ThumbsConstraints.ResizeWest |\n                        ThumbsConstraints.ResizeNorth | ThumbsConstraints.ResizeNorthEast | ThumbsConstraints.ResizeNorthWest);\n                }\n                if (!canRotate(obj)) {\n                    thumbConstraints = thumbConstraints & ~ThumbsConstraints.Rotate;\n                }\n            }\n            selectorModel.thumbsConstraints = thumbConstraints;\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelector = function (multipleSelection, isSwimLane) {\n        var size = new Size();\n        var selectorModel = this.selectedItems;\n        var selectorConstraints = selectorModel.constraints;\n        var rendererActions = this.diagramRenderer.rendererActions;\n        this.diagramRenderer.rendererActions = this.currentSymbol ?\n            this.addConstraints(rendererActions, RendererAction.DrawSelectorBorder) :\n            this.removeConstraints(rendererActions, RendererAction.DrawSelectorBorder);\n        this.clearSelectorLayer();\n        if (this.commandHandler.hasSelection()) {\n            if (selectorModel.nodes.length === 1 && selectorModel.connectors.length === 0) {\n                selectorModel.rotateAngle = selectorModel.nodes[0].rotateAngle;\n                selectorModel.pivot = selectorModel.nodes[0].pivot;\n            }\n            selectorModel.wrapper.measure(size);\n            selectorModel.wrapper.arrange(selectorModel.wrapper.desiredSize);\n            selectorModel.width = selectorModel.wrapper.actualSize.width;\n            selectorModel.height = selectorModel.wrapper.actualSize.height;\n            selectorModel.offsetX = selectorModel.wrapper.offsetX;\n            selectorModel.offsetY = selectorModel.wrapper.offsetY;\n            if (selectorModel.rotateAngle !== 0) {\n                for (var _i = 0, _a = selectorModel.nodes; _i < _a.length; _i++) {\n                    var obj = _a[_i];\n                    obj.offsetX = obj.wrapper.offsetX;\n                    obj.offsetY = obj.wrapper.offsetY;\n                }\n                for (var _b = 0, _c = selectorModel.connectors; _b < _c.length; _b++) {\n                    var conn = _c[_b];\n                    //update connections\n                }\n            }\n            var bounds = this.spatialSearch.getPageBounds();\n            var selectorElement = void 0;\n            selectorElement = getSelectorElement(this.element.id);\n            selectorModel.thumbsConstraints = ThumbsConstraints.Default;\n            if (selectorModel.annotation) {\n                this.updateThumbConstraints([selectorModel.annotation], selectorModel);\n            }\n            else {\n                this.updateThumbConstraints(selectorModel.nodes, selectorModel);\n                this.updateThumbConstraints(selectorModel.connectors, selectorModel, true);\n            }\n            if (selectorModel.annotation) {\n                this.renderSelectorForAnnotation(selectorModel, selectorElement);\n            }\n            else if (selectorModel.nodes.length + selectorModel.connectors.length === 1) {\n                if (selectorModel.nodes[0] instanceof Node) {\n                    var node = selectorModel.nodes[0];\n                    if (checkParentAsContainer(this, node)) {\n                        if (!isSwimLane && (node.shape.type !== 'UmlClassifier' && !(node.parentId &&\n                            this.nameTable[node.parentId]\n                            && this.nameTable[node.parentId].shape.type === 'UmlClassifier'))) {\n                            if (!(node.container && (node.container.type === 'Canvas' || node.container.type === 'Grid'))) {\n                                selectorModel.nodes[0].constraints &= ~(NodeConstraints.Rotate | NodeConstraints.HideThumbs);\n                            }\n                            selectorModel.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                        }\n                    }\n                    var constraints = isSwimLane ? true : ((node.constraints & NodeConstraints.HideThumbs) ? true : false);\n                    var swimlane = (node.shape.type === 'SwimLane' || node.isLane || node.isPhase || isSwimLane) ? true : false;\n                    this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(node), constraints, swimlane);\n                }\n                else if (selectorModel.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                    var connector = selectorModel.connectors[0];\n                    this.diagramRenderer.renderEndPointHandle(connector, selectorElement, selectorModel.thumbsConstraints, selectorModel.constraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                }\n            }\n            else {\n                this.diagramRenderer.renderResizeHandle(selectorModel.wrapper, selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel));\n            }\n            if (!(selectorModel.annotation)) {\n                this.diagramRenderer.renderUserHandler(selectorModel, selectorElement, this.scroller.transform);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateSelector = function () {\n        var size = new Size();\n        var selector = this.selectedItems;\n        var selectorConstraints = selector.constraints;\n        if (!(this.diagramActions & DiagramAction.ToolAction) && this.selectedItems.nodes.length === 1) {\n            this.selectedItems.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n            this.selectedItems.wrapper.rotateAngle = this.selectedItems.nodes[0].rotateAngle;\n        }\n        if (this.selectedItems !== undefined) {\n            this.clearSelectorLayer();\n            if (selector.wrapper !== null && selector.wrapper.children && selector.wrapper.children.length) {\n                selector.wrapper.measure(size);\n                selector.wrapper.arrange(selector.wrapper.desiredSize);\n                if (selector.rotateAngle !== 0 || selector.rotateAngle !== selector.wrapper.prevRotateAngle) {\n                    for (var _i = 0, _a = selector.nodes; _i < _a.length; _i++) {\n                        var obj = _a[_i];\n                        obj.offsetX = obj.wrapper.offsetX;\n                        obj.offsetY = obj.wrapper.offsetY;\n                    }\n                }\n                selector.width = selector.wrapper.actualSize.width;\n                selector.height = selector.wrapper.actualSize.height;\n                selector.offsetX = selector.wrapper.offsetX;\n                selector.offsetY = selector.wrapper.offsetY;\n                var selectorEle = void 0;\n                selectorEle = getSelectorElement(this.element.id);\n                var canHideResizers = this.eventHandler.canHideResizers();\n                selector.thumbsConstraints = ThumbsConstraints.Default;\n                if (selector.annotation) {\n                    this.updateThumbConstraints([selector.annotation], selector);\n                }\n                else {\n                    this.updateThumbConstraints(selector.nodes, selector);\n                    this.updateThumbConstraints(selector.connectors, selector, true);\n                }\n                if ((this.selectedItems.constraints & SelectorConstraints.UserHandle) && (!(selector.annotation))) {\n                    this.diagramRenderer.renderUserHandler(selector, selectorEle, this.scroller.transform);\n                }\n                if (selector.annotation) {\n                    this.renderSelectorForAnnotation(selector, selectorEle);\n                }\n                else if (selector.nodes.length + selector.connectors.length === 1) {\n                    if (selector.connectors[0] instanceof Connector && canDrawThumbs(this.diagramRenderer.rendererActions)) {\n                        var connector = selector.connectors[0];\n                        this.diagramRenderer.renderEndPointHandle(connector, selectorEle, selector.thumbsConstraints, selectorConstraints, this.scroller.transform, connector.sourceWrapper !== undefined, connector.targetWrapper !== undefined, (this.connectorEditingToolModule && canDragSegmentThumb(connector)) ? true : false);\n                    }\n                    else if (selector.nodes[0] instanceof Node) {\n                        var stackPanel = selector.nodes[0];\n                        if (checkParentAsContainer(this, selector.nodes[0])) {\n                            if (stackPanel.shape.type !== 'UmlClassifier' && !(stackPanel.parentId &&\n                                this.nameTable[stackPanel.parentId]\n                                && this.nameTable[stackPanel.parentId].shape.type === 'UmlClassifier')) {\n                                if (!(stackPanel.container && (stackPanel.container.type === 'Canvas'\n                                    || stackPanel.container.type === 'Grid'))) {\n                                    selector.nodes[0].constraints &= ~(NodeConstraints.HideThumbs | NodeConstraints.Rotate);\n                                }\n                                selector.thumbsConstraints &= ~ThumbsConstraints.Rotate;\n                            }\n                        }\n                        var swimlane = (stackPanel.shape.type === 'SwimLane' || stackPanel.isLane ||\n                            stackPanel.isPhase) ? true : false;\n                        this.diagramRenderer.renderResizeHandle(selector.wrapper.children[0], selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector.nodes[0]), (selector.nodes[0].constraints & NodeConstraints.HideThumbs) ? true : false, swimlane);\n                    }\n                }\n                else {\n                    if (this.diagramActions & DiagramAction.Interactions) {\n                        this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions | RendererAction.PreventRenderSelector;\n                    }\n                    this.diagramRenderer.renderResizeHandle(selector.wrapper, selectorEle, selector.thumbsConstraints, this.scroller.currentZoom, selector.constraints, this.scroller.transform, canHideResizers, canMove(selector));\n                    this.diagramRenderer.rendererActions = this.diagramRenderer.rendererActions & ~RendererAction.PreventRenderSelector;\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.renderSelectorForAnnotation = function (selectorModel, selectorElement) {\n        this.diagramRenderer.renderResizeHandle(selectorModel.wrapper.children[0], selectorElement, selectorModel.thumbsConstraints, this.scroller.currentZoom, selectorModel.constraints, this.scroller.transform, undefined, canMove(selectorModel.annotation));\n    };\n    /** @private */\n    Diagram.prototype.drawSelectionRectangle = function (x, y, width, height) {\n        this.clearSelectorLayer();\n        this.diagramRenderer.drawSelectionRectangle(x, y, width, height, this.adornerLayer, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.renderHighlighter = function (element) {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        this.diagramRenderer.renderHighlighter(element, adornerSvg, this.scroller.transform);\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.clearHighlighter = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        var highlighter = adornerSvg.getElementById(adornerSvg.id + '_highlighter');\n        if (highlighter) {\n            highlighter.parentNode.removeChild(highlighter);\n        }\n    };\n    /** @private */\n    Diagram.prototype.getNodesConnectors = function (selectedItems) {\n        for (var i = 0; i < this.nodes.length; i++) {\n            var node = this.nodes[i];\n            selectedItems.push(node);\n        }\n        for (var i = 0; i < this.connectors.length; i++) {\n            var conn = this.connectors[i];\n            selectedItems.push(conn);\n        }\n        return selectedItems;\n    };\n    /** @private */\n    Diagram.prototype.clearSelectorLayer = function () {\n        var adornerSvg = getAdornerLayerSvg(this.element.id);\n        if (!this.currentSymbol) {\n            var selectionRect = adornerSvg.getElementById(this.adornerLayer.id + '_selected_region');\n            if (selectionRect) {\n                selectionRect.parentNode.removeChild(selectionRect);\n            }\n            this.clearHighlighter();\n            var childNodes = getSelectorElement(this.element.id).childNodes;\n            var child = void 0;\n            for (var i = childNodes.length; i > 0; i--) {\n                child = childNodes[i - 1];\n                child.parentNode.removeChild(child);\n            }\n        }\n        else {\n            var symbolBorder = adornerSvg.getElementById('borderRect_symbol');\n            if (symbolBorder) {\n                symbolBorder.parentNode.removeChild(symbolBorder);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.getWrapper = function (nodes, id) {\n        var wrapper;\n        id = nodes.id + '_' + id;\n        var container = nodes instanceof Canvas ? nodes : this.getPortContainer(this.nameTable[nodes.id]);\n        for (var i = 0; i < container.children.length; i++) {\n            if (id === container.children[i].id) {\n                wrapper = container.children[i];\n            }\n        }\n        return wrapper;\n    };\n    /** @private */\n    Diagram.prototype.getEndNodeWrapper = function (node, connector, source) {\n        if (node.shape.type === 'Bpmn' && node.wrapper.children[0] instanceof Canvas) {\n            if (node.shape.shape === 'Activity') {\n                if (source && node.shape.activity.subProcess.type === 'Transaction'\n                    && connector.sourcePortID) {\n                    var portId = connector.sourcePortID;\n                    var parent_3 = node.wrapper.children[0].children[0].children[2];\n                    if (parent_3.children) {\n                        for (var _i = 0, _a = parent_3.children; _i < _a.length; _i++) {\n                            var child = _a[_i];\n                            if (child.visible && child.id === node.id + '_' + portId) {\n                                return child.children[0];\n                            }\n                        }\n                    }\n                }\n                return node.wrapper.children[0].children[0].children[0];\n            }\n            return node.wrapper.children[0].children[0];\n        }\n        if (!this.containsMargin(node.wrapper.children[0])) {\n            if (!node.children) {\n                return node.wrapper.children[0];\n            }\n        }\n        return node.wrapper;\n    };\n    Diagram.prototype.containsMargin = function (node) {\n        return node.margin && (node.margin.left !== 0 || node.margin.top !== 0 || node.margin.right !== 0 || node.margin.bottom !== 0);\n    };\n    Diagram.prototype.focusOutEdit = function () {\n        this.endEdit();\n    };\n    Diagram.prototype.endEditCommand = function () {\n        this.endEdit();\n        this.textEditing = false;\n    };\n    /**\n     * @private\n     */\n    Diagram.prototype.endEdit = function () {\n        if (this.diagramActions & DiagramAction.TextEdit) {\n            var textArea = document.getElementById(this.element.id + '_editBox');\n            var text = textArea.value;\n            EventHandler.remove(textArea, 'input', this.eventHandler.inputChange);\n            EventHandler.remove(textArea, 'focusout', this.focusOutEdit);\n            var element = document.getElementById(this.element.id + '_editTextBoxDiv');\n            var args = { oldValue: element.textContent, newValue: text, cancel: false };\n            var bpmnAnnotation = false;\n            var node = void 0;\n            element.parentNode.removeChild(element);\n            var textWrapper = void 0;\n            if (this.bpmnModule) {\n                node = this.bpmnModule.isBpmnTextAnnotation(this.activeLabel, this);\n                textWrapper = this.bpmnModule.getTextAnnotationWrapper(node, this.activeLabel.id);\n                bpmnAnnotation = node ? true : false;\n                if (bpmnAnnotation) {\n                    if (element.textContent !== text) {\n                        this.triggerEvent(DiagramEvent.textEdit, args);\n                        if (!args.cancel) {\n                            this.bpmnModule.updateTextAnnotationContent(node, this.activeLabel, text, this);\n                        }\n                    }\n                }\n            }\n            if (!bpmnAnnotation) {\n                node = this.nameTable[this.activeLabel.parentId];\n                var deleteNode = this.eventHandler.isAddTextNode(node, true);\n                if (!deleteNode && element.textContent !== text) {\n                    this.triggerEvent(DiagramEvent.textEdit, args);\n                }\n                if (!textWrapper) {\n                    textWrapper = this.getWrapper(node.wrapper, this.activeLabel.id);\n                }\n                var annotation = findAnnotation(node, this.activeLabel.id);\n                if (annotation.content !== text && !args.cancel) {\n                    if (node.parentId && this.nameTable[node.parentId].shape.type === 'UmlClassifier'\n                        && text.indexOf('+') === -1 && text.indexOf('-') === -1 && text.indexOf('#') === -1\n                        && text.indexOf('~') === -1 && node.id.indexOf('_umlClass_header') === -1) {\n                        text = ' + ' + text;\n                    }\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(true);\n                    }\n                    annotation.content = text;\n                    this.dataBind();\n                    this.updateSelector();\n                    if (node.isLane || node.isPhase) {\n                        this.protectPropertyChange(false);\n                    }\n                }\n                if (deleteNode) {\n                    this.removeObjectsFromLayer(node);\n                    this.removeFromAQuad(node);\n                    delete this.nameTable[this.activeLabel.parentId];\n                    if (text !== '') {\n                        this.clearSelection();\n                        var clonedObject = cloneObject(node);\n                        node = this.add(clonedObject);\n                        this.updateDiagramObject(node);\n                        this.commandHandler.select(this.nameTable[node.id]);\n                    }\n                }\n            }\n            if (this.selectedItems.nodes.length) {\n                var selectedNode = this.nameTable[this.activeLabel.parentId];\n                var swimLaneNode = this.nameTable[selectedNode.parentId];\n                if ((swimLaneNode && swimLaneNode.shape.type === 'SwimLane') || (selectedNode.shape.type === 'SwimLane')) {\n                    var laneHeader = 'LaneHeaderParent';\n                    var phaseHeader = 'PhaseHeaderParent';\n                    if ((selectedNode.shape.type === 'SwimLane')) {\n                        swimLaneNode = this.nameTable[this.activeLabel.parentId];\n                        selectedNode = node;\n                    }\n                    if ((selectedNode.isLane || selectedNode.isPhase)) {\n                        var collection = selectedNode.isLane ?\n                            swimLaneNode.shape.lanes : swimLaneNode.shape.phases;\n                        for (var j = 0; j < collection.length; j++) {\n                            if (collection[j].id === (selectedNode[laneHeader] || selectedNode[phaseHeader])) {\n                                collection[j].header.annotation.content = selectedNode.annotations[0].content;\n                            }\n                        }\n                    }\n                    else if (selectedNode.isHeader && swimLaneNode.shape.hasHeader) {\n                        swimLaneNode.shape.header.annotation.content = selectedNode.annotations[0].content;\n                    }\n                }\n                this.dataBind();\n            }\n            textWrapper.visible = true;\n            this.updateDiagramObject(node);\n            this.diagramActions = this.diagramActions & ~DiagramAction.TextEdit;\n            if (this.activeLabel.isGroup) {\n                this.endGroupAction();\n            }\n            this.activeLabel = { id: '', parentId: '', isGroup: false };\n        }\n    };\n    /** @private */\n    Diagram.prototype.canLogChange = function () {\n        if ((this.diagramActions & DiagramAction.Render) && (!(this.diagramActions & DiagramAction.ToolAction)) &&\n            (!(this.diagramActions & DiagramAction.UndoRedo)) && (!(this.diagramActions & DiagramAction.PublicMethod))) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    Diagram.prototype.modelChanged = function (newProp, oldProp) {\n        if (newProp.connectors || oldProp.connectors || newProp.nodes || oldProp.connectors\n            || newProp.pageSettings || oldProp.pageSettings || newProp.bridgeDirection || oldProp.bridgeDirection) {\n            return true;\n        }\n        return false;\n    };\n    Diagram.prototype.resetDiagramActions = function (action) {\n        var isAction = action ? true : false;\n        if (this.diagramActions & DiagramAction.UndoRedo && (!isAction || (action === DiagramAction.UndoRedo))) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.UndoRedo;\n        }\n        if (this.diagramActions & DiagramAction.PublicMethod && (!isAction || action === DiagramAction.PublicMethod)) {\n            this.diagramActions = this.diagramActions & ~DiagramAction.PublicMethod;\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeNode = function (node) {\n        this.removeObjectsFromLayer(node);\n        this.removeFromAQuad(this.nameTable[node.id]);\n        delete this.nameTable[node.id];\n        if (node.children) {\n            delete this.groupTable[node.id];\n        }\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n    };\n    /** @private */\n    Diagram.prototype.deleteGroup = function (node) {\n        var elements = [];\n        var tempNode = [];\n        if (node.children) {\n            tempNode = this.commandHandler.getChildren(node, elements);\n        }\n        for (var _i = 0, tempNode_1 = tempNode; _i < tempNode_1.length; _i++) {\n            var nodes = tempNode_1[_i];\n            if (this.nameTable[nodes.id]) {\n                this.remove(nodes);\n            }\n        }\n    };\n    //helper methods - end region\n    //property changes - start region\n    /** @private */\n    Diagram.prototype.updateObject = function (actualObject, oldObject, changedProp) {\n        if (!(this.diagramActions & DiagramAction.ToolAction)) {\n            var bound = actualObject.wrapper.children[0].bounds;\n            var checkBoundaryConstraints = this.commandHandler.checkBoundaryConstraints(undefined, undefined, bound);\n            if (!checkBoundaryConstraints) {\n                if (actualObject instanceof Node) {\n                    var oldNode = oldObject;\n                    for (var _i = 0, _a = Object.keys(changedProp); _i < _a.length; _i++) {\n                        var key = _a[_i];\n                        switch (key) {\n                            case 'width':\n                                actualObject.width = oldNode.width;\n                                break;\n                            case 'height':\n                                actualObject.height = oldNode.height;\n                                break;\n                            case 'offsetX':\n                                actualObject.offsetX = oldNode.offsetX;\n                                break;\n                            case 'offsetY':\n                                actualObject.offsetY = oldNode.offsetY;\n                                break;\n                            case 'rotateAngle':\n                                actualObject.rotateAngle = oldNode.rotateAngle;\n                                break;\n                        }\n                    }\n                    this.nodePropertyChange(actualObject, changedProp, oldObject);\n                }\n                else {\n                    for (var _b = 0, _c = Object.keys(changedProp); _b < _c.length; _b++) {\n                        var key = _c[_b];\n                        var oldConnector = oldObject;\n                        var actualSourcePoint = actualObject.sourcePoint;\n                        var actualTargetPoint = actualObject.targetPoint;\n                        switch (key) {\n                            case 'sourcePoint':\n                                actualSourcePoint.x = oldConnector.sourcePoint.x || actualSourcePoint.x;\n                                actualSourcePoint.y = oldConnector.sourcePoint.y || actualSourcePoint.y;\n                                break;\n                            case 'targetPoint':\n                                actualTargetPoint.x = oldConnector.targetPoint.x || actualTargetPoint.x;\n                                actualTargetPoint.y = oldConnector.targetPoint.y || actualTargetPoint.y;\n                        }\n                    }\n                    this.connectorPropertyChange(actualObject, changedProp, oldObject);\n                }\n            }\n        }\n    };\n    Diagram.prototype.nodePropertyChangeExtend = function (actualObject, oldObject, node, update) {\n        if (node.style !== undefined && actualObject.shape.type !== 'Bpmn') {\n            updateStyle(node.style, actualObject.wrapper.children[0]);\n            update = true;\n        }\n        if (node.shadow !== undefined) {\n            this.updateShadow(actualObject.shadow, node.shadow);\n            update = true;\n        }\n        if (node.constraints !== undefined) {\n            if ((oldObject.constraints & NodeConstraints.Select) &&\n                (!(node.constraints & NodeConstraints.Select)) && isSelected(this, actualObject)) {\n                this.clearSelection();\n            }\n            else {\n                this.updateThumbConstraints(this.selectedItems.nodes, this.selectedItems);\n                this.updateSelector();\n                update = true;\n            }\n        }\n        this.swimLaneNodePropertyChange(actualObject, oldObject, node, update);\n        return update;\n    };\n    /* tslint:disable */\n    Diagram.prototype.swimLaneNodePropertyChange = function (actualObject, oldObject, node, update) {\n        if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol) {\n            if (oldObject.shape) {\n                var shape = node.shape;\n                var actualShape = actualObject.shape;\n                var orientation_1 = (actualShape.orientation === 'Horizontal') ? true : false;\n                var padding = actualShape.padding;\n                var oldShape = oldObject.shape;\n                var grid = actualObject.wrapper.children[0];\n                var oldObjects = void 0;\n                var newObjects = void 0;\n                var id = void 0;\n                if (oldShape.lanes || oldShape.phases) {\n                    if (oldShape.lanes) {\n                        for (var _i = 0, _a = Object.keys(shape.lanes); _i < _a.length; _i++) {\n                            var count = _a[_i];\n                            var indexValue = Number(count);\n                            var lane = oldShape.lanes[indexValue];\n                            var laneIndex = void 0;\n                            var newLane = shape.lanes[indexValue];\n                            if (newLane && newLane.header) {\n                                id = actualShape.lanes[indexValue].header.id;\n                                oldObjects = lane.header;\n                                newObjects = newLane.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (lane.children) {\n                                for (var _b = 0, _c = Object.keys(lane.children); _b < _c.length; _b++) {\n                                    var childNodeIndex = _c[_b];\n                                    id = actualShape.lanes[indexValue].children[Number(childNodeIndex)].id;\n                                    var node_1 = this.nameTable[id];\n                                    oldObjects = lane.children[Number(childNodeIndex)];\n                                    newObjects = newLane.children[Number(childNodeIndex)];\n                                    this.nodePropertyChange(node_1, oldObjects, newObjects);\n                                }\n                            }\n                            if (lane.width && !orientation_1) {\n                                laneIndex = (actualShape.phases && actualShape.phaseSize) ? indexValue + 1 : indexValue;\n                                grid.updateColumnWidth(laneIndex, newLane.width, true, padding);\n                            }\n                            if (lane.height && orientation_1) {\n                                laneIndex = (actualShape.header && actualShape.hasHeader) ? indexValue + 1 : indexValue;\n                                laneIndex += (actualShape.phases && actualShape.phaseSize) ? 1 : 0;\n                                grid.updateRowHeight(laneIndex, newLane.height, true, padding);\n                            }\n                        }\n                    }\n                    if (shape.phases) {\n                        for (var _d = 0, _e = Object.keys(shape.phases); _d < _e.length; _d++) {\n                            var key = _e[_d];\n                            var indexValue = Number(key);\n                            var phase = shape.phases[indexValue];\n                            var size = void 0;\n                            var rowIndex = (actualShape.header && actualShape.hasHeader) ? 1 : 0;\n                            if (phase && phase.header) {\n                                id = actualShape.phases[indexValue].header.id;\n                                oldObjects = oldShape.phases[indexValue].header;\n                                newObjects = phase.header;\n                                this.nodePropertyChange(this.nameTable[id], oldObjects, newObjects);\n                            }\n                            if (phase.offset) {\n                                if (indexValue === 0) {\n                                    size = phase.offset;\n                                }\n                                else {\n                                    var previousPhase = actualShape.phases[indexValue - 1];\n                                    size = phase.offset - previousPhase.offset;\n                                    if (size <= 0) {\n                                        size = phase.offset;\n                                    }\n                                }\n                                if (orientation_1) {\n                                    grid.updateColumnWidth(indexValue, size, true, padding);\n                                    updatePhaseMaxWidth(actualObject, this, grid.rows[rowIndex].cells[indexValue], indexValue);\n                                }\n                                else {\n                                    grid.updateRowHeight(rowIndex + indexValue, size, true, padding);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (shape.phaseSize !== undefined && actualShape.phases.length) {\n                    if (shape.phaseSize === 0 || oldShape.phaseSize === 0) {\n                        if (oldShape.phaseSize) {\n                            if (orientation_1) {\n                                grid.removeRow((actualShape.header && actualShape.hasHeader) ? 1 : 0);\n                                actualObject.height = actualObject.wrapper.height = grid.height;\n                            }\n                            else {\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[1].children = grid.rows[0].cells[0].children;\n                                    grid.rows[0].cells[1].columnSpan = grid.rows[0].cells[0].columnSpan - 1;\n                                    grid.rows[0].cells[0].children = [];\n                                }\n                                grid.removeColumn(0);\n                            }\n                        }\n                        else {\n                            if (orientation_1) {\n                                var rowDef = new RowDefinition();\n                                rowDef.height = shape.phaseSize;\n                                grid.addRow((actualShape.header && actualShape.hasHeader) ? 1 : 0, rowDef, true);\n                                actualObject.height = actualObject.wrapper.height += shape.phaseSize;\n                            }\n                            else {\n                                var colDef = new ColumnDefinition();\n                                colDef.width = shape.phaseSize;\n                                grid.addColumn(0, colDef, true);\n                                if (actualShape.header && actualShape.hasHeader) {\n                                    grid.rows[0].cells[0].children = grid.rows[0].cells[1].children;\n                                    grid.rows[0].cells[1].children = [];\n                                    grid.rows[0].cells[1].columnSpan = 1;\n                                    grid.rows[0].cells[1].minWidth = undefined;\n                                    grid.rows[0].cells[0].columnSpan = actualShape.lanes.length + 1;\n                                }\n                            }\n                            for (var k = 0; k < actualShape.phases.length; k++) {\n                                if (actualShape.phases[k].id === '') {\n                                    actualShape.phases[k].id = randomId();\n                                }\n                                phaseDefine(grid, this, actualObject, (actualShape.header && actualShape.hasHeader) ? 1 : 0, orientation_1, k);\n                            }\n                        }\n                    }\n                    else {\n                        if (orientation_1) {\n                            grid.updateRowHeight((actualShape.header && actualShape.hasHeader) ? 1 : 0, shape.phaseSize, false);\n                        }\n                        else {\n                            grid.updateColumnWidth(0, shape.phaseSize, false);\n                        }\n                    }\n                }\n                if (actualShape.header && actualShape.hasHeader && oldShape.header) {\n                    var id_1 = grid.rows[0].cells[0].children[0].id;\n                    var headerNode = this.nameTable[id_1];\n                    this.nodePropertyChange(headerNode, (oldShape.header), shape.header);\n                }\n                actualObject.height = actualObject.wrapper.height = grid.height;\n                actualObject.width = actualObject.wrapper.width = grid.width;\n            }\n            update = true;\n        }\n        return update;\n    };\n    /* tslint:disable */\n    /** @private */\n    Diagram.prototype.nodePropertyChange = function (actualObject, oldObject, node, isLayout, rotate) {\n        var existingBounds = actualObject.wrapper.outerBounds;\n        var existingInnerBounds = actualObject.wrapper.bounds;\n        var updateConnector = false;\n        var i;\n        var j;\n        var offsetX;\n        var offsetY;\n        var update;\n        var tx;\n        var ty;\n        if (node.width !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].width = node.width;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.width, true);\n            }\n            else {\n                actualObject.wrapper.width = node.width;\n            }\n        }\n        if (node.height !== undefined) {\n            if (!actualObject.children) {\n                actualObject.wrapper.children[0].height = node.height;\n                update = true;\n                updateConnector = true;\n            }\n            else if (!actualObject.container) {\n                this.scaleObject(actualObject, node.height, false);\n            }\n            else {\n                actualObject.wrapper.height = node.height;\n            }\n        }\n        update = this.nodePropertyChangeExtend(actualObject, oldObject, node, update);\n        if (node.constraints !== undefined && canShadow(oldObject) !== canShadow(node)) {\n            actualObject.wrapper.children[0].shadow = canShadow(actualObject) ? actualObject.shadow : null;\n        }\n        if (node.offsetX !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetX !== actualObject.wrapper.offsetX && oldObject.offsetX !== undefined) {\n                    var offsetX_1 = node.offsetX - oldObject.offsetX;\n                    actualObject.wrapper.offsetX = actualObject.wrapper.offsetX + offsetX_1;\n                    this.updateFlipOffset(actualObject.wrapper, offsetX_1, 0, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetX = node.offsetX;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.offsetY !== undefined) {\n            if (actualObject.wrapper.flip !== 'None') {\n                if (actualObject.offsetY !== actualObject.wrapper.offsetY && oldObject.offsetY !== undefined) {\n                    var offsetY_1 = node.offsetY - oldObject.offsetY;\n                    actualObject.wrapper.offsetY = actualObject.wrapper.offsetY + offsetY_1;\n                    this.updateFlipOffset(actualObject.wrapper, 0, offsetY_1, actualObject.wrapper.flip);\n                }\n            }\n            else {\n                actualObject.wrapper.offsetY = node.offsetY;\n            }\n            update = true;\n            updateConnector = true;\n        }\n        if (node.pivot !== undefined) {\n            actualObject.wrapper.pivot = node.pivot;\n            update = true;\n        }\n        if (node.minWidth !== undefined) {\n            actualObject.wrapper.minWidth = node.minWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.minHeight !== undefined) {\n            actualObject.wrapper.minHeight = node.minHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxWidth !== undefined) {\n            actualObject.wrapper.maxWidth = node.maxWidth;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.maxHeight !== undefined) {\n            actualObject.wrapper.maxHeight = node.maxHeight;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.flip !== undefined) {\n            actualObject.wrapper.flip = node.flip;\n            update = true;\n            updateConnector = true;\n            if (actualObject.wrapper.elementActions & ElementAction.ElementIsGroup) {\n                alignElement(actualObject.wrapper, actualObject.offsetX, actualObject.offsetY, this, node.flip);\n                if (actualObject && actualObject.children) {\n                    for (var _i = 0, _a = actualObject.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        var updateNode = this.nameTable[child];\n                        updateNode.wrapper.flip = node.flip;\n                        this.updatePorts(updateNode, node.flip);\n                    }\n                }\n            }\n            else {\n                actualObject.wrapper.children[0].flip = node.flip;\n                this.updatePorts(actualObject, node.flip);\n            }\n        }\n        if (node.rotateAngle !== undefined) {\n            if (actualObject.children && rotate) {\n                this.commandHandler.rotateObjects(actualObject, [actualObject], actualObject.rotateAngle - actualObject.wrapper.rotateAngle, { x: actualObject.offsetX, y: actualObject.offsetY }, false);\n            }\n            actualObject.wrapper.rotateAngle = node.rotateAngle;\n            update = true;\n            updateConnector = true;\n        }\n        if (node.backgroundColor !== undefined) {\n            actualObject.wrapper.style.fill = node.backgroundColor;\n        }\n        if (node.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (node.shape !== undefined && actualObject.shape.type !== 'Bpmn') {\n            update = true;\n            updateShape(node, actualObject, oldObject, this);\n            updateConnector = true;\n        }\n        if (node.margin) {\n            update = true;\n            this.updateMargin(actualObject, node);\n            updateConnector = true;\n        }\n        if (((node.shape !== undefined && node.shape.type === undefined) || node.width !== undefined\n            || node.height !== undefined || node.style !== undefined) && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            update = true;\n            updateConnector = true;\n            this.bpmnModule.updateBPMN(node, oldObject, actualObject, this);\n        }\n        if (actualObject.shape.type === 'UmlActivity' && actualObject.shape.shape === 'FinalNode') {\n            update = true;\n            updateConnector = true;\n            this.updateUMLActivity(node, oldObject, actualObject, this);\n        }\n        if ((actualObject.shape && actualObject.shape.type === 'UmlClassifier') || (actualObject.parentId &&\n            this.nameTable[actualObject.parentId] && this.nameTable[actualObject.parentId].shape.type === 'UmlClassifier')) {\n            update = true;\n            updateConnector = true;\n        }\n        if (node.ports !== undefined) {\n            for (var _b = 0, _c = Object.keys(node.ports); _b < _c.length; _b++) {\n                var key = _c[_b];\n                var index = Number(key);\n                update = true;\n                var changedObject = node.ports[key];\n                var actualPort = actualObject.ports[index];\n                this.updatePort(changedObject, actualPort, actualObject.wrapper);\n                updateConnector = true;\n            }\n        }\n        if (node.annotation !== undefined || node.annotations !== undefined || node.width !== undefined) {\n            for (var _d = 0, _e = Object.keys(node.annotations || actualObject.annotations); _d < _e.length; _d++) {\n                var key = _e[_d];\n                var index = Number(key);\n                update = true;\n                var changedObject = void 0;\n                if (node.annotation) {\n                    changedObject = node.annotation;\n                }\n                else {\n                    changedObject = node.annotations ? node.annotations[key] : actualObject.annotations;\n                }\n                var actualAnnotation = actualObject.annotations[index];\n                if (actualAnnotation) {\n                    var updateSize = actualObject.width ? true : false;\n                    this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject, updateSize);\n                }\n            }\n        }\n        if (node.expandIcon !== undefined || node.collapseIcon !== undefined || node.isExpanded !== undefined) {\n            this.updateIcon(actualObject);\n            this.updateDefaultLayoutIcons(actualObject);\n            if (node.isExpanded !== undefined) {\n                this.commandHandler.expandNode(actualObject, this);\n            }\n            update = true;\n        }\n        if (node.tooltip !== undefined) {\n            this.updateTooltip(actualObject, node);\n        }\n        if (update) {\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateTextAnnotationProp(actualObject, { offsetX: (oldObject.offsetX || actualObject.offsetX), offsetY: (oldObject.offsetY || actualObject.offsetY) }, this);\n            }\n            actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n            actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            this.updateObject(actualObject, oldObject, node);\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && !(this.diagramActions & DiagramAction.ToolAction)) {\n                updateHeaderMaxWidth(this, actualObject);\n                var grid = actualObject.wrapper.children[0];\n                var shape = actualObject.shape;\n                var column = grid.columnDefinitions().length;\n                if (shape.orientation === 'Horizontal') {\n                    var index = (shape.header && shape.hasHeader) ? 1 : 0;\n                    updatePhaseMaxWidth(actualObject, this, grid.rows[index].cells[column - 1], column - 1);\n                }\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.bounds.width, actualObject.wrapper.bounds.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n            }\n            if ((!(this.diagramActions & DiagramAction.ToolAction)) || (this.diagramActions & DiagramAction.UndoRedo)) {\n                if (this.checkSelectedItem(actualObject)) {\n                    this.updateSelector();\n                }\n            }\n            if (!isLayout) {\n                this.commandHandler.connectorSegmentChange(actualObject, existingInnerBounds, (node.rotateAngle !== undefined) ? true : false);\n                if (updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            else {\n                if (actualObject && actualObject.visible && actualObject.outEdges) {\n                    this.updateIconVisibility(actualObject, (actualObject.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (this.bpmnModule !== undefined) {\n                this.bpmnModule.updateDocks(actualObject, this);\n            }\n            this.updateGroupOffset(actualObject);\n            if (existingBounds.equals(existingBounds, actualObject.wrapper.outerBounds) === false) {\n                this.updateQuad(actualObject);\n            }\n            var objects = [];\n            objects = objects.concat(this.selectedItems.nodes, this.selectedItems.connectors);\n            if (objects.length === 0) {\n                if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n                    var parent_4 = this.nameTable[actualObject.parentId];\n                    parent_4.wrapper.measure(new Size(parent_4.wrapper.width, actualObject.wrapper.height));\n                    parent_4.wrapper.arrange(parent_4.wrapper.desiredSize);\n                    parent_4.offsetX = parent_4.wrapper.offsetX;\n                    parent_4.offsetY = parent_4.wrapper.offsetY;\n                }\n            }\n            if (existingInnerBounds.equals(existingInnerBounds, actualObject.wrapper.bounds) === false) {\n                this.updateGroupSize(actualObject);\n                if (actualObject.children) {\n                    this.updateGroupOffset(actualObject);\n                }\n            }\n            if (actualObject.shape.type === 'SwimLane' && !this.currentSymbol && (this.diagramActions & DiagramAction.Render)) {\n                var connectors = getConnectors(this, actualObject.wrapper.children[0], undefined, true);\n                updateConnectorsProperties(connectors, this);\n            }\n            if (!this.preventNodesUpdate) {\n                this.updateDiagramObject(actualObject);\n                if (!isLayout && updateConnector) {\n                    this.updateConnectorEdges(actualObject);\n                }\n            }\n            if (actualObject.status !== 'New' && this.diagramActions) {\n                actualObject.status = 'Update';\n            }\n        }\n    };\n    Diagram.prototype.updatePorts = function (actualObject, flip) {\n        if (actualObject && actualObject.ports.length > 0) {\n            for (var _i = 0, _a = Object.keys(actualObject.ports); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var actualPort = actualObject.ports[index];\n                var portWrapper = this.getWrapper(actualObject.wrapper, actualPort.id);\n                portWrapper = updatePortEdges(portWrapper, flip, actualPort);\n                portWrapper.relativeMode = 'Point';\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n        }\n    };\n    Diagram.prototype.updateFlipOffset = function (element, diffX, diffY, flip) {\n        if (element.hasChildren()) {\n            for (var _i = 0, _a = element.children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                if (flip === 'Horizontal' || flip === 'Both') {\n                    child.flipOffset.x = child.flipOffset.x + diffX;\n                }\n                if (flip === 'Vertical' || flip === 'Both') {\n                    child.flipOffset.y = child.flipOffset.y + diffY;\n                }\n                if (child instanceof Canvas || child instanceof Container) {\n                    this.updateFlipOffset(child, diffX, diffY, flip);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateUMLActivity = function (changedProp, oldObject, actualObject, diagram) {\n        var sizeChanged = changedProp.width !== undefined || changedProp.height !== undefined;\n        if (sizeChanged) {\n            var innerFinalNode = actualObject.wrapper.children[0].children[0];\n            innerFinalNode.width = changedProp.width;\n            innerFinalNode.height = changedProp.height;\n            var outerFinalNode = actualObject.wrapper.children[0].children[1];\n            outerFinalNode.width = changedProp.width / 1.5;\n            outerFinalNode.height = changedProp.height / 1.5;\n        }\n    };\n    Diagram.prototype.updateConnectorProperties = function (connector) {\n        if (this.preventConnectorsUpdate) {\n            var index = this.selectionConnectorsList.indexOf(connector);\n            if (index === -1) {\n                this.selectionConnectorsList.push(connector);\n            }\n        }\n        else {\n            var conn = {\n                sourcePoint: connector.sourcePoint, targetPoint: connector.targetPoint, sourceID: connector.sourceID,\n                targetID: connector.targetID, sourcePortID: connector.sourcePortID, targetPortID: connector.targetPortID\n            };\n            this.connectorPropertyChange(connector, {}, conn);\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateConnectorEdges = function (actualObject) {\n        if (actualObject.inEdges.length > 0) {\n            for (var j = 0; j < actualObject.inEdges.length; j++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.inEdges[j]]);\n            }\n        }\n        if (actualObject.outEdges.length > 0) {\n            for (var k = 0; k < actualObject.outEdges.length; k++) {\n                this.updateConnectorProperties(this.nameTable[actualObject.outEdges[k]]);\n            }\n        }\n        if (actualObject.parentId && this.nameTable[actualObject.parentId]) {\n            this.updateConnectorEdges(this.nameTable[actualObject.parentId]);\n        }\n    };\n    /* tslint:enable */\n    Diagram.prototype.connectorProprtyChangeExtend = function (actualObject, oldProp, newProp, updateSelector) {\n        if (newProp.type !== undefined && newProp.type !== oldProp.type) {\n            if (actualObject.segments.length > 0 && newProp.segments === undefined) {\n                actualObject.segments = [];\n            }\n        }\n        if ((newProp.shape !== undefined) && actualObject.shape !== undefined &&\n            actualObject.shape && actualObject.shape.type === 'Bpmn' && this.bpmnModule) {\n            this.bpmnModule.updateBPMNConnector(actualObject, oldProp, newProp, this);\n        }\n        if (actualObject.constraints !== undefined) {\n            this.updateThumbConstraints(this.selectedItems.connectors, this.selectedItems);\n            return updateSelector = true;\n        }\n        return updateSelector;\n    };\n    /** @private */\n    Diagram.prototype.connectorPropertyChange = function (actualObject, oldProp, newProp, disableBridging) {\n        var existingBounds = actualObject.wrapper.bounds;\n        var updateSelector = false;\n        var points = [];\n        updateSelector = this.connectorProprtyChangeExtend(actualObject, oldProp, newProp, updateSelector);\n        var inPort;\n        var outPort;\n        if (newProp.visible !== undefined) {\n            this.updateElementVisibility(actualObject.wrapper, actualObject, actualObject.visible);\n        }\n        if (newProp.sourcePoint !== undefined || newProp.targetPoint !== undefined\n            || newProp.sourceID !== undefined || newProp.targetID !== undefined || newProp.targetPadding !== undefined ||\n            newProp.sourcePortID !== undefined || newProp.targetPortID !== undefined || newProp.sourcePadding !== undefined ||\n            newProp.type !== undefined || newProp.segments !== undefined || newProp.flip !== undefined) {\n            if ((newProp.sourceID !== undefined && newProp.sourceID !== oldProp.sourceID) || newProp.sourcePortID) {\n                var sourceNode = this.nameTable[actualObject.sourceID];\n                outPort = this.findInOutConnectPorts(sourceNode, false);\n                if (!sourceNode || (canOutConnect(sourceNode) || canPortOutConnect(outPort))) {\n                    actualObject.sourceWrapper = sourceNode ? this.getEndNodeWrapper(sourceNode, actualObject, true) : undefined;\n                }\n                if (newProp.sourceID !== undefined && oldProp.sourceID !== undefined && oldProp.sourceID !== '') {\n                    var oldSource = this.nameTable[oldProp.sourceID];\n                    if (oldSource !== undefined && oldSource.outEdges && oldSource.outEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldSource.outEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.targetID !== undefined && newProp.targetID !== oldProp.targetID) {\n                var targetNode = this.nameTable[newProp.targetID];\n                inPort = this.findInOutConnectPorts(targetNode, true);\n                if (!targetNode || (canInConnect(targetNode) || canPortInConnect(inPort))) {\n                    actualObject.targetWrapper = targetNode ? this.getEndNodeWrapper(targetNode, actualObject, false) : undefined;\n                }\n                if (oldProp !== undefined && oldProp.targetID !== undefined && oldProp.targetID !== '') {\n                    var oldTarget = this.nameTable[oldProp.targetID];\n                    if (oldTarget !== undefined && oldTarget.inEdges && oldTarget.inEdges.indexOf(actualObject.id) !== -1) {\n                        removeItem(oldTarget.inEdges, actualObject.id);\n                    }\n                }\n                this.updateEdges(actualObject);\n            }\n            if (newProp.sourcePortID !== undefined && newProp.sourcePortID !== oldProp.sourcePortID) {\n                var source = void 0;\n                if (actualObject.sourceID && this.nameTable[actualObject.sourceID]) {\n                    source = this.nameTable[actualObject.sourceID].wrapper;\n                }\n                actualObject.sourcePortWrapper = source ? this.getWrapper(source, newProp.sourcePortID) : undefined;\n            }\n            if (newProp.targetPortID !== undefined && newProp.targetPortID !== oldProp.targetPortID) {\n                var target = void 0;\n                if (actualObject.targetID && this.nameTable[actualObject.targetID]) {\n                    target = this.nameTable[actualObject.targetID].wrapper;\n                }\n                actualObject.targetPortWrapper = target ?\n                    this.getWrapper(target, newProp.targetPortID) : undefined;\n            }\n            if (newProp.flip !== undefined) {\n                actualObject.flip = newProp.flip;\n                flipConnector(actualObject);\n            }\n            points = this.getPoints(actualObject);\n        } //Add prop change for zindex, alignments and margin\n        if (newProp.style !== undefined) {\n            updateStyle(newProp.style, actualObject.wrapper.children[0]);\n        }\n        if (points.length > 0 || newProp.sourceDecorator !== undefined || (newProp.targetDecorator !== undefined\n            && Object.keys(newProp.targetDecorator).indexOf('style') === -1) ||\n            newProp.cornerRadius !== undefined) {\n            updateConnector(actualObject, points.length > 0 ? points : actualObject.intermediatePoints);\n            if (newProp.type !== undefined) {\n                updateSelector = true;\n            }\n            if (points.length > 0) {\n                actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n                actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n                this.updateConnectorAnnotation(actualObject);\n                this.updateObject(actualObject, oldProp, newProp);\n            } //work-around to update intersected connector bridging\n        }\n        if ((newProp.sourcePoint || newProp.targetPoint || newProp.segments)\n            && this.diagramActions === DiagramAction.Render) {\n            updateSelector = true;\n        }\n        if (!disableBridging) {\n            this.updateBridging();\n        }\n        this.updateAnnotations(newProp, actualObject);\n        actualObject.wrapper.measure(new Size(actualObject.wrapper.width, actualObject.wrapper.height));\n        actualObject.wrapper.arrange(actualObject.wrapper.desiredSize);\n        if (existingBounds.equals(existingBounds, actualObject.wrapper.bounds) === false) {\n            this.updateQuad(actualObject);\n            this.updateGroupSize(actualObject);\n        }\n        if (updateSelector === true && this.checkSelectedItem(actualObject)\n            && (!(this.diagramActions & DiagramAction.ToolAction) || (this.diagramActions & DiagramAction.UndoRedo))) {\n            this.updateSelector();\n        }\n        if (!this.preventConnectorsUpdate) {\n            this.updateDiagramObject(actualObject);\n        }\n        if (this.diagramActions && actualObject.status !== 'New') {\n            actualObject.status = 'Update';\n        }\n    };\n    Diagram.prototype.findInOutConnectPorts = function (node, isInconnect) {\n        var port = {};\n        if (node) {\n            port = getInOutConnectPorts(node, isInconnect);\n        }\n        return port;\n    };\n    Diagram.prototype.getPoints = function (actualObject, points) {\n        var pts;\n        pts = actualObject.getConnectorPoints(actualObject.type, points, this.layout.type === 'ComplexHierarchicalTree' || this.layout.type === 'HierarchicalTree' ?\n            this.layout.orientation : undefined);\n        return pts;\n    };\n    /**\n     * update the  opacity  and visibility for the node  once the layout animation starts\n     */\n    /** @private */\n    Diagram.prototype.updateNodeProperty = function (element, visible, opacity) {\n        if (visible === undefined) {\n            this.updateElementVisibility(element, this.nameTable[element.id], visible);\n        }\n        else {\n            element.style.opacity = opacity;\n            for (var i = 0; i < element.children.length; i++) {\n                if (element.children[i] instanceof Container) {\n                    this.updateNodeProperty(element.children[i], undefined, opacity);\n                }\n                element.children[i].style.opacity = opacity;\n            }\n        }\n    };\n    /**\n     * checkSelected Item for Connector\n     * @private\n     */\n    Diagram.prototype.checkSelectedItem = function (actualObject) {\n        var selectorModel = this.selectedItems;\n        var isSelected = false;\n        var selItems = [];\n        selItems = selItems.concat(selectorModel.nodes, selectorModel.connectors);\n        if (selItems.length > 0) {\n            if (actualObject.id === selItems[selItems.length - 1].id) {\n                isSelected = true;\n            }\n        }\n        return isSelected;\n    };\n    /**\n     * Updates the visibility of the diagram container\n     * @private\n     */\n    Diagram.prototype.updateDiagramContainerVisibility = function (element, visible) {\n        if (element instanceof Container) {\n            for (var i = 0; i < element.children.length; i++) {\n                this.updateDiagramContainerVisibility(element.children[i], visible);\n            }\n        }\n        element.visible = visible;\n    };\n    /**\n     * Updates the visibility of the node/connector\n     * @private\n     */\n    Diagram.prototype.updateElementVisibility = function (element, obj, visible) {\n        if (visible !== undefined) {\n            element.visible = visible;\n            if (obj instanceof Node) {\n                //content\n                if (!obj.children) {\n                    element.children[0].visible = visible;\n                    this.updateDiagramContainerVisibility(element.children[0], visible);\n                    if (obj.shape.type === 'Bpmn' && this.bpmnModule) {\n                        this.bpmnModule.updateElementVisibility(obj, visible, this);\n                    }\n                }\n                else {\n                    for (var _i = 0, _a = obj.children; _i < _a.length; _i++) {\n                        var child = _a[_i];\n                        this.updateElementVisibility(this.nameTable[child].wrapper, this.nameTable[child], visible);\n                    }\n                }\n                //ports\n                if (obj.ports) {\n                    for (var _b = 0, _c = obj.ports; _b < _c.length; _b++) {\n                        var port = _c[_b];\n                        if (port.visibility & PortVisibility.Visible) {\n                            var wrapper = this.getWrapper(element, port.id);\n                            wrapper.visible = visible;\n                        }\n                    }\n                }\n                if (obj.annotations) {\n                    for (var _d = 0, _e = obj.annotations; _d < _e.length; _d++) {\n                        var annotation = _e[_d];\n                        var wrapper = this.getWrapper(element, annotation.id);\n                        wrapper.visible = visible;\n                    }\n                }\n            }\n            else {\n                //path and decorators\n                for (var i = 0; i < 3; i++) {\n                    element.children[i].visible = visible;\n                }\n            }\n            if (obj.annotations) {\n                //annotations\n                for (var _f = 0, _g = obj.annotations; _f < _g.length; _f++) {\n                    var annotation = _g[_f];\n                    var wrapper = this.getWrapper(element, annotation.id);\n                    wrapper.visible = visible;\n                }\n            }\n            if (obj.expandIcon || obj.collapseIcon) {\n                var wrapper = this.getWrapper(element, 'icon_content');\n                if (wrapper) {\n                    for (var i = 0; i < wrapper.children.length; i++) {\n                        wrapper.children[i].visible = visible;\n                    }\n                    wrapper.visible = visible;\n                }\n                if (obj && obj.visible && obj.outEdges) {\n                    this.updateIconVisibility(obj, (obj.outEdges.length === 0 ? false : true));\n                }\n            }\n            if (visible === false) {\n                this.unSelect(this.nameTable[element.id]);\n            }\n            if ((obj instanceof Node && !this.preventNodesUpdate) || (obj instanceof Connector && !this.preventConnectorsUpdate)) {\n                //Avoid calling updateDiagramObject method during rendering\n                if (this.diagramActions) {\n                    this.updateDiagramObject(this.nameTable[element.id]);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updateAnnotations = function (newProp, actualObject) {\n        if (newProp.annotations !== undefined) {\n            for (var _i = 0, _a = Object.keys(newProp.annotations); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var index = Number(key);\n                var changedObject = newProp.annotations[key];\n                var actualAnnotation = actualObject.annotations[index];\n                this.updateAnnotation(changedObject, actualAnnotation, actualObject.wrapper, actualObject);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateAnnotation = function (changedObject, actualAnnotation, nodes, actualObject, canUpdateSize) {\n        var annotationWrapper;\n        var isMeasure = false;\n        annotationWrapper = this.getWrapper(nodes, actualAnnotation.id);\n        if (annotationWrapper !== undefined) {\n            if (changedObject.width !== undefined && changedObject.height !== undefined) {\n                annotationWrapper.width = changedObject.width;\n                annotationWrapper.height = changedObject.height;\n                isMeasure = true;\n            }\n            if (changedObject.rotateAngle !== undefined) {\n                annotationWrapper.rotateAngle = changedObject.rotateAngle;\n            }\n            if (canUpdateSize && !(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            if (actualAnnotation instanceof PathAnnotation && changedObject.segmentAngle !== undefined) {\n                annotationWrapper.rotateAngle = actualAnnotation.rotateAngle;\n            }\n            if (actualAnnotation instanceof ShapeAnnotation &&\n                changedObject.offset !== undefined) {\n                var offset = changedObject.offset;\n                isMeasure = true;\n                var offsetX = offset.x !== undefined ? offset.x :\n                    actualAnnotation.offset.x;\n                var offsetY = offset.y !== undefined ? offset.y :\n                    actualAnnotation.offset.y;\n                annotationWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                annotationWrapper.relativeMode = 'Point';\n            }\n            else if (actualAnnotation instanceof PathAnnotation &&\n                (changedObject.offset !== undefined ||\n                    changedObject.segmentAngle !== undefined)) {\n                actualObject.updateAnnotation(actualAnnotation, actualObject.intermediatePoints, actualObject.wrapper.bounds, annotationWrapper);\n            }\n            if ((actualAnnotation instanceof PathAnnotation) && changedObject.displacement) {\n                if (changedObject.displacement.x !== undefined ||\n                    changedObject.displacement.y !== undefined) {\n                    isMeasure = true;\n                }\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    annotationWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    annotationWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    annotationWrapper.margin.left = changedObject.margin.left;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    annotationWrapper.margin.right = changedObject.margin.right;\n                }\n            }\n            if (isMeasure || canUpdateSize) {\n                annotationWrapper.width = (actualAnnotation.width || actualObject.width);\n                if (actualAnnotation.template) {\n                    annotationWrapper.width = (annotationWrapper.width || annotationWrapper.actualSize.width);\n                    annotationWrapper.height = (actualAnnotation.height || actualObject.height ||\n                        annotationWrapper.actualSize.height);\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                annotationWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                annotationWrapper.verticalAlignment = changedObject.verticalAlignment;\n                isMeasure = true;\n            }\n            if (changedObject.visibility !== undefined) {\n                annotationWrapper.visible = (nodes.visible && changedObject.visibility) ? true : false;\n            }\n            if (changedObject.constraints !== undefined) {\n                var updateSelector = false;\n                if ((annotationWrapper.constraints & AnnotationConstraints.Select) &&\n                    (!(changedObject.constraints & AnnotationConstraints.Select)) &&\n                    isSelected(this, actualObject, false, annotationWrapper)) {\n                    updateSelector = true;\n                }\n                annotationWrapper.constraints = changedObject.constraints;\n                if (updateSelector) {\n                    this.clearSelection();\n                }\n            }\n            if (changedObject.style !== undefined) {\n                updateStyle(changedObject.style, annotationWrapper);\n            }\n            if (changedObject.hyperlink !== undefined) {\n                updateHyperlink(changedObject.hyperlink, annotationWrapper, actualAnnotation);\n            }\n            this.updateAnnotationContent(changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes);\n            if (isMeasure === true) {\n                annotationWrapper.measure(new Size(annotationWrapper.width, annotationWrapper.height));\n                annotationWrapper.arrange(annotationWrapper.desiredSize);\n            }\n            if (!(annotationWrapper instanceof DiagramHtmlElement)) {\n                annotationWrapper.refreshTextElement();\n            }\n            // this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    Diagram.prototype.updateAnnotationContent = function (changedObject, isMeasure, annotationWrapper, actualObject, actualAnnotation, nodes) {\n        if (changedObject.content !== undefined) {\n            if (annotationWrapper) {\n                isMeasure = true;\n                if ((actualObject.shape.type === 'UmlActivity' &&\n                    actualObject.shape.shape === 'StructuredNode')) {\n                    annotationWrapper.content = '<<' + changedObject.content + '>>';\n                }\n                else {\n                    annotationWrapper.content = changedObject.content;\n                }\n            }\n            if (annotationWrapper instanceof DiagramHtmlElement) {\n                this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n            }\n        }\n        if (changedObject.template !== undefined) {\n            annotationWrapper.content = changedObject.template;\n            this.updateAnnotationWrapper(annotationWrapper, actualObject, actualAnnotation, nodes);\n        }\n    };\n    Diagram.prototype.updateAnnotationWrapper = function (annotationWrapper, actualObject, actualAnnotation, nodes) {\n        for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n            var elementId = _a[_i];\n            removeElement(annotationWrapper.id + '_groupElement', elementId);\n            removeElement(annotationWrapper.id + '_html_element', elementId);\n        }\n        if (actualObject instanceof Node) {\n            annotationWrapper =\n                actualObject.initAnnotationWrapper(actualAnnotation, this.element.id);\n        }\n        else if (actualObject instanceof Connector) {\n            var canvas = actualObject.wrapper;\n            var segment = canvas.children[0];\n            var bounds = new Rect(segment.offsetX - segment.width / 2, segment.offsetY - segment.height / 2, segment.width, segment.height);\n            annotationWrapper =\n                actualObject.getAnnotationElement(actualObject.annotations[actualObject.annotations.length - 1], actualObject.intermediatePoints, bounds, this.getDescription, this.element.id);\n        }\n        for (var i = 0; i < nodes.children.length; i++) {\n            if (annotationWrapper.id === nodes.children[i].id) {\n                nodes.children.splice(i, 1, annotationWrapper);\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.updatePort = function (changedObject, actualPort, nodes) {\n        var portWrapper;\n        var isMeasure = false;\n        portWrapper = this.getWrapper(nodes, actualPort.id);\n        if (portWrapper !== undefined) {\n            if (changedObject.offset !== undefined) {\n                isMeasure = true;\n                var offsetX = changedObject.offset.x !== undefined ? changedObject.offset.x :\n                    actualPort.offset.x;\n                var offsetY = changedObject.offset.y !== undefined ? changedObject.offset.y :\n                    actualPort.offset.y;\n                portWrapper.setOffsetWithRespectToBounds(offsetX, offsetY, 'Fraction');\n                portWrapper.relativeMode = 'Point';\n            }\n            if (changedObject.width !== undefined) {\n                isMeasure = true;\n                portWrapper.width = changedObject.width;\n            }\n            if (changedObject.height !== undefined) {\n                isMeasure = true;\n                portWrapper.height = changedObject.height;\n            }\n            if (changedObject.visibility !== undefined) {\n                portWrapper.visible = (nodes.visible && checkPortRestriction(actualPort, PortVisibility.Visible)) ? true : false;\n            }\n            if (changedObject.margin !== undefined) {\n                isMeasure = true;\n                if (changedObject.margin.bottom !== undefined) {\n                    portWrapper.margin.bottom = changedObject.margin.bottom;\n                }\n                if (changedObject.margin.top !== undefined) {\n                    portWrapper.margin.top = changedObject.margin.top;\n                }\n                if (changedObject.margin.right !== undefined) {\n                    portWrapper.margin.right = changedObject.margin.right;\n                }\n                if (changedObject.margin.left !== undefined) {\n                    portWrapper.margin.left = changedObject.margin.left;\n                }\n            }\n            if (changedObject.horizontalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.horizontalAlignment = changedObject.horizontalAlignment;\n            }\n            if (changedObject.verticalAlignment !== undefined) {\n                isMeasure = true;\n                portWrapper.verticalAlignment = changedObject.verticalAlignment;\n            }\n            if (changedObject.style !== undefined) {\n                if (changedObject.style.fill !== undefined) {\n                    portWrapper.style.fill = changedObject.style.fill;\n                }\n                if (changedObject.style.opacity !== undefined) {\n                    portWrapper.style.opacity = changedObject.style.opacity;\n                }\n                if (changedObject.style.strokeColor !== undefined) {\n                    portWrapper.style.strokeColor = changedObject.style.strokeColor;\n                }\n                if (changedObject.style.strokeWidth !== undefined) {\n                    portWrapper.style.strokeWidth = changedObject.style.strokeWidth;\n                }\n                if (changedObject.style.strokeDashArray !== undefined) {\n                    portWrapper.style.strokeDashArray = changedObject.style.strokeDashArray;\n                }\n            }\n            if (changedObject.shape !== undefined) {\n                if (portWrapper) {\n                    var pathdata = getPortShape(changedObject.shape);\n                    portWrapper.data = pathdata;\n                }\n            }\n            if (changedObject.pathData !== undefined) {\n                portWrapper.data = String(changedObject.pathData);\n                isMeasure = true;\n            }\n            if (isMeasure === true) {\n                portWrapper.measure(new Size(portWrapper.width, portWrapper.height));\n                portWrapper.arrange(portWrapper.desiredSize);\n            }\n            //this.refresh(); this.refreshDiagramLayer();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateIcon = function (actualObject) {\n        var iconContainer = this.getWrapper(actualObject.wrapper, 'icon_content');\n        var diagramId = (this.diagramActions & DiagramAction.Render) ? this.element.id : undefined;\n        if (iconContainer) {\n            if (this.mode === 'SVG') {\n                var icon = getDiagramElement(actualObject.wrapper.id + '_icon_content', diagramId);\n                if (icon) {\n                    var iconRect = getDiagramElement(icon.id + '_rect', diagramId);\n                    var iconShape = getDiagramElement(icon.id + '_shape', diagramId);\n                    var nativeContent = getDiagramElement(iconShape.id + '_native_element', diagramId);\n                    if (nativeContent) {\n                        nativeContent.parentNode.removeChild(nativeContent);\n                    }\n                    iconShape.parentNode.removeChild(iconShape);\n                    iconRect.parentNode.removeChild(iconRect);\n                    icon.parentNode.removeChild(icon);\n                }\n            }\n            var index = actualObject.wrapper.children.indexOf(iconContainer);\n            actualObject.wrapper.children.splice(index, 1);\n        }\n        var portContainer = this.getPortContainer(actualObject);\n        actualObject.initIcons(this.getDescription, this.layout, portContainer, this.element.id);\n    };\n    Diagram.prototype.getPortContainer = function (actualObject) {\n        if (actualObject.children) {\n            for (var i = 0; i < actualObject.wrapper.children.length; i++) {\n                if (actualObject.wrapper.children[i].id === actualObject.id + 'group_container') {\n                    return actualObject.wrapper.children[i];\n                }\n            }\n        }\n        return actualObject.wrapper;\n    };\n    Diagram.prototype.updateTooltip = function (actualObject, node) {\n        if (node.tooltip.content !== undefined) {\n            actualObject.tooltip.content = node.tooltip.content;\n        }\n        if (node.tooltip.position !== undefined) {\n            actualObject.tooltip.position = node.tooltip.position;\n        }\n        if (node.tooltip.height !== undefined) {\n            actualObject.tooltip.height = node.tooltip.height;\n        }\n        if (node.tooltip.width !== undefined) {\n            actualObject.tooltip.width = node.tooltip.width;\n        }\n        if (node.tooltip.showTipPointer !== undefined) {\n            actualObject.tooltip.showTipPointer = node.tooltip.showTipPointer;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateQuad = function (obj) {\n        var modified = this.spatialSearch.updateQuad(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.removeFromAQuad = function (obj) {\n        if (obj.children) {\n            var child = void 0;\n            var children = obj.children;\n            for (var i = 0; i < children.length; i++) {\n                child = this.nameTable[children[i]];\n                if (child) {\n                    this.removeFromAQuad(child);\n                }\n            }\n        }\n        this.spatialSearch.removeFromAQuad(obj.wrapper);\n        var modified = this.spatialSearch.updateBounds(obj.wrapper);\n        if (modified && !this.preventUpdate) {\n            this.updatePage();\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateGroupSize = function (node) {\n        var tempNode;\n        if (node.parentId) {\n            tempNode = this.nameTable[node.parentId];\n            if (tempNode) {\n                if (tempNode.parentId) {\n                    this.updateGroupSize(tempNode);\n                }\n                else {\n                    tempNode.wrapper.measure(new Size());\n                    tempNode.wrapper.arrange(tempNode.wrapper.desiredSize);\n                    this.updateGroupOffset(tempNode);\n                    this.updateDiagramObject(tempNode);\n                }\n            }\n        }\n    };\n    Diagram.prototype.updatePage = function () {\n        if (this.diagramActions & DiagramAction.Render) {\n            this.scroller.updateScrollOffsets();\n            this.scroller.setSize();\n            //updating overview\n            for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n                var temp = _a[_i];\n                var view = this.views[temp];\n                if (!(view instanceof Diagram)) {\n                    view.updateView(view);\n                }\n            }\n        }\n    };\n    /** @private */\n    Diagram.prototype.protectPropertyChange = function (enable) {\n        this.isProtectedOnChange = enable;\n    };\n    /** @private */\n    Diagram.prototype.updateShadow = function (nodeShadow, changedShadow) {\n        if (changedShadow.angle !== undefined) {\n            nodeShadow.angle = changedShadow.angle;\n        }\n        if (changedShadow.color !== undefined) {\n            nodeShadow.color = changedShadow.color;\n        }\n        if (changedShadow.distance !== undefined) {\n            nodeShadow.distance = changedShadow.distance;\n        }\n        if (changedShadow.opacity !== undefined) {\n            nodeShadow.opacity = changedShadow.opacity;\n        }\n    };\n    /** @private */\n    Diagram.prototype.updateMargin = function (node, changes) {\n        if (changes.margin.top !== undefined) {\n            node.margin.top = changes.margin.top;\n        }\n        if (changes.margin.bottom !== undefined) {\n            node.margin.bottom = changes.margin.bottom;\n        }\n        if (changes.margin.left !== undefined) {\n            node.margin.left = changes.margin.left;\n        }\n        if (changes.margin.right !== undefined) {\n            node.margin.right = changes.margin.right;\n        }\n    };\n    //property changes - end region\n    /* tslint:disable */\n    Diagram.prototype.initDroppables = function () {\n        var _this = this;\n        // initiates droppable event\n        var childTable = {};\n        var entryTable = {};\n        var header;\n        var lane;\n        this.droppable = new Droppable(this.element);\n        // this.droppable.accept = '.e-dragclone';\n        // tslint:disable-next-line:no-any\n        this.droppable.over = function (args) {\n            if (!_this.currentSymbol) {\n                if (args.dragData) {\n                    var newObj = void 0;\n                    var isHorizontal = void 0;\n                    document.getElementById(_this.element.id + 'content').focus();\n                    var position = _this.eventHandler.getMousePosition(args.event);\n                    var clonedObject = void 0;\n                    var selectedSymbol = args.dragData.helper;\n                    var paletteId = selectedSymbol.getAttribute('paletteId');\n                    if (paletteId) {\n                        var sourceElement = document.getElementById(paletteId).ej2_instances[0];\n                        var source = 'sourceElement';\n                        _this.droppable[source] = sourceElement;\n                        var selectedSymbols = 'selectedSymbols';\n                        var childtable = 'childTable';\n                        if (sourceElement) {\n                            var obj = sourceElement[selectedSymbols];\n                            clonedObject = cloneObject(sourceElement[selectedSymbols]);\n                            childTable = sourceElement[childtable];\n                            var wrapper = obj.wrapper.children[0].children[0];\n                            if (sourceElement[selectedSymbols] instanceof Node) {\n                                clonedObject.offsetX = position.x + 5 + (clonedObject.width || wrapper.actualSize.width) / 2;\n                                clonedObject.offsetY = position.y + (clonedObject.height || wrapper.actualSize.height) / 2;\n                                var newNode = new Node(_this, 'nodes', clonedObject, true);\n                                if (newNode.shape.type === 'Bpmn' && newNode.shape.activity.subProcess.processes\n                                    && newNode.shape.activity.subProcess.processes.length) {\n                                    newNode.shape.activity.subProcess.processes = [];\n                                }\n                                if (newNode.shape.type === 'SwimLane') {\n                                    _this.diagramActions |= DiagramAction.PreventHistory;\n                                    if (newNode.shape.isLane) {\n                                        newNode.children = [];\n                                        header = {\n                                            id: 'header' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            header.width = newNode.shape.lanes[0].header.width;\n                                            header.height = newNode.shape.lanes[0].height;\n                                        }\n                                        else {\n                                            header.width = newNode.shape.lanes[0].width;\n                                            header.height = newNode.shape.lanes[0].header.height;\n                                        }\n                                        header.style = newNode.shape.lanes[0].header.style;\n                                        header.offsetX = position.x + 5 + header.width / 2;\n                                        header.offsetY = position.y + header.height / 2;\n                                        header = _this.add(header);\n                                        lane = {\n                                            id: 'body' + randomId(),\n                                        };\n                                        if (newNode.shape.orientation === 'Horizontal') {\n                                            lane.width = newNode.shape.lanes[0].width - header.width;\n                                            lane.height = newNode.shape.lanes[0].height;\n                                            lane.offsetX = position.x + 5 + (newNode.shape.lanes[0].header.width + (lane.width / 2));\n                                            lane.offsetY = position.y + lane.height / 2;\n                                        }\n                                        else {\n                                            lane.width = newNode.shape.lanes[0].width;\n                                            lane.height = newNode.shape.lanes[0].height - header.height;\n                                            lane.offsetX = position.x + 5 + lane.width / 2;\n                                            lane.offsetY = position.y + (newNode.shape.lanes[0].header.height + (lane.height / 2));\n                                        }\n                                        lane.style = newNode.shape.lanes[0].style;\n                                        lane = _this.add(lane);\n                                        var group = {\n                                            id: 'group' + randomId(),\n                                            children: [header.id, lane.id],\n                                        };\n                                        group.shape = newNode.shape;\n                                        group.width = newNode.shape.lanes[0].width;\n                                        group.height = newNode.shape.lanes[0].height;\n                                        newNode = _this.add(group);\n                                    }\n                                    _this.diagramActions &= ~DiagramAction.PreventHistory;\n                                }\n                                if (newNode.shape.isPhase) {\n                                    isHorizontal = (newNode.shape.orientation === 'Horizontal') ? true : false;\n                                    if (isHorizontal) {\n                                        newNode.offsetX = position.x + 5 + (newNode.width || wrapper.actualSize.width) / 2;\n                                        newNode.offsetY = position.y;\n                                        newNode.shape.data =\n                                            'M' + 20 + ',' + (newNode.height / 2) + ' L' + (newNode.width - 20) + ',' +\n                                                (newNode.height / 2) + 'z';\n                                        newNode.height = 1;\n                                    }\n                                    else {\n                                        newNode.offsetX = position.x + 5;\n                                        newNode.offsetY = position.y + (newNode.height || wrapper.actualSize.height) / 2;\n                                        newNode.shape.data =\n                                            'M' + (newNode.width / 2) + ',' + 20 + ' L' + (newNode.width / 2) +\n                                                ',' + (newNode.height - 20) + 'z';\n                                        newNode.width = 1;\n                                    }\n                                }\n                                newObj = newNode;\n                                if (clonedObject.children) {\n                                    var parentNode = clonedObject;\n                                    var tempTable = {};\n                                    entryTable = _this.getChildren(parentNode, tempTable, childTable);\n                                    arrangeChild(parentNode, -parentNode.offsetX, -parentNode.offsetY, entryTable, true, _this);\n                                }\n                            }\n                            else if (sourceElement[selectedSymbols] instanceof Connector) {\n                                newObj = new Connector(_this, 'connectors', clonedObject, true);\n                                var bounds = Rect.toBounds([newObj.sourcePoint, newObj.targetPoint]);\n                                var tx = position.x - bounds.left;\n                                var ty = position.y - bounds.top;\n                                newObj.sourcePoint.x += tx;\n                                newObj.sourcePoint.y += ty;\n                                newObj.targetPoint.x += tx;\n                                newObj.targetPoint.y += ty;\n                            }\n                            if (!newObj.shape.isLane) {\n                                newObj.id += randomId();\n                            }\n                            var arg = {\n                                source: sourceElement, element: newObj, cancel: false,\n                                diagram: _this\n                            };\n                            _this['enterObject'] = newObj;\n                            _this['enterTable'] = entryTable;\n                            _this.triggerEvent(DiagramEvent.dragEnter, arg);\n                            if ((newObj instanceof Node) && newObj.shape.type === 'SwimLane' && newObj.shape.isLane) {\n                                var swimLaneObj = arg.element;\n                                var laneObj = swimLaneObj.shape.lanes[0];\n                                var child1 = void 0;\n                                var child2 = void 0;\n                                isHorizontal = (swimLaneObj.shape.orientation === 'Horizontal') ? true : false;\n                                child1 = _this.nameTable[newObj.children[0]];\n                                child2 = _this.nameTable[newObj.children[1]];\n                                if (isHorizontal) {\n                                    header.width = laneObj.header.width;\n                                    header.height = laneObj.height;\n                                    lane.width = laneObj.width - header.width;\n                                    lane.height = laneObj.height;\n                                    lane.offsetX = position.x + 5 + (laneObj.header.width + (child2.width / 2));\n                                    lane.offsetY = position.y + child2.height / 2;\n                                }\n                                else {\n                                    header.width = laneObj.width;\n                                    header.height = laneObj.header.height;\n                                    lane.width = laneObj.width;\n                                    lane.height = laneObj.height - header.height;\n                                    lane.offsetX = position.x + 5 + child2.width / 2;\n                                    lane.offsetY = position.y + (laneObj.header.height + (child2.height / 2));\n                                }\n                                header.offsetX = position.x + 5 + child1.width / 2;\n                                header.offsetY = position.y + child1.height / 2;\n                                newObj.width = laneObj.width;\n                                newObj.height = laneObj.height;\n                            }\n                            if ((newObj instanceof Node) && newObj.shape.isPhase) {\n                                if (isHorizontal) {\n                                    newObj.height = 1;\n                                }\n                                else {\n                                    newObj.width = 1;\n                                }\n                            }\n                            if (!_this.activeLayer.lock && !arg.cancel) {\n                                _this.preventUpdate = true;\n                                if (newObj.children) {\n                                    _this.findChild(newObj, entryTable);\n                                }\n                                _this.preventUpdate = true;\n                                _this.initObject(newObj, undefined, undefined, true);\n                                _this.currentSymbol = newObj;\n                                if (_this.mode !== 'SVG') {\n                                    _this.refreshDiagramLayer();\n                                }\n                                _this.commandHandler.select(newObj);\n                                _this.eventHandler.mouseDown(args.event);\n                                _this.eventHandler.mouseMove(args.event, args);\n                                _this.preventUpdate = false;\n                                _this.updatePage();\n                                selectedSymbol.style.opacity = '0';\n                            }\n                            delete _this['enterObject'];\n                            delete _this['enterTable'];\n                        }\n                        _this.droppable[selectedSymbols] = selectedSymbol;\n                    }\n                }\n            }\n            else {\n                if (args.event.touches && args.event.touches.length) {\n                    _this.eventHandler.mouseMove(args.event, args.event.touches);\n                }\n            }\n        };\n        // tslint:disable-next-line:no-any\n        this.droppable.drop = function (args) {\n            var source = 'sourceElement';\n            var value;\n            if (_this.currentSymbol) {\n                var isPhase = false;\n                var orientation_2;\n                var isConnector = void 0;\n                isConnector = (_this.currentSymbol instanceof Connector) ? true : false;\n                if (args.event.touches) {\n                    _this.eventHandler.mouseUp(args.event);\n                }\n                var newObj = void 0;\n                var node = void 0;\n                var conn = void 0;\n                var arg = {\n                    source: _this.droppable[source],\n                    element: _this.currentSymbol,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: { x: _this.currentSymbol.wrapper.offsetX, y: _this.currentSymbol.wrapper.offsetY }\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n                clonedObject = cloneObject(_this.currentSymbol);\n                clonedObject['hasTarget'] = _this.currentSymbol['hasTarget'];\n                _this.removeFromAQuad(_this.currentSymbol);\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                _this.removeElements(_this.currentSymbol);\n                if (_this.currentSymbol.shape.isLane ||\n                    _this.currentSymbol.shape.isPhase) {\n                    _this.removeChildInNodes(_this.currentSymbol);\n                }\n                if (arg.cancel) {\n                    removeChildNodes(_this.currentSymbol, _this);\n                }\n                if (_this.currentSymbol.shape.isPhase) {\n                    isPhase = true;\n                    orientation_2 = _this.currentSymbol.shape.orientation;\n                }\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.currentSymbol = null;\n                _this.protectPropertyChange(true);\n                if (!arg.cancel) {\n                    _this.startGroupAction();\n                    if (clonedObject && (clonedObject.shape.isLane || isPhase)) {\n                        if (isPhase) {\n                            clonedObject.shape.isPhase = isPhase;\n                            clonedObject.shape.orientation = orientation_2;\n                        }\n                        _this.eventHandler.addSwimLaneObject(clonedObject);\n                    }\n                    if (clonedObject.shape.type === 'Bpmn' && clonedObject.shape.annotation\n                        && clonedObject['hasTarget']) {\n                        var nodeId = clonedObject.shape.annotation.nodeId;\n                        clonedObject.shape.annotation.id = clonedObject.id;\n                        _this.addTextAnnotation(clonedObject.shape.annotation, _this.nameTable[nodeId]);\n                        clonedObject.nodeId = '';\n                    }\n                    if (!clonedObject.shape.isLane && !isPhase) {\n                        if (clonedObject.children) {\n                            _this.addChildNodes(clonedObject);\n                        }\n                        if (arg.target && (arg.target instanceof Node) && !isConnector && checkParentAsContainer(_this, arg.target)\n                            && canAllowDrop(arg.target)) {\n                            addChildToContainer(_this, arg.target, clonedObject);\n                        }\n                        else {\n                            value = _this.add(clonedObject, true);\n                        }\n                        if ((clonedObject || value) && canSingleSelect(_this)) {\n                            _this.select([_this.nameTable[clonedObject[id]]]);\n                        }\n                    }\n                }\n                _this.protectPropertyChange(false);\n                newObj = _this.nameTable[clonedObject[id]];\n                if (clonedObject['hasTarget']) {\n                    clonedObject.nodeId = clonedObject['hasTarget'];\n                    _this.remove(clonedObject);\n                }\n                if (_this.bpmnModule && newObj instanceof Node && clonedObject.processId) {\n                    newObj.processId = clonedObject.processId;\n                    _this.bpmnModule.dropBPMNchild(_this.nameTable[newObj.processId], newObj, _this);\n                }\n                _this.endGroupAction();\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                delete _this.droppable[source];\n                var selectedSymbols = 'selectedSymbols';\n                remove(_this.droppable[selectedSymbols]);\n            }\n            else {\n                var arg = {\n                    source: args.droppedElement,\n                    element: undefined,\n                    target: _this.eventHandler['hoverNode'] || _this.eventHandler['lastObjectUnderMouse'] || _this, cancel: false,\n                    position: undefined\n                };\n                _this.triggerEvent(DiagramEvent.drop, arg);\n                var clonedObject = void 0;\n                var id = 'id';\n            }\n        };\n        this.droppable.out = function (args) {\n            if (_this.currentSymbol && !_this.eventHandler.focus) {\n                _this.unSelect(_this.currentSymbol);\n                _this.removeFromAQuad(_this.currentSymbol);\n                if (_this.mode !== 'SVG' && _this.currentSymbol.shape.type === 'Native') {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.removeObjectsFromLayer(_this.nameTable[_this.currentSymbol.id]);\n                delete _this.nameTable[_this.currentSymbol.id];\n                _this.triggerEvent(DiagramEvent.dragLeave, { element: _this.currentSymbol, diagram: _this });\n                if (_this.mode !== 'SVG') {\n                    _this.refreshDiagramLayer();\n                }\n                else {\n                    _this.removeElements(_this.currentSymbol);\n                }\n                _this.currentSymbol = null;\n                var selectedSymbols = 'selectedSymbols';\n                _this.droppable[selectedSymbols].style.opacity = '1';\n                var source = 'sourceElement';\n                delete _this.droppable[source];\n                _this.diagramRenderer.rendererActions =\n                    _this.removeConstraints(_this.diagramRenderer.rendererActions, RendererAction.DrawSelectorBorder);\n                if (_this.previousSelectedObject) {\n                    _this.select(_this.previousSelectedObject, _this.previousSelectedObject.length > 1 ? true : false);\n                }\n                _this.previousSelectedObject = null;\n            }\n        };\n    };\n    Diagram.prototype.removeChildInNodes = function (node) {\n        if (node) {\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    this.removeChildInNodes(this.nameTable[node.children[i]]);\n                }\n            }\n            var index = this.nodes.indexOf(node);\n            if (index !== -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    };\n    Diagram.prototype.findChild = function (node, childTable) {\n        var group;\n        var newNode;\n        for (var i = 0; i < node.children.length; i++) {\n            group = childTable[node.children[i]];\n            if (group) {\n                if (group.children) {\n                    this.findChild(group, childTable);\n                }\n                group.id = group.id + randomId();\n                childTable[group.id] = group;\n                node.children[i] = group.id;\n                newNode = new Node(this, 'nodes', group, true);\n                this.initObject(newNode, undefined, undefined, true);\n                //this.add(group, true);\n            }\n        }\n    };\n    Diagram.prototype.getChildren = function (node, entryTable, childTable) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (childTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    entryTable = this.getChildren(temp, entryTable, childTable);\n                }\n                entryTable[temp.id] = cloneObject(temp);\n            }\n        }\n        return entryTable;\n    };\n    Diagram.prototype.addChildNodes = function (node) {\n        var temp;\n        for (var i = 0; i < node.children.length; i++) {\n            temp = (this.nameTable[node.children[i]]);\n            if (temp) {\n                if (temp.children) {\n                    this.addChildNodes(temp);\n                }\n                this.add(temp, true);\n            }\n        }\n    };\n    /**\n     * Inserts newly added element into the database\n     */\n    Diagram.prototype.insertData = function (node) {\n        return this.crudOperation(node, 'create', this.getNewUpdateNodes('New'));\n    };\n    /**\n     * updates the user defined element properties into the existing database\n     */\n    Diagram.prototype.updateData = function (node) {\n        return this.crudOperation(node, 'update', this.getNewUpdateNodes('Update'));\n    };\n    /**\n     * Removes the user deleted element from the existing database\n     */\n    Diagram.prototype.removeData = function (node) {\n        return this.crudOperation(node, 'destroy', this.getDeletedNodes());\n    };\n    Diagram.prototype.crudOperation = function (node, crud, getNodesCollection) {\n        if (node) {\n            var data = this.parameterMap(node, node instanceof Connector ? false : true);\n            if (data) {\n                var url = node instanceof Connector ? this.dataSourceSettings.connectionDataSource.crudAction[crud] : this.dataSourceSettings.crudAction[crud];\n                this.raiseAjaxPost(JSON.stringify(data), url);\n            }\n            return data;\n        }\n        else {\n            var newObjects = getNodesCollection;\n            this.processCrudCollection(newObjects, this.dataSourceSettings.crudAction[crud], this.dataSourceSettings.connectionDataSource.crudAction[crud]);\n            return newObjects;\n        }\n    };\n    Diagram.prototype.processCrudCollection = function (newObjects, nodeCrudAction, connectorCrudAction) {\n        if (newObjects.nodes) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.nodes.length; i++) {\n                data.push(this.parameterMap(newObjects.nodes[i], true));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), nodeCrudAction);\n        }\n        if (newObjects.connectors) {\n            var data = [];\n            var i = void 0;\n            for (i = 0; i < newObjects.connectors.length; i++) {\n                data.push(this.parameterMap(newObjects.connectors[i], false));\n            }\n            if (data && data.length > 0)\n                this.raiseAjaxPost(JSON.stringify(data), connectorCrudAction);\n        }\n    };\n    Diagram.prototype.parameterMap = function (object, isNode) {\n        var mappingObj = {};\n        var i;\n        var fields = isNode ? this.dataSourceSettings : this.dataSourceSettings.connectionDataSource;\n        if (fields.id)\n            mappingObj[fields.id] = object.id;\n        if (fields.sourcePointX && fields.sourcePointY) {\n            mappingObj[fields.sourcePointX] = object.sourcePoint.x;\n            mappingObj[fields.sourcePointY] = object.sourcePoint.y;\n        }\n        if (fields.targetPointX && fields.targetPointY) {\n            mappingObj[fields.targetPointX] = object.targetPoint.x;\n            mappingObj[fields.targetPointY] = object.targetPoint.y;\n        }\n        if (fields.sourceID)\n            mappingObj[fields.sourceID] = object.sourceID;\n        if (fields.targetID)\n            mappingObj[fields.targetID] = object.targetID;\n        if (fields.crudAction && fields.crudAction.customFields && fields.crudAction.customFields.length > 0) {\n            for (i = 0; i < fields.crudAction.customFields.length; i++)\n                mappingObj[fields.crudAction.customFields[i]] = object[fields.crudAction.customFields[i]];\n        }\n        return mappingObj;\n    };\n    Diagram.prototype.getNewUpdateNodes = function (status) {\n        var nodes = [];\n        var connectors = [];\n        for (var name_1 in this.nameTable) {\n            var node = this.nameTable[name_1];\n            if (node.status == status) {\n                if (node && node instanceof Connector) {\n                    node.status = 'None';\n                    connectors.push(node);\n                }\n                else {\n                    node.status = 'None';\n                    nodes.push(node);\n                }\n            }\n        }\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.getDeletedNodes = function () {\n        var nodes = [];\n        var connectors = [];\n        var i;\n        for (i = 0; i < this.crudDeleteNodes.length; i++) {\n            var node = this.crudDeleteNodes[i];\n            if (node && node.segments)\n                connectors.push(node);\n            else if (node) {\n                nodes.push(node);\n            }\n        }\n        this.crudDeleteNodes = [];\n        return { nodes: nodes, connectors: connectors };\n    };\n    Diagram.prototype.raiseAjaxPost = function (value, url) {\n        var callback = new Ajax(url, 'POST', true, 'application/json');\n        var data = JSON.stringify(JSON.parse(value));\n        callback.send(data).then();\n        callback.onSuccess = function (data) {\n        };\n    };\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"width\", void 0);\n    __decorate([\n        Property('SVG')\n    ], Diagram.prototype, \"mode\", void 0);\n    __decorate([\n        Property('100%')\n    ], Diagram.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, ContextMenuSettings)\n    ], Diagram.prototype, \"contextMenuSettings\", void 0);\n    __decorate([\n        Property(DiagramConstraints.Default)\n    ], Diagram.prototype, \"constraints\", void 0);\n    __decorate([\n        Property(DiagramTools.Default)\n    ], Diagram.prototype, \"tool\", void 0);\n    __decorate([\n        Property('Top')\n    ], Diagram.prototype, \"bridgeDirection\", void 0);\n    __decorate([\n        Property('transparent')\n    ], Diagram.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        Complex({}, SnapSettings)\n    ], Diagram.prototype, \"snapSettings\", void 0);\n    __decorate([\n        Complex({}, RulerSettings)\n    ], Diagram.prototype, \"rulerSettings\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], Diagram.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, SerializationSettings)\n    ], Diagram.prototype, \"serializationSettings\", void 0);\n    __decorate([\n        Collection([], Node)\n    ], Diagram.prototype, \"nodes\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"drawingObject\", void 0);\n    __decorate([\n        Collection([], Connector)\n    ], Diagram.prototype, \"connectors\", void 0);\n    __decorate([\n        Property([])\n    ], Diagram.prototype, \"basicElements\", void 0);\n    __decorate([\n        Complex({}, DiagramTooltip)\n    ], Diagram.prototype, \"tooltip\", void 0);\n    __decorate([\n        Complex({}, DataSource)\n    ], Diagram.prototype, \"dataSourceSettings\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"addInfo\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"historyManager\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getConnectorDefaults\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"setNodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getDescription\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomProperty\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomTool\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"getCustomCursor\", void 0);\n    __decorate([\n        Property()\n    ], Diagram.prototype, \"updateSelection\", void 0);\n    __decorate([\n        Complex({}, Selector)\n    ], Diagram.prototype, \"selectedItems\", void 0);\n    __decorate([\n        Complex({}, ScrollSettings)\n    ], Diagram.prototype, \"scrollSettings\", void 0);\n    __decorate([\n        Complex({}, Layout)\n    ], Diagram.prototype, \"layout\", void 0);\n    __decorate([\n        Complex({}, CommandManager)\n    ], Diagram.prototype, \"commandManager\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dataLoaded\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"dragOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"click\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"historyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"doubleClick\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"textEdit\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"scrollChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"selectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sizeChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"connectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"sourcePointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"targetPointChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"propertyChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"positionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"rotateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"collectionChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"expandStateChange\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseEnter\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"mouseOver\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuBeforeItemRender\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Collection([], Layer)\n    ], Diagram.prototype, \"layers\", void 0);\n    __decorate([\n        Event()\n    ], Diagram.prototype, \"drop\", void 0);\n    return Diagram;\n}(Component));\nexport { Diagram };\n","import { Browser } from '@syncfusion/ej2-base';\nimport { CanvasRenderer } from './rendering/canvas-renderer';\nimport { DiagramRenderer } from './rendering/renderer';\nimport { Size } from './primitives/size';\nimport { SnapConstraints } from './enum/enum';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from './utility/dom-util';\nimport { Rect } from './primitives/rect';\nimport { createSvgElement, getHTMLLayer } from './utility/dom-util';\nimport { getDiagramLayerSvg } from './utility/dom-util';\nimport { DiagramHtmlElement } from './core/elements/html-element';\nimport { DiagramNativeElement } from './core/elements/native-element';\n/**\n * Print and Export Settings\n */\nvar PrintAndExport = /** @class */ (function () {\n    function PrintAndExport(diagram) {\n        this.diagram = diagram;\n    }\n    /**\n     * To Export the diagram\n     * @private\n     */\n    PrintAndExport.prototype.exportDiagram = function (options) {\n        var fileType;\n        var customBounds;\n        var content;\n        var content1 = '';\n        var data = 'data';\n        var mode;\n        var buffers = [];\n        var margin = options.margin || {};\n        var region = options && options.region ? options.region : 'Content';\n        mode = options && options.mode ? options.mode : 'Download';\n        var bounds = this.getDiagramBounds(region, options);\n        if (options.bounds) {\n            customBounds = true;\n            bounds.x = options.bounds.x ? options.bounds.x : bounds.x;\n            bounds.y = options.bounds.y ? options.bounds.y : bounds.y;\n            bounds.width = options.bounds.width || bounds.width;\n            bounds.height = options.bounds.height || bounds.height;\n        }\n        margin = {\n            top: margin.top !== undefined ? margin.top : 25,\n            bottom: margin.bottom !== undefined ? margin.bottom : 25,\n            right: margin.right !== undefined ? margin.right : 25,\n            left: margin.left !== undefined ? margin.left : 25\n        };\n        var nodes = this.diagram.nodes;\n        if (region !== 'PageSettings') {\n            bounds.x -= margin.left;\n            bounds.y -= margin.top;\n            bounds.width += margin.left + margin.right;\n            bounds.height += margin.top + margin.bottom;\n        }\n        var fileName = options.fileName || 'diagram';\n        if (options.format !== 'SVG') {\n            data = this.setCanvas(options, bounds, margin, mode, customBounds, region, fileName);\n            if (data !== null) {\n                return data;\n            }\n        }\n        else {\n            fileType = options.format;\n            options.bounds = bounds;\n            options.margin = margin;\n            var svg = content = this.diagramAsSvg(options, margin);\n            if (mode === 'Data') {\n                return content;\n            }\n            var buffer = new XMLSerializer().serializeToString(svg);\n            buffers.push(buffer);\n        }\n        if (mode === 'Download' && data !== null) {\n            var browserInfo = void 0;\n            // Ensure this for Safari\n            // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n            //     let info: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n            //     alert('Downloading option is not supported in ' + info + ', Please use the returned data');\n            //     return content;\n            // } else {\n            for (var b = 0; b < buffers.length; b++) {\n                var blob = new Blob([buffers[b]], { type: 'application/octet-stream' });\n                if (Browser.info.name === 'msie') {\n                    window.navigator.msSaveOrOpenBlob(blob, fileName + '.' + fileType);\n                }\n                else {\n                    var pom = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                    var url = URL.createObjectURL(blob);\n                    pom.href = url;\n                    var e = document.createEvent('MouseEvents');\n                    e.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                    pom.dispatchEvent(e);\n                }\n            }\n        }\n        return null;\n    };\n    PrintAndExport.prototype.setCanvas = function (options, bounds, margin, mode, customBounds, region, fileName) {\n        var content;\n        options.bounds = bounds;\n        options.region = region;\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        this.setScaleValueforCanvas(options, bounds);\n        var canvas = this.diagramAsCanvas({\n            bounds: bounds, margin: margin, region: region, scaleX: options[scaleX],\n            scaleY: options[scaleY], scaleOffsetX: options[scaleOffsetX], scaleOffsetY: options[scaleOffsetY]\n        }, customBounds);\n        var image = content = canvas.toDataURL();\n        if (mode === 'Data') {\n            return content;\n        }\n        this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        return null;\n    };\n    PrintAndExport.prototype.canvasMultiplePage = function (options, canvas, margin, image, fileName) {\n        var _this = this;\n        var images = [];\n        var fileType = options.format || 'JPG';\n        if (options.multiplePage) {\n            options.pageHeight = options.pageHeight ? options.pageHeight : this.diagram.pageSettings.height;\n            options.pageWidth = options.pageWidth ? options.pageWidth : this.diagram.pageSettings.width;\n            options.pageHeight = options.pageHeight ? options.pageHeight : canvas.width;\n            options.pageWidth = options.pageWidth ? options.pageWidth : canvas.height;\n            margin = options.margin || {};\n            if (options.pageOrientation) {\n                if ((options.pageOrientation === 'Landscape' && options.pageHeight > options.pageWidth) ||\n                    options.pageOrientation === 'Portrait' && options.pageWidth > options.pageHeight) {\n                    var temp = options.pageWidth;\n                    options.pageWidth = options.pageHeight;\n                    options.pageHeight = temp;\n                }\n            }\n            options.margin = {\n                top: !isNaN(margin.top) ? margin.top : 0,\n                bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n                left: !isNaN(margin.left) ? margin.left : 0,\n                right: !isNaN(margin.right) ? margin.right : 0\n            };\n            var attr = {\n                'id': this.diagram.element.id + '_printImage',\n                'src': image,\n            };\n            var img_1 = createHtmlElement('img', attr);\n            img_1.onload = function () {\n                images = _this.getMultipleImage(img_1, options, true);\n                _this.exportImage(images, fileName, fileType, image);\n            };\n        }\n        else {\n            images = [image];\n            this.exportImage(images, fileName, fileType, image);\n        }\n    };\n    PrintAndExport.prototype.exportImage = function (images, fileName, fileType, image) {\n        var buffers = [];\n        var length = (!(images instanceof HTMLElement)) ? images.length : 0;\n        for (var g = 0; g < length; g++) {\n            image = images[g];\n            image = image.replace(/^data:[a-z]*;,/, '');\n            var image1 = image.split(',');\n            var byteString = atob(image1[1]);\n            var buffer = new ArrayBuffer(byteString.length);\n            var intArray = new Uint8Array(buffer);\n            for (var i = 0; i < byteString.length; i++) {\n                intArray[i] = byteString.charCodeAt(i);\n            }\n            buffers.push(buffer);\n        }\n        var _loop_1 = function (j) {\n            var b = new Blob([buffers[j]], { type: 'application/octet-stream' });\n            if (Browser.info.name === 'msie') {\n                window.navigator.msSaveOrOpenBlob(b, fileName + '.' + fileType);\n            }\n            else {\n                var htmlElement_1 = createHtmlElement('a', { 'download': fileName + '.' + fileType });\n                var urlLink = URL.createObjectURL(b);\n                htmlElement_1.href = urlLink;\n                var mouseEvent_1 = document.createEvent('MouseEvents');\n                mouseEvent_1.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);\n                setTimeout(function () {\n                    htmlElement_1.dispatchEvent(mouseEvent_1);\n                }, ((j + 1) * 5));\n            }\n        };\n        // Ensure this for safari\n        // if (Browser.info.name === 'msie' && Number(Browser.info.version) < 10 || Browser.info.name === 'webkit') {\n        //     let browserInfo: string = Browser.info.name === 'webkit' ? 'Safari' : 'IE-9';\n        //     alert('Downloading option is not supported in ' + browserInfo + ', Please use the returned data');\n        //     return content;\n        // } else {\n        for (var j = 0; j < buffers.length; j++) {\n            _loop_1(j);\n        }\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getObjectsBound = function (options) {\n        var nodes = this.diagram.nodes;\n        var nodebounds;\n        for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n            var node = nodes_1[_i];\n            if (node.visible) {\n                if (((options.format !== 'SVG' && !(node instanceof DiagramNativeElement) && !(node instanceof DiagramHtmlElement))\n                    || (options.format === 'SVG' && !(node instanceof DiagramHtmlElement)))) {\n                    if (!nodebounds) {\n                        nodebounds = node.wrapper.outerBounds;\n                    }\n                    else {\n                        nodebounds = nodebounds.uniteRect(node.wrapper.outerBounds);\n                    }\n                }\n            }\n        }\n        var connectors = this.diagram.connectors;\n        for (var _a = 0, connectors_1 = connectors; _a < connectors_1.length; _a++) {\n            var connector = connectors_1[_a];\n            if (connector.visible) {\n                if (!nodebounds) {\n                    nodebounds = connector.wrapper.outerBounds;\n                }\n                else {\n                    nodebounds = nodebounds.uniteRect(connector.wrapper.outerBounds);\n                }\n            }\n        }\n        return nodebounds || new Rect(0, 0, 0, 0);\n    };\n    /**   @private  */\n    PrintAndExport.prototype.getDiagramBounds = function (mode, options) {\n        var rect = this.getObjectsBound(options);\n        var left = rect.left;\n        var top = rect.top;\n        var right = rect.right - rect.left;\n        var bottom = rect.bottom - rect.top;\n        if (mode !== 'Content') {\n            if (this.diagram.pageSettings && this.diagram.pageSettings.multiplePage) {\n                left = rect.left;\n                top = rect.top;\n                if (this.diagram.pageSettings.width) {\n                    left = Math.floor(left / this.diagram.pageSettings.width) * this.diagram.pageSettings.width;\n                    right = Math.ceil(rect.right / this.diagram.pageSettings.width) * this.diagram.pageSettings.width - left;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = Math.floor(top / this.diagram.pageSettings.height) * this.diagram.pageSettings.height;\n                    bottom = Math.ceil(rect.bottom / this.diagram.pageSettings.height) * this.diagram.pageSettings.height - top;\n                }\n                if ((rect.width === 0) && this.diagram.pageSettings.width !== null) {\n                    right = this.diagram.pageSettings.width;\n                }\n                if ((rect.height === 0) && this.diagram.pageSettings.height !== null) {\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n            else {\n                if (this.diagram.pageSettings.width) {\n                    left = 0;\n                    right = this.diagram.pageSettings.width;\n                }\n                if (this.diagram.pageSettings.height) {\n                    top = 0;\n                    bottom = this.diagram.pageSettings.height;\n                }\n            }\n        }\n        var svgBounds = new Rect();\n        svgBounds.x = left;\n        svgBounds.y = top;\n        svgBounds.width = right;\n        svgBounds.height = bottom;\n        return svgBounds;\n    };\n    PrintAndExport.prototype.setScaleValueforCanvas = function (options, bounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        options[scaleX] = 1;\n        options[scaleY] = 1;\n        options[scaleOffsetX] = 0;\n        options[scaleOffsetY] = 0;\n        options.pageHeight = options.pageHeight || this.diagram.pageSettings.height;\n        options.pageWidth = options.pageWidth || this.diagram.pageSettings.width;\n        var pageOrientation = options.pageOrientation || this.diagram.pageSettings.orientation;\n        if (!pageOrientation) {\n            pageOrientation = 'Portrait';\n        }\n        if (pageOrientation === 'Portrait') {\n            if (options.pageWidth > options.pageHeight) {\n                var temp = options.pageHeight;\n                options.pageHeight = options.pageWidth;\n                options.pageWidth = temp;\n            }\n        }\n        else {\n            if (options.pageHeight > options.pageWidth) {\n                var temp = options.pageWidth;\n                options.pageWidth = options.pageHeight;\n                options.pageHeight = temp;\n            }\n        }\n        if (options.pageWidth && options.pageHeight && !options.multiplePage) {\n            options.stretch = 'Meet';\n        }\n        var height = options.pageHeight || bounds.height;\n        var width = options.pageWidth || bounds.width;\n        if (options.stretch === 'Stretch' || options.stretch === 'Meet' || options.stretch === 'Slice') {\n            options[scaleX] = width / bounds.width;\n            options[scaleY] = height / bounds.height;\n            if (options.stretch === 'Meet') {\n                options[scaleX] = options[scaleY] = Math.min(options[scaleX], options[scaleY]);\n                options[scaleOffsetY] = (options.pageHeight - bounds.height * options[scaleX]) / 2;\n                options[scaleOffsetX] = (options.pageWidth - bounds.width * options[scaleX]) / 2;\n            }\n            else if (options.stretch === 'Slice') {\n                options[scaleX] = options[scaleY] = Math.max(options[scaleX], options[scaleY]);\n            }\n            bounds.width = width;\n            bounds.height = height;\n        }\n        bounds.x *= options[scaleX];\n        bounds.y *= options[scaleY];\n    };\n    PrintAndExport.prototype.diagramAsSvg = function (options, margin) {\n        var svg = this.diagram.createSvg(this.diagram.element.id + '_diagram_svg', options.bounds.width, options.bounds.height);\n        document.body.appendChild(svg);\n        var g = createSvgElement('g', { 'id': this.diagram.element.id + '_pageBackground' });\n        var region = options && options.region ? options.region : 'Content';\n        var bounds = this.getDiagramBounds(region, options);\n        var left = bounds.x;\n        var top = bounds.y;\n        var width = bounds.width;\n        var height = bounds.height;\n        svg.appendChild(g);\n        var attr = {\n            'x': String(left),\n            'y': String(top), 'width': String(width), 'height': String(height)\n        };\n        setAttributeSvg(g, attr);\n        this.setTransform(g, options.bounds, margin);\n        var gradient = document.getElementById(this.diagram.element.id + 'gradient_pattern');\n        if (gradient) {\n            svg.appendChild(gradient);\n        }\n        attr = {\n            'x': 0,\n            'y': 0, 'width': String(width + margin.left + margin.right), 'height': String(height + margin.top + margin.bottom)\n        };\n        var backimage = document.getElementById(this.diagram.element.id + '_backgroundImageLayer').cloneNode(true);\n        setAttributeSvg(backimage, attr);\n        svg.appendChild(backimage);\n        this.setTransform(backimage, bounds, margin);\n        var backRect = document.getElementById(this.diagram.element.id + '_backgroundLayerrect').cloneNode(true);\n        setAttributeSvg(backRect, attr);\n        svg.appendChild(backRect);\n        this.setTransform(backRect, bounds, margin);\n        if (this.diagram.mode === 'SVG') {\n            var element = void 0;\n            var i = void 0;\n            var diagramLayerSVG = getDiagramLayerSvg(this.diagram.element.id);\n            svg.appendChild(diagramLayerSVG.getElementById(this.diagram.diagramLayer.id).cloneNode(true));\n            for (i = 0; i < svg.childNodes.length; i++) {\n                element = svg.childNodes[i];\n                if (element.id === this.diagram.element.id + '_diagramLayer') {\n                    this.setTransform(element, bounds, margin);\n                }\n            }\n        }\n        else {\n            g = createSvgElement('g', { 'id': this.diagram.element.id + '_diagramLayer' });\n            svg.appendChild(g);\n            this.setTransform(g, options.bounds, margin);\n            //renderLabels\n            var renderer = new DiagramRenderer('', null, true);\n            var htmlLayer = getHTMLLayer(this.diagram.element.id);\n            this.diagram.renderDiagramElements(svg, renderer, htmlLayer, false);\n        }\n        document.body.removeChild(svg);\n        return svg;\n    };\n    PrintAndExport.prototype.setTransform = function (element, bounds, margin) {\n        element.setAttribute('transform', 'translate(' + (-bounds.x + margin.left) + ', ' +\n            (-bounds.y + margin.top) + ')');\n    };\n    PrintAndExport.prototype.diagramAsCanvas = function (options, customBounds) {\n        var scaleX = 'scaleX';\n        var scaleY = 'scaleY';\n        var scaleOffsetX = 'scaleOffsetX';\n        var scaleOffsetY = 'scaleOffsetY';\n        var element;\n        var elements = [];\n        var region = options.bounds;\n        var margin = options.margin;\n        var mode = options && options.region ? options.region : 'Content';\n        var pageBounds = this.getDiagramBounds(mode, options);\n        var bgColor = this.diagram.pageSettings.background.color;\n        var canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', options.bounds.width, options.bounds.height);\n        //canvas.setAttribute('style', 'position:absolute;top:135px;left:160px;');\n        var context = canvas.getContext('2d');\n        context.translate(-region.x, -region.y);\n        context.save();\n        context.fillStyle = this.diagram.pageSettings.background.color;\n        region = mode === 'Content' ? pageBounds : region;\n        context.fillRect(region.x, region.y, region.width, region.height);\n        var bgImg = this.diagram.pageSettings.background;\n        if (bgImg && bgImg.source) {\n            pageBounds = this.getDiagramBounds(mode, options);\n            var image = new Image();\n            image.src = bgImg.source;\n            var proportionX = pageBounds.width / image.width;\n            var proportionY = pageBounds.height / image.height;\n            var x = pageBounds.x;\n            var y = pageBounds.y;\n            var width = pageBounds.width;\n            var height = pageBounds.height;\n            var exportable = this.isImageExportable(bgImg);\n            if (bgImg.scale !== 'None' && bgImg.align !== 'None') {\n                var proportion = bgImg.scale === 'Meet' ? Math.min(proportionX, proportionY) : Math.max(proportionX, proportionY);\n                width = proportion * image.width;\n                height = proportion * image.height;\n                if (bgImg.align.indexOf('xmid') > -1) {\n                    x += (pageBounds.width - width) / 2;\n                }\n                else if (bgImg.align.indexOf('xmax') > -1) {\n                    x = x + pageBounds.width - width;\n                }\n                if (bgImg.align.indexOf('ymid') > -1) {\n                    y += (pageBounds.height - height) / 2;\n                }\n                else if (bgImg.align.indexOf('ymax') > -1) {\n                    y = y + pageBounds.height - height;\n                }\n                if (this.diagram.pageSettings.background.color === 'none' || this.diagram.pageSettings.background.color === 'transparent') {\n                    context.fillStyle = 'white';\n                    context.fillRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n                }\n                if (exportable) {\n                    context.drawImage(image, x, y, proportion * image.width, proportion * image.height);\n                }\n            }\n            else if (exportable) {\n                context.drawImage(image, x, y, pageBounds.width, pageBounds.height);\n            }\n        }\n        else {\n            context.fillStyle = bgColor === 'transparent' ? 'white' : bgColor;\n            context.fillRect((pageBounds.x * options[scaleX]) - margin.left, (pageBounds.y * options[scaleY]) - margin.top, (pageBounds.width * options[scaleX]) + margin.left + margin.right, (options[scaleY] * pageBounds.height) + margin.top + margin.bottom);\n        }\n        var brColor = this.diagram.pageSettings.background.color;\n        var brWidth = this.diagram.pageSettings.width;\n        if (brWidth) {\n            context.strokeStyle = brColor === 'none' ? 'transparent' : brColor;\n            context.lineWidth = brWidth;\n            context.strokeRect(pageBounds.x * options[scaleX], pageBounds.y * options[scaleY], pageBounds.width * options[scaleX], pageBounds.height * options[scaleY]);\n        }\n        context.restore();\n        var htmlLayer = getHTMLLayer(this.diagram.element.id);\n        var renderer = new DiagramRenderer('', null, false);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], true);\n        this.diagram.renderDiagramElements(canvas, renderer, htmlLayer, false, true);\n        this.updateObjectValue(options[scaleX], options[scaleOffsetX], options[scaleOffsetY], false);\n        return canvas;\n    };\n    PrintAndExport.prototype.updateWrapper = function (canvas, value, scaleOffsetX, scaleOffsetY, isExport) {\n        if (canvas && canvas.length > 0) {\n            for (var j = 0; j < canvas.length; j++) {\n                if (canvas[j].children) {\n                    this.updateWrapper(canvas[j].children, value, scaleOffsetX, scaleOffsetY, isExport);\n                }\n                canvas[j].exportScaleValue.x = value;\n                canvas[j].exportScaleValue.y = value;\n                canvas[j].exportScaleOffset.x = scaleOffsetX;\n                canvas[j].exportScaleOffset.y = scaleOffsetY;\n                canvas[j].isExport = isExport;\n            }\n        }\n    };\n    PrintAndExport.prototype.updateObjectValue = function (value, scaleOffsetX, scaleOffsetY, isExport) {\n        var wrapper;\n        for (var i = 0; i < this.diagram.nodes.length; i++) {\n            wrapper = this.diagram.nodes[i].wrapper;\n            this.updateWrapper(wrapper.children, value, scaleOffsetX, scaleOffsetY, isExport);\n            wrapper.exportScaleValue.x = value;\n            wrapper.exportScaleValue.y = value;\n            wrapper.exportScaleOffset.x = scaleOffsetX;\n            wrapper.exportScaleOffset.y = scaleOffsetY;\n            wrapper.isExport = isExport;\n        }\n        for (var j = 0; j < this.diagram.connectors.length; j++) {\n            wrapper = this.diagram.connectors[j].wrapper;\n            for (var k = 0; k < wrapper.children.length; k++) {\n                wrapper.children[k].isExport = isExport;\n                if (isExport) {\n                    wrapper.children[k].exportScaleValue.x = value;\n                    wrapper.children[k].exportScaleValue.y = value;\n                    wrapper.children[k].exportScaleOffset.x = scaleOffsetX;\n                    wrapper.children[k].exportScaleOffset.y = scaleOffsetY;\n                }\n            }\n        }\n    };\n    PrintAndExport.prototype.isImageExportable = function (backgroundImage) {\n        var state = true;\n        var content;\n        var canvas;\n        if (backgroundImage.source) {\n            try {\n                canvas = CanvasRenderer.createCanvas(this.diagram.element.id + 'temp_canvas', 100, 100);\n                var ctx = canvas.getContext('2d');\n                ctx.save();\n                var image = new Image();\n                image.src = backgroundImage.source;\n                ctx.drawImage(image, 0, 0, 100, 100);\n                ctx.restore();\n                content = canvas.toDataURL();\n            }\n            catch (e) {\n                state = false;\n            }\n        }\n        return state;\n    };\n    PrintAndExport.prototype.getPrintCanvasStyle = function (img, options) {\n        var width = 0;\n        var height = 0;\n        var size = new Size();\n        width = img.width;\n        height = img.height;\n        if (options.pageHeight || options.pageWidth) {\n            height = options.pageHeight ? options.pageHeight : height;\n            width = options.pageWidth ? options.pageWidth : width;\n        }\n        if (options.pageOrientation) {\n            if ((options.pageOrientation === 'Landscape' && height > width) || options.pageOrientation === 'Portrait' && width > height) {\n                var temp = width;\n                width = height;\n                height = temp;\n            }\n        }\n        size.height = height;\n        size.width = width;\n        return size;\n    };\n    PrintAndExport.prototype.getMultipleImage = function (img, options, isExport) {\n        var imageArray = [];\n        var div = createHtmlElement('div', {});\n        var pageSize = this.getPrintCanvasStyle(img, options);\n        var pageWidth;\n        var pageHeight;\n        var margin = options.margin;\n        var mLeft = margin.left;\n        var mTop = margin.top;\n        var mRight = margin.right;\n        var mBottom = margin.bottom;\n        var x = 0;\n        var y = 0;\n        pageWidth = pageSize.width + x;\n        pageHeight = pageSize.height + y;\n        var drawnX = 0;\n        var drawnY = 0;\n        if (options && options.multiplePage && !(options.region === 'Content')) {\n            div.style.height = 'auto';\n            div.style.width = 'auto';\n            var imgHeight = img.height;\n            var imgWidth = img.width;\n            //if (img) {\n            var i = 0;\n            var j = 0;\n            var url = void 0;\n            var clipWidth = 0;\n            var clipHeight = 0;\n            var ctx = void 0;\n            var canvas = void 0;\n            do {\n                do {\n                    clipWidth = pageSize.width;\n                    clipHeight = pageSize.height;\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        clipWidth = (imgWidth - drawnX);\n                    }\n                    if ((drawnY + pageSize.height) >= imgHeight) {\n                        clipHeight = (imgHeight - drawnY);\n                    }\n                    canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_multiplePrint', pageSize.width, pageSize.height);\n                    ctx = canvas.getContext('2d');\n                    ctx.drawImage(img, x + drawnX + mLeft, y + drawnY + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop, 0 + mLeft, 0 + mTop, clipWidth - mRight - mLeft, clipHeight - mBottom - mTop);\n                    if ((drawnX + pageSize.width) >= imgWidth) {\n                        drawnX -= (drawnX - imgWidth);\n                    }\n                    url = canvas.toDataURL();\n                    ctx.restore();\n                    drawnX += pageWidth;\n                    if (isExport) {\n                        imageArray.push(url);\n                    }\n                    else {\n                        this.printImage(div, url, i + '' + j, pageWidth + 'px;', pageHeight + 'px;');\n                    }\n                    i++;\n                } while (drawnX < imgWidth);\n                j++;\n                i = x = drawnX = 0;\n                if ((drawnY + pageSize.height) >= imgHeight) {\n                    drawnY -= (drawnY - imgHeight);\n                }\n                drawnY += pageHeight;\n            } while (drawnY < imgHeight);\n            //}\n        }\n        else {\n            var x_1 = 0;\n            var y_1 = 0;\n            var pageSize_1 = this.getPrintCanvasStyle(img, options);\n            var pageWidth_1;\n            var pageHeight_1;\n            pageWidth_1 = pageSize_1.width;\n            pageHeight_1 = pageSize_1.height;\n            var ctx = void 0;\n            var canvas = void 0;\n            var url = void 0;\n            canvas = CanvasRenderer.createCanvas(this.diagram.element.id + '_diagram', pageWidth_1, pageHeight_1);\n            ctx = canvas.getContext('2d');\n            ctx.drawImage(img, x_1 + mLeft, y_1 + mTop, img.width - (mRight + mLeft), img.height - (mTop + mBottom), 0 + mLeft, 0 + mTop, pageWidth_1 - (mRight + mLeft), pageHeight_1 - (mTop + mBottom));\n            url = canvas.toDataURL();\n            ctx.restore();\n            if (isExport) {\n                imageArray.push(url);\n            }\n            else {\n                this.printImage(div, url, 0);\n            }\n        }\n        if (isExport) {\n            return imageArray;\n        }\n        else {\n            return div;\n        }\n    };\n    PrintAndExport.prototype.printImage = function (div, url, i, pageWidth, pageHeight) {\n        var attr = { 'class': 'e-diagram-print-page', 'style': 'width:' + pageWidth + 'height:' + pageHeight };\n        var img = createHtmlElement('img', attr);\n        var innerDiv = createHtmlElement('div', attr);\n        attr = { 'id': this.diagram.element.id + '_multiplePrint_img' + i, 'style': 'float:left', 'src': url };\n        setAttributeHtml(img, attr);\n        innerDiv.appendChild(img);\n        div.appendChild(innerDiv);\n    };\n    /**\n     * To print the image\n     * @private\n     */\n    PrintAndExport.prototype.print = function (options) {\n        options.mode = 'Data';\n        var url = this.exportDiagram(options);\n        this.printImages(url, options);\n    };\n    PrintAndExport.prototype.printImages = function (url, options) {\n        var _this = this;\n        var attr = {\n            'id': this.diagram.element.id + '_printImage',\n            'src': url,\n        };\n        options.margin = { top: 0, bottom: 0, right: 0, left: 0 };\n        var img = createHtmlElement('img', attr);\n        img.onload = function () {\n            var div = _this.getMultipleImage(img, options);\n            // specify window parameters\n            var printWind = window.open('');\n            if (printWind != null) {\n                if ((div instanceof HTMLElement)) {\n                    printWind.document.write('<html><head><style> body{margin:0px;}  @media print { .e-diagram-print-page' +\n                        '{page-break-after: left; }.e-diagram-print-page:last-child {page-break-after: avoid;}}' +\n                        '</style><title></title></head>');\n                    printWind.document.write('<BODY onload=\"setTimeout(function(){window.print();}, 100)\">');\n                    printWind.document.write('<center>' + div.innerHTML + '</center>');\n                    printWind.document.close();\n                }\n            }\n        };\n    };\n    /** @private */\n    PrintAndExport.prototype.getDiagramContent = function (styleSheets) {\n        var container = document.getElementById(this.diagram.element.id + 'content');\n        var scrollerX = container.scrollLeft;\n        var scrollerY = container.scrollTop;\n        var oldZoom = this.diagram.scrollSettings.currentZoom;\n        var oldHorizontalOffset = this.diagram.scroller.horizontalOffset;\n        var oldVerticalOffset = this.diagram.scroller.verticalOffset;\n        var oldWidth = Number(String(this.diagram.width).split('px')[0]);\n        var oldHeight = Number(String(this.diagram.height).split('px')[0]);\n        var bounds = this.getDiagramBounds('', {});\n        this.diagram.scroller.zoom((1 / oldZoom));\n        var scrollX = 0;\n        var scrollY = 0;\n        scrollX = bounds.x;\n        scrollY = bounds.y;\n        this.diagram.scroller.transform = {\n            tx: -scrollX,\n            ty: -scrollY,\n            scale: this.diagram.scroller.currentZoom\n        };\n        this.diagram.scroller.horizontalOffset = -scrollX;\n        this.diagram.scroller.verticalOffset = -scrollY;\n        this.diagram.scroller.setSize();\n        this.diagram.setSize(bounds.width, bounds.height);\n        var snapConstraints = this.diagram.snapSettings.constraints;\n        this.diagram.snapSettings.constraints = (this.diagram.snapSettings.constraints & ~SnapConstraints.ShowLines);\n        this.diagram.dataBind();\n        this.diagram.clearSelection();\n        styleSheets = styleSheets || document.styleSheets;\n        var styleSheetRef = '';\n        for (var i = 0; i < styleSheets.length; i++) {\n            if (styleSheets[i].href || typeof styleSheets[i] === 'string') {\n                styleSheetRef += '<link href=\\'' + (styleSheets[i].href || styleSheets[i]) + '\\' rel=\\'stylesheet\\' />';\n            }\n        }\n        var htmlData = document.getElementById(this.diagram.element.id + 'content').innerHTML;\n        var marginStyle = 'margin-left:' + 0 + 'px;margin-top:' + 0 + 'px;margin-right:'\n            + 0 + 'px;margin-bottom:' + 0 + 'px;';\n        htmlData = styleSheetRef + '<body style=\"margin: 0px; padding: 0px\"><div style=\\'' +\n            marginStyle + '\\'>' + htmlData + '</div></body>';\n        htmlData = htmlData.replace(/ transform: t/g, ' -webkit-transform: t');\n        this.diagram.setSize(oldWidth, oldHeight);\n        this.diagram.scroller.zoom(oldZoom / this.diagram.scrollSettings.currentZoom);\n        this.diagram.snapSettings.constraints = snapConstraints;\n        this.diagram.dataBind();\n        if (scrollerX || scrollerY) {\n            this.diagram.setOffset(scrollerX, scrollerY);\n        }\n        else {\n            this.diagram.scroller.transform = {\n                tx: (oldHorizontalOffset) / this.diagram.scroller.currentZoom,\n                ty: (oldVerticalOffset) / this.diagram.scroller.currentZoom,\n                scale: this.diagram.scroller.currentZoom\n            };\n            this.diagram.scroller.horizontalOffset = oldHorizontalOffset;\n            this.diagram.scroller.verticalOffset = oldVerticalOffset;\n        }\n        this.diagram.renderSelector(false);\n        return htmlData;\n    };\n    /** @private */\n    PrintAndExport.prototype.exportImages = function (image, options) {\n        var _this = this;\n        var region = options && options.region ? options.region : 'Content';\n        var margin = options.margin || {};\n        margin = {\n            top: !isNaN(margin.top) ? margin.top : 0,\n            bottom: !isNaN(margin.bottom) ? margin.bottom : 0,\n            left: !isNaN(margin.left) ? margin.left : 0,\n            right: !isNaN(margin.right) ? margin.right : 0\n        };\n        var bounds = this.getDiagramBounds(region, {});\n        if (options.bounds) {\n            bounds.x = (!isNaN(options.bounds.x) ? options.bounds.x : bounds.x);\n            bounds.y = (!isNaN(options.bounds.y) ? options.bounds.y : bounds.y);\n            bounds.width = (options.bounds.width || bounds.width);\n            bounds.height = (options.bounds.height || bounds.height);\n        }\n        var img = document.createElement('img');\n        var attr = {\n            'src': image\n        };\n        setAttributeHtml(img, attr);\n        var context = this;\n        img.onload = function () {\n            var canvas = CanvasRenderer.createCanvas(context.diagram.element.id + 'innerImage', bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            var ctx = canvas.getContext('2d');\n            ctx.fillRect(0, 0, bounds.width + (margin.left + margin.right), bounds.height + (margin.top + margin.bottom));\n            ctx.drawImage(img, bounds.x, bounds.y, bounds.width, bounds.height, margin.left, margin.top, bounds.width, bounds.height);\n            image = canvas.toDataURL();\n            if (options.printOptions) {\n                context.printImages(image, options);\n                return;\n            }\n            ctx.restore();\n            var fileName = options.fileName || 'diagram';\n            _this.canvasMultiplePage(options, canvas, margin, image, fileName);\n        };\n    };\n    /**\n     * To destroy the Print and Export module\n     * @return {void}\n     * @private\n     */\n    PrintAndExport.prototype.destroy = function () {\n        /**\n         * Destroys the Print and Export module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    PrintAndExport.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'PrintandExport';\n    };\n    return PrintAndExport;\n}());\nexport { PrintAndExport };\n","import { Node } from '../objects/node';\nimport { Connector } from '../objects/connector';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { randomId, getFunction } from '../utility/base-util';\n/**\n * data source defines the basic unit of diagram\n */\nvar DataBinding = /** @class */ (function () {\n    /**\n     * Constructor for the data binding module.\n     * @private\n     */\n    function DataBinding() {\n        /**   @private  */\n        this.dataTable = {};\n        //constructs the data binding module\n    }\n    /**\n     * To destroy the data binding module\n     * @return {void}\n     * @private\n     */\n    DataBinding.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    DataBinding.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'DataBinding';\n    };\n    /**\n     * Initialize nodes and connectors when we have a data as JSON\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initData = function (data, diagram) {\n        var dataSource;\n        var dataProp = 'data';\n        var jsonProp = 'json';\n        var dataManager = data.dataManager || {};\n        dataSource = data.data || dataManager[dataProp] || dataManager[jsonProp] ||\n            (dataManager.dataSource ? dataManager.dataSource.json : undefined);\n        if (dataSource && dataSource.length) {\n            this.applyDataSource(data, dataSource, diagram);\n        }\n    };\n    /**\n     * Initialize nodes and connector when we have a data as remote url\n     * @param data\n     * @param diagram\n     * @private\n     */\n    DataBinding.prototype.initSource = function (data, diagram) {\n        var _this = this;\n        var dataSource = data;\n        var result;\n        var mapper = data;\n        if (dataSource.dataManager instanceof DataManager) {\n            var query = mapper.dataManager.defaultQuery;\n            data.dataManager.executeQuery(query).then(function (e) {\n                var prop = 'result';\n                result = e[prop];\n                if (!diagram.isDestroyed) {\n                    _this.applyDataSource(data, result, diagram);\n                    diagram.refreshDiagram();\n                    diagram.trigger('dataLoaded', { diagram: diagram });\n                }\n            });\n        }\n    };\n    DataBinding.prototype.applyDataSource = function (mapper, data, diagram) {\n        this.dataTable = {};\n        var obj;\n        var firstNode;\n        var rootNodes = [];\n        var firstLevel = [];\n        var item;\n        var nextLevel;\n        if (data !== undefined) {\n            for (var r = 0; r < data.length; r++) {\n                obj = data[r];\n                if (obj[mapper.parentId] === undefined || obj[mapper.parentId] === null ||\n                    typeof obj[mapper.parentId] !== 'object') {\n                    if (rootNodes[obj[mapper.parentId]] !== undefined) {\n                        rootNodes[obj[mapper.parentId]].items.push(obj);\n                    }\n                    else {\n                        rootNodes[obj[mapper.parentId]] = { items: [obj] };\n                    }\n                }\n                else {\n                    rootNodes = this.updateMultipleRootNodes(obj, rootNodes, mapper, data);\n                }\n                if (mapper.root === obj[mapper.id]) {\n                    firstNode = { items: [obj] };\n                }\n            }\n            if (firstNode) {\n                firstLevel.push(firstNode);\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(rootNodes); _i < _a.length; _i++) {\n                    var n = _a[_i];\n                    if (!n || n === 'undefined' || n === '\\'\\'' || n === 'null') {\n                        firstLevel.push(rootNodes[n]);\n                    }\n                }\n            }\n            for (var i = 0; i < firstLevel.length; i++) {\n                for (var j = 0; j < firstLevel[i].items.length; j++) {\n                    item = firstLevel[i].items[j];\n                    var node = this.applyNodeTemplate(mapper, item, diagram);\n                    diagram.nodes.push(node);\n                    this.dataTable[item[mapper.id]] = node;\n                    nextLevel = rootNodes[node.data[mapper.id]];\n                    if (nextLevel !== undefined) {\n                        this.renderChildNodes(mapper, nextLevel, node.id, rootNodes, diagram);\n                    }\n                }\n            }\n        }\n        this.dataTable = null;\n    };\n    /**\n     * updateMultipleRootNodes method is used  to update the multiple Root Nodes\n     * @param object\n     * @param rootnodes\n     * @param mapper\n     * @param data\n     */\n    DataBinding.prototype.updateMultipleRootNodes = function (obj, rootNodes, mapper, data) {\n        var parents = obj[mapper.parentId];\n        var parent;\n        for (var i = 0; i < parents.length; i++) {\n            parent = parents[i];\n            if (rootNodes[parent]) {\n                rootNodes[parent].items.push(obj);\n            }\n            else {\n                rootNodes[parent] = { items: [obj] };\n            }\n        }\n        return rootNodes;\n    };\n    /**\n     * Get the node values\n     * @param mapper\n     * @param item\n     * @param diagram\n     */\n    DataBinding.prototype.applyNodeTemplate = function (mapper, item, diagram) {\n        var root = item;\n        var id = randomId();\n        var nodeModel = { id: id, data: item };\n        var doBinding = getFunction(mapper.doBinding);\n        if (doBinding) {\n            doBinding(nodeModel, item, diagram);\n        }\n        var obj = new Node(diagram, 'nodes', nodeModel, true);\n        if (!this.collectionContains(obj, diagram, mapper.id, mapper.parentId)) {\n            return obj;\n        }\n        else {\n            return this.dataTable[item[mapper.id]];\n        }\n    };\n    DataBinding.prototype.renderChildNodes = function (mapper, parent, value, rtNodes, diagram) {\n        var child;\n        var nextLevel;\n        var node;\n        for (var j = 0; j < parent.items.length; j++) {\n            child = parent.items[j];\n            node = this.applyNodeTemplate(mapper, child, diagram);\n            var canBreak = false;\n            if (!this.collectionContains(node, diagram, mapper.id, mapper.parentId)) {\n                this.dataTable[child[mapper.id]] = node;\n                diagram.nodes.push(node);\n            }\n            else {\n                canBreak = true;\n            }\n            if (!this.containsConnector(diagram, value, node.id)) {\n                diagram.connectors.push(this.applyConnectorTemplate(value, node.id, diagram));\n            }\n            if (!canBreak) {\n                nextLevel = rtNodes[node.data[mapper.id]];\n                if (nextLevel !== undefined) {\n                    this.renderChildNodes(mapper, nextLevel, node.id, rtNodes, diagram);\n                }\n            }\n        }\n    };\n    DataBinding.prototype.containsConnector = function (diagram, sourceNode, targetNode) {\n        if (sourceNode !== '' && targetNode !== '') {\n            for (var i = 0; i < diagram.connectors.length; i++) {\n                var connector = diagram.connectors[i];\n                if (connector !== undefined && (connector.sourceID === sourceNode && connector.targetID === targetNode)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     *  collectionContains method is used to  check wthear the node is already present in collection or not\n     * @param node\n     * @param diagram\n     * @param id\n     * @param parentId\n     */\n    DataBinding.prototype.collectionContains = function (node, diagram, id, parentId) {\n        var obj = this.dataTable[node.data[id]];\n        if (obj !== undefined && obj.data[id] === node.data[id] && obj.data[parentId] === node.data[parentId]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Get the Connector values\n     * @param sourceNode\n     * @param targetNode\n     * @param diagram\n     */\n    DataBinding.prototype.applyConnectorTemplate = function (sNode, tNode, diagram) {\n        var connModel = {\n            id: randomId(), sourceID: sNode, targetID: tNode\n        };\n        var obj = new Connector(diagram, 'connectors', connModel, true);\n        return obj;\n    };\n    return DataBinding;\n}());\nexport { DataBinding };\n","import { remove } from '@syncfusion/ej2-base';\nimport { ContextMenu as Menu } from '@syncfusion/ej2-navigations';\nimport { contextMenuClick, contextMenuOpen, contextMenuBeforeItemRender } from '../enum/enum';\nimport { createHtmlElement } from '../../diagram/utility/dom-util';\n/**\n * @private\n */\nexport var menuClass = {\n    content: '.e-diagramcontent',\n    copy: 'e-copy',\n    paste: 'e-paste',\n    undo: 'e-undo',\n    redo: 'e-redo',\n    cut: 'e-cut',\n    selectAll: 'e-selectall',\n    grouping: 'e-grouping',\n    group: 'e-group',\n    unGroup: 'e-ungroup',\n    bringToFront: 'e-bringfront',\n    sendToBack: 'e-sendback',\n    moveForward: 'e-bringforward',\n    sendBackward: 'e-sendbackward',\n    order: 'e-order'\n};\n/**\n * 'ContextMenu module used to handle context menu actions.'\n * @private\n */\nvar DiagramContextMenu = /** @class */ (function () {\n    function DiagramContextMenu(parent, service) {\n        this.defaultItems = {};\n        /**\n         * @private\n         */\n        this.disableItems = [];\n        /**\n         * @private\n         */\n        this.hiddenItems = [];\n        this.localeText = this.setLocaleKey();\n        this.parent = parent;\n        this.serviceLocator = service;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('initial-load', this.render, this);\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    DiagramContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('initial-load', this.render);\n    };\n    DiagramContextMenu.prototype.render = function () {\n        this.l10n = this.serviceLocator.getService('localization');\n        this.element = createHtmlElement('ul', { id: this.parent.element.id + '_contextMenu' });\n        this.parent.element.appendChild(this.element);\n        var target = '#' + this.parent.element.id;\n        this.contextMenu = new Menu({\n            items: this.getMenuItems(),\n            enableRtl: this.parent.enableRtl,\n            enablePersistence: this.parent.enablePersistence,\n            locale: this.parent.locale,\n            target: target,\n            select: this.contextMenuItemClick.bind(this),\n            beforeOpen: this.contextMenuBeforeOpen.bind(this),\n            onOpen: this.contextMenuOpen.bind(this),\n            beforeItemRender: this.BeforeItemRender.bind(this),\n            onClose: this.contextMenuOnClose.bind(this),\n            cssClass: 'e-diagram-menu'\n        });\n        this.contextMenu.appendTo(this.element);\n    };\n    DiagramContextMenu.prototype.getMenuItems = function () {\n        var menuItems = [];\n        var orderItems = [];\n        var groupItems = [];\n        if (!this.parent.contextMenuSettings.showCustomMenuOnly) {\n            for (var _i = 0, _a = this.getDefaultItems(); _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.toLocaleLowerCase().indexOf('group') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'grouping') {\n                        groupItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else if (item.toLocaleLowerCase().indexOf('order') !== -1) {\n                    if (item.toLocaleLowerCase() !== 'order') {\n                        orderItems.push(this.buildDefaultItems(item));\n                    }\n                }\n                else {\n                    menuItems.push(this.buildDefaultItems(item));\n                }\n            }\n            if (groupItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('grouping');\n                orderGroup.items = groupItems;\n                menuItems.push(orderGroup);\n            }\n            if (orderItems.length > 0) {\n                var orderGroup = this.buildDefaultItems('order');\n                orderGroup.items = orderItems;\n                menuItems.push(orderGroup);\n            }\n        }\n        if (this.parent.contextMenuSettings.items) {\n            for (var _b = 0, _c = this.parent.contextMenuSettings.items; _b < _c.length; _b++) {\n                var customItem = _c[_b];\n                menuItems.push(customItem);\n            }\n        }\n        return menuItems;\n    };\n    DiagramContextMenu.prototype.contextMenuOpen = function () {\n        this.isOpen = true;\n    };\n    DiagramContextMenu.prototype.BeforeItemRender = function (args) {\n        this.parent.trigger(contextMenuBeforeItemRender, args);\n    };\n    DiagramContextMenu.prototype.contextMenuItemClick = function (args) {\n        document.getElementById(this.parent.element.id + 'content').focus();\n        this.parent.trigger(contextMenuClick, args);\n        var item = this.getKeyFromId(args.item.id);\n        if (!args.cancel) {\n            switch (item) {\n                case 'cut':\n                    this.parent.cut();\n                    break;\n                case 'copy':\n                    this.parent.copy();\n                    break;\n                case 'undo':\n                    this.parent.undo();\n                    break;\n                case 'redo':\n                    this.parent.redo();\n                    break;\n                case 'paste':\n                    this.parent.paste();\n                    break;\n                case 'selectAll':\n                    this.parent.selectAll();\n                    break;\n                case 'group':\n                    this.parent.group();\n                    break;\n                case 'unGroup':\n                    this.parent.unGroup();\n                    break;\n                case 'bringToFrontOrder':\n                    this.parent.bringToFront();\n                    break;\n                case 'moveForwardOrder':\n                    this.parent.moveForward();\n                    break;\n                case 'sendToBackOrder':\n                    this.parent.sendToBack();\n                    break;\n                case 'sendBackwardOrder':\n                    this.parent.sendBackward();\n                    break;\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuOnClose = function (args) {\n        var parent = 'parentObj';\n        if (args.items.length > 0 && args.items[0][parent] instanceof Menu) {\n            this.updateItemStatus();\n        }\n    };\n    DiagramContextMenu.prototype.getLocaleText = function (item) {\n        return this.l10n.getConstant(this.localeText[item]);\n    };\n    DiagramContextMenu.prototype.updateItemStatus = function () {\n        this.contextMenu.showItems(this.hiddenItems, true);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        this.hiddenItems = [];\n        this.disableItems = [];\n        this.isOpen = false;\n    };\n    DiagramContextMenu.prototype.ensureItems = function (item, event) {\n        var key = this.getKeyFromId(item.id);\n        var dItem = this.defaultItems[key];\n        if (this.getDefaultItems().indexOf(key) !== -1) {\n            if (item.target && event &&\n                !this.ensureTarget(item)) {\n                this.hiddenItems.push(item.id);\n            }\n        }\n    };\n    DiagramContextMenu.prototype.contextMenuBeforeOpen = function (args) {\n        var diagramArgs = args;\n        diagramArgs.hiddenItems = [];\n        for (var _i = 0, _a = args.items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            this.ensureItems(item, args.event);\n            if (item.items.length) {\n                for (var _b = 0, _c = item.items; _b < _c.length; _b++) {\n                    var newItem = _c[_b];\n                    this.ensureItems(newItem, args.event);\n                }\n            }\n        }\n        this.eventArgs = args.event;\n        this.parent.trigger(contextMenuOpen, diagramArgs);\n        var hidden = true;\n        this.hiddenItems = this.hiddenItems.concat(diagramArgs.hiddenItems);\n        this.contextMenu.enableItems(this.disableItems, false, true);\n        var contextItems = this;\n        args.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) > -1) {\n                contextItems.contextMenu.hideItems([item.id], true);\n            }\n        });\n        contextItems.contextMenu.items.forEach(function (item) {\n            if (contextItems.hiddenItems.indexOf(item.id) === -1) {\n                hidden = false;\n            }\n        });\n        if (hidden) {\n            diagramArgs.cancel = hidden;\n            this.hiddenItems = [];\n        }\n    };\n    DiagramContextMenu.prototype.ensureTarget = function (item) {\n        var selectedLength = this.parent.selectedItems.nodes.length +\n            this.parent.selectedItems.connectors.length;\n        var itemText = this.getKeyFromId(item.id);\n        var target = false;\n        switch (itemText) {\n            case 'undo':\n                target = this.parent.historyManager && this.parent.historyManager.canUndo ? true : false;\n                break;\n            case 'redo':\n                target = this.parent.historyManager && this.parent.historyManager.canRedo ? true : false;\n                break;\n            case 'paste':\n                target = this.parent.commandHandler.clipboardData.clipObject ? true : false;\n                break;\n            case 'selectAll':\n                target = this.parent.nodes.length + this.parent.connectors.length ? true : false;\n                break;\n            case 'grouping':\n                target = ((selectedLength > 1) || (this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'group':\n                target = selectedLength > 1;\n                break;\n            case 'unGroup':\n                target = ((this.parent.selectedItems.nodes[0] && this.parent.selectedItems.nodes[0].children\n                    && this.parent.selectedItems.nodes[0].children.length > 1)) ? true : false;\n                break;\n            case 'cut':\n            case 'copy':\n            case 'order':\n            case 'bringToFrontOrder':\n            case 'moveForwardOrder':\n            case 'sendToBackOrder':\n            case 'sendBackwardOrder':\n                target = selectedLength ? true : false;\n                break;\n        }\n        return target;\n    };\n    /**\n     * To destroy the Context menu.\n     * @method destroy\n     * @return {void}\n     * @private\n     */\n    DiagramContextMenu.prototype.destroy = function () {\n        this.contextMenu.destroy();\n        remove(this.element);\n        this.removeEventListener();\n    };\n    DiagramContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    DiagramContextMenu.prototype.generateID = function (item) {\n        return this.parent.element.id + '_contextMenu_' + item;\n    };\n    DiagramContextMenu.prototype.getKeyFromId = function (id) {\n        return id.replace(this.parent.element.id + '_contextMenu_', '');\n    };\n    DiagramContextMenu.prototype.buildDefaultItems = function (item) {\n        var menuItem;\n        switch (item) {\n            case 'copy':\n                menuItem = { target: menuClass.content, iconCss: menuClass.copy };\n                break;\n            case 'cut':\n                menuItem = { target: menuClass.content, iconCss: menuClass.cut };\n                break;\n            case 'paste':\n                menuItem = { target: menuClass.content, iconCss: menuClass.paste };\n                break;\n            case 'undo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.undo };\n                break;\n            case 'redo':\n                menuItem = { target: menuClass.content, iconCss: menuClass.redo };\n                break;\n            case 'grouping':\n                menuItem = { target: menuClass.content };\n                break;\n            case 'group':\n                menuItem = { target: menuClass.content, iconCss: menuClass.group };\n                break;\n            case 'unGroup':\n                menuItem = { target: menuClass.content, iconCss: menuClass.unGroup };\n                break;\n            case 'order':\n                menuItem = { target: menuClass.content, iconCss: menuClass.order };\n                break;\n            case 'bringToFrontOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.bringToFront };\n                break;\n            case 'moveForwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.moveForward };\n                break;\n            case 'sendToBackOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendToBack };\n                break;\n            case 'sendBackwardOrder':\n                menuItem = { target: menuClass.content, iconCss: menuClass.sendBackward };\n                break;\n            case 'selectAll':\n                menuItem = { target: menuClass.content };\n                break;\n        }\n        this.defaultItems[item] = {\n            text: this.getLocaleText(item), id: this.generateID(item),\n            target: menuItem.target, iconCss: menuItem.iconCss ? 'e-icons ' + menuItem.iconCss : ''\n        };\n        return this.defaultItems[item];\n    };\n    DiagramContextMenu.prototype.getDefaultItems = function () {\n        return [\n            'copy',\n            'cut', 'paste', 'undo', 'redo', 'selectAll', 'grouping', 'group', 'unGroup', 'order',\n            'bringToFrontOrder', 'moveForwardOrder', 'sendToBackOrder', 'sendBackwardOrder'\n        ];\n    };\n    DiagramContextMenu.prototype.setLocaleKey = function () {\n        return {\n            'copy': 'Copy',\n            'cut': 'Cut',\n            'paste': 'Paste',\n            'undo': 'Undo',\n            'redo': 'Redo',\n            'selectAll': 'SelectAll',\n            'grouping': 'Grouping',\n            'group': 'Group',\n            'unGroup': 'UnGroup',\n            'order': 'Order',\n            'bringToFrontOrder': 'BringToFront',\n            'moveForwardOrder': 'MoveForward',\n            'sendToBackOrder': 'SendToBack',\n            'sendBackwardOrder': 'SendBackward'\n        };\n    };\n    return DiagramContextMenu;\n}());\nexport { DiagramContextMenu };\n","import { Point } from '../primitives/point';\nimport { Rect } from '../primitives/rect';\nimport { intersect2 } from '../utility/diagram-util';\nimport { canBridge } from '../utility/constraints-util';\n/**\n * ConnectorBridging defines the bridging behavior\n */\n/** @private */\nvar ConnectorBridging = /** @class */ (function () {\n    /**\n     * Constructor for the bridging module\n     * @private\n     */\n    function ConnectorBridging() {\n        //constructs the bridging module\n    }\n    /** @private */\n    ConnectorBridging.prototype.updateBridging = function (conn, diagram) {\n        var lastBridge = [];\n        var bounds;\n        conn.bridges = [];\n        if (canBridge(conn, diagram)) {\n            // if (this.canBridge(conn, diagram)) {\n            var points1 = this.getPoints(conn);\n            bounds = Rect.toBounds(points1);\n            var bridgeSpacing = conn.bridgeSpace;\n            var bgedir = diagram.bridgeDirection;\n            var count = -1;\n            var quads = diagram.connectors;\n            for (var q = 0; q < quads.length; q++) {\n                var connector1 = quads[q];\n                if (conn && connector1 && conn.id !== connector1.id) {\n                    var points2 = this.getPoints(connector1);\n                    var bounds1 = Rect.toBounds(points2);\n                    if (this.intersectsRect(bounds, bounds1)) {\n                        var intersectPts = this.intersect(points1, points2, false, bgedir, true);\n                        if (intersectPts.length > 0) {\n                            for (var i = 0; i < intersectPts.length; i++) {\n                                var fullLength = 0;\n                                var length_1 = 0;\n                                var segmentIndex = 0;\n                                var pointIndex = 0;\n                                var obj = this.getLengthAtFractionPoint(conn, intersectPts[i]);\n                                if (obj.pointIndex !== -1) {\n                                    length_1 = obj.lengthFractionIndex;\n                                    fullLength = obj.fullLength;\n                                    segmentIndex = obj.segmentIndex;\n                                    pointIndex = obj.pointIndex;\n                                    var stBridge = this.getPointAtLength((length_1 - (bridgeSpacing / 2)), points1);\n                                    var enBridge = this.getPointAtLength((length_1 + (bridgeSpacing / 2)), points1);\n                                    var fractLength = (length_1 - (bridgeSpacing / 2)) / fullLength;\n                                    fractLength = (length_1 + (bridgeSpacing / 2)) / fullLength;\n                                    if (this.isEmptyPoint(enBridge)) {\n                                        enBridge = stBridge;\n                                    }\n                                    var start = void 0;\n                                    var end = void 0;\n                                    start = conn.sourcePoint;\n                                    if (conn.type === 'Straight') {\n                                        end = conn.targetPoint;\n                                    }\n                                    else {\n                                        end = conn.intermediatePoints[pointIndex];\n                                    }\n                                    var angle = this.angleCalculation(start, end);\n                                    if (lastBridge.length) {\n                                        var fixedPoint = void 0;\n                                        fixedPoint = conn.sourcePoint;\n                                        var fix = Math.abs(this.lengthCalculation(fixedPoint, enBridge));\n                                        var var1 = 0;\n                                        var insertAt = -1;\n                                        count = -1;\n                                        for (var k = 0; k < lastBridge[segmentIndex].bridges.length; k++) {\n                                            count++;\n                                            var arcSeg = lastBridge[segmentIndex].bridges[k];\n                                            var1 = Math.abs(this.lengthCalculation(fixedPoint, arcSeg.endPoint));\n                                            if (fix < var1) {\n                                                insertAt = count;\n                                                break;\n                                            }\n                                        }\n                                        if (insertAt >= 0) {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.splice(insertAt, 0, paths);\n                                            lastBridge[segmentIndex].bridges.join();\n                                            lastBridge[segmentIndex].bridgeStartPoint.splice(insertAt, 0, stBridge);\n                                            lastBridge[segmentIndex].bridgeStartPoint.join();\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                        else {\n                                            var paths = void 0;\n                                            paths = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            paths.target = connector1.id;\n                                            lastBridge[segmentIndex].bridges.push(paths);\n                                            lastBridge[segmentIndex].bridgeStartPoint.push(stBridge);\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                    else {\n                                        if (!isNaN(stBridge.x) && !isNaN(stBridge.y) && !this.isEmptyPoint(enBridge)) {\n                                            var arcs = void 0;\n                                            var bges = [];\n                                            var bgept = [];\n                                            arcs = this.createSegment(stBridge, enBridge, angle, bgedir, pointIndex, conn, diagram);\n                                            var bgseg = {\n                                                bridges: bges, bridgeStartPoint: bgept, segmentIndex: segmentIndex\n                                            };\n                                            arcs.target = connector1.id;\n                                            var stPoints = [];\n                                            var edPoints = [];\n                                            stPoints.push(stBridge);\n                                            edPoints.push(enBridge);\n                                            lastBridge[segmentIndex] = bgseg;\n                                            lastBridge[segmentIndex].bridges.push(arcs);\n                                            lastBridge[segmentIndex].bridgeStartPoint = stPoints;\n                                            lastBridge[segmentIndex].segmentIndex = segmentIndex;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (lastBridge.length !== 0) {\n                this.firstBridge(lastBridge, conn, bridgeSpacing);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.firstBridge = function (bridgeList, connector, bridgeSpacing) {\n        for (var i = 0; i < bridgeList.length; i++) {\n            var bridge = bridgeList[i];\n            for (var k = 1; k < bridge.bridges.length; k++) {\n                if (Point.findLength(bridge.bridges[k].endPoint, bridge.bridges[k - 1].endPoint) < bridgeSpacing) {\n                    bridge.bridges[k - 1].endPoint = bridge.bridges[k].endPoint;\n                    var subBridge = bridge.bridges[k - 1];\n                    var arc = this.createBridgeSegment(subBridge.startPoint, subBridge.endPoint, subBridge.angle, bridgeSpacing, subBridge.sweep);\n                    bridge.bridges[k - 1].path = arc;\n                    bridge.bridges.splice(k, 1);\n                    bridge.bridgeStartPoint.splice(k, 1);\n                    k--;\n                }\n            }\n            var pre = connector.sourcePoint;\n            for (var j = 0; j < bridge.bridges.length; j++) {\n                var subBridge = bridge.bridges[j];\n                var preventChecking = true;\n                pre = subBridge.endPoint;\n                connector.bridges.push(subBridge);\n            }\n        }\n    };\n    /** @private */\n    ConnectorBridging.prototype.createSegment = function (st, end, angle, direction, index, conn, diagram) {\n        var arc;\n        var sweep;\n        var path = {\n            angle: 0, endPoint: { x: 0, y: 0 }, target: '', path: '',\n            segmentPointIndex: -1, startPoint: { x: 0, y: 0 }, sweep: 1, rendered: false\n        };\n        sweep = this.sweepDirection(angle, direction, conn, diagram);\n        arc = this.createBridgeSegment(st, end, angle, conn.bridgeSpace, sweep);\n        path.path = arc;\n        path.startPoint = st;\n        path.endPoint = end;\n        path.angle = angle;\n        path.segmentPointIndex = index;\n        path.sweep = sweep;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.createBridgeSegment = function (startPt, endPt, angle, bridgeSpace, sweep) {\n        var path = 'A ' + bridgeSpace / 2 + ' ' + bridgeSpace / 2 + ' ' + angle + ' , 1 ' + sweep + ' ' + endPt.x + ',' + endPt.y;\n        return path;\n    };\n    /** @private */\n    ConnectorBridging.prototype.sweepDirection = function (angle, bridgeDirection, connector, diagram) {\n        var angle1 = Math.abs(angle);\n        var sweep;\n        switch (bridgeDirection) {\n            case 'Top':\n            case 'Bottom':\n                sweep = 1;\n                if (angle1 >= 0 && angle1 <= 90) {\n                    sweep = 0;\n                }\n                break;\n            case 'Left':\n            case 'Right':\n                sweep = 1;\n                if (angle < 0 && angle >= -180) {\n                    sweep = 0;\n                }\n                break;\n        }\n        if (bridgeDirection === 'Right' || bridgeDirection === 'Bottom') {\n            if (sweep === 0) {\n                sweep = 1;\n            }\n            else {\n                sweep = 0;\n            }\n        }\n        return sweep;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPointAtLength = function (length, pts) {\n        var run = 0;\n        var pre;\n        var found = { x: 0, y: 0 };\n        for (var i = 0; i < pts.length; i++) {\n            var pt = pts[i];\n            if (!pre) {\n                pre = pt;\n                continue;\n            }\n            else {\n                var l = this.lengthCalculation(pre, pt);\n                if (run + l > length) {\n                    var r = length - run;\n                    var deg = Point.findAngle(pre, pt);\n                    var x = r * Math.cos(deg * Math.PI / 180);\n                    var y = r * Math.sin(deg * Math.PI / 180);\n                    found = { x: pre.x + x, y: pre.y + y };\n                    break;\n                }\n                else {\n                    run += l;\n                }\n            }\n            pre = pt;\n        }\n        return found;\n    };\n    /** @private */\n    ConnectorBridging.prototype.getPoints = function (connector) {\n        var points = [];\n        if (connector.intermediatePoints && (connector.type === 'Straight' || connector.type === 'Orthogonal')) {\n            for (var j = 0; j < connector.intermediatePoints.length; j++) {\n                points.push(connector.intermediatePoints[j]);\n            }\n        }\n        return points;\n    };\n    ConnectorBridging.prototype.intersectsRect = function (rect1, rect2) {\n        return ((((rect2.x < (rect1.x + rect1.width)) && (rect1.x < (rect2.x + rect2.width)))\n            && (rect2.y < (rect1.y + rect1.height))) && (rect1.y < (rect2.y + rect2.height)));\n    };\n    /** @private */\n    ConnectorBridging.prototype.intersect = function (points1, points2, self, bridgeDirection, zOrder) {\n        if (self && points2.length >= 2) {\n            points2.splice(0, 1);\n            points2.splice(0, 1);\n        }\n        var points = [];\n        for (var i = 0; i < points1.length - 1; i++) {\n            var pt = this.inter1(points1[i], points1[i + 1], points2, zOrder, bridgeDirection);\n            if (pt.length > 0) {\n                for (var k = 0; k < pt.length; k++) {\n                    points.push(pt[k]);\n                }\n            }\n            if (self && points2.length >= 1) {\n                points2.splice(0, 1);\n            }\n        }\n        return points;\n    };\n    /** @private */\n    ConnectorBridging.prototype.inter1 = function (startPt, endPt, pts, zOrder, bridgeDirection) {\n        var points1 = [];\n        for (var i = 0; i < pts.length - 1; i++) {\n            var point = intersect2(startPt, endPt, pts[i], pts[i + 1]);\n            if (!this.isEmptyPoint(point)) {\n                var angle = this.angleCalculation(startPt, endPt);\n                var angle1 = this.angleCalculation(pts[i], pts[i + 1]);\n                angle = this.checkForHorizontalLine(angle);\n                angle1 = this.checkForHorizontalLine(angle1);\n                switch (bridgeDirection) {\n                    case 'Left':\n                    case 'Right':\n                        if (angle > angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                    case 'Top':\n                    case 'Bottom':\n                        if (angle < angle1) {\n                            points1.push(point);\n                        }\n                        break;\n                }\n                if (angle === angle1 && zOrder) {\n                    points1.push(point);\n                }\n            }\n        }\n        return points1;\n    };\n    ConnectorBridging.prototype.checkForHorizontalLine = function (angle) {\n        var temp = 0;\n        var roundedAngle = Math.abs(angle);\n        if (roundedAngle > 90) {\n            temp = 180 - roundedAngle;\n        }\n        else {\n            temp = roundedAngle;\n        }\n        return temp;\n    };\n    ConnectorBridging.prototype.isEmptyPoint = function (point) {\n        return point.x === 0 && point.y === 0;\n    };\n    ConnectorBridging.prototype.getLengthAtFractionPoint = function (connector, pointAt) {\n        var lengthFraction;\n        var confirm = 100;\n        var pointIndex = -1;\n        var fullLength = 0;\n        var segmentIndex = -1;\n        var count = 0;\n        var lengthAtFractionPt = 0;\n        var pt1 = connector.sourcePoint;\n        var previouspt2 = pt1;\n        var points = [];\n        for (var i = 0; i < connector.intermediatePoints.length; i++) {\n            var point2 = connector.intermediatePoints[i];\n            points.push(point2);\n        }\n        for (var j = 0; j < points.length; j++) {\n            var pt2 = points[j];\n            var suspect = this.getSlope(pt2, pt1, pointAt, connector);\n            if (suspect < confirm) {\n                confirm = suspect;\n                lengthAtFractionPt = fullLength + this.lengthCalculation(pointAt, previouspt2);\n                segmentIndex = count;\n                pointIndex = j;\n            }\n            fullLength += Point.findLength(pt2, pt1);\n            pt1 = pt2;\n            previouspt2 = pt2;\n        }\n        count++;\n        lengthFraction = {\n            lengthFractionIndex: lengthAtFractionPt, fullLength: fullLength,\n            segmentIndex: segmentIndex, pointIndex: pointIndex\n        };\n        return lengthFraction;\n    };\n    ConnectorBridging.prototype.getSlope = function (startPt, endPt, point, connector) {\n        var three = 3.0;\n        var delX = Math.abs(startPt.x - endPt.x);\n        var delY = Math.abs(startPt.y - endPt.y);\n        var lhs = ((point.y - startPt.y) / (endPt.y - startPt.y));\n        var rhs = ((point.x - startPt.x) / (endPt.x - startPt.x));\n        if (!isFinite(lhs) || !isFinite(rhs) || isNaN(lhs) || isNaN(rhs)) {\n            if (startPt.x === endPt.x) {\n                if (startPt.y === endPt.y) {\n                    return 10000;\n                }\n                else if (((startPt.y > point.y) && (point.y > endPt.y)) || ((startPt.y < point.y) && (point.y < endPt.y))) {\n                    return Math.abs(startPt.x - point.x);\n                }\n            }\n            else if (startPt.y === endPt.y) {\n                if (((startPt.x > point.x) && (point.x > endPt.x)) || ((startPt.x < point.x) && (point.x < endPt.x))) {\n                    return Math.abs(startPt.y - point.y);\n                }\n            }\n        }\n        else {\n            if ((startPt.x >= point.x && point.x >= endPt.x) || (startPt.x <= point.x && point.x <= endPt.x) || delX < three) {\n                if ((startPt.y >= point.y && point.y >= endPt.y) || (startPt.y <= point.y && point.y <= endPt.y) || delY < three) {\n                    return Math.abs(lhs - rhs);\n                }\n            }\n        }\n        return 10000;\n    };\n    /** @private */\n    ConnectorBridging.prototype.angleCalculation = function (startPt, endPt) {\n        var xDiff = startPt.x - endPt.x;\n        var yDiff = startPt.y - endPt.y;\n        return Math.atan2(yDiff, xDiff) * (180 / Math.PI);\n    };\n    ConnectorBridging.prototype.lengthCalculation = function (startPt, endPt) {\n        //removed a try catch from here\n        var len = Math.sqrt(((startPt.x - endPt.x) * (startPt.x - endPt.x)) + ((startPt.y - endPt.y) * (startPt.y - endPt.y)));\n        return len;\n    };\n    /**\n     * To destroy the bridging module\n     * @return {void}\n     * @private\n     */\n    ConnectorBridging.prototype.destroy = function () {\n        /**\n         * Destroys the bridging module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ConnectorBridging.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Bridging';\n    };\n    return ConnectorBridging;\n}());\nexport { ConnectorBridging };\n","import { Rect } from '../primitives/rect';\nimport { PathElement } from '../core/elements/path-element';\nimport { SnapConstraints } from '../enum/enum';\nimport { Connector } from './connector';\nimport { Selector } from '../interaction/selector';\nimport { getBounds } from './../utility/base-util';\nimport { randomId } from './../utility/base-util';\nimport { isSelected } from '../interaction/actions';\nimport { TextElement } from '../core/elements/text-element';\nimport { DiagramHtmlElement } from '../core/elements/html-element';\n/**\n * Snapping\n */\nvar Snapping = /** @class */ (function () {\n    function Snapping(diagram) {\n        this.line = [];\n        this.diagram = diagram;\n    }\n    /** @private */\n    Snapping.prototype.canSnap = function () {\n        return (this.diagram.snapSettings.constraints\n            & (SnapConstraints.SnapToObject | SnapConstraints.SnapToLines)) !== 0;\n    };\n    /**\n     * Snap to object\n     * @private\n     */\n    Snapping.prototype.snapPoint = function (diagram, selectedObject, towardsLeft, towardsTop, delta, startPoint, endPoint) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        var offset = { x: 0, y: 0 };\n        var bounds = getBounds(selectedObject.wrapper);\n        var horizontallysnapped = { snapped: false, offset: 0 };\n        var verticallysnapped = { snapped: false, offset: 0 };\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            var snapLine = void 0;\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n            this.snapObject(diagram, selectedObject, snapLine, horizontallysnapped, verticallysnapped, delta, startPoint === endPoint);\n        }\n        //original position\n        var left = bounds.x + delta.x;\n        var top = bounds.y + delta.y;\n        var right = bounds.x + bounds.width + delta.x;\n        var bottom = bounds.y + bounds.height + delta.y;\n        var scaledIntervals = snapSettings.verticalGridlines.scaledIntervals;\n        //snapped positions\n        var roundedRight = this.round(right, scaledIntervals, zoomFactor);\n        var roundedLeft = this.round(left, scaledIntervals, zoomFactor);\n        scaledIntervals = snapSettings.horizontalGridlines.scaledIntervals;\n        var roundedTop = this.round(top, scaledIntervals, zoomFactor);\n        var roundedBottom = this.round(bottom, scaledIntervals, zoomFactor);\n        //currentposition\n        var currentright = bounds.x + bounds.width;\n        var currentbottom = bounds.y + bounds.height;\n        if (!horizontallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                if (Math.abs(delta.x) >= 1) {\n                    if (towardsLeft) {\n                        if (Math.abs(roundedRight - currentright) > Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                        else {\n                            offset.x += roundedRight - currentright;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedRight - currentright) < Math.abs(roundedLeft - bounds.x)) {\n                            offset.x += roundedRight - currentright;\n                        }\n                        else {\n                            offset.x += roundedLeft - bounds.x;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        else {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n                offset.x = horizontallysnapped.offset;\n            }\n            else {\n                offset.x = endPoint.x - startPoint.x;\n            }\n        }\n        if (!verticallysnapped.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                if (Math.abs(delta.y) >= 1) {\n                    if (towardsTop) {\n                        if (Math.abs(roundedBottom - currentbottom) > Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                        else {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                    }\n                    else {\n                        if (Math.abs(roundedBottom - currentbottom) < Math.abs(roundedTop - bounds.y)) {\n                            offset.y += roundedBottom - currentbottom;\n                        }\n                        else {\n                            offset.y += roundedTop - bounds.y;\n                        }\n                    }\n                }\n            }\n            else {\n                offset.y = endPoint.y - startPoint.y;\n            }\n        }\n        else {\n            offset.y = verticallysnapped.offset;\n        }\n        return offset;\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.round = function (value, snapIntervals, scale) {\n        if (scale > 1) {\n            scale = Math.pow(2, Math.floor(Math.log(scale) / Math.log(2)));\n        }\n        else {\n            scale = Math.pow(2, Math.ceil(Math.log(scale) / Math.log(2)));\n        }\n        var cutoff = 0;\n        var i = 0;\n        for (i = 0; i < snapIntervals.length; i++) {\n            cutoff += snapIntervals[i];\n        }\n        cutoff /= scale;\n        var quotient = Math.floor(Math.abs(value) / cutoff);\n        var bal = value % cutoff;\n        var prev = quotient * cutoff;\n        if (prev !== value) {\n            if (value >= 0) {\n                for (i = 0; i < snapIntervals.length; i++) {\n                    if (bal <= snapIntervals[i] / scale) {\n                        return prev + (bal < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev += snapIntervals[i] / scale;\n                        bal -= snapIntervals[i] / scale;\n                    }\n                }\n            }\n            else {\n                prev = prev * -1;\n                for (i = snapIntervals.length - 1; i >= 0; i--) {\n                    if (Math.abs(bal) <= snapIntervals[i] / scale) {\n                        return prev - (Math.abs(bal) < (snapIntervals[i] / (2 * scale)) ? 0 : snapIntervals[i] / scale);\n                    }\n                    else {\n                        prev -= snapIntervals[i] / scale;\n                        bal += snapIntervals[i] / scale;\n                    }\n                }\n            }\n        }\n        return value;\n    };\n    /**\n     * Snap to Object\n     */\n    Snapping.prototype.snapObject = function (diagram, selectedObject, g, horizontalSnap, verticalSnap, delta, ended) {\n        var lengthX = null;\n        var lengthY;\n        var hTarget;\n        var vTarget;\n        var scroller = this.diagram.scroller;\n        var snapSettings = this.diagram.snapSettings;\n        var objectsAtLeft = [];\n        var objectsAtRight = [];\n        var objectsAtTop = [];\n        var objectsAtBottom = [];\n        var bounds = getBounds(selectedObject.wrapper);\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hIntersectRect = new Rect(hoffset / scale, (bounds.y - snapObjDistance - 5), viewPort.width / scale, (bounds.height + 2 * snapObjDistance + 10));\n        var vIntersectRect = new Rect((bounds.x - snapObjDistance - 5), voffset / scale, (bounds.width + 2 * snapObjDistance + 10), viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vIntersectRect, viewPort);\n        var i;\n        var target;\n        var targetBounds;\n        var nameTable = diagram.nameTable;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.height + targetBounds.y < delta.y + bounds.y) {\n                        objectsAtTop.push({\n                            obj: target, distance: Math.abs(bounds.y + delta.y - targetBounds.y - targetBounds.height)\n                        });\n                    }\n                    else if (targetBounds.y > bounds.y + delta.y + bounds.height) {\n                        objectsAtBottom.push({ obj: target, distance: Math.abs(bounds.y + delta.y + bounds.height - targetBounds.y) });\n                    }\n                    if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y - delta.y)) {\n                        if (Math.abs(targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2 + delta.x)) <=\n                            snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'centerX');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x - (bounds.x + bounds.width + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(targetBounds.x + targetBounds.width - (bounds.x + delta.x)) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hIntersectRect, viewPort);\n        for (var j = 0; j < nodes.length; j++) {\n            target = nodes[j];\n            if (this.canBeTarget(diagram, target)) {\n                if (!(this.diagram.nameTable[target.id] instanceof Connector) && this.canConsider(nameTable, selectedObject, target)) {\n                    targetBounds = target.bounds;\n                    if (targetBounds.x + targetBounds.width < bounds.x + delta.x) {\n                        objectsAtLeft[objectsAtLeft.length] = {\n                            obj: target, distance: Math.abs((bounds.x + delta.x) - targetBounds.x - targetBounds.width)\n                        };\n                    }\n                    if (targetBounds.x > bounds.x + delta.x + bounds.width) {\n                        objectsAtRight[objectsAtRight.length] = {\n                            obj: target, distance: Math.abs(bounds.x + delta.x + bounds.width - targetBounds.x)\n                        };\n                    }\n                    if (lengthY == null || lengthY > Math.abs(targetBounds.x - bounds.x - delta.x)) {\n                        if (Math.abs(targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2 + delta.y))\n                            <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'centerY');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'top');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - (bounds.y + bounds.height + delta.y)) <=\n                            snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y + targetBounds.height - bounds.y - delta.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                        else if (Math.abs(targetBounds.y - (bounds.y + bounds.height + delta.y)) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        this.createGuidelines(diagram, hTarget, vTarget, g, horizontalSnap, verticalSnap, ended);\n        if (!horizontalSnap.snapped) {\n            this.createHSpacingLines(diagram, g, selectedObject, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n        if (!verticalSnap.snapped) {\n            this.createVSpacingLines(diagram, g, selectedObject, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance);\n        }\n    };\n    /**\n     * @private\n     */\n    Snapping.prototype.snapConnectorEnd = function (point) {\n        var snapSettings = this.diagram.snapSettings;\n        var zoomFactor = 1;\n        if (snapSettings.constraints & SnapConstraints.SnapToLines) {\n            point.x = this.round(point.x, snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n            point.y = this.round(point.y, snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n        }\n        return point;\n    };\n    Snapping.prototype.canBeTarget = function (diagram, node) {\n        node = this.diagram.nameTable[node.id];\n        return !(isSelected(this.diagram, node, false));\n    };\n    Snapping.prototype.snapSize = function (diagram, horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, selectedObject, ended) {\n        var lengthX;\n        var lengthY;\n        var snapSettings = this.diagram.snapSettings;\n        var scroller = this.diagram.scroller;\n        var hTarget;\n        var vTarget;\n        var bounds = getBounds(selectedObject.wrapper);\n        var nameTable = diagram.nameTable;\n        var sameWidth = [];\n        var sameHeight = [];\n        var scale = diagram.scroller.currentZoom;\n        var hoffset = -scroller.horizontalOffset;\n        var voffset = -scroller.verticalOffset;\n        var snapObjDistance = snapSettings.snapObjectDistance / scale;\n        var viewPort = new Rect(0, 0, scroller.viewPortWidth, scroller.viewPortHeight);\n        var hintersectedrect = new Rect(hoffset / scale, (bounds.y - 5) / scale, viewPort.width / scale, (bounds.height + 10) / scale);\n        var vintersectedrect = new Rect((bounds.x - 5) / scale, voffset / scale, (bounds.width + 10) / scale, viewPort.height / scale);\n        viewPort = new Rect(hoffset / scale, voffset / scale, viewPort.width / scale, viewPort.height / scale);\n        var nodesInView = [];\n        var nodes = this.findNodes(diagram.spatialSearch, selectedObject, vintersectedrect, viewPort, nodesInView);\n        var i;\n        var target;\n        var targetBounds;\n        for (i = 0; i < nodes.length; i++) {\n            target = nodes[i];\n            if (this.canConsider(nameTable, selectedObject, target) && !(this.diagram.nameTable[target.id] instanceof Connector)) {\n                targetBounds = target.bounds;\n                if (lengthX == null || lengthX > Math.abs(targetBounds.y - bounds.y)) {\n                    if (horizontalSnap.left) {\n                        if (Math.abs(bounds.x + deltaX - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'left');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'leftRight');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                    else if (horizontalSnap.right) {\n                        if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x - targetBounds.width) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'right');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                        else if (Math.abs(bounds.x + deltaX + bounds.width - targetBounds.x) <= snapObjDistance) {\n                            hTarget = this.createSnapObject(targetBounds, bounds, 'rightLeft');\n                            lengthX = Math.abs(targetBounds.y - bounds.y);\n                        }\n                    }\n                }\n            }\n        }\n        nodes = this.findNodes(diagram.spatialSearch, selectedObject, hintersectedrect, viewPort);\n        for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n            var target_1 = nodes[i_1];\n            if (this.canConsider(nameTable, selectedObject, target_1) && !(this.diagram.nameTable[target_1.id] instanceof Connector)) {\n                var targetBounds_1 = target_1.bounds;\n                if (lengthY == null || lengthY > Math.abs(targetBounds_1.x - bounds.x)) {\n                    if (verticalSnap.top) {\n                        if (Math.abs(bounds.y + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'top');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'topBottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                    else if (verticalSnap.bottom) {\n                        if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y - targetBounds_1.height) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottom');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                        else if (Math.abs(bounds.y + bounds.height + deltaY - targetBounds_1.y) <= snapObjDistance) {\n                            vTarget = this.createSnapObject(targetBounds_1, bounds, 'bottomTop');\n                            lengthY = Math.abs(targetBounds_1.x - bounds.x);\n                        }\n                    }\n                }\n            }\n        }\n        for (i = 0; i < nodesInView.length; i++) {\n            target = nodesInView[i];\n            if (this.canConsider(nameTable, selectedObject, target)) {\n                var targetBounds_2 = target.bounds;\n                var delta = horizontalSnap.left ? -deltaX : deltaX;\n                var difference = Math.abs(bounds.width + delta - targetBounds_2.width);\n                var actualDiff = void 0;\n                if (difference <= snapObjDistance) {\n                    actualDiff = horizontalSnap.left ? -targetBounds_2.width + bounds.width : targetBounds_2.width - bounds.width;\n                    sameWidth[sameWidth.length] = { source: target, difference: difference, offset: actualDiff };\n                }\n                delta = verticalSnap.top ? -deltaY : deltaY;\n                var dify = Math.abs(bounds.height + delta - targetBounds_2.height);\n                if (dify <= snapObjDistance) {\n                    actualDiff = verticalSnap.top ? -targetBounds_2.height + bounds.height : targetBounds_2.height - bounds.height;\n                    sameHeight[sameHeight.length] = { source: target, difference: dify, offset: actualDiff };\n                }\n            }\n        }\n        var g;\n        if (!diagram.getTool) {\n            var g_1 = this.createGuidelines(diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended);\n        }\n        if (!horizontalSnap.snapped && sameWidth.length > 0 && (horizontalSnap.left || horizontalSnap.right)) {\n            this.addSameWidthLines(diagram, snapLine, sameWidth, horizontalSnap, ended, selectedObject);\n        }\n        if (!verticalSnap.snapped && sameHeight.length > 0 && (verticalSnap.top || verticalSnap.bottom)) {\n            this.addSameHeightLines(diagram, snapLine, sameHeight, verticalSnap, ended, selectedObject);\n        }\n    };\n    /**\n     * Snap to object on top\n     * @private\n     */\n    Snapping.prototype.snapTop = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsT) {\n        var dify = deltaY;\n        verticalSnap.top = true;\n        var y;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        //let initialBoundsT: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialBoundsT.y - initialBoundsT.height * shape.pivot.y + deltaY - (shape.offsetY - shape.height * shape.pivot.y);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var top_1 = initialBoundsT.y - initialBoundsT.height * shape.pivot.y;\n                var actualTop = top_1 + deltaY;\n                var roundedTop = this.round(actualTop, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedTop - top_1;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * Snap to object on right\n     * @private\n     */\n    Snapping.prototype.snapRight = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBound) {\n        var difx = deltaX;\n        var x;\n        horizontalSnap.right = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBound: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBound.x + initialBound.width * (1 - shape.pivot.x) + deltaX - (shape.offsetX + shape.width * (1 - shape.pivot.x));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var right = initialBound.x + initialBound.width * (1 - shape.pivot.x);\n                var actualRight = right + deltaX;\n                var roundedRight = this.round(actualRight, this.diagram.snapSettings.verticalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedRight - right;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on left\n     * @private\n     */\n    Snapping.prototype.snapLeft = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialBoundsB) {\n        var difx = deltaX;\n        var x = 0;\n        horizontalSnap.left = true;\n        verticalSnap.top = verticalSnap.bottom = false;\n        var zoomFactor = 1;\n        //let initialBoundsB: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            x = initialBoundsB.x - initialBoundsB.width * shape.pivot.x + deltaX - (shape.offsetX - shape.width * shape.pivot.x);\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, x, deltaY, this.diagram.selectedItems, ended);\n        }\n        if (!horizontalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToVerticalLines) {\n                var left = initialBoundsB.x - initialBoundsB.width * shape.pivot.x;\n                var actualLeft = left + deltaX;\n                var roundedLeft = this.round(actualLeft, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                difx = roundedLeft - left;\n            }\n        }\n        else {\n            difx = (deltaX - x) + horizontalSnap.offset;\n        }\n        return difx;\n    };\n    /**\n     * Snap to object on bottom\n     * @private\n     */\n    Snapping.prototype.snapBottom = function (horizontalSnap, verticalSnap, snapLine, deltaX, deltaY, shape, ended, initialRect) {\n        var dify = deltaY;\n        verticalSnap.bottom = true;\n        horizontalSnap.left = horizontalSnap.right = false;\n        var zoomFactor = 1;\n        var y = 0;\n        //let initialRect: Rect = new Rect(shape.offsetX, shape.offsetY, shape.width, shape.height);\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject && !shape.rotateAngle) {\n            //(!this.selectedObject.isLane && !this.selectedObject.isSwimlane)) {\n            y = initialRect.y + initialRect.height * (1 - shape.pivot.y) + deltaY - (shape.offsetY + shape.height * (1 - shape.pivot.y));\n            this.snapSize(this.diagram, horizontalSnap, verticalSnap, snapLine, deltaX, y, this.diagram.selectedItems, ended);\n        }\n        var bounds;\n        bounds = ((shape instanceof TextElement) || (shape instanceof DiagramHtmlElement)) ? getBounds(shape) :\n            getBounds(shape.wrapper);\n        if (!verticalSnap.snapped) {\n            if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToHorizontalLines) {\n                var bottom = initialRect.y + initialRect.height * (1 - shape.pivot.y);\n                var actualBottom = bottom + deltaY;\n                var roundedBottom = this.round(actualBottom, this.diagram.snapSettings.horizontalGridlines.scaledIntervals, zoomFactor);\n                dify = roundedBottom - bottom;\n            }\n        }\n        else {\n            dify = (deltaY - y) + verticalSnap.offset;\n        }\n        return dify;\n    };\n    /**\n     * To create the same width and same size lines\n     */\n    Snapping.prototype.createGuidelines = function (diagram, hTarget, vTarget, snapLine, horizontalSnap, verticalSnap, ended) {\n        if (hTarget) {\n            horizontalSnap.offset = hTarget.offsetX;\n            horizontalSnap.snapped = true;\n            if (!ended) {\n                if (hTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(hTarget.start, hTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        if (vTarget) {\n            verticalSnap.offset = vTarget.offsetY;\n            verticalSnap.snapped = true;\n            if (!ended) {\n                if (vTarget.type === 'sideAlign') {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n                else {\n                    this.renderAlignmentLines(vTarget.start, vTarget.end, snapLine, diagram.scroller.transform);\n                }\n            }\n        }\n        return snapLine;\n    };\n    /**\n     * To create the alignment lines\n     */\n    Snapping.prototype.renderAlignmentLines = function (start, end, svg, transform) {\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        var line1 = {\n            stroke: '#07EDE1', strokeWidth: 1, startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, fill: '#07EDE1', dashArray: '', width: 1,\n            x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        var i = 0;\n        this.line.push(line1);\n        for (i = 0; i < this.line.length; i++) {\n            this.diagram.diagramRenderer.drawLine(svg, this.line.pop());\n        }\n    };\n    /**\n     * To create Horizontal spacing lines\n     */\n    Snapping.prototype.createHSpacingLines = function (diagram, g, shape, objectsAtLeft, objectsAtRight, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var top = 0;\n        this.sortByDistance(objectsAtLeft, 'distance', true);\n        this.sortByDistance(objectsAtRight, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearestleft;\n        var nearestright;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtLeft.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtLeft[0];\n            nearestleft = ((objectsAtLeft[0].obj).bounds);\n            top = nearestleft.y;\n            if (objectsAtLeft.length > 1) {\n                targetBounds = ((objectsAtLeft[1].obj).bounds);\n                equaldistance = nearestleft.x - targetBounds.x - targetBounds.width;\n                if (Math.abs(equaldistance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    top = this.findEquallySpacedNodesAtLeft(objectsAtLeft, equaldistance, top, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtLeft[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtLeft[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        top = bounds.y < top || !top ? bounds.y : top;\n        if (objectsAtRight.length > 0) {\n            var dist = void 0;\n            nearestright = ((objectsAtRight[0].obj).bounds);\n            top = nearestright.y < top ? nearestright.y : top;\n            if (objectsAtRight.length > 1) {\n                targetBounds = ((objectsAtRight[1].obj).bounds);\n                dist = targetBounds.x - nearestright.x - nearestright.width;\n            }\n            if (objectsAtLeft.length > 0) {\n                if (Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtRight[0].distance - objectsAtLeft[0].distance) / 2;\n                    (objectsAtRight[0].distance < objectsAtLeft[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                }\n                else if (objectsAtLeft.length === 1) {\n                    nearestleft = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtRight[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtRight[0];\n            }\n            if (objectsAtRight.length > 1 && nearestright.x + nearestright.width < targetBounds.x) {\n                top = this.findEquallySpacedNodesAtRight(objectsAtRight, dist, top, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addHSpacingLines(diagram, g, equallySpaced, ended, top);\n            var deltaHorizontal = 0;\n            if (ended) {\n                deltaHorizontal = delta.x;\n            }\n            if (nearestleft) {\n                horizontalSnap.offset = equaldistance - Math.abs(bounds.x + deltaHorizontal - nearestleft.x - nearestleft.width)\n                    + deltaHorizontal;\n            }\n            else if (nearestright) {\n                horizontalSnap.offset = Math.abs(bounds.x + bounds.width + deltaHorizontal - nearestright.x)\n                    - equaldistance + deltaHorizontal;\n            }\n            horizontalSnap.snapped = true;\n        }\n    };\n    /**\n     * To create vertical spacing lines\n     */\n    Snapping.prototype.createVSpacingLines = function (diagram, g, shape, objectsAtTop, objectsAtBottom, horizontalSnap, verticalSnap, ended, delta, snapObjDistance) {\n        var right = 0;\n        this.sortByDistance(objectsAtTop, 'distance', true);\n        this.sortByDistance(objectsAtBottom, 'distance', true);\n        var equallySpaced = [];\n        var bounds = getBounds(shape.wrapper);\n        var nearesttop;\n        var nearestbottom;\n        var targetBounds;\n        var equaldistance;\n        if (objectsAtTop.length > 0) {\n            equallySpaced[equallySpaced.length] = objectsAtTop[0];\n            nearesttop = ((objectsAtTop[0].obj).bounds);\n            right = nearesttop.x + nearesttop.width;\n            if (objectsAtTop.length > 1) {\n                targetBounds = ((objectsAtTop[1].obj).bounds);\n                equaldistance = nearesttop.y - targetBounds.y - targetBounds.height;\n                if (Math.abs(equaldistance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    right = this.findEquallySpacedNodesAtTop(objectsAtTop, equaldistance, right, equallySpaced);\n                }\n                else {\n                    equaldistance = objectsAtTop[0].distance;\n                }\n            }\n            else {\n                equaldistance = objectsAtTop[0].distance;\n            }\n        }\n        this.sortByDistance(equallySpaced, 'distance');\n        equallySpaced[equallySpaced.length] = { obj: shape, distance: 0 };\n        right = bounds.x + bounds.width > right || !right ? bounds.x + bounds.width : right;\n        var dist;\n        if (objectsAtBottom.length > 0) {\n            nearestbottom = ((objectsAtBottom[0].obj).bounds);\n            right = nearestbottom.x + nearestbottom.width > right ? nearestbottom.x + nearestbottom.width : right;\n            if (objectsAtBottom.length > 1) {\n                targetBounds = ((objectsAtBottom[1].obj).bounds);\n                dist = targetBounds.y - nearestbottom.y - nearestbottom.height;\n            }\n            if (objectsAtTop.length > 0) {\n                if (Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) <= snapObjDistance) {\n                    var adjustablevalue = Math.abs(objectsAtBottom[0].distance - objectsAtTop[0].distance) / 2;\n                    (objectsAtBottom[0].distance < objectsAtTop[0].distance) ?\n                        equaldistance -= adjustablevalue : equaldistance += adjustablevalue;\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                }\n                else if (objectsAtTop.length === 1) {\n                    nearesttop = undefined;\n                    equallySpaced.splice(0, 1);\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n                    equaldistance = dist;\n                }\n            }\n            else {\n                equaldistance = dist;\n                equallySpaced[equallySpaced.length] = objectsAtBottom[0];\n            }\n            if (objectsAtBottom.length > 1 && targetBounds.y > nearestbottom.y + nearestbottom.height) {\n                right = this.findEquallySpacedNodesAtBottom(objectsAtBottom, dist, right, equallySpaced, snapObjDistance);\n            }\n        }\n        if (equallySpaced.length > 2) {\n            this.addVSpacingLines(diagram, g, equallySpaced, ended, right);\n            var deltaVertical = 0;\n            if (ended) {\n                deltaVertical = delta.y;\n            }\n            if (nearesttop) {\n                verticalSnap.offset = equaldistance - Math.abs(bounds.y + deltaVertical - nearesttop.y - nearesttop.height) + deltaVertical;\n            }\n            else if (nearestbottom) {\n                verticalSnap.offset = Math.abs(bounds.y + bounds.height + deltaVertical - nearestbottom.y) - equaldistance + deltaVertical;\n            }\n            verticalSnap.snapped = true;\n        }\n    };\n    /**\n     * Add the Horizontal spacing lines\n     */\n    Snapping.prototype.addHSpacingLines = function (diagram, g, equallySpaced, ended, top) {\n        var i;\n        var start;\n        var end;\n        if (!ended) {\n            for (i = 0; i < equallySpaced.length - 1; i++) {\n                var crnt = equallySpaced[i].obj instanceof Selector ?\n                    getBounds((equallySpaced[i].obj).wrapper) : ((equallySpaced[i].obj).bounds);\n                var next = equallySpaced[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpaced[i + 1].obj).wrapper) : ((equallySpaced[i + 1].obj).bounds);\n                start = { x: crnt.x + crnt.width, y: top - 15 };\n                end = { x: next.x, y: top - 15 };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * Add the vertical spacing lines\n     */\n    Snapping.prototype.addVSpacingLines = function (diagram, g, equallySpacedObjects, ended, right) {\n        var start;\n        var end;\n        if (!ended) {\n            for (var i = 0; i < equallySpacedObjects.length - 1; i++) {\n                var crnt = equallySpacedObjects[i].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i].obj).wrapper) : ((equallySpacedObjects[i].obj).bounds);\n                var next = equallySpacedObjects[i + 1].obj instanceof Selector ?\n                    getBounds((equallySpacedObjects[i + 1].obj).wrapper) :\n                    ((equallySpacedObjects[i + 1].obj).bounds);\n                start = { x: right + 15, y: crnt.y + crnt.height };\n                end = { x: right + 15, y: next.y };\n                this.renderSpacingLines(start, end, g, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n    };\n    /**\n     * To add same width lines\n     */\n    Snapping.prototype.addSameWidthLines = function (diagram, snapLine, sameWidths, horizontalSnap, ended, shape) {\n        this.sortByDistance(sameWidths, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameWidths[0];\n        var startPt;\n        var endPt;\n        var targetBounds = (target.source).bounds;\n        var sameSizes = [];\n        sameSizes.push(sameWidths[0]);\n        var i;\n        var crntbounds;\n        for (i = 1; i < sameWidths.length; i++) {\n            crntbounds = (sameWidths[i].source).bounds;\n            if (crntbounds.width === targetBounds.width) {\n                sameSizes.push(sameWidths[i]);\n            }\n        }\n        if (!ended) {\n            startPt = { x: bounds.x + target.offset, y: bounds.y - 15 };\n            endPt = { x: bounds.x + bounds.width + target.offset, y: bounds.y - 15 };\n            this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                startPt = { x: bounds.x, y: bounds.y - 15 };\n                endPt = { x: bounds.x + bounds.width, y: bounds.y - 15 };\n                this.renderSpacingLines(startPt, endPt, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        horizontalSnap.offset = target.offset;\n        horizontalSnap.snapped = true;\n    };\n    /**\n     * To add same height lines\n     */\n    Snapping.prototype.addSameHeightLines = function (diagram, snapLine, sameHeights, verticalSnap, ended, shape) {\n        this.sortByDistance(sameHeights, 'offset');\n        var bounds = getBounds(shape.wrapper);\n        var target = sameHeights[0];\n        var targetBounds = (target.source).bounds;\n        var start;\n        var end;\n        var sameSizes = [];\n        sameSizes.push(sameHeights[0]);\n        var i;\n        var crntbounds;\n        for (i = 0; i < sameHeights.length; i++) {\n            crntbounds = (sameHeights[i].source).bounds;\n            if (crntbounds.height === targetBounds.height) {\n                sameSizes.push(sameHeights[i]);\n            }\n        }\n        if (!ended) {\n            start = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset };\n            end = { x: bounds.x + bounds.width + 15, y: bounds.y + target.offset + bounds.height };\n            this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            for (i = 0; i < sameSizes.length; i++) {\n                bounds = (sameSizes[i].source).bounds;\n                start = { x: bounds.x + bounds.width + 15, y: bounds.y };\n                end = { x: bounds.x + bounds.width + 15, y: bounds.y + bounds.height };\n                this.renderSpacingLines(start, end, snapLine, this.getAdornerLayerSvg(), diagram.scroller.transform);\n            }\n        }\n        verticalSnap.offset = target.offset;\n        verticalSnap.snapped = true;\n    };\n    /**\n     * Render spacing lines\n     */\n    Snapping.prototype.renderSpacingLines = function (start, end, snapLine, svg, transform) {\n        var d;\n        var d1;\n        var line1;\n        var element = new PathElement();\n        var options = {};\n        start = {\n            x: (start.x + transform.tx) * transform.scale,\n            y: (start.y + transform.ty) * transform.scale\n        };\n        end = {\n            x: (end.x + transform.tx) * transform.scale,\n            y: (end.y + transform.ty) * transform.scale\n        };\n        if (start.x === end.x) {\n            d = 'M' + (start.x - 5) + ' ' + (start.y + 5) + 'L' + start.x + ' ' + start.y +\n                'L' + (start.x + 5) + ' ' + (start.y + 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y + ' L' +\n                (end.x + 5) + ' ' + (end.y - 5) + 'z';\n            line1 = {\n                startPoint: { x: start.x - 8, y: start.y - 1 },\n                endPoint: { x: start.x + 8, y: start.y - 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId()\n            };\n            element.data = d;\n            options.data = element.data;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                startPoint: { x: end.x - 8, y: end.y + 1 },\n                endPoint: { x: end.x + 8, y: end.y + 1 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: this.getAdornerLayerSvg().id + 'spacing'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        else {\n            d = 'M' + (start.x + 5) + ' ' + (start.y + 5) + ' L' + start.x + ' ' + start.y +\n                ' L' + (start.x + 5) + ' ' + (start.y - 5) + 'z' + 'M' + (end.x - 5) + ' ' +\n                (end.y - 5) + ' L' + end.x + ' ' + end.y +\n                ' L' + (end.x - 5) + ' ' + (end.y + 5) + 'z';\n            element.data = d;\n            options.data = d;\n            options.angle = 0;\n            options.pivotX = 0;\n            options.pivotY = 0;\n            options.x = 0;\n            options.y = 0;\n            options.height = 0;\n            options.width = 1;\n            options.id = randomId();\n            this.diagram.diagramRenderer.drawPath(snapLine, options);\n            line1 = {\n                visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: start.x - 1, y: start.y - 8 },\n                endPoint: { x: start.x - 1, y: start.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n            line1 = {\n                width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n                pivotY: 0, visible: true, opacity: 1, id: randomId(),\n                startPoint: { x: end.x + 1, y: end.y - 8 },\n                endPoint: { x: end.x + 1, y: end.y + 8 },\n                stroke: '#07EDE1',\n                strokeWidth: 1, fill: '#07EDE1', dashArray: '0'\n            };\n            this.line.push(line1);\n            this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n        }\n        line1 = {\n            startPoint: { x: start.x, y: start.y },\n            endPoint: { x: end.x, y: end.y }, stroke: '#07EDE1', strokeWidth: 1, fill: '#07EDE1',\n            dashArray: '0', width: 1, x: 0, y: 0, height: 0, angle: 0, pivotX: 0,\n            pivotY: 0, visible: true, opacity: 1, id: randomId()\n        };\n        this.line.push(line1);\n        this.diagram.diagramRenderer.drawLine(snapLine, this.line.pop());\n    };\n    /**\n     * To Create Snap object with position, initial bounds, and final bounds\n     * @private\n     */\n    Snapping.prototype.createSnapObject = function (targetBounds, bounds, snap) {\n        var snapObject;\n        switch (snap) {\n            case 'left':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: Math.min(targetBounds.y, bounds.y) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'right':\n                snapObject = {\n                    type: 'sideAlign',\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x - bounds.width,\n                    offsetY: 0,\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                };\n                break;\n            case 'top':\n                snapObject = {\n                    offsetY: targetBounds.y - bounds.y, offsetX: 0, type: 'sideAlign',\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                };\n                break;\n            case 'bottom':\n                snapObject = {\n                    type: 'sideAlign', offsetY: targetBounds.y + targetBounds.height - bounds.y - bounds.height, offsetX: 0,\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                };\n                break;\n            case 'topBottom':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height\n                    },\n                    offsetY: targetBounds.y + targetBounds.height - bounds.y, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'bottomTop':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y },\n                    end: { x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)), y: targetBounds.y },\n                    offsetY: targetBounds.y - bounds.y - bounds.height, offsetX: 0, type: 'sideAlign'\n                };\n                break;\n            case 'leftRight':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width), y: Math.min(targetBounds.y, bounds.y) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width - bounds.x, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'rightLeft':\n                snapObject = {\n                    start: { x: (targetBounds.x), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: { x: (targetBounds.x), y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height) },\n                    offsetX: targetBounds.x - bounds.x - bounds.width, offsetY: 0, type: 'sideAlign'\n                };\n                break;\n            case 'centerX':\n                snapObject = {\n                    start: { x: (targetBounds.x + targetBounds.width / 2), y: (Math.min(targetBounds.y, bounds.y)) },\n                    end: {\n                        x: (targetBounds.x + targetBounds.width / 2),\n                        y: Math.max(targetBounds.y + targetBounds.height, bounds.y + bounds.height)\n                    },\n                    offsetX: targetBounds.x + targetBounds.width / 2 - (bounds.x + bounds.width / 2), offsetY: 0, type: 'centerAlign'\n                };\n                break;\n            case 'centerY':\n                snapObject = {\n                    start: { x: (Math.min(targetBounds.x, bounds.x)), y: targetBounds.y + targetBounds.height / 2 },\n                    end: {\n                        x: (Math.max(targetBounds.x + targetBounds.width, bounds.x + bounds.width)),\n                        y: targetBounds.y + targetBounds.height / 2\n                    },\n                    offsetY: targetBounds.y + targetBounds.height / 2 - (bounds.y + bounds.height / 2), offsetX: 0, type: 'centerAlign'\n                };\n                break;\n        }\n        return snapObject;\n    };\n    /**\n     * Calculate the snap angle\n     * @private\n     */\n    Snapping.prototype.snapAngle = function (diagram, angle) {\n        var snapSettings = this.diagram.snapSettings;\n        var snapAngle = snapSettings.snapAngle;\n        var width = angle % (snapAngle || 0);\n        if (width >= (snapAngle / 2)) {\n            return angle + snapAngle - width;\n        }\n        else {\n            return angle - width;\n        }\n    };\n    /**\n     * Check whether the node to be snapped or not.\n     */\n    Snapping.prototype.canConsider = function (nameTable, selectedObject, target) {\n        var consider = false;\n        if (this.diagram.selectedItems.nodes.length && this.diagram.selectedItems.nodes[0].id === target.id) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Find the total number of nodes in diagram using SpatialSearch\n     */\n    Snapping.prototype.findNodes = function (spatialSearch, node, child, viewPort, nodesInView) {\n        var nodes = [];\n        var nd;\n        var bounds;\n        var quads = spatialSearch.findQuads(nodesInView ? viewPort : child);\n        for (var i = 0; i < quads.length; i++) {\n            var quad = quads[i];\n            if (quad.objects.length > 0) {\n                for (var j = 0; j < quad.objects.length; j++) {\n                    nd = quad.objects[j];\n                    if (!(this.diagram.nameTable[nd.id] instanceof Connector) && nd.visible\n                        && !(this.diagram.nameTable[nd.id].shape.type === 'SwimLane') && !(this.diagram.nameTable[nd.id].isLane) &&\n                        !(this.diagram.nameTable[nd.id].isPhase) && !(this.diagram.nameTable[nd.id].isHeader)) {\n                        bounds = getBounds(nd);\n                        if (nodes.indexOf(nd) === -1 && this.intersectsRect(child, bounds)) {\n                            nodes.push(nd);\n                        }\n                        if (nodesInView && nodesInView.indexOf(nd) && this.intersectsRect(viewPort, bounds)) {\n                            nodesInView.push(nd);\n                        }\n                    }\n                }\n            }\n        }\n        return nodes;\n    };\n    Snapping.prototype.intersectsRect = function (child, bounds) {\n        return ((((bounds.x < (child.x + child.width)) && (child.x < (bounds.x + bounds.width)))\n            && (bounds.y < (child.y + child.height))) && (child.y < (bounds.y + bounds.height)));\n    };\n    Snapping.prototype.getAdornerLayerSvg = function () {\n        return this.diagram.diagramRenderer.adornerSvgLayer;\n    };\n    /**\n     * To remove grid lines on mouse move and mouse up\n     * @private\n     */\n    Snapping.prototype.removeGuidelines = function (diagram) {\n        var selectionRect = this.getAdornerLayerSvg().getElementById('_SnappingLines');\n        var line = this.getAdornerLayerSvg().getElementById('pivotLine');\n        if (selectionRect) {\n            selectionRect.parentNode.removeChild(selectionRect);\n        }\n        if (line) {\n            line.parentNode.removeChild(line);\n        }\n    };\n    /**\n     * Sort the objects by its distance\n     */\n    Snapping.prototype.sortByDistance = function (obj, value, ascending) {\n        var i;\n        var j;\n        var temp;\n        if (ascending) {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] > obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n        else {\n            for (i = 0; i < obj.length; i++) {\n                for (j = i + 1; j < obj.length; j++) {\n                    if (obj[i][value] < obj[j][value]) {\n                        temp = obj[i];\n                        obj[i] = obj[j];\n                        obj[j] = temp;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * To find nodes that are equally placed at left of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtLeft = function (objectsAtLeft, equalDistance, top, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        var i;\n        for (i = 1; i < objectsAtLeft.length; i++) {\n            prevBounds = ((objectsAtLeft[i - 1].obj).bounds);\n            targetBounds = ((objectsAtLeft[i].obj).bounds);\n            dist = prevBounds.x - targetBounds.x - targetBounds.width;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtLeft[i];\n                if (targetBounds.y < top) {\n                    top = targetBounds.y;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return top;\n    };\n    /**\n     * To find nodes that are equally placed at right of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtRight = function (objectsAtRight, equalDistance, top, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtRight[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtRight.length - 1; i++) {\n                target = objectsAtRight[i].obj;\n                targetBounds = ((objectsAtRight[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.x - prevBounds.x - prevBounds.width;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtRight[i + 1];\n                    if (prevBounds.y < top) {\n                        top = prevBounds.y;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return top;\n    };\n    Snapping.prototype.findEquallySpacedNodesAtTop = function (objectsAtTop, equalDistance, right, equallySpaced) {\n        var prevBounds;\n        var targetBounds;\n        var dist;\n        for (var i = 1; i < objectsAtTop.length; i++) {\n            prevBounds = ((objectsAtTop[i - 1].obj).bounds);\n            targetBounds = ((objectsAtTop[i].obj).bounds);\n            dist = prevBounds.y - targetBounds.y - targetBounds.height;\n            if (Math.abs(dist - equalDistance) <= 1) {\n                equallySpaced[equallySpaced.length] = objectsAtTop[i];\n                if (targetBounds.x + targetBounds.width > right) {\n                    right = targetBounds.x + targetBounds.width;\n                }\n            }\n            else {\n                break;\n            }\n        }\n        return right;\n    };\n    /**\n     * To find nodes that are equally placed at bottom of the selected node\n     */\n    Snapping.prototype.findEquallySpacedNodesAtBottom = function (objectsAtBottom, equalDistance, right, equallySpaced, snapObjDistance) {\n        var actualDistance = objectsAtBottom[0].distance;\n        var target;\n        var targetBounds;\n        var prevBounds;\n        var dist;\n        if (Math.abs(equalDistance - actualDistance) <= snapObjDistance) {\n            for (var i = 0; i < objectsAtBottom.length - 1; i++) {\n                target = objectsAtBottom[i].obj;\n                targetBounds = ((objectsAtBottom[i + 1].obj).bounds);\n                prevBounds = (target.bounds);\n                dist = targetBounds.y - prevBounds.y - prevBounds.height;\n                if (Math.abs(dist - equalDistance) <= 1) {\n                    equallySpaced[equallySpaced.length] = objectsAtBottom[i + 1];\n                    if (prevBounds.x + prevBounds.width > right) {\n                        right = prevBounds.x + prevBounds.width;\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n        }\n        return right;\n    };\n    /**\n     * To get Adoner layer to draw snapLine\n     * @private\n     */\n    Snapping.prototype.getLayer = function () {\n        var snapLine;\n        if (this.diagram.snapSettings.constraints & SnapConstraints.SnapToObject) {\n            snapLine = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n            snapLine.setAttribute('id', '_SnappingLines');\n            snapLine.setAttribute('shapeRendering', 'crispEdges');\n            this.getAdornerLayerSvg().appendChild(snapLine);\n        }\n        return snapLine;\n    };\n    /**\n     * Constructor for the snapping module\n     * @private\n     */\n    // constructor() {\n    //     //constructs the snapping module\n    // }\n    /**\n     * To destroy the snapping module\n     * @return {void}\n     * @private\n     */\n    Snapping.prototype.destroy = function () {\n        /**\n         * Destroys the snapping module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    Snapping.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Snapping';\n    };\n    return Snapping;\n}());\nexport { Snapping };\n","import { Node } from './node';\nimport { DiagramAction } from '../enum/enum';\nimport { removeItem, getObjectType } from '../utility/diagram-util';\nimport { cloneObject, getFunction } from '../utility/base-util';\nimport { findAnnotation, findPort } from '../utility/diagram-util';\nimport { Size, addChildToContainer } from '../index';\nimport { swimLaneMeasureAndArrange, laneInterChanged, findLaneIndex, updateSwimLaneObject, pasteSwimLane } from '../utility/swim-lane-util';\n/**\n * Undo redo function used for revert and restore the changes\n */\nvar UndoRedo = /** @class */ (function () {\n    /**\n     * Constructor for the undo redo module\n     * @private\n     */\n    function UndoRedo() {\n        this.groupUndo = false;\n        this.childTable = [];\n        this.historyCount = 0;\n        this.hasGroup = false;\n        this.groupCount = 0;\n        //constructs the undo redo module\n    }\n    /** @private */\n    UndoRedo.prototype.initHistory = function (diagram) {\n        diagram.historyManager = {\n            canRedo: false, canUndo: false, currentEntry: null,\n            push: diagram.addHistoryEntry.bind(diagram), undo: Function, redo: Function,\n            startGroupAction: diagram.startGroupAction.bind(diagram), endGroupAction: diagram.endGroupAction.bind(diagram),\n            canLog: null, undoStack: [], redoStack: [], stackLimit: diagram.historyManager ? diagram.historyManager.stackLimit : undefined\n        };\n    };\n    /** @private */\n    UndoRedo.prototype.addHistoryEntry = function (entry, diagram) {\n        var entryObject = null;\n        var nextEntry = null;\n        if (diagram.historyManager.canLog) {\n            var hEntry = diagram.historyManager.canLog(entry);\n            if (hEntry.cancel === true) {\n                return;\n            }\n        }\n        if (diagram.historyManager && diagram.historyManager.canUndo && diagram.historyManager.currentEntry) {\n            entryObject = diagram.historyManager.currentEntry;\n            if (entryObject.next) {\n                if (entryObject.previous) {\n                    nextEntry = entryObject.next;\n                    nextEntry.previous = null;\n                    entryObject.next = entry;\n                    entry.previous = entryObject;\n                }\n            }\n            else {\n                entryObject.next = entry;\n                entry.previous = entryObject;\n            }\n        }\n        diagram.historyManager.currentEntry = entry;\n        if (diagram.historyManager.stackLimit) {\n            if (entry.type === 'StartGroup' || entry.type === 'EndGroup') {\n                var value = entry.type === 'EndGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                if (this.historyCount < diagram.historyManager.stackLimit) {\n                    this.historyCount++;\n                }\n                else {\n                    this.applyLimit(diagram.historyManager.currentEntry, diagram.historyManager.stackLimit, diagram);\n                }\n            }\n        }\n        this.getHistoryList(diagram);\n        diagram.historyManager.canUndo = true;\n        diagram.historyManager.canRedo = false;\n    };\n    /** @private */\n    UndoRedo.prototype.applyLimit = function (list, stackLimit, diagram, limitHistory) {\n        if (list && list.previous) {\n            if (list.type === 'StartGroup' || list.type === 'EndGroup') {\n                var value = list.type === 'StartGroup' ? true : false;\n                this.setEntryLimit(value);\n            }\n            if (!this.hasGroup && this.groupCount === 0) {\n                stackLimit--;\n            }\n            if (stackLimit === 0) {\n                if (limitHistory) {\n                    this.limitHistoryStack(list.previous, diagram);\n                }\n                if (diagram.historyManager.stackLimit < this.historyCount) {\n                    this.historyCount = diagram.historyManager.stackLimit;\n                }\n                delete list.previous;\n            }\n            else if (list.previous) {\n                this.applyLimit(list.previous, stackLimit, diagram, limitHistory);\n            }\n        }\n        this.groupCount = 0;\n    };\n    /** @private */\n    UndoRedo.prototype.clearHistory = function (diagram) {\n        var hList = diagram.historyManager;\n        hList.currentEntry = undefined;\n        hList.canUndo = false;\n        hList.canRedo = false;\n        this.historyCount = 0;\n        this.groupCount = 0;\n        diagram.historyManager.undoStack = [];\n        diagram.historyManager.redoStack = [];\n    };\n    UndoRedo.prototype.setEntryLimit = function (value) {\n        value ? this.groupCount-- : this.groupCount++;\n        value ? this.hasGroup = !value : this.hasGroup = value;\n    };\n    UndoRedo.prototype.limitHistoryStack = function (list, diagram) {\n        if (list.type !== 'StartGroup' && list.type !== 'EndGroup') {\n            this.removeFromStack(diagram.historyManager.undoStack, list);\n            this.removeFromStack(diagram.historyManager.redoStack, list);\n        }\n        if (list.previous) {\n            this.limitHistoryStack(list.previous, diagram);\n        }\n    };\n    UndoRedo.prototype.removeFromStack = function (entyList, list) {\n        if (entyList.length) {\n            for (var i = 0; i <= entyList.length; i++) {\n                if (entyList[i].undoObject === list.undoObject && entyList[i].redoObject === list.redoObject) {\n                    entyList.splice(i, 1);\n                    break;\n                }\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.undo = function (diagram) {\n        var entry = this.getUndoEntry(diagram);\n        var endGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'EndGroup') {\n                    endGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.undoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.undoGroupAction(entry, diagram, endGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.undo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.getHistoryList = function (diagram) {\n        var undoStack = [];\n        var redoStack = [];\n        var currEntry = diagram.historyManager.currentEntry;\n        var undoObj;\n        var redoObj;\n        currEntry = diagram.historyManager.currentEntry;\n        if (diagram.historyManager.canUndo || diagram.historyManager.undoStack.length === 0) {\n            this.getHistroyObject(undoStack, currEntry);\n        }\n        else {\n            this.getHistroyObject(redoStack, currEntry);\n        }\n        while (currEntry && currEntry.previous) {\n            undoObj = currEntry.previous;\n            this.getHistroyObject(undoStack, undoObj);\n            currEntry = currEntry.previous;\n        }\n        currEntry = diagram.historyManager.currentEntry;\n        while (currEntry && currEntry.next) {\n            redoObj = currEntry.next;\n            this.getHistroyObject(redoStack, redoObj);\n            currEntry = currEntry.next;\n        }\n        diagram.historyManager.undoStack = undoStack;\n        diagram.historyManager.redoStack = redoStack;\n    };\n    UndoRedo.prototype.getHistroyObject = function (list, obj) {\n        if (obj && obj.type !== 'StartGroup' && obj.type !== 'EndGroup') {\n            list.push({\n                redoObject: obj.redoObject ? obj.redoObject : null,\n                undoObject: obj.undoObject ? obj.undoObject : null,\n                type: obj.type ? obj.type : null,\n                category: obj.category ? obj.category : null\n            });\n        }\n    };\n    UndoRedo.prototype.undoGroupAction = function (entry, diagram, endGroupActionCount) {\n        while (endGroupActionCount !== 0) {\n            this.undoEntry(entry, diagram);\n            entry = this.getUndoEntry(diagram);\n            if (entry.type === 'StartGroup') {\n                endGroupActionCount--;\n            }\n            else if (entry.type === 'EndGroup') {\n                endGroupActionCount++;\n            }\n        }\n        endGroupActionCount = 0;\n    };\n    UndoRedo.prototype.undoEntry = function (entry, diagram) {\n        var obj;\n        var nodeObject;\n        if (entry.type !== 'PropertyChanged' && entry.type !== 'CollectionChanged' && entry.type !== 'LabelCollectionChanged') {\n            obj = (entry.undoObject);\n            nodeObject = (entry.undoObject);\n        }\n        if (entry.type !== 'StartGroup' && entry.type !== 'EndGroup') {\n            if (diagram.historyManager.undoStack.length > 0) {\n                var addObject = diagram.historyManager.undoStack.splice(0, 1);\n                diagram.historyManager.redoStack.splice(0, 0, addObject[0]);\n                nodeObject = (entry.undoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        switch (entry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(obj, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(obj, diagram, entry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(obj, diagram, entry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(obj, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(entry, diagram, false);\n                break;\n            case 'CollectionChanged':\n                entry.isUndo = true;\n                this.recordCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'LabelCollectionChanged':\n                entry.isUndo = true;\n                this.recordLabelCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'PortCollectionChanged':\n                entry.isUndo = true;\n                this.recordPortCollectionChanged(entry, diagram);\n                entry.isUndo = false;\n                break;\n            case 'Group':\n                this.unGroup(entry, diagram);\n                break;\n            case 'UnGroup':\n                this.group(entry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(obj, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(entry, diagram, false);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(entry, diagram, false);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(entry, diagram, false);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(entry, diagram, false);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(entry, diagram, false, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(entry, diagram, false, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(entry, diagram, false);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                entry.isUndo = true;\n                this.recordLaneOrPhaseCollectionChanged(entry, diagram, false);\n                entry.isUndo = false;\n                break;\n        }\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.protectPropertyChange(false);\n        diagram.historyChangeTrigger(entry);\n        if (nodeObject) {\n            var object = this.checkNodeObject(nodeObject, diagram);\n            if (object) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(object, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.checkNodeObject = function (value, diagram) {\n        var object;\n        if (!value.id) {\n            if ((value.nodes && value.nodes.length > 0) ||\n                (value.connectors && value.connectors.length > 0)) {\n                var undoNode = value.nodes.length > 0 ?\n                    value.nodes : value.connectors;\n                for (var _i = 0, undoNode_1 = undoNode; _i < undoNode_1.length; _i++) {\n                    object = undoNode_1[_i];\n                    object = diagram.nameTable[object.id];\n                }\n            }\n            else {\n                var knownNode = value.nodes ?\n                    value.nodes : value.connectors;\n                if (knownNode) {\n                    for (var _a = 0, _b = Object.keys(knownNode); _a < _b.length; _a++) {\n                        var key = _b[_a];\n                        var index = Number(key);\n                        object = value.nodes ? diagram.nodes[index] : diagram.connectors[index];\n                    }\n                }\n            }\n        }\n        else {\n            object = diagram.nameTable[value.id];\n        }\n        return object;\n    };\n    UndoRedo.prototype.group = function (historyEntry, diagram) {\n        diagram.add(historyEntry.undoObject);\n    };\n    UndoRedo.prototype.unGroup = function (entry, diagram) {\n        var i = 0;\n        entry.redoObject = cloneObject(entry.undoObject);\n        var node = entry.undoObject;\n        diagram.commandHandler.unGroup(node);\n    };\n    UndoRedo.prototype.ignoreProperty = function (key) {\n        if (key === 'zIndex' || key === 'wrapper') {\n            return true;\n        }\n        return false;\n    };\n    UndoRedo.prototype.getProperty = function (collection, property) {\n        for (var _i = 0, _a = Object.keys(property); _i < _a.length; _i++) {\n            var key = _a[_i];\n            if (!this.ignoreProperty(key)) {\n                if (property[key] instanceof Object) {\n                    this.getProperty(collection[key], property[key]);\n                }\n                else {\n                    collection[key] = property[key];\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.recordLaneOrPhaseCollectionChanged = function (entry, diagram, isRedo) {\n        var node = entry.redoObject;\n        var obj = entry.undoObject;\n        var changeType;\n        if (entry.isUndo) {\n            if (entry.changeType === 'Insert') {\n                changeType = 'Remove';\n            }\n            else {\n                changeType = 'Insert';\n            }\n        }\n        else {\n            changeType = entry.changeType;\n        }\n        if (changeType === 'Remove') {\n            diagram.remove(node);\n        }\n        else {\n            if (node.isPhase) {\n                var swimlane = diagram.nameTable[node.parentId];\n                diagram.addPhases(swimlane, [obj]);\n            }\n            else {\n                var swimlane = diagram.nameTable[node.parentId];\n                var laneIndex = findLaneIndex(swimlane, node);\n                diagram.addLanes(swimlane, [obj], laneIndex);\n            }\n        }\n        diagram.clearSelection();\n    };\n    UndoRedo.prototype.recordAnnotationChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var oldElement = findAnnotation(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getAnnotationChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findAnnotation(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        currentElement.margin = oldElement.margin;\n        currentElement.width = oldElement.width;\n        currentElement.height = oldElement.height;\n        currentElement.rotateAngle = oldElement.rotateAngle;\n        currentElement.margin = oldElement.margin;\n        if (currentObject instanceof Node) {\n            diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        }\n        else {\n            diagram.connectorPropertyChange(currentObject, {}, undoChanges);\n        }\n    };\n    UndoRedo.prototype.recordChildCollectionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        var parentNode = diagram.nameTable[entryObject.parentId];\n        var actualObject = diagram.nameTable[entryObject.id];\n        if (parentNode) {\n            addChildToContainer(diagram, parentNode, actualObject, !isRedo);\n        }\n        else {\n            if (actualObject.parentId) {\n                parentNode = diagram.nameTable[actualObject.parentId];\n                parentNode.children.splice(parentNode.children.indexOf(actualObject.id), 1);\n                parentNode.wrapper.children.splice(parentNode.wrapper.children.indexOf(actualObject.wrapper), 1);\n            }\n            if (entryObject.parentId !== '') {\n                parentNode = diagram.nameTable[entryObject.parentId];\n                parentNode.children.push(entryObject.id);\n                parentNode.wrapper.children.push(actualObject.wrapper);\n            }\n            actualObject.parentId = entryObject.parentId;\n            diagram.removeElements(actualObject);\n            diagram.updateDiagramObject(actualObject);\n        }\n    };\n    UndoRedo.prototype.recordStackPositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_1 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_1) {\n                if (entryObject.target) {\n                    parent_1.wrapper.children.splice(entryObject.targetIndex, 1);\n                    parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, entryObject.source.wrapper);\n                }\n                else {\n                    if (entryObject.sourceIndex !== undefined) {\n                        if (!diagram.nameTable[entryObject.source.id]) {\n                            diagram.add(entryObject.source);\n                        }\n                        parent_1.wrapper.children.splice(entryObject.sourceIndex, 0, diagram.nameTable[entryObject.source.id].wrapper);\n                        diagram.nameTable[entryObject.source.id].parentId = parent_1.id;\n                    }\n                    else {\n                        parent_1.wrapper.children.splice(parent_1.wrapper.children.indexOf(diagram.nameTable[entryObject.source.id].wrapper), 1);\n                        diagram.nameTable[entryObject.source.id].parentId = '';\n                    }\n                }\n                if (isRedo && parent_1.shape.type === 'UmlClassifier') {\n                    diagram.remove(entryObject.source);\n                }\n                parent_1.wrapper.measure(new Size());\n                parent_1.wrapper.arrange(parent_1.wrapper.desiredSize);\n                diagram.updateDiagramObject(parent_1);\n                diagram.updateSelector();\n            }\n        }\n    };\n    UndoRedo.prototype.recordGridSizeChanged = function (entry, diagram, isRedo, isRow) {\n        var obj = (isRedo) ? entry.redoObject : entry.undoObject;\n        var node = (!isRedo) ? entry.redoObject : entry.undoObject;\n        if (obj.parentId) {\n            var swimlane = diagram.nameTable[obj.parentId];\n            var actualObject = diagram.nameTable[obj.id];\n            var x = swimlane.wrapper.bounds.x;\n            var y = swimlane.wrapper.bounds.y;\n            if (swimlane.shape.type === 'SwimLane') {\n                var grid = swimlane.wrapper.children[0];\n                var padding = swimlane.shape.padding;\n                updateSwimLaneObject(diagram, node, swimlane, obj);\n                if (isRow) {\n                    grid.updateRowHeight(obj.rowIndex, obj.wrapper.actualSize.height, true, padding);\n                    swimlane.height = swimlane.wrapper.height = grid.height;\n                }\n                else {\n                    grid.updateColumnWidth(obj.columnIndex, obj.wrapper.actualSize.width, true, padding);\n                    swimlane.width = swimlane.wrapper.width = grid.width;\n                    if (obj.isPhase) {\n                        actualObject.maxWidth = actualObject.wrapper.maxWidth = obj.wrapper.actualSize.width;\n                    }\n                }\n                swimLaneMeasureAndArrange(swimlane);\n                var tx = x - swimlane.wrapper.bounds.x;\n                var ty = y - swimlane.wrapper.bounds.y;\n                diagram.drag(swimlane, tx, ty);\n                diagram.clearSelection();\n                diagram.updateDiagramObject(swimlane);\n            }\n        }\n    };\n    UndoRedo.prototype.recordLanePositionChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject : entry.undoObject);\n        if (entryObject.source) {\n            var parent_2 = diagram.nameTable[entryObject.source.parentId];\n            if (parent_2 && parent_2.shape.type === 'SwimLane') {\n                laneInterChanged(diagram, entryObject.target, entryObject.source);\n                diagram.clearSelection();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortChanged = function (entry, diagram, isRedo) {\n        var entryObject = ((isRedo) ? entry.redoObject.nodes[0] :\n            entry.undoObject.nodes[0]);\n        var oldElement = findPort(entryObject, entry.objectId);\n        var undoChanges = diagram.commandHandler.getPortChanges(diagram.nameTable[entryObject.id], oldElement);\n        var currentObject = diagram.nameTable[entryObject.id];\n        var currentElement = findPort(currentObject, entry.objectId);\n        currentElement.offset = oldElement.offset;\n        diagram.nodePropertyChange(currentObject, {}, undoChanges);\n        if (currentObject.parentId) {\n            diagram.updateConnectorEdges(diagram.nameTable[currentObject.parentId]);\n        }\n    };\n    UndoRedo.prototype.recordPropertyChanged = function (entry, diagram, isRedo) {\n        var redoObject = entry.redoObject;\n        var undoObject = entry.undoObject;\n        this.getProperty(diagram, (isRedo ? redoObject : undoObject));\n        isRedo ? diagram.onPropertyChanged(redoObject, undoObject) : diagram.onPropertyChanged(undoObject, redoObject);\n        diagram.diagramActions = diagram.diagramActions | DiagramAction.UndoRedo;\n    };\n    UndoRedo.prototype.recordSegmentChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.segmentChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.segmentChanged = function (connector, diagram) {\n        var conn = diagram.nameTable[connector.id];\n        conn.segments = connector.segments;\n        diagram.commandHandler.updateEndPoint(conn);\n    };\n    UndoRedo.prototype.recordPositionChanged = function (obj, diagram) {\n        var i = 0;\n        var node;\n        var connector;\n        if (obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.positionChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        if (obj.processId && !node.processId) {\n            diagram.addProcess(obj, obj.processId);\n        }\n        if (!obj.processId && node.processId) {\n            diagram.removeProcess(obj.id);\n        }\n        if (node.processId) {\n            var tx = obj.margin.left - node.margin.left;\n            var ty = obj.margin.top - node.margin.top;\n            diagram.drag(node, tx, ty);\n        }\n        else {\n            if (node.parentId) {\n                var parent_3 = diagram.nameTable[node.parentId];\n                if (parent_3.isLane) {\n                    obj.wrapper.offsetX = (obj.width / 2) + (parent_3.wrapper.bounds.x + obj.margin.left);\n                    obj.wrapper.offsetY = (obj.height / 2) + (parent_3.wrapper.bounds.y + obj.margin.top);\n                }\n            }\n            var tx = obj.wrapper.offsetX - node.offsetX;\n            var ty = obj.wrapper.offsetY - node.offsetY;\n            diagram.drag(node, tx, ty);\n        }\n        if (diagram.bpmnModule) {\n            diagram.bpmnModule.updateDocks(node, diagram);\n        }\n    };\n    UndoRedo.prototype.recordSizeChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var connector;\n        var node;\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                if (node.children && !node.container) {\n                    var elements = [];\n                    var nodes = diagram.commandHandler.getAllDescendants(node, elements);\n                    for (var i_1 = 0; i_1 < nodes.length; i_1++) {\n                        var tempNode = entry.childTable[nodes[i_1].id];\n                        if ((getObjectType(tempNode) === Node)) {\n                            this.sizeChanged(tempNode, diagram, entry);\n                            this.positionChanged(tempNode, diagram);\n                        }\n                        else {\n                            this.connectionChanged(tempNode, diagram, entry);\n                        }\n                    }\n                }\n                else {\n                    this.sizeChanged(node, diagram);\n                    this.positionChanged(node, diagram);\n                }\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            var connectors = obj.connectors;\n            for (i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.sizeChanged = function (obj, diagram, entry) {\n        var node = diagram.nameTable[obj.id];\n        var scaleWidth = obj.wrapper.actualSize.width / node.wrapper.actualSize.width;\n        var scaleHeight = obj.wrapper.actualSize.height / node.wrapper.actualSize.height;\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(node);\n        }\n        diagram.scale(node, scaleWidth, scaleHeight, {\n            x: obj.wrapper.offsetX / node.wrapper.offsetX,\n            y: obj.wrapper.offsetY / node.wrapper.offsetY\n        });\n    };\n    UndoRedo.prototype.recordRotationChanged = function (obj, diagram, entry) {\n        var i = 0;\n        var node;\n        var connector;\n        var selectorObj = diagram.selectedItems;\n        selectorObj.rotateAngle = obj.rotateAngle;\n        if (selectorObj && selectorObj.wrapper) {\n            selectorObj.wrapper.rotateAngle = obj.rotateAngle;\n        }\n        if (obj && obj.nodes && obj.nodes.length > 0) {\n            for (i = 0; i < obj.nodes.length; i++) {\n                node = obj.nodes[i];\n                this.rotationChanged(node, diagram);\n                this.positionChanged(node, diagram);\n            }\n        }\n        if (obj && obj.connectors && obj.connectors.length > 0) {\n            for (i = 0; i < obj.connectors.length; i++) {\n                connector = obj.connectors[i];\n                this.connectionChanged(connector, diagram);\n            }\n        }\n    };\n    UndoRedo.prototype.rotationChanged = function (obj, diagram) {\n        var node = diagram.nameTable[obj.id];\n        diagram.rotate(node, obj.rotateAngle - node.rotateAngle);\n    };\n    UndoRedo.prototype.recordConnectionChanged = function (obj, diagram) {\n        var connector = obj.connectors[0];\n        this.connectionChanged(connector, diagram);\n    };\n    UndoRedo.prototype.connectionChanged = function (obj, diagram, entry) {\n        var connector = diagram.nameTable[obj.id];\n        var node;\n        if (obj.sourcePortID !== connector.sourcePortID) {\n            connector.sourcePortID = obj.sourcePortID;\n            diagram.connectorPropertyChange(connector, {}, { sourcePortID: obj.sourcePortID });\n        }\n        if (obj.targetPortID !== connector.targetPortID) {\n            connector.targetPortID = obj.targetPortID;\n            diagram.connectorPropertyChange(connector, {}, { targetPortID: obj.targetPortID });\n        }\n        if (obj.sourceID !== connector.sourceID) {\n            if (obj.sourceID === '') {\n                node = diagram.nameTable[connector.sourceID];\n                removeItem(node.outEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.sourceID];\n                node.outEdges.push(obj.id);\n            }\n            connector.sourceID = obj.sourceID;\n            diagram.connectorPropertyChange(connector, {}, { sourceID: obj.sourceID });\n        }\n        if (obj.targetID !== connector.targetID) {\n            if (obj.targetID === '') {\n                node = diagram.nameTable[connector.targetID];\n                removeItem(node.inEdges, obj.id);\n            }\n            else {\n                node = diagram.nameTable[obj.targetID];\n                node.inEdges.push(obj.id);\n            }\n            connector.targetID = obj.targetID;\n            diagram.connectorPropertyChange(connector, {}, { targetID: obj.targetID });\n        }\n        if (entry && entry.childTable) {\n            entry.childTable[obj.id] = cloneObject(connector);\n        }\n        var sx = obj.sourcePoint.x - connector.sourcePoint.x;\n        var sy = obj.sourcePoint.y - connector.sourcePoint.y;\n        if (sx !== 0 || sy !== 0) {\n            diagram.dragSourceEnd(connector, sx, sy);\n        }\n        var tx = obj.targetPoint.x - connector.targetPoint.x;\n        var ty = obj.targetPoint.y - connector.targetPoint.y;\n        if (tx !== 0 || ty !== 0) {\n            diagram.dragTargetEnd(connector, tx, ty);\n        }\n        diagram.updateSelector();\n        if (diagram.mode !== 'SVG') {\n            diagram.refreshDiagramLayer();\n        }\n    };\n    UndoRedo.prototype.recordCollectionChanged = function (entry, diagram) {\n        var obj = entry.undoObject;\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                if (entry.changeType === 'Insert') {\n                    changeType = 'Remove';\n                }\n                else {\n                    changeType = 'Insert';\n                }\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                if (obj.nodeId) {\n                    diagram.remove(diagram.nameTable[obj.nodeId + '_textannotation_' + obj.id]);\n                }\n                else {\n                    diagram.remove(obj);\n                    diagram.clearSelectorLayer();\n                }\n            }\n            else {\n                diagram.clearSelectorLayer();\n                if (obj.parentId) {\n                    var parentNode = diagram.nameTable[obj.parentId];\n                    if (parentNode) {\n                        diagram.addChild(parentNode, obj);\n                    }\n                    else {\n                        diagram.add(obj);\n                    }\n                }\n                else if (obj.nodeId) {\n                    diagram.addTextAnnotation(obj, diagram.nameTable[obj.nodeId]);\n                }\n                else {\n                    if (!diagram.nameTable[obj.id]) {\n                        if (obj && obj.shape && obj.shape.type === 'SwimLane' && entry.isUndo) {\n                            pasteSwimLane(obj, undefined, undefined, undefined, undefined, true);\n                        }\n                        diagram.add(obj);\n                    }\n                }\n                if (obj.processId && diagram.nameTable[obj.processId]) {\n                    diagram.addProcess(obj, obj.processId);\n                }\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordLabelCollectionChanged = function (entry, diagram) {\n        var label = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removeLabels(node, [label]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addLabels(node, [label]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    UndoRedo.prototype.recordPortCollectionChanged = function (entry, diagram) {\n        var port = entry.undoObject;\n        var obj = entry.redoObject;\n        var node = diagram.nameTable[obj.id];\n        if (entry && entry.changeType) {\n            var changeType = void 0;\n            if (entry.isUndo) {\n                changeType = (entry.changeType === 'Insert') ? 'Remove' : 'Insert';\n            }\n            else {\n                changeType = entry.changeType;\n            }\n            if (changeType === 'Remove') {\n                diagram.removePorts(node, [port]);\n                diagram.clearSelectorLayer();\n            }\n            else {\n                diagram.clearSelectorLayer();\n                diagram.addPorts(node, [port]);\n            }\n            if (diagram.mode !== 'SVG') {\n                diagram.refreshDiagramLayer();\n            }\n        }\n    };\n    /** @private */\n    UndoRedo.prototype.redo = function (diagram) {\n        var entry = this.getRedoEntry(diagram);\n        var startGroupActionCount = 0;\n        if (entry) {\n            if (entry.category === 'Internal') {\n                if (entry.type === 'StartGroup') {\n                    startGroupActionCount++;\n                    this.groupUndo = true;\n                }\n                else {\n                    this.redoEntry(entry, diagram);\n                }\n                if (this.groupUndo) {\n                    this.redoGroupAction(entry, diagram, startGroupActionCount);\n                    this.groupUndo = false;\n                }\n            }\n            else {\n                diagram.historyManager.redo(entry);\n            }\n        }\n    };\n    UndoRedo.prototype.redoGroupAction = function (entry, diagram, startGroupActionCount) {\n        while (startGroupActionCount !== 0) {\n            this.redoEntry(entry, diagram);\n            entry = this.getRedoEntry(diagram);\n            if (entry.type === 'EndGroup') {\n                startGroupActionCount--;\n            }\n            else if (entry.type === 'StartGroup') {\n                startGroupActionCount++;\n            }\n        }\n        startGroupActionCount = 0;\n    };\n    UndoRedo.prototype.redoEntry = function (historyEntry, diagram) {\n        var redoObject;\n        var redovalue;\n        if (historyEntry.type !== 'PropertyChanged' && historyEntry.type !== 'CollectionChanged') {\n            redoObject = (historyEntry.redoObject);\n            redovalue = (historyEntry.redoObject);\n        }\n        diagram.diagramActions |= DiagramAction.UndoRedo;\n        if (historyEntry.type !== 'StartGroup' && historyEntry.type !== 'EndGroup') {\n            if (diagram.historyManager.redoStack.length > 0) {\n                var addObject = diagram.historyManager.redoStack.splice(0, 1);\n                diagram.historyManager.undoStack.splice(0, 0, addObject[0]);\n                redovalue = (historyEntry.redoObject);\n            }\n        }\n        diagram.protectPropertyChange(true);\n        switch (historyEntry.type) {\n            case 'PositionChanged':\n            case 'Align':\n            case 'Distribute':\n                this.recordPositionChanged(redoObject, diagram);\n                break;\n            case 'SizeChanged':\n            case 'Sizing':\n                this.recordSizeChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'RotationChanged':\n                this.recordRotationChanged(redoObject, diagram, historyEntry);\n                break;\n            case 'ConnectionChanged':\n                this.recordConnectionChanged(redoObject, diagram);\n                break;\n            case 'PropertyChanged':\n                this.recordPropertyChanged(historyEntry, diagram, true);\n                break;\n            case 'CollectionChanged':\n                this.recordCollectionChanged(historyEntry, diagram);\n                break;\n            case 'LabelCollectionChanged':\n                this.recordLabelCollectionChanged(historyEntry, diagram);\n                break;\n            case 'PortCollectionChanged':\n                this.recordPortCollectionChanged(historyEntry, diagram);\n                break;\n            case 'Group':\n                this.group(historyEntry, diagram);\n                break;\n            case 'UnGroup':\n                this.unGroup(historyEntry, diagram);\n                break;\n            case 'SegmentChanged':\n                this.recordSegmentChanged(redoObject, diagram);\n                break;\n            case 'PortPositionChanged':\n                this.recordPortChanged(historyEntry, diagram, true);\n                break;\n            case 'AnnotationPropertyChanged':\n                this.recordAnnotationChanged(historyEntry, diagram, true);\n                break;\n            case 'ChildCollectionChanged':\n                this.recordChildCollectionChanged(historyEntry, diagram, true);\n                break;\n            case 'StackChildPositionChanged':\n                this.recordStackPositionChanged(historyEntry, diagram, true);\n                break;\n            case 'RowHeightChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, true);\n                break;\n            case 'ColumnWidthChanged':\n                this.recordGridSizeChanged(historyEntry, diagram, true, false);\n                break;\n            case 'LanePositionChanged':\n                this.recordLanePositionChanged(historyEntry, diagram, true);\n                break;\n            case 'LaneCollectionChanged':\n            case 'PhaseCollectionChanged':\n                this.recordLaneOrPhaseCollectionChanged(historyEntry, diagram, true);\n                break;\n        }\n        diagram.protectPropertyChange(false);\n        diagram.diagramActions &= ~DiagramAction.UndoRedo;\n        diagram.historyChangeTrigger(historyEntry);\n        if (redovalue) {\n            var value = this.checkNodeObject(redovalue, diagram);\n            if (value) {\n                var getnodeDefaults = getFunction(diagram.updateSelection);\n                if (getnodeDefaults) {\n                    getnodeDefaults(value, diagram);\n                }\n            }\n        }\n    };\n    UndoRedo.prototype.getUndoEntry = function (diagram) {\n        var undoEntry = null;\n        var currentObject;\n        var hList = diagram.historyManager;\n        if (hList.canUndo) {\n            undoEntry = hList.currentEntry;\n            currentObject = hList.currentEntry.previous;\n            if (currentObject) {\n                hList.currentEntry = currentObject;\n                if (!hList.canRedo) {\n                    hList.canRedo = true;\n                }\n            }\n            else {\n                hList.canRedo = true;\n                hList.canUndo = false;\n            }\n        }\n        return undoEntry;\n    };\n    UndoRedo.prototype.getRedoEntry = function (diagram) {\n        var redoEntry = null;\n        var entryCurrent;\n        var hList = diagram.historyManager;\n        if (hList.canRedo) {\n            if (!hList.currentEntry.previous && !hList.canUndo) {\n                entryCurrent = hList.currentEntry;\n            }\n            else {\n                entryCurrent = hList.currentEntry.next;\n            }\n            if (entryCurrent) {\n                hList.currentEntry = entryCurrent;\n                if (!hList.canUndo) {\n                    hList.canUndo = true;\n                }\n                if (!entryCurrent.next) {\n                    hList.canRedo = false;\n                    hList.canUndo = true;\n                }\n            }\n            redoEntry = hList.currentEntry;\n        }\n        return redoEntry;\n    };\n    /**\n     * To destroy the undo redo module\n     * @return {void}\n     * @private\n     */\n    UndoRedo.prototype.destroy = function () {\n        /**\n         * Destroys the undo redo module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    UndoRedo.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'UndoRedo';\n    };\n    return UndoRedo;\n}());\nexport { UndoRedo };\n","import { Container } from '../core/containers/container';\nimport { DiagramEvent } from '../enum/enum';\nimport { cloneObject as clone } from '../utility/base-util';\n/**\n * Layout Animation function to enable or disable layout animation\n */\nvar LayoutAnimation = /** @class */ (function () {\n    function LayoutAnimation() {\n        this.protectChange = false;\n    }\n    /**\n     * Layout expand function for animation of expand and collapse\n     */\n    LayoutAnimation.prototype.expand = function (animation, objects, node, diagram) {\n        var _this = this;\n        var setIntervalObject = {};\n        var i = 0;\n        var j = 0;\n        setIntervalObject[i] = setInterval(function () {\n            j++;\n            return _this.layoutAnimation(objects, setIntervalObject, j === 6, diagram, node);\n        }, 20);\n        if (node.isExpanded) {\n            var opacity_1 = .2;\n            var protect = 'isProtectedOnChange';\n            this.protectChange = diagram[protect];\n            diagram.protectPropertyChange(false);\n            //let objects: ILayout = diagram.doLayout();\n            var setIntervalObjects_1 = {};\n            var x = 0;\n            if (animation) {\n                this.updateOpacity(node, opacity_1, diagram);\n                var current = this;\n                setIntervalObjects_1[x] = setInterval(function () {\n                    opacity_1 <= 1 ? _this.updateOpacity(node, opacity_1, diagram) : clearInterval(setIntervalObjects_1[0]);\n                    opacity_1 += .2;\n                }, 20);\n            }\n        }\n    };\n    /**\n     * Setinterval and Clear interval for layout animation\n     */\n    /** @private */\n    LayoutAnimation.prototype.layoutAnimation = function (objValue, layoutTimer, stop, diagram, node) {\n        if (!stop) {\n            for (var k = 0; k < objValue.objects.length; k++) {\n                var node_1 = diagram.nameTable[objValue.objects[k].id];\n                node_1.offsetX += objValue.objects[k].differenceX / 5;\n                node_1.offsetY += objValue.objects[k].differenceY / 5;\n            }\n        }\n        if (stop) {\n            clearInterval(layoutTimer[0]);\n            diagram.protectPropertyChange(true);\n            diagram.triggerEvent(DiagramEvent.animationComplete, undefined);\n            diagram.organizationalChartModule.isAnimation = false;\n            diagram.layout.fixedNode = '';\n            diagram.protectPropertyChange(this.protectChange);\n            var arg = {\n                element: clone(node), state: (node.isExpanded) ? true : false\n            };\n            diagram.triggerEvent(DiagramEvent.expandStateChange, arg);\n        }\n    };\n    /**\n     * update the node opacity for the node and connector once the layout animation starts\n     */\n    LayoutAnimation.prototype.updateOpacity = function (source, value, diagram) {\n        for (var i = 0; i < source.outEdges.length; i++) {\n            var connector = diagram.nameTable[source.outEdges[i]];\n            var target = diagram.nameTable[connector.targetID];\n            connector.style.opacity = value;\n            for (var j = 0; j < connector.wrapper.children.length; j++) {\n                connector.wrapper.children[j].style.opacity = value;\n                target.style.opacity = value;\n                if (target.wrapper instanceof Container) {\n                    diagram.updateNodeProperty(target.wrapper, undefined, value);\n                }\n            }\n            this.updateOpacity(target, value, diagram);\n        }\n    };\n    /**\n     * To destroy the  LayoutAnimate module\n     * @return {void}\n     * @private\n     */\n    LayoutAnimation.prototype.destroy = function () {\n        /**\n         * Destroys the LayoutAnimate module\n         */\n    };\n    /**\n     * Get module name.\n     */\n    LayoutAnimation.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'LayoutAnimate';\n    };\n    return LayoutAnimation;\n}());\nexport { LayoutAnimation };\n","import { DiagramAction } from '../enum/enum';\nimport { Rect } from '../primitives/rect';\nimport { OrthogonalSegment } from '../objects/connector';\nimport { getFunction } from '../utility/base-util';\nimport { Point } from '../primitives/point';\n/**\n * Hierarchical Tree and Organizational Chart\n */\nvar HierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function HierarchicalTree() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    HierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    HierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'OrganizationalChart';\n    };\n    /**   @private  */\n    HierarchicalTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport, uniqueId, action) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {},\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, viewport, uniqueId, action);\n        return layout;\n    };\n    HierarchicalTree.prototype.doLayout = function (layout, nodes, viewport, uniqueId, action) {\n        var node;\n        var i;\n        var layoutInfo = {};\n        var shape;\n        var rootNodes = [];\n        if (layout.nameTable[layout.root]) {\n            layout.firstLevelNodes.push(layout.nameTable[layout.root]);\n        }\n        for (i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layoutInfo = layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                layoutInfo.tree.hasSubTree = false;\n                if (!layout.nameTable[layout.root]) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        rootNodes.push(node);\n                        if (node.data && String(node.data[uniqueId]) === layout.root) {\n                            layout.firstLevelNodes.push(node);\n                        }\n                    }\n                }\n            }\n        }\n        if (layout.firstLevelNodes.length === 0) {\n            layout.firstLevelNodes = rootNodes;\n        }\n        //Update relationship(parent and children)\n        for (i = 0; i < layout.firstLevelNodes.length; i++) {\n            node = layout.firstLevelNodes[i];\n            this.updateEdges(layout, node, 1, action);\n        }\n        if (layout.firstLevelNodes.length > 0) {\n            layout.rootNode = layout.firstLevelNodes[0];\n            var x = 0;\n            var y = 0;\n            var minX = void 0;\n            var maxY = void 0;\n            var maxX = void 0;\n            var minY = void 0;\n            var j = void 0;\n            var bounds = void 0;\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                bounds = this.updateTree(layout, x, y, layout.firstLevelNodes[i], 0, layout.firstLevelNodes[i - 1]);\n                var rootInfo = layout.graphNodes[layout.firstLevelNodes[i].id];\n                bounds.y = Math.min(bounds.y, rootInfo.y);\n                bounds.x = Math.min(bounds.x, rootInfo.x);\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    y = bounds.right + layout.horizontalSpacing;\n                }\n                else {\n                    x = bounds.right + layout.horizontalSpacing;\n                }\n                if (i === 0) {\n                    minX = bounds.x;\n                    minY = bounds.y;\n                    maxX = bounds.right;\n                    maxY = bounds.bottom;\n                }\n                else {\n                    minX = Math.min(minX, bounds.x);\n                    minY = Math.min(minY, bounds.y);\n                    maxX = Math.max(maxX, bounds.right);\n                    maxY = Math.max(maxY, bounds.bottom);\n                }\n            }\n            this.updateAnchor(layout, { x: minX, y: minY, right: maxX, bottom: maxY }, viewport);\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateNodes(layout, layout.firstLevelNodes[i], 0);\n            }\n            for (i = 0; i < layout.firstLevelNodes.length; i++) {\n                this.updateConnectors(layout, layout.firstLevelNodes[i], 1);\n            }\n        }\n    };\n    HierarchicalTree.prototype.getBounds = function (node) {\n        var x = node.offsetX - node.actualSize.width * node.pivot.x;\n        var y = node.offsetY - node.actualSize.height * node.pivot.y;\n        return new Rect(x, y, node.actualSize.width, node.actualSize.height);\n    };\n    HierarchicalTree.prototype.updateTree = function (layout, x, y, shape, level, prev, dontupdate) {\n        var dimensions;\n        var info = {};\n        var lev;\n        var obj;\n        var hasChild;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        info = layout.graphNodes[shape.id];\n        var firstChild;\n        //Set maximum level of layout\n        layout.maxLevel = Math.max(layout.maxLevel, level);\n        lev = level;\n        hasChild = this.hasChild(layout, shape);\n        if (!hasChild && !info.tree.assistants.length) {\n            //update leaf nodes\n            shape.treeBounds = this.updateLeafNode(layout, shape, prev, dimensions, level, dontupdate);\n            return shape.treeBounds;\n        }\n        else {\n            var treeBounds = void 0;\n            var shapeBounds = void 0;\n            var levelBounds = void 0;\n            var d = void 0;\n            var asstBounds = void 0;\n            var space = void 0;\n            var bottom = void 0;\n            bottom = dimensions.y + dimensions.height + layout.verticalSpacing;\n            if (info.tree.assistants.length) {\n                //Vertically place assistants\n                obj = this.setDepthSpaceForAssitants(layout, shape, bottom, dimensions.height, level, layout.verticalSpacing);\n                lev = obj.level;\n                bottom = obj.bottom;\n            }\n            if (!info.tree.assistants.length && info.tree.orientation !== 'Horizontal') {\n                bottom = dimensions.y + dimensions.height + layout.verticalSpacing / 2;\n            }\n            if (info.tree.children.length) {\n                if (info.tree.orientation === 'Horizontal' && (info.tree.type !== 'Balanced' || info.tree.children.length === 1)) {\n                    treeBounds = this.updateHorizontalTree(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else if (info.tree.type === 'Balanced') {\n                    treeBounds = this.updateHorizontalTreeWithMultipleRows(layout, shape, prev, dimensions.x, bottom, lev);\n                }\n                else {\n                    treeBounds = this.updateVerticalTree(layout, shape, dimensions.x, bottom, lev, dontupdate);\n                }\n            }\n            if (!(info.y && info.y > dimensions.y)) {\n                info.y = dimensions.y;\n            }\n            if (!(x && x > info.mid)) {\n                x = info.mid;\n            }\n            if (info.tree.assistants.length) {\n                //Set breadth space for assistants\n                space = x !== undefined ? x : dimensions.x;\n                asstBounds = this.setBreadthSpaceForAssistants(layout, shape, dimensions, space, bottom, level);\n                if (!hasChild) {\n                    levelBounds = treeBounds = asstBounds;\n                    x = (levelBounds.x + levelBounds.right) / 2 - dimensions.width / 2;\n                    treeBounds = levelBounds;\n                }\n                d = asstBounds ? asstBounds.canMoveBy : undefined;\n            }\n            info.x = x;\n            if (!info.translate) {\n                info.treeWidth = treeBounds.right - treeBounds.x;\n            }\n            {\n                shapeBounds = { x: x, y: dimensions.y, right: x + dimensions.width, bottom: dimensions.y + dimensions.height };\n            }\n            var translateInfo = {\n                layout: layout, shape: shape, shapeBounds: shapeBounds, treeBounds: treeBounds,\n                dim: dimensions, level: level\n            };\n            this.translateSubTree(translateInfo, d, prev !== undefined, dontupdate);\n            if (info.firstChild && typeof info.firstChild !== 'string') {\n                info.firstChild.x += info.subTreeTranslation;\n            }\n            shape.treeBounds = treeBounds;\n            return treeBounds;\n        }\n    };\n    HierarchicalTree.prototype.updateLeafNode = function (layout, shape, prev, dimensions, level, dontupdate) {\n        var bounds;\n        var info = layout.graphNodes[shape.id];\n        info.x = dimensions.x;\n        if (!(info.y && info.y > dimensions.y)) {\n            info.y = dimensions.y;\n            info.maxLevel = Math.max(level, info.maxLevel || 0);\n        }\n        bounds = { x: dimensions.x, y: dimensions.y, right: dimensions.x + dimensions.width, bottom: dimensions.y + dimensions.height };\n        info.maxLevel = Math.max(info.maxLevel || 0, level);\n        var translateInfo = {\n            layout: layout, shape: shape, shapeBounds: bounds, treeBounds: bounds,\n            dim: dimensions, level: level\n        };\n        this.translateSubTree(translateInfo, undefined, prev !== undefined, dontupdate);\n        return { x: info.x, y: info.y, right: info.x + dimensions.width, bottom: info.y + dimensions.height };\n    };\n    HierarchicalTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.subTreeTranslation = 0;\n        if (layout.type === 'OrganizationalChart') {\n            info.tree = { orientation: 'Vertical', type: 'Alternate', offset: 20, enableRouting: true };\n        }\n        else {\n            info.tree = { orientation: 'Horizontal', type: 'Center', enableRouting: true };\n        }\n        info.tree.children = [];\n        info.tree.assistants = [];\n        info.tree.level = 0;\n        info.translate = true;\n        return info;\n    };\n    HierarchicalTree.prototype.translateSubTree = function (translateInfo, asstDif, translate, dontupdate) {\n        var layout = translateInfo.layout;\n        var shape = translateInfo.shape;\n        var shapeBounds = translateInfo.shapeBounds;\n        var treeBounds = translateInfo.treeBounds;\n        var level = translateInfo.level;\n        var dim = translateInfo.dim;\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.firstChild ? info.firstChild.child : info.tree.children[0]];\n        var firstChildInfo = firstChild ? layout.graphNodes[firstChild.id] : null;\n        var hasChild = this.hasChild(layout, shape);\n        var intersect = this.findIntersectingLevels(layout, shapeBounds, level, info.actualLevel);\n        var treeIntersect = this.findIntersectingLevels(layout, treeBounds, level, info.actualLevel);\n        var levelBounds = [];\n        var diff;\n        if (intersect.length && info.translate) {\n            info.intersect = intersect;\n            this.spaceLeftFromPrevSubTree(layout, shape, shapeBounds);\n            info.canMoveBy = info.diff;\n            if (asstDif !== undefined) {\n                info.canMoveBy = Math.min(asstDif, info.canMoveBy);\n            }\n            if (firstChild && firstChildInfo.canMoveBy !== undefined) {\n                if (firstChildInfo.canMoveBy >= info.canMoveBy) {\n                    info.translated = true;\n                }\n                info.canMoveBy = Math.min(info.canMoveBy, firstChildInfo.canMoveBy);\n            }\n            if (translate) {\n                info.x -= info.canMoveBy;\n                info.subTreeTranslation -= info.canMoveBy;\n                if (hasChild) {\n                    this.shiftSubordinates(layout, treeIntersect, info.canMoveBy);\n                    treeBounds.x = Math.min(treeBounds.x, info.x);\n                    treeBounds.right = Math.max(treeBounds.right, info.x + dim.width);\n                    treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n                    treeBounds.x -= info.canMoveBy;\n                    treeBounds.right -= info.canMoveBy;\n                }\n                if (firstChild && firstChildInfo.canMoveBy > info.canMoveBy) {\n                    info.canMoveBy = firstChildInfo.canMoveBy - info.canMoveBy;\n                }\n                else if (firstChild && info.canMoveBy !== undefined) {\n                    info.canMoveBy = 0;\n                }\n            }\n        }\n        else {\n            if (hasChild) {\n                treeBounds.x = Math.min(treeBounds.x, shapeBounds.x);\n                treeBounds.right = Math.max(treeBounds.right, shapeBounds.x + dim.width);\n                treeBounds.bottom = Math.max(treeBounds.bottom, info.y + dim.height);\n            }\n            if (!info.translate) {\n                info.canMoveBy = 0;\n                info.subTreeTranslation = 0;\n            }\n        }\n        if (!dontupdate) {\n            shapeBounds = { x: info.x, y: dim.y, right: info.x + dim.width, bottom: dim.y + dim.height };\n            levelBounds.push({ rBounds: shapeBounds });\n            this.updateRearBounds(layout, shape, levelBounds, level);\n        }\n    };\n    HierarchicalTree.prototype.updateRearBounds = function (layout, shape, levelBounds, level, intersect) {\n        var bnds;\n        var index;\n        var isLastLeaf = true;\n        var i;\n        var info = {};\n        var firstLevel;\n        var lastLevel;\n        var bottom;\n        if (shape) {\n            info = layout.graphNodes[shape.id];\n            intersect = info.intersect;\n            isLastLeaf = !info.tree.children.length && !info.tree.assistants.length;\n        }\n        firstLevel = levelBounds[0].rBounds;\n        lastLevel = levelBounds[levelBounds.length - 1].rBounds;\n        if (intersect && intersect.length) {\n            bnds = layout.levels[intersect[0]].rBounds;\n            bottom = bnds.bottom;\n            if (bnds.y < firstLevel.y) {\n                bnds.bottom = firstLevel.y;\n                levelBounds.splice(0, 0, { rBounds: bnds });\n            }\n            if (bottom > lastLevel.bottom) {\n                levelBounds.push({ rBounds: { x: bnds.x, right: bnds.right, y: firstLevel.bottom, bottom: bottom } });\n            }\n            else {\n                bnds = layout.levels[intersect[intersect.length - 1]].rBounds;\n                if (isLastLeaf && bnds.bottom > lastLevel.bottom) {\n                    bnds.y = lastLevel.bottom;\n                    levelBounds.push({ rBounds: bnds });\n                }\n            }\n            index = intersect[0];\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n            index += levelBounds.length;\n            layout.levels.splice(index, intersect.length);\n        }\n        else {\n            index = this.findLevel(layout, levelBounds[levelBounds.length - 1].rBounds, level);\n            for (i = levelBounds.length - 1; i >= 0; i--) {\n                layout.levels.splice(index, 0, levelBounds[i]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.shiftSubordinates = function (layout, intersect, diff) {\n        var i;\n        //Shift the sublevels by the distance diff\n        if (diff !== 0) {\n            for (i = 0; i < intersect.length; i++) {\n                if (layout.levels[intersect[i]].rBounds) {\n                    layout.levels[intersect[i]].rBounds.x -= diff;\n                    layout.levels[intersect[i]].rBounds.right -= diff;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.setDepthSpaceForAssitants = function (layout, shape, bottom, height, lev, vSpace) {\n        var info = layout.graphNodes[shape.id];\n        var asst = {};\n        var asstHeight;\n        var i;\n        var asstElement;\n        var max;\n        max = bottom;\n        //Vertically place the assistants as alternate layout(alternatively at both right and left sides of parent)\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            if (asst) {\n                asst.tree.children = asst.tree.assistants = [];\n                asst.y = bottom;\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstHeight = asstElement.actualSize.height;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstHeight = asstElement.actualSize.width;\n                }\n                max = bottom + asstHeight + vSpace / 2;\n                layout.maxLevel = lev + 1;\n                if (i % 2 === 1 && i !== info.tree.assistants.length - 1) {\n                    bottom = max;\n                    lev++;\n                }\n            }\n        }\n        return { level: layout.maxLevel, bottom: bottom + asstHeight + vSpace };\n    };\n    HierarchicalTree.prototype.setBreadthSpaceForAssistants = function (layout, shape, dim, space, bottom, level) {\n        var asst = {};\n        var asstWidth;\n        var prevBounds;\n        var bounds;\n        var asstElement;\n        var i;\n        var info = layout.graphNodes[shape.id];\n        var max = bottom;\n        var lev = level;\n        var left;\n        var diff;\n        var intersect;\n        var levelBounds;\n        for (i = 0; i < info.tree.assistants.length; i++) {\n            asst = layout.graphNodes[info.tree.assistants[i]];\n            //Arrange assistants at both left and right sides of parent(like alternate layout)\n            //Check - By default, distance to be left between parent and child nodes is assumed as 20.\n            //It can be modified/customized later.\n            if (asst) {\n                asstElement = layout.nameTable[info.tree.assistants[i]];\n                asstWidth = asstElement.actualSize.width;\n                if (layout.orientation.indexOf('Left') !== -1) {\n                    asstWidth = asstElement.actualSize.height;\n                }\n                if (i % 2 === 0) {\n                    left = space + dim.width / 2 - 20 - asstWidth;\n                }\n                else {\n                    left = space + dim.width / 2 + 20;\n                }\n                //Check - What will happen if update leaf node is called? Since assistants don't have children\n                bounds = this.updateTree(layout, left, asst.y, layout.nameTable[info.tree.assistants[i]], lev + 1);\n                if (!this.hasChild(layout, shape)) {\n                    if (i === 0) {\n                        levelBounds = bounds;\n                    }\n                    else {\n                        this.uniteRects(levelBounds, bounds);\n                    }\n                }\n                if (i % 2 === 0 && asst.prevBounds) {\n                    if (diff === undefined) {\n                        diff = asst.canMoveBy;\n                    }\n                    else {\n                        diff = Math.min(diff, asst.canMoveBy);\n                    }\n                }\n                if (i % 2 === 1 || i === info.tree.assistants.length - 1) {\n                    intersect = this.findIntersectingLevels(layout, bounds, lev + 1);\n                    //Update rightmost positions of known layout levels\n                    this.updateRearBounds(layout, null, [{ rBounds: bounds }], lev + 1, intersect);\n                    lev++;\n                }\n            }\n        }\n        if (levelBounds) {\n            levelBounds.canMoveBy = diff;\n        }\n        return levelBounds;\n    };\n    HierarchicalTree.prototype.getDimensions = function (layout, shape, x, y, level) {\n        var width;\n        width = shape.actualSize.width;\n        var height;\n        height = shape.actualSize.height;\n        if (layout.orientation.indexOf('Left') !== -1) {\n            if (!level) {\n                var temp = void 0;\n                temp = x;\n                x = y;\n                y = temp;\n            }\n            height = shape.actualSize.width;\n            width = shape.actualSize.height;\n        }\n        return { x: x, y: y, width: width, height: height };\n    };\n    HierarchicalTree.prototype.hasChild = function (layout, shape) {\n        //Check whether the node has children            \n        var shape1 = layout.graphNodes[shape.id];\n        return shape1.tree.children && shape1.tree.children.length;\n    };\n    HierarchicalTree.prototype.updateHorizontalTree = function (layout, shape, prev, x, y, level) {\n        //Get dimensions with respect to layout orientations  \n        var dimensions;\n        dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = {};\n        info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev;\n        lev = level;\n        var right = 0;\n        right = x;\n        var bottom;\n        bottom = y;\n        var width;\n        var height;\n        var child;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var maxLevel;\n        var translateSibilingsBy;\n        var canMoveBy;\n        var oldActBounds;\n        var i;\n        var childInfo;\n        var prevLayoutLevels;\n        var firstChildInfo;\n        prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        if (this.hasChild(layout, shape)) {\n            var h = void 0;\n            h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            for (i = 0; i < info.tree.children.length; i++) {\n                child = layout.nameTable[info.tree.children[i]];\n                width = child.actualSize.width;\n                height = child.actualSize.height;\n                childWidth = h ? height : width;\n                childHeight = h ? width : height;\n                prevBounds = layout.levels[lev + 1] ? layout.levels[lev + 1].rBounds : null;\n                //Update sub tree\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[info.tree.children[i - 1]]);\n                childInfo = layout.graphNodes[child.id];\n                info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n                actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n                if (i === 0) {\n                    //Compare with previous(right most) subtree\n                    bounds = {\n                        x: Math.min(childInfo.x, childBounds.x), y: Math.min(childInfo.y, childBounds.y),\n                        right: childBounds.right, bottom: childBounds.bottom\n                    };\n                    firstChildInfo = childInfo;\n                }\n                if (!oldActBounds) {\n                    oldActBounds = actBounds;\n                }\n                else {\n                    oldActBounds.x = actBounds.x;\n                    oldActBounds.y = actBounds.y;\n                    if (actBounds.right > oldActBounds.right) {\n                        oldActBounds.right = actBounds.right;\n                    }\n                    oldActBounds.bottom = actBounds.bottom;\n                    //oldActBounds = actBounds;\n                }\n                //Compare with previous subtree if level of the child is greater than the level of previous sub tree\n                //Check - what will happen if level of second child is greater than current child\n                if (i === 0) {\n                    info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n                }\n                if (this.hasChild(layout, child)) {\n                    if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                        if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                            info.firstChild.canMoveBy = canMoveBy;\n                            childInfo.canMoveBy = canMoveBy;\n                            canMoveBy = info.firstChild.canMoveBy;\n                            layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy;\n                        }\n                        var canMoveValue = canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy;\n                        info.firstChild = { x: childInfo.firstChild.x, canMoveBy: canMoveValue, child: child.id };\n                    }\n                    else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                        info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                    }\n                }\n                maxLevel = maxLevel ? Math.max(childInfo.maxLevel, maxLevel) : childInfo.maxLevel;\n                this.uniteRects(bounds, childBounds);\n                if (i !== 0 && !this.hasChild(layout, child) && childInfo.subTreeTranslation < 0) {\n                    right = childBounds.right - childInfo.subTreeTranslation + layout.horizontalSpacing;\n                }\n                else {\n                    right = childBounds.right + layout.horizontalSpacing;\n                }\n            }\n            if (!isNaN(translateSibilingsBy)) {\n                firstChildInfo.canMoveBy = translateSibilingsBy;\n            }\n            info.mid = (firstChildInfo.x + oldActBounds.right) / 2 - dimensions.width / 2;\n            //Set parent based on the chart type\n            if (side === 'Left') {\n                info.mid = actBounds.right - dimensions.width;\n            }\n            else if (side === 'Right') {\n                info.mid = x;\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateHorizontalTreeWithMultipleRows = function (layout, shape, prev, x, y, level) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var firstChildInfo;\n        var maxLevel;\n        var bounds;\n        var rowBounds;\n        var width;\n        var height;\n        var diff;\n        var translateSibilingsBy;\n        var fchild;\n        var maxRowWidth;\n        var j;\n        var i;\n        var k;\n        var max;\n        var leftCenter;\n        var rightCenter;\n        //Get dimensions with respect to layout orientations\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var side = info.tree.type;\n        var lev = level;\n        var right = x;\n        var bottom = y;\n        var prevLayoutLevels = layout.levels.slice(0, layout.levels.length);\n        var minTranslation = 0;\n        if (this.hasChild(layout, shape)) {\n            var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n            var align = void 0;\n            var rows = this.splitChildrenInRows(layout, shape);\n            var unique = info.tree.children.length === 5 && rows[0].length === 3;\n            var leftTree = [];\n            var rightTree = [];\n            if (!unique) {\n                this.splitRows(rows, leftTree, rightTree);\n            }\n            else {\n                rightTree = rows;\n            }\n            var treeInfo = { leftTree: leftTree, rows: rows, rightTree: rightTree, dimensions: dimensions };\n            var rightMost = this.updateLeftTree(layout, treeInfo, shape, x, bottom, lev);\n            bounds = treeInfo.bounds;\n            var rightX = void 0;\n            var center = (rightMost || 0) + (rightMost !== undefined ? (layout.horizontalSpacing / 2) : 0);\n            if (rightMost !== undefined) {\n                info.mid = center - dimensions.width / 2;\n                rightX = rightMost + layout.horizontalSpacing;\n            }\n            bottom = y;\n            var rightBounds = void 0;\n            rightBounds = [];\n            for (i = 0; i < rightTree.length; i++) {\n                if (rows[i].length % 2 === 1 && i === rightTree.length - 1 || unique) {\n                    right = x;\n                }\n                else {\n                    right = rightX || x;\n                }\n                if (i !== 0) {\n                    bottom = rightBounds[i - 1].bottom + layout.verticalSpacing;\n                }\n                for (j = 0; j < rightTree[i].length; j++) {\n                    child = layout.nameTable[rightTree[i][j]];\n                    width = child.actualSize.width;\n                    height = child.actualSize.height;\n                    childWidth = h ? height : width;\n                    childHeight = h ? width : height;\n                    //Update sub tree\n                    childInfo = layout.graphNodes[child.id];\n                    childInfo.actualLevel = lev + 1 + i;\n                    if (j === 0 && leftTree[i] && leftTree[i].length) {\n                        childInfo.translate = false;\n                    }\n                    if (unique && i === 1) {\n                        if (j === 0 && leftCenter + childWidth + layout.horizontalSpacing <= rightCenter) {\n                            align = true;\n                            right = leftCenter - childWidth / 2;\n                        }\n                        if (align && j === 1) {\n                            right = rightCenter - childWidth / 2;\n                        }\n                    }\n                    childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[rightTree[i][j - 1]]);\n                    if (unique && j <= 2 && i === 0) {\n                        if (j === 1) {\n                            leftCenter = childBounds.x - layout.horizontalSpacing / 2;\n                            rightCenter = childBounds.x + childWidth + layout.horizontalSpacing / 2;\n                        }\n                    }\n                    if (j === 0) {\n                        rightBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                    }\n                    else {\n                        this.uniteRects(rightBounds[i], childBounds);\n                    }\n                    if (!bounds) {\n                        bounds = {\n                            x: rightBounds[i].x, y: rightBounds[i].y, right: rightBounds[i].right,\n                            bottom: rightBounds[i].bottom\n                        };\n                    }\n                    this.uniteRects(bounds, rightBounds[i]);\n                    right = childBounds.right + layout.horizontalSpacing;\n                    if (!info.firstChild || ((i === rightTree.length - 1 && rows[i].length % 2 === 1) || unique)\n                        && j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                        minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                        info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                    }\n                    treeInfo.leftCenter = leftCenter;\n                    treeInfo.rightCenter = rightCenter;\n                    treeInfo.align = align;\n                    treeInfo.level = lev;\n                    treeInfo.rightBounds = rightBounds;\n                    this.alignRowsToCenter(layout, i, shape, treeInfo, rightX);\n                }\n            }\n        }\n        return bounds;\n    };\n    HierarchicalTree.prototype.updateLeftTree = function (layout, treeInfo, shape, x, bottom, lev) {\n        var leftTree = treeInfo.leftTree;\n        var info = layout.graphNodes[shape.id];\n        var right;\n        var leftBounds = [];\n        var minTranslation;\n        var rightMost;\n        var childBounds;\n        var bounds;\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        //Arrange left side\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            right = x;\n            if (leftBounds[i - 1]) {\n                bottom = leftBounds[i - 1].bottom + layout.verticalSpacing;\n            }\n            for (var j = 0; j < leftTree[i].length; j++) {\n                var child = layout.nameTable[leftTree[i][j]];\n                var childWidth = h ? child.actualSize.height : child.actualSize.width;\n                var childHeight = h ? child.actualSize.width : child.actualSize.height;\n                //Update sub tree\n                var childInfo = layout.graphNodes[child.id];\n                childInfo.actualLevel = lev + 1 + i;\n                childBounds = this.updateTree(layout, right, bottom, child, lev + 1, layout.nameTable[leftTree[i][j - 1]]);\n                if (j === 0) {\n                    leftBounds[i] = { x: childBounds.x, y: childBounds.y, right: childBounds.right, bottom: childBounds.bottom };\n                }\n                else {\n                    this.uniteRects(leftBounds[i], childBounds);\n                }\n                if (i === 0 && j === 0) {\n                    minTranslation = childInfo.canMoveBy;\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                else if (j === 0 && childInfo.canMoveBy !== undefined && minTranslation > childInfo.canMoveBy) {\n                    minTranslation = Math.min(minTranslation, childInfo.canMoveBy || 0);\n                    info.firstChild = { x: childInfo.x, child: child.id, canMoveBy: childInfo.canMoveBy };\n                }\n                right = childBounds.right + layout.horizontalSpacing;\n            }\n            if (i === 0) {\n                rightMost = leftBounds[i].right;\n            }\n            else {\n                rightMost = Math.max(rightMost, leftBounds[i].right);\n            }\n        }\n        //Translate to same positions\n        for (var i = 0; i < leftTree.length && leftTree[i].length; i++) {\n            if (rightMost !== leftBounds[i].right) {\n                var diff = rightMost - leftBounds[i].right;\n                for (var j = 0; j < leftTree[i].length; j++) {\n                    var element = layout.nameTable[leftTree[i][j]];\n                    var elementInfo = layout.graphNodes[leftTree[i][j]];\n                    elementInfo.x += diff;\n                }\n                //leftBounds[i].x += diff;\n                //leftBounds[i].right += diff;\n            }\n            if (i === 0) {\n                bounds = { x: leftBounds[0].x, y: leftBounds[0].y, right: leftBounds[0].right, bottom: leftBounds[0].bottom };\n            }\n            else {\n                this.uniteRects(bounds, leftBounds[i]);\n            }\n        }\n        treeInfo.bounds = bounds;\n        return rightMost;\n    };\n    HierarchicalTree.prototype.alignRowsToCenter = function (layout, i, shape, treeInfo, rightX) {\n        var max;\n        var centered;\n        var diff;\n        var info = layout.graphNodes[shape.id];\n        var rows = treeInfo.rows;\n        var rightTree = treeInfo.rightTree;\n        var leftCenter = treeInfo.leftCenter;\n        var rightCenter = treeInfo.rightCenter;\n        var align = treeInfo.align;\n        var rightBounds = treeInfo.rightBounds;\n        var dimensions = treeInfo.dimensions;\n        var lev = treeInfo.level;\n        var unique = info.tree.children.length === 5 && rows[0].length === 3;\n        if (unique && i === 1) {\n            max = (rightBounds[0].right - rightBounds[0].x) >= (rightBounds[1].right - rightBounds[1].x) ? 0 : 1;\n        }\n        if (i === rows.length - 1) {\n            if (rows[i].length % 2 === 1 || unique && i === 1) {\n                centered = rightTree[i][Math.floor(rightTree[i].length / 2)];\n                var centerObjct = void 0;\n                centerObjct = layout.nameTable[centered];\n                var childDimension = void 0;\n                var centeredX = layout.graphNodes[centered].x;\n                var centeredY = layout.graphNodes[centered].y;\n                childDimension = this.getDimensions(layout, centerObjct, centeredX, centeredY, lev + 1);\n                diff = undefined;\n                if (!align && unique) {\n                    if (max === 1) {\n                        i = 0;\n                    }\n                    diff = (rightBounds[max].x + rightBounds[max].right) / 2 - (rightBounds[i].x + rightBounds[i].right) / 2;\n                    if (i === 0) {\n                        info.mid += diff;\n                    }\n                }\n                else if (!unique && rightX !== undefined) {\n                    diff = rightX - layout.horizontalSpacing / 2 - (centeredX + childDimension.width / 2);\n                }\n                if (diff !== undefined) {\n                    this.updateRearBoundsOfTree(layout, rightTree[i], diff, dimensions);\n                }\n                if (unique) {\n                    info.mid = (rightCenter + leftCenter) / 2 + (i === 0 ? diff : 0) - dimensions.width / 2;\n                }\n                if (info.mid === undefined && layout.graphNodes[centered]) {\n                    info.mid = centeredX;\n                }\n                align = false;\n                i++;\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateRearBoundsOfTree = function (layout, rightTree, diff, dimensions) {\n        for (var j = 0; j < rightTree.length; j++) {\n            var childInfo = layout.graphNodes[rightTree[j]];\n            var child = layout.nameTable[rightTree[j]];\n            childInfo.x += diff;\n            childInfo.canMoveBy += diff;\n            if (j === rightTree.length - 1) {\n                //removed child dimensions call calculation, since that is not used\n                var childBnds = {\n                    x: childInfo.x, y: childInfo.y, right: childInfo.x +\n                        dimensions.width, bottom: childInfo.y + dimensions.height\n                };\n                var intersect = this.findIntersectingLevels(layout, childBnds, childInfo.actualLevel);\n                this.updateRearBounds(layout, null, [{ rBounds: childBnds }], childInfo.actualLevel, intersect);\n            }\n        }\n    };\n    HierarchicalTree.prototype.splitRows = function (rows, leftTree, rightTree) {\n        for (var i = 0; i < rows.length; i++) {\n            leftTree[i] = [];\n            rightTree[i] = [];\n            var half = void 0;\n            half = rows[i].length;\n            if (rows[i].length % 2 !== 1) {\n                half = Math.ceil(rows[i].length / 2);\n                for (var k = 0; k < half; k++) {\n                    leftTree[i].push(rows[i][k]);\n                }\n            }\n            for (var j = leftTree[i].length; j < rows[i].length; j++) {\n                rightTree[i].push(rows[i][j]);\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateVerticalTree = function (layout, shape, x, y, level, dontUpdate) {\n        //declarations\n        var child;\n        var childInfo;\n        var childBounds;\n        var childWidth;\n        var childHeight;\n        var prevBounds;\n        var bounds;\n        var actBounds;\n        var oddBounds;\n        var evenBounds;\n        var dimensions = this.getDimensions(layout, shape, x, y, level);\n        var info = layout.graphNodes[shape.id];\n        var firstChild = layout.nameTable[info.tree.children[0]];\n        var h = layout.orientation.indexOf('Left') !== -1 ? true : false;\n        var factor = info.tree.type === 'Left' ? -1 : 0;\n        var right = x;\n        var bottom = y;\n        var lev;\n        lev = level;\n        var i;\n        var intersect;\n        var type;\n        var levels = [];\n        var oddLevels = [];\n        var canMoveBy;\n        var diff;\n        for (i = 0; i < info.tree.children.length; i++) {\n            if (info.tree.type === 'Alternate') {\n                //arrange at both left and right\n                type = (i % 2 === 0 && info.tree.children.length > 2) ? 'Left' : 'Right';\n                factor = (i % 2 === 0 && info.tree.children.length > 2) ? -1 : 0;\n            }\n            right = x + this.findOffset(layout, shape, info, type);\n            child = layout.nameTable[info.tree.children[i]];\n            childWidth = h ? child.actualSize.height : child.actualSize.width;\n            childHeight = h ? child.actualSize.width : child.actualSize.height;\n            //Update sub tree\n            childBounds = this.updateTree(layout, right + factor * childWidth, bottom, child, level + 1, undefined, true);\n            childInfo = layout.graphNodes[child.id];\n            actBounds = { x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth, bottom: childInfo.y + childHeight };\n            if (i === 0) {\n                this.uniteRects(childBounds, actBounds);\n                bounds = childBounds;\n            }\n            else {\n                this.uniteRects(bounds, childBounds);\n            }\n            //Check and adjust the space left from previous subtree/sibling\n            if (childInfo.prevBounds && !(info.tree.type === 'Alternate' && i % 2 === 1 && info.tree.children.length > 2)) {\n                canMoveBy = canMoveBy !== undefined ? Math.min(childInfo.canMoveBy, canMoveBy) : childInfo.canMoveBy;\n            }\n            //Max level of the subtree node\n            info.maxLevel = Math.max(info.maxLevel || 0, childInfo.maxLevel || 0);\n            if (!(info.tree.type === 'Alternate' && info.tree.children.length > 2 && i % 2 === 0)) {\n                if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                    //alternate - arrange children with even index(0,2,4,6,..) at the next level\n                    bottom = Math.max(childBounds.bottom, prevBounds.bottom) + layout.verticalSpacing / 2;\n                }\n                else {\n                    // left/right - arrange next child at the nect level(bottom)\n                    bottom = childBounds.bottom + layout.verticalSpacing / 2;\n                }\n                level = info.maxLevel;\n                levels.push({ rBounds: actBounds });\n                if (!evenBounds) {\n                    evenBounds = {\n                        x: childInfo.x, y: childInfo.y, right: childInfo.x + childWidth,\n                        bottom: childInfo.y + childHeight\n                    };\n                }\n                else {\n                    this.uniteRects(evenBounds, actBounds);\n                }\n                if (childInfo.levelBounds) {\n                    levels = levels.concat(childInfo.levelBounds);\n                }\n            }\n            else {\n                if (i !== 0) {\n                    bottom = prevBounds.bottom + layout.verticalSpacing / 2;\n                }\n                oddLevels.push({ rBounds: actBounds });\n                if (childInfo.levelBounds) {\n                    oddLevels = oddLevels.concat(childInfo.levelBounds);\n                }\n            }\n            if (i === 0) {\n                info.firstChild = { x: childInfo.x, canMoveBy: childInfo.canMoveBy, child: child.id };\n            }\n            if (this.hasChild(layout, child)) {\n                if (!info.firstChild || info.firstChild.x >= childInfo.firstChild.x) {\n                    if (childInfo.firstChild && info.firstChild.canMoveBy < childInfo.canMoveBy) {\n                        var canMoveBy_1 = info.firstChild.canMoveBy;\n                        childInfo.canMoveBy = canMoveBy_1;\n                        layout.graphNodes[info.firstChild.child].canMoveBy = canMoveBy_1;\n                        info.firstChild.canMoveBy = canMoveBy_1;\n                    }\n                    info.firstChild = {\n                        x: childInfo.firstChild.x, canMoveBy: canMoveBy !== undefined ? canMoveBy : childInfo.canMoveBy,\n                        child: child.id\n                    };\n                }\n                else if (childInfo.firstChild && childInfo.translated && info.firstChild.canMoveBy > childInfo.canMoveBy) {\n                    info.firstChild.canMoveBy = layout.graphNodes[info.firstChild.child].canMoveBy = childInfo.canMoveBy;\n                }\n            }\n            prevBounds = actBounds;\n        }\n        //To set level bounds(right most position of levels)\n        if (!dontUpdate) {\n            if (info.tree.type === 'Alternate' && info.tree.children.length > 2) {\n                oddBounds = {\n                    x: oddLevels[0].rBounds.x, y: oddLevels[0].rBounds.y,\n                    right: oddLevels[oddLevels.length - 1].rBounds.right, bottom: oddLevels[oddLevels.length - 1].rBounds.bottom\n                };\n                intersect = this.findIntersectingLevels(layout, oddBounds, lev + 1);\n                this.updateRearBounds(layout, null, oddLevels, lev + 1, intersect);\n            }\n            intersect = this.findIntersectingLevels(layout, evenBounds || bounds, lev + 1);\n            this.updateRearBounds(layout, null, evenBounds ? levels : [{ rBounds: bounds }], lev + 1, intersect);\n        }\n        else {\n            info.levelBounds = levels;\n        }\n        if (!isNaN(canMoveBy)) {\n            layout.graphNodes[firstChild.id].canMoveBy = canMoveBy;\n        }\n        info.childBounds = bounds;\n        info.mid = x;\n        return bounds;\n    };\n    HierarchicalTree.prototype.splitChildrenInRows = function (layout, shape) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var column;\n        column = 4;\n        var rows = [];\n        var childNodes;\n        childNodes = info.tree.children.length;\n        var children = this.extend(info.tree.children);\n        if (info.tree.rows) {\n            var count = void 0;\n            count = info.tree.children.length;\n            var columns = void 0;\n            columns = Math.ceil(count / info.tree.rows);\n            if (columns % 2 === 0) {\n                column = columns;\n            }\n            else {\n                column = columns + 1;\n            }\n        }\n        else if (info.tree.children.length === 3 || info.tree.children.length === 4) {\n            column = 2;\n        }\n        else if (info.tree.children.length === 5) {\n            column = 3;\n        }\n        while (childNodes > 0) {\n            rows[rows.length] = children.splice(0, column);\n            childNodes -= column;\n            if (childNodes < column) {\n                column = childNodes;\n            }\n        }\n        return rows;\n    };\n    HierarchicalTree.prototype.extend = function (temp) {\n        var i;\n        var dummy = [];\n        for (i = 0; i < temp.length; i++) {\n            dummy[i] = temp[i];\n        }\n        return dummy;\n    };\n    HierarchicalTree.prototype.findOffset = function (layout, shape, info, type) {\n        var offset = 0;\n        var space = (layout.orientation.indexOf('Left') !== -1) ? shape.actualSize.height :\n            shape.actualSize.width;\n        var treeType = type ? type : info.tree.type;\n        offset = info.tree.offset || 20;\n        if (info.tree.type === 'Alternate') {\n            if (offset >= layout.horizontalSpacing) {\n                offset = layout.horizontalSpacing / 2;\n            }\n        }\n        switch (treeType) {\n            case 'Left':\n                offset = space / 2 - offset;\n                break;\n            case 'Right':\n                offset = offset + space / 2;\n                break;\n        }\n        return offset;\n    };\n    HierarchicalTree.prototype.uniteRects = function (rect1, rect2) {\n        //Unite two rects\n        rect1.x = Math.min(rect1.x, rect2.x);\n        rect1.right = Math.max(rect1.right, rect2.right);\n        rect1.bottom = Math.max(rect1.bottom, rect2.bottom);\n    };\n    HierarchicalTree.prototype.spaceLeftFromPrevSubTree = function (layout, shape, bounds) {\n        var info;\n        info = layout.graphNodes[shape.id];\n        var dif;\n        var prevBounds;\n        var intersect;\n        var k;\n        var space;\n        space = layout.horizontalSpacing;\n        //Find the minimum distance to move towards previous sub tree\n        for (k = 0; k < info.intersect.length; k++) {\n            prevBounds = layout.levels[info.intersect[k]].rBounds;\n            dif = bounds.x - (prevBounds.right + space);\n            if (info.diff === undefined || dif < info.diff) {\n                info.diff = dif;\n                info.prevBounds = layout.levels[info.intersect[k]].rBounds;\n            }\n        }\n    };\n    HierarchicalTree.prototype.findIntersectingLevels = function (layout, bounds, level, actualLevel) {\n        //intersecting with exact Level\n        var bnds;\n        bnds = { x: bounds.x, y: bounds.y, right: bounds.right, bottom: bounds.bottom };\n        bnds.y -= layout.verticalSpacing / 2;\n        bnds.bottom += layout.verticalSpacing / 2;\n        var intersectingLevels;\n        intersectingLevels = [];\n        var rBounds;\n        var l;\n        l = actualLevel !== undefined ? actualLevel : level;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        //Performance - We can consider only the intersecting levels\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y)\n                || (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y &&\n                    bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                var index = 0;\n                intersectingLevels.splice(index, 0, l);\n            }\n            else if (rBounds && rBounds.bottom < bnds.y) {\n                break;\n            }\n            l--;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l >= 0);\n        l = (actualLevel !== undefined ? actualLevel : level) + 1;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        do {\n            if (rBounds && ((bnds.y < rBounds.y && bnds.bottom > rBounds.y) ||\n                (bnds.y < rBounds.bottom && rBounds.bottom < bnds.bottom) ||\n                bnds.y >= rBounds.y && bnds.bottom <= rBounds.bottom || bnds.y < rBounds.y && bnds.bottom > rBounds.bottom)) {\n                intersectingLevels.push(l);\n            }\n            else if (rBounds && rBounds.y > bnds.bottom) {\n                break;\n            }\n            l++;\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        } while (l <= layout.levels.length);\n        return intersectingLevels;\n    };\n    HierarchicalTree.prototype.findLevel = function (layout, bounds, level) {\n        var bnds;\n        bnds = bounds;\n        var l;\n        l = 0;\n        var rBounds;\n        rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        while (l < layout.levels.length) {\n            if (rBounds && bnds.bottom < rBounds.y) {\n                return l;\n            }\n            else {\n                l++;\n            }\n            rBounds = layout.levels[l] ? layout.levels[l].rBounds : null;\n        }\n        return l;\n    };\n    HierarchicalTree.prototype.getParentNode = function (layout, node) {\n        //Return the first parent node\n        return layout.nameTable[layout.nameTable[node.inEdges[0]].sourceID];\n    };\n    HierarchicalTree.prototype.updateEdges = function (layout, node, depth, action) {\n        var layoutInfo;\n        layoutInfo = layout.graphNodes[node.id];\n        var j;\n        if (node.outEdges && node.outEdges.length && (node.isExpanded || (action === DiagramAction.Render))) {\n            for (j = 0; j < node.outEdges.length; j++) {\n                var edge = void 0;\n                edge = layout.nameTable[layout.nameTable[node.outEdges[j]].targetID];\n                if (!edge.excludeFromLayout) {\n                    if (layoutInfo.tree.children.indexOf(edge.id) === -1) {\n                        layoutInfo.tree.children.push(edge.id);\n                    }\n                    if (edge.outEdges && edge.outEdges.length && edge.isExpanded) {\n                        layoutInfo.tree.hasSubTree = true;\n                    }\n                    this.updateEdges(layout, edge, depth + 1, action);\n                }\n            }\n        }\n        //set level info\n        layoutInfo.tree.level = depth;\n        //By default, orientation is horizontal for nested trees\n        if (layoutInfo.tree.hasSubTree) {\n            layoutInfo.tree.orientation = 'Horizontal';\n            layoutInfo.tree.type = 'Center';\n        }\n        //Customizing assistants and children collection\n        //Performance-Instead of reading the method everytime, we can set once and can reuse that\n        if (layout.getLayoutInfo && layout.type === 'OrganizationalChart') {\n            layout.getLayoutInfo(node, layoutInfo.tree);\n            if (layoutInfo.tree.type === 'Balanced' && layoutInfo.tree.hasSubTree) {\n                layoutInfo.tree.type = 'Center';\n                layoutInfo.tree.orientation = 'Horizontal';\n            }\n        }\n        if (layout.level && layoutInfo.tree.type !== 'Alternate' && depth >= layout.level) {\n            layoutInfo.tree.hasSubTree = false;\n        }\n    };\n    HierarchicalTree.prototype.updateAnchor = function (layout, bounds, viewPort) {\n        var node;\n        var fixedNode;\n        var width = 0;\n        var height = 0;\n        var mod = 0;\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        var layoutBounds;\n        layoutBounds = layout.bounds ? layout.bounds : viewPortBounds;\n        var orientation = layout.orientation;\n        //Anchor based on fixed nodes\n        if (layout.fixedNode) {\n            fixedNode = layout.nameTable[layout.fixedNode];\n            width = fixedNode.actualSize.width;\n            height = fixedNode.actualSize.height;\n            layout.anchorX = fixedNode.offsetX;\n            layout.anchorY = fixedNode.offsetY;\n            var pivot = fixedNode.pivot;\n            layout.anchorX += layout.orientation === 'RightToLeft' ? width * pivot.x : -width * pivot.x;\n            layout.anchorY += layout.orientation === 'BottomToTop' ? height * pivot.y : -height * pivot.y;\n            node = fixedNode;\n            mod = 0;\n            while (node.inEdges.length) {\n                node = this.getParentNode(layout, node);\n                mod += layout.graphNodes[node.id].subTreeTranslation || 0;\n            }\n            if (layout.orientation.indexOf('Left') !== -1) {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].y;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].x + mod;\n            }\n            else {\n                layout.anchorX -= layout.graphNodes[fixedNode.id].x + mod;\n                layout.anchorY -= layout.graphNodes[fixedNode.id].y;\n            }\n        }\n        else {\n            if (orientation === 'TopToBottom' || orientation === 'BottomToTop') {\n                switch (layout.horizontalAlignment) {\n                    case 'Left':\n                        layout.anchorX = (layoutBounds.x - bounds.x) + layout.margin.left;\n                        break;\n                    case 'Right':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width - layout.margin.right - bounds.right;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorX = layoutBounds.x + layoutBounds.width / 2 - (bounds.x + bounds.right) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Auto':\n                    case 'Top':\n                        var top_1;\n                        top_1 = layoutBounds.y + layout.margin.top;\n                        layout.anchorY = orientation === 'TopToBottom' ? top_1 : bounds.bottom + top_1;\n                        break;\n                    case 'Bottom':\n                        var bottom = void 0;\n                        bottom = layoutBounds.y + layoutBounds.height - layout.margin.bottom;\n                        layout.anchorY = orientation === 'TopToBottom' ? bottom - bounds.bottom : bottom;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.y + layoutBounds.height / 2;\n                        layout.anchorY = layout.orientation === 'TopToBottom' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n            }\n            else {\n                switch (layout.horizontalAlignment) {\n                    case 'Auto':\n                    case 'Left':\n                        var left = void 0;\n                        left = layoutBounds.x + layout.margin.left;\n                        layout.anchorX = orientation === 'LeftToRight' ? left : bounds.bottom + left;\n                        break;\n                    case 'Right':\n                        var right = void 0;\n                        right = layoutBounds.x + layoutBounds.width - layout.margin.right;\n                        layout.anchorX = orientation === 'LeftToRight' ? right - bounds.bottom : right;\n                        break;\n                    case 'Center':\n                        var center = void 0;\n                        center = layoutBounds.width / 2 + layoutBounds.x;\n                        layout.anchorX = layout.orientation === 'LeftToRight' ?\n                            center - (bounds.y + bounds.bottom) / 2 : center + (bounds.y + bounds.bottom) / 2;\n                        break;\n                }\n                switch (layout.verticalAlignment) {\n                    case 'Top':\n                        layout.anchorY = layoutBounds.y + layout.margin.top - bounds.x;\n                        break;\n                    case 'Auto':\n                    case 'Center':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height / 2 - (bounds.right + bounds.x) / 2;\n                        break;\n                    case 'Bottom':\n                        layout.anchorY = layoutBounds.y + layoutBounds.height - layout.margin.bottom - bounds.right;\n                        break;\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateConnectors = function (layout, node, level) {\n        var i;\n        var info;\n        var nodeWidth;\n        var nodeHeight;\n        var targetWidth;\n        var targetHeight;\n        var length;\n        var offsetLen;\n        var points;\n        var segments;\n        var target;\n        var conn;\n        var relative;\n        var center;\n        var layoutProp;\n        //Route out edges\n        info = layout.graphNodes[node.id];\n        var direction;\n        if (node.outEdges.length) {\n            for (i = 0; i < node.outEdges.length; i++) {\n                conn = layout.nameTable[node.outEdges[i]];\n                conn.points = [];\n                target = layout.nameTable[conn.targetID];\n                if (conn.visible) {\n                    conn.visited = true;\n                    if (layout.getConnectorSegments) {\n                        segments = layout.getConnectorSegments(conn);\n                    }\n                    else {\n                        if (info && info.tree.children.indexOf(conn.targetID) !== -1) {\n                            conn.segments = [];\n                            if (layout.type === 'OrganizationalChart' && conn.type === 'Orthogonal') {\n                                this.updateSegments(layout, conn, node, target, i);\n                            }\n                        }\n                    }\n                    if (target && (target.isExpanded || this.hasChild(layout, target))) {\n                        this.updateConnectors(layout, target, level + 1);\n                    }\n                }\n            }\n        }\n        if (info && info.tree.assistants.length) {\n            //In-Edge routing of assistant nodes\n            for (i = 0; i < info.tree.assistants.length; i++) {\n                target = layout.nameTable[info.tree.assistants[i]];\n                conn = layout.nameTable[target.inEdges[0]];\n                this.get3Points(layout, node, target, conn);\n                if (target.isExpanded || this.hasChild(layout, target)) {\n                    this.updateConnectors(layout, target, level + 1);\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegments = function (layout, conn, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        //Connector routing - Horizontal layout orientation\n        if (info.tree.assistants.length) {\n            //Route in-edge of child node, if the parent has assistant\n            this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n        }\n        else {\n            //Route in-edge of child node\n            if (info.tree.orientation === 'Horizontal' && info.tree.type === 'Balanced') {\n                this.updateSegmentsForBalancedTree(layout, conn, node, target, i);\n            }\n            else {\n                if (info.tree.orientation === 'Horizontal') {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, conn);\n                }\n                else {\n                    if (info.tree.offset < 5) {\n                        this.get5Points(layout, node, target, conn);\n                    }\n                    else {\n                        this.get3Points(layout, node, target, conn);\n                    }\n                }\n            }\n        }\n    };\n    HierarchicalTree.prototype.updateSegmentsForBalancedTree = function (layout, connector, node, target, i) {\n        var info = layout.graphNodes[node.id];\n        var center;\n        var relative;\n        if (info.tree.children.length === 5 && i > 2) {\n            relative = info.tree.children[1];\n            if (isNaN(layout.graphNodes[relative].treeWidth)) {\n                layout.graphNodes[relative].treeWidth = layout.nameTable[relative].actualSize.width;\n            }\n            var factor = i !== 3 ? 1 : -1;\n            if (layout.orientation.indexOf('Left') !== -1) {\n                center = layout.nameTable[relative].offsetY - layout.graphNodes[relative].treeWidth / 2 -\n                    (layout.verticalSpacing * factor / 2);\n            }\n            else {\n                center = layout.nameTable[relative].offsetX +\n                    layout.graphNodes[relative].treeWidth / 2 + (layout.horizontalSpacing * factor) / 2;\n            }\n            this.getSegmentsForMultipleRows(layout, node, target, connector);\n        }\n        else {\n            if (info.tree.children.length > 5) {\n                if (i < 4) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else if (info.tree.children.length === 4) {\n                if (i < 2) {\n                    this.getSegmentsForMultipleRows(layout, node, target, connector);\n                }\n                else {\n                    this.updateSegmentsForHorizontalOrientation(layout, node, target, connector);\n                }\n            }\n            else {\n                this.getSegmentsForMultipleRows(layout, node, target, connector);\n            }\n        }\n    };\n    HierarchicalTree.prototype.get3Points = function (layout, node, target, connector) {\n        var points = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        if (layout.orientation.indexOf('Top') !== -1) {\n            var startingPoint = layout.orientation.indexOf('Top') === 0 ? nodeBounds.bottomCenter :\n                nodeBounds.topCenter;\n            var endPoint = node.offsetX > target.offsetX ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: nodeBounds.bottomCenter.x, y: endPoint.y }, endPoint);\n        }\n        else {\n            var startingPoint = layout.orientation.indexOf('Left') === 0 ? nodeBounds.middleRight :\n                nodeBounds.middleLeft;\n            var endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            points.push(startingPoint, { x: targetBounds.bottomCenter.x, y: nodeBounds.middleRight.y }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.get5Points = function (layout, node, target, connector) {\n        var points = [];\n        var layoutprop;\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        var info = layout.graphNodes[node.id];\n        var startingPoint;\n        var endPoint;\n        var horizontalSpacing;\n        var verticalSpacing;\n        if (layout.orientation.indexOf('Top') !== -1) {\n            startingPoint = (node.offsetY < target.offsetY) ? nodeBounds.bottomCenter : nodeBounds.topCenter;\n            verticalSpacing = layout.verticalSpacing / 4 * ((node.offsetY < target.offsetY) ? 1 : -1);\n            horizontalSpacing = layout.horizontalSpacing / 2 * ((node.offsetX > target.offsetX) ? 1 : -1);\n            endPoint = (node.offsetX > target.offsetX) ? targetBounds.middleRight : targetBounds.middleLeft;\n            points.push(startingPoint, { x: startingPoint.x, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x + horizontalSpacing, y: endPoint.y }, endPoint);\n        }\n        else {\n            startingPoint = (node.offsetX > target.offsetX) ? nodeBounds.middleLeft : nodeBounds.middleRight;\n            endPoint = node.offsetY > target.offsetY ? targetBounds.bottomCenter : targetBounds.topCenter;\n            horizontalSpacing = layout.horizontalSpacing / 4 * ((node.offsetX < target.offsetX) ? 1 : -1);\n            verticalSpacing = layout.verticalSpacing / 2 * ((node.offsetY > target.offsetY) ? 1 : -1);\n            points.push(startingPoint, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y }, { x: startingPoint.x + horizontalSpacing, y: startingPoint.y + verticalSpacing }, { x: endPoint.x, y: startingPoint.y + verticalSpacing }, endPoint);\n        }\n        this.getSegmentsFromPoints(points, connector);\n    };\n    HierarchicalTree.prototype.getSegmentsFromPoints = function (points, connector) {\n        var segments = [];\n        var segment;\n        for (var i = 0; i < points.length - 2; i++) {\n            segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n            segment.direction = Point.direction(points[i], points[i + 1]);\n            segment.length = Point.distancePoints(points[i], points[i + 1]);\n            segments.push(segment);\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.getSegmentsForMultipleRows = function (layout, node, target, connector) {\n        var points = [];\n        var segments = [];\n        var point;\n        var segment;\n        var targetBounds = this.getBounds(target);\n        var nodeBounds = this.getBounds(node);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.bottomCenter.y + layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point = { x: nodeBounds.bottomCenter.x, y: (nodeBounds.topCenter.y - layout.verticalSpacing / 4) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: nodeBounds.middleRight.y, };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (nodeBounds.middleRight.x + layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point, point3);\n                    segment.length = Point.distancePoints(point, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point_1 = { x: (nodeBounds.middleLeft.x - layout.verticalSpacing / 4), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point_1, point_1);\n                    segment.length = Point.distancePoints(point_1, point_1);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n    };\n    HierarchicalTree.prototype.updateSegmentsForHorizontalOrientation = function (layout, node, target, connector) {\n        var points = [];\n        var point2;\n        var segment;\n        var segments = [];\n        var nodeBounds = this.getBounds(node);\n        var targetBounds = this.getBounds(target);\n        switch (layout.orientation) {\n            case 'TopToBottom':\n                point2 = { x: nodeBounds.bottomCenter.x, y: (targetBounds.topCenter.y - layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.bottomCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.bottomCenter, point2);\n                segments.push(segment);\n                break;\n            case 'BottomToTop':\n                point2 = { x: nodeBounds.topCenter.x, y: (targetBounds.bottomCenter.y + layout.verticalSpacing / 2) };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.topCenter, point2);\n                segment.length = Point.distancePoints(nodeBounds.topCenter, point2);\n                segments.push(segment);\n                break;\n            case 'LeftToRight':\n                point2 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleRight, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleRight, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point3 = { x: (targetBounds.middleLeft.x - layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point3);\n                    segment.length = Point.distancePoints(point2, point3);\n                    segments.push(segment);\n                }\n                break;\n            case 'RightToLeft':\n                point2 = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: nodeBounds.middleRight.y };\n                segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                segment.direction = Point.direction(nodeBounds.middleLeft, point2);\n                segment.length = Point.distancePoints(nodeBounds.middleLeft, point2);\n                segments.push(segment);\n                if (targetBounds.center.y !== nodeBounds.center.y) {\n                    var point = { x: (targetBounds.middleRight.x + layout.verticalSpacing / 2), y: targetBounds.middleLeft.y };\n                    segment = new OrthogonalSegment(connector, 'segments', { type: 'Orthogonal' }, true);\n                    segment.direction = Point.direction(point2, point);\n                    segment.length = Point.distancePoints(point2, point);\n                    segments.push(segment);\n                }\n                break;\n        }\n        connector.segments = segments;\n        return points;\n    };\n    HierarchicalTree.prototype.updateNodes = function (layout, node, mod, update, dx, dy) {\n        var i;\n        var child;\n        var width;\n        var height;\n        var offsetX;\n        var offsetY;\n        width = node.actualSize.width;\n        height = node.actualSize.height;\n        if (!node.excludeFromLayout) {\n            offsetX = layout.anchorX;\n            offsetY = layout.anchorY;\n            /*Performance - instead of checking conditions for every node, we can make the layout related\n            conditions once and we can reuse them*/\n            if (layout.orientation === 'LeftToRight') {\n                offsetX += layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'RightToLeft') {\n                offsetX -= layout.graphNodes[node.id].y + width / 2;\n                offsetY += layout.graphNodes[node.id].x + mod + height / 2;\n            }\n            else if (layout.orientation === 'TopToBottom') {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY += layout.graphNodes[node.id].y + height / 2;\n            }\n            else {\n                offsetX += layout.graphNodes[node.id].x + mod + width / 2;\n                offsetY -= layout.graphNodes[node.id].y + height / 2;\n            }\n            if (layout.graphNodes) {\n                dx = dx ? dx : 0;\n                dy = dy ? dy : 0;\n                offsetX += dx;\n                offsetY += dy;\n                if (!this.isAnimation) {\n                    node.offsetX = offsetX;\n                    node.offsetY = offsetY;\n                }\n            }\n            var objects = { id: node.id, differenceX: offsetX - node.offsetX, differenceY: offsetY - node.offsetY };\n            layout.objects.push(objects);\n            var list = void 0;\n            list = [];\n            if (this.hasChild(layout, node)) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.children.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.children[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), update, dx, dy);\n                    list.push(child);\n                }\n            }\n            if (layout.graphNodes[node.id].tree.assistants.length) {\n                for (i = 0; i < layout.graphNodes[node.id].tree.assistants.length; i++) {\n                    child = layout.nameTable[layout.graphNodes[node.id].tree.assistants[i]];\n                    this.updateNodes(layout, child, mod + (layout.graphNodes[node.id].subTreeTranslation || 0), null, dx, dy);\n                }\n            }\n        }\n    };\n    return HierarchicalTree;\n}());\nexport { HierarchicalTree };\n","import { Rect } from '../primitives/rect';\nimport { getFunction } from '../utility/base-util';\nimport { HierarchicalTree } from './hierarchical-tree';\n/**\n * Layout for mind-map tree\n */\nvar MindMap = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function MindMap() {\n        /**\n         * Defines the layout animation\n         *\n         */\n        this.isAnimation = false;\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    MindMap.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    MindMap.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'MindMapChart';\n    };\n    /**   @private  */\n    MindMap.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewPort, uniqueId, root) {\n        var isRoot;\n        isRoot = this.checkRoot(nodes, layoutProp, uniqueId, root, nameTable);\n        if (isRoot) {\n            layoutProp.fixedNode = isRoot;\n        }\n        else {\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                if (!node.excludeFromLayout) {\n                    if (!node.inEdges || !node.inEdges.length) {\n                        layoutProp.fixedNode = node.id;\n                        break;\n                    }\n                }\n            }\n        }\n        var rootNode = nameTable[layoutProp.fixedNode];\n        var fistLevelNodes = this.findFirstLevelNodes(rootNode, layoutProp, nameTable);\n        var leftNodes = [];\n        var rightNodes = [];\n        var getMindmapBranch = getFunction(layoutProp.getBranch);\n        getMindmapBranch = getMindmapBranch || getFunction(this.getBranch);\n        for (var _a = 0, fistLevelNodes_1 = fistLevelNodes; _a < fistLevelNodes_1.length; _a++) {\n            var node = fistLevelNodes_1[_a];\n            var align = getMindmapBranch(node, fistLevelNodes);\n            (align === 'Left') ? leftNodes.push(node) : rightNodes.push(node);\n        }\n        var viewPortBounds = new Rect(0, 0, viewPort.x, viewPort.y);\n        nameTable[layoutProp.fixedNode].offsetX = viewPortBounds.x + viewPortBounds.width / 2;\n        nameTable[layoutProp.fixedNode].offsetY = viewPortBounds.y + viewPortBounds.height / 2;\n        if (leftNodes.length) {\n            this.updateMindMapBranch(nodes, rightNodes, nameTable, layoutProp, viewPort, uniqueId, 'Left');\n        }\n        if (rightNodes.length) {\n            this.updateMindMapBranch(nodes, leftNodes, nameTable, layoutProp, viewPort, uniqueId, 'Right');\n        }\n    };\n    MindMap.prototype.checkRoot = function (nodes, layoutProp, uniqueId, root, nameTable) {\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var node = nodes_2[_i];\n            if (!node.excludeFromLayout) {\n                if (node.data && (node.data[uniqueId].toString() === root || node.data[uniqueId].toString()\n                    === layoutProp.root)) {\n                    return node.id;\n                }\n                else if (!node.data && node.id === layoutProp.root) {\n                    return node.id;\n                }\n            }\n        }\n        return '';\n    };\n    MindMap.prototype.updateMindMapBranch = function (nodes, excludeNodes, nameTable, layoutProp, viewPort, uniqueId, side) {\n        var layout;\n        layout = {\n            type: 'HierarchicalTree',\n            horizontalSpacing: layoutProp.verticalSpacing, verticalSpacing: layoutProp.horizontalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, getLayoutInfo: getFunction(layoutProp.getLayoutInfo), margin: layoutProp.margin,\n            root: layoutProp.fixedNode\n        };\n        layout.orientation = (side === 'Left') ? 'LeftToRight' : 'RightToLeft';\n        this.excludeFromLayout(excludeNodes, nameTable, true);\n        var mapLayout = new HierarchicalTree();\n        mapLayout.updateLayout(nodes, nameTable, layout, viewPort, uniqueId);\n        this.excludeFromLayout(excludeNodes, nameTable, false);\n    };\n    MindMap.prototype.getBranch = function (obj, firstLevelNodes) {\n        var side;\n        var i = firstLevelNodes.indexOf(obj);\n        if (i % 2 === 0) {\n            side = 'Left';\n        }\n        else {\n            side = 'Right';\n        }\n        return side;\n    };\n    MindMap.prototype.excludeFromLayout = function (newCollection, nameTable, exclude) {\n        for (var _i = 0, newCollection_1 = newCollection; _i < newCollection_1.length; _i++) {\n            var newcol = newCollection_1[_i];\n            var node = nameTable[newcol.id];\n            node.excludeFromLayout = exclude;\n        }\n    };\n    MindMap.prototype.findFirstLevelNodes = function (node, layout, nameTable) {\n        var parentNode;\n        var fistLevelNodes = [];\n        if (node && node.outEdges.length) {\n            for (var _i = 0, _a = node.outEdges; _i < _a.length; _i++) {\n                var outEdge = _a[_i];\n                fistLevelNodes.push(nameTable[nameTable[outEdge].targetID]);\n            }\n        }\n        return fistLevelNodes;\n    };\n    return MindMap;\n}());\nexport { MindMap };\n","/**\n * Radial Tree\n */\nvar RadialTree = /** @class */ (function () {\n    /**\n     * Constructor for the organizational chart module.\n     * @private\n     */\n    function RadialTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the organizational chart\n     * @return {void}\n     * @private\n     */\n    RadialTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    RadialTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'RadialTree';\n    };\n    /**   @private  */\n    RadialTree.prototype.updateLayout = function (nodes, nameTable, layoutProp, viewport) {\n        var layout = {\n            type: layoutProp.type,\n            nameTable: nameTable, anchorX: 0, anchorY: 0,\n            firstLevelNodes: [], centerNode: null, levels: [], maxLevel: 0, graphNodes: {}, layoutNodes: [],\n            orientation: layoutProp.orientation,\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            verticalAlignment: layoutProp.verticalAlignment, horizontalAlignment: layoutProp.horizontalAlignment,\n            fixedNode: layoutProp.fixedNode, margin: layoutProp.margin,\n            bounds: layoutProp.bounds, objects: [], root: layoutProp.root\n        };\n        this.doLayout(layout, nodes, nameTable, viewport);\n    };\n    RadialTree.prototype.doLayout = function (layout, nodes, nameTable, viewport) {\n        var node;\n        for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (!node.excludeFromLayout) {\n                layout.graphNodes[node.id] = this.setUpLayoutInfo(layout, node);\n                if (!node.inEdges || !node.inEdges.length) {\n                    layout.firstLevelNodes.push(node);\n                }\n            }\n        }\n        if (layout.root && nameTable[layout.root]) {\n            layout.centerNode = nameTable[layout.root];\n        }\n        else if (layout.firstLevelNodes.length) {\n            layout.centerNode = layout.firstLevelNodes[0];\n            layout.root = layout.centerNode.id;\n        }\n        if (layout.centerNode) {\n            this.updateEdges(layout, layout.centerNode, 0, nameTable);\n            this.depthFirstAllignment(layout, layout.centerNode, 0, 0);\n            this.populateLevels(layout);\n            this.transformToCircleLayout(layout);\n            this.updateAnchor(layout, viewport);\n            this.updateNodes(layout, layout.centerNode, nameTable);\n        }\n    };\n    RadialTree.prototype.updateEdges = function (layout, node, depth, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        layout.layoutNodes.push(nodeInfo);\n        nodeInfo.level = depth;\n        nodeInfo.visited = true;\n        layout.maxLevel = Math.max(layout.maxLevel, depth);\n        for (var j = 0; j < node.outEdges.length; j++) {\n            var edge = nameTable[nameTable[node.outEdges[j]].targetID];\n            if (!edge.excludeFromLayout && !edge.visited) {\n                nodeInfo.children.push(edge);\n                this.updateEdges(layout, edge, depth + 1, nameTable);\n            }\n        }\n    };\n    RadialTree.prototype.depthFirstAllignment = function (layout, node, x, y) {\n        var newValue;\n        var nodeInfo = layout.graphNodes[node.id];\n        if (nodeInfo.children.length) {\n            y += 300;\n            for (var i = 0; i < nodeInfo.children.length; i++) {\n                newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                x = newValue.x;\n                y = newValue.y;\n            }\n            nodeInfo.children = nodeInfo.children.sort(function (obj1, obj2) {\n                return layout.graphNodes[obj1.id].x - layout.graphNodes[obj2.id].x;\n            });\n            var min = layout.graphNodes[nodeInfo.children[0].id].min;\n            var max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].max;\n            nodeInfo.x = min + (max - min) / 2;\n            x = max + layout.horizontalSpacing;\n            nodeInfo.segmentOffset = max + layout.horizontalSpacing;\n            nodeInfo.x -= nodeInfo.width / 2;\n            nodeInfo.y -= nodeInfo.height / 2;\n            nodeInfo.min = min;\n            nodeInfo.max = max;\n            if (nodeInfo.x < min && nodeInfo.visited) {\n                nodeInfo.x = min;\n                x = nodeInfo.x + nodeInfo.width / 2 - (max - min) / 2;\n                nodeInfo.visited = false;\n                for (var i = 0; i < nodeInfo.children.length; i++) {\n                    newValue = this.depthFirstAllignment(layout, nodeInfo.children[i], x, y);\n                }\n                nodeInfo.visited = true;\n                x = nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n            }\n            max = layout.graphNodes[nodeInfo.children[nodeInfo.children.length - 1].id].segmentOffset;\n            x = x < max ? max : x;\n            y -= 300;\n            nodeInfo.y = y;\n        }\n        else {\n            nodeInfo.x = x;\n            nodeInfo.y = y;\n            nodeInfo.min = x;\n            nodeInfo.max = x + nodeInfo.width;\n            x += nodeInfo.width + layout.horizontalSpacing;\n        }\n        return { x: x, y: y };\n    };\n    RadialTree.prototype.populateLevels = function (layout) {\n        var stages = [];\n        var min = Math.min.apply(Math, layout.layoutNodes.map(function (nodeInfo) { return nodeInfo.x; }));\n        var max = Math.max.apply(Math, layout.layoutNodes.map(function (nodeInfo) {\n            return nodeInfo.x + nodeInfo.width + layout.horizontalSpacing;\n        }));\n        var full = max - min;\n        layout.levels = [];\n        var _loop_1 = function (i) {\n            stages = layout.layoutNodes.filter(function (nodeInfo) {\n                if (nodeInfo.level === i) {\n                    return nodeInfo;\n                }\n                else {\n                    return null;\n                }\n            });\n            var newlevel = {};\n            stages = stages.sort(function (nodeInfo1, nodeInfo2) { return nodeInfo1.x - nodeInfo2.x; });\n            newlevel.min = stages[0].x;\n            newlevel.max = stages[stages.length - 1].x + stages[stages.length - 1].width + layout.horizontalSpacing;\n            newlevel.actualCircumference = 0;\n            newlevel.height = 0;\n            for (var k = 0; k < stages.length; k++) {\n                if (stages[k].height > newlevel.height) {\n                    newlevel.height = stages[k].height;\n                }\n                newlevel.actualCircumference += Math.max(stages[k].width, stages[k].height);\n                if (k !== stages.length - 1) {\n                    newlevel.actualCircumference += layout.horizontalSpacing;\n                }\n            }\n            newlevel.circumference = newlevel.max - newlevel.min;\n            if (newlevel.actualCircumference < newlevel.circumference) {\n                newlevel.circumference = (newlevel.circumference + newlevel.actualCircumference) / 2;\n            }\n            newlevel.radius = newlevel.circumference / (2 * Math.PI) + newlevel.height;\n            newlevel.nodes = [];\n            if (i > 1) {\n                if (layout.levels[i - 1].radius + layout.levels[i - 1].height >= newlevel.radius) {\n                    newlevel.radius = layout.levels[i - 1].radius + layout.levels[i - 1].height;\n                }\n            }\n            for (var j = 0; j < stages.length; j++) {\n                stages[j].ratio = Math.abs(stages[j].x + stages[j].width / 2 - min) / full;\n                newlevel.nodes.push(stages[j]);\n            }\n            layout.levels.push(newlevel);\n        };\n        for (var i = 0; i <= layout.maxLevel; i++) {\n            _loop_1(i);\n        }\n    };\n    RadialTree.prototype.transformToCircleLayout = function (layout) {\n        var root = layout.graphNodes[layout.centerNode.id];\n        root.x = 0;\n        root.y = 0;\n        for (var i = 1; i < layout.levels.length; i++) {\n            for (var j = 0; j < layout.levels[i].nodes.length; j++) {\n                var nodeInfo = layout.levels[i].nodes[j];\n                nodeInfo.x = Math.cos(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                nodeInfo.y = Math.sin(nodeInfo.ratio * 360 * Math.PI / 180) * (layout.levels[i].radius + layout.verticalSpacing * i);\n                layout.anchorX = Math.min(layout.anchorX, nodeInfo.x);\n                layout.anchorY = Math.min(layout.anchorY, nodeInfo.y);\n            }\n        }\n    };\n    RadialTree.prototype.updateAnchor = function (layout, viewPort) {\n        layout.anchorX = layout.centerNode.offsetX || viewPort.x / 2;\n        layout.anchorY = layout.centerNode.offsetY || viewPort.y / 2;\n    };\n    RadialTree.prototype.updateNodes = function (layout, node, nameTable) {\n        var nodeInfo = layout.graphNodes[node.id];\n        var offsetX = nodeInfo.x + layout.anchorX;\n        var offsetY = nodeInfo.y + layout.anchorY;\n        node.offsetX += offsetX;\n        node.offsetY += offsetY;\n        for (var i = 0; i < nodeInfo.children.length; i++) {\n            var childInfo = nodeInfo.children[i];\n            this.updateNodes(layout, nameTable[childInfo.id], nameTable);\n        }\n    };\n    RadialTree.prototype.setUpLayoutInfo = function (layout, item) {\n        var info = {};\n        info.name = item.id;\n        info.x = 0;\n        info.y = 0;\n        info.min = 0;\n        info.max = 0;\n        info.width = item.actualSize.width;\n        info.height = item.actualSize.height;\n        info.children = [];\n        info.level = 0;\n        info.ratio = 0;\n        info.visited = false;\n        return info;\n    };\n    return RadialTree;\n}());\nexport { RadialTree };\n","/**\n * Connects diagram objects with layout algorithm\n */\nvar ComplexHierarchicalTree = /** @class */ (function () {\n    /**\n     * Constructor for the hierarchical tree layout module\n     * @private\n     */\n    function ComplexHierarchicalTree() {\n        //constructs the layout module\n    }\n    /**\n     * To destroy the hierarchical tree module\n     * @return {void}\n     * @private\n     */\n    ComplexHierarchicalTree.prototype.destroy = function () {\n        /**\n         * Destroy method performed here\n         */\n    };\n    /**\n     * Get module name.\n     */\n    ComplexHierarchicalTree.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the layout\n         */\n        return 'ComplexHierarchicalTree';\n    };\n    /**   @private  */\n    ComplexHierarchicalTree.prototype.doLayout = function (nodes, nameTable, layout, viewPort) {\n        new HierarchicalLayoutUtil().doLayout(nodes, nameTable, layout, viewPort);\n    };\n    return ComplexHierarchicalTree;\n}());\nexport { ComplexHierarchicalTree };\n/**\n * Utility that arranges the nodes in hierarchical structure\n */\nvar HierarchicalLayoutUtil = /** @class */ (function () {\n    function HierarchicalLayoutUtil() {\n        this.nameTable = {};\n        this.crossReduction = new CrossReduction();\n    }\n    /**\n     * Defines a vertex that is equivalent to a node object\n     */\n    HierarchicalLayoutUtil.prototype.createVertex = function (node, value, x, y, width, height) {\n        var geometry = { x: x, y: y, width: width, height: height };\n        var vertex = {\n            value: value, geometry: geometry, name: value, vertex: true,\n            inEdges: node.inEdges.slice(), outEdges: node.outEdges.slice()\n        };\n        return vertex;\n    };\n    /**\n     * Initializes the edges collection of the vertices\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdges = function (node) {\n        var edges = [];\n        if (node) {\n            for (var i = 0; node.inEdges.length > 0 && i < node.inEdges.length; i++) {\n                edges.push(this.nameTable[node.inEdges[i]]);\n            }\n            for (var i = 0; node.outEdges.length > 0 && i < node.outEdges.length; i++) {\n                edges.push(this.nameTable[node.outEdges[i]]);\n            }\n        }\n        return edges;\n    };\n    /**\n     * Finds the root nodes of the layout\n     */\n    HierarchicalLayoutUtil.prototype.findRoots = function (vertices) {\n        var roots = [];\n        var best = null;\n        var maxDiff = -100000;\n        for (var _i = 0, _a = Object.keys(vertices); _i < _a.length; _i++) {\n            var i = _a[_i];\n            var cell = vertices[i];\n            var conns = this.getEdges(cell);\n            var outEdges = 0;\n            var inEdges = 0;\n            for (var k = 0; k < conns.length; k++) {\n                var src = this.getVisibleTerminal(conns[k], true);\n                if (src.name === cell.name) {\n                    outEdges++;\n                }\n                else {\n                    inEdges++;\n                }\n            }\n            if (inEdges === 0 && outEdges > 0) {\n                roots.push(cell);\n            }\n            var diff = outEdges - inEdges;\n            if (diff > maxDiff) {\n                maxDiff = diff;\n                best = cell;\n            }\n        }\n        if (roots.length === 0 && best != null) {\n            roots.push(best);\n        }\n        return roots;\n    };\n    /**\n     * Returns the source/target vertex of the given connector\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getVisibleTerminal = function (edge, source) {\n        var terminalCache = this.nameTable[edge.targetID];\n        if (source) {\n            terminalCache = this.nameTable[edge.sourceID];\n        }\n        for (var i = 0; i < this.vertices.length; i++) {\n            if (this.vertices[i].name === terminalCache.id) {\n                return this.vertices[i];\n            }\n        }\n        return null;\n    };\n    /**\n     * Traverses each sub tree, ensures there is no cycle in traversing\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.traverse = function (vertex, directed, edge, currentComp, hierarchyVertices, filledVertices) {\n        if (vertex != null) {\n            var vertexID = vertex.name;\n            if ((filledVertices == null ? true : filledVertices[vertexID] != null)) {\n                if (currentComp[vertexID] == null) {\n                    currentComp[vertexID] = vertex;\n                }\n                if (filledVertices != null) {\n                    delete filledVertices[vertexID];\n                }\n                var edges = this.getEdges(vertex);\n                var edgeIsSource = [];\n                for (var i = 0; i < edges.length; i++) {\n                    edgeIsSource[i] = this.getVisibleTerminal(edges[i], true) === vertex;\n                }\n                for (var i = 0; i < edges.length; i++) {\n                    if (!directed || edgeIsSource[i]) {\n                        var next = this.getVisibleTerminal(edges[i], !edgeIsSource[i]);\n                        var netCount = 1;\n                        for (var j = 0; j < edges.length; j++) {\n                            if (j === i) {\n                                continue;\n                            }\n                            else {\n                                var isSource2 = edgeIsSource[j];\n                                var otherTerm = this.getVisibleTerminal(edges[j], !isSource2);\n                                if (otherTerm === next) {\n                                    if (isSource2) {\n                                        netCount++;\n                                    }\n                                    else {\n                                        netCount--;\n                                    }\n                                }\n                            }\n                        }\n                        if (netCount >= 0) {\n                            currentComp = this.traverse(next, directed, edges[i], currentComp, hierarchyVertices, filledVertices);\n                        }\n                    }\n                }\n            }\n            else {\n                if (currentComp[vertexID] == null) {\n                    // We've seen this vertex before, but not in the current component This component and the one it's in need to be merged\n                    for (var i = 0; i < hierarchyVertices.length; i++) {\n                        var comp = hierarchyVertices[i];\n                        if (comp[vertexID] != null) {\n                            for (var _i = 0, _a = Object.keys(comp); _i < _a.length; _i++) {\n                                var key = _a[_i];\n                                currentComp[key] = comp[key];\n                            }\n                            // Remove the current component from the hierarchy set\n                            hierarchyVertices.splice(i, 1);\n                            return currentComp;\n                        }\n                    }\n                }\n            }\n        }\n        return currentComp;\n    };\n    /**\n     * Returns the bounds of the given vertices\n     */\n    HierarchicalLayoutUtil.prototype.getModelBounds = function (nodes) {\n        nodes = nodes.slice();\n        var rect = null;\n        var rect1 = null;\n        for (var i = 0; i < nodes.length; i++) {\n            rect = nodes[i].geometry;\n            if (rect1) {\n                var right = Math.max(rect1.x + rect1.width, rect.x + rect.width);\n                var bottom = Math.max(rect1.y + rect1.height, rect.y + rect.height);\n                rect1.x = Math.min(rect1.x, rect.x);\n                rect1.y = Math.min(rect1.y, rect.y);\n                rect1.width = right - rect1.x;\n                rect1.height = bottom - rect1.y;\n            }\n            else {\n                rect1 = { x: rect.x, y: rect.y, width: rect.width, height: rect.height };\n            }\n        }\n        return rect1;\n    };\n    /**\n     * Initializes the layouting process\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.doLayout = function (nodes, nameTable, layoutProp, viewPort) {\n        this.nameTable = nameTable;\n        var layout = {\n            horizontalSpacing: layoutProp.horizontalSpacing, verticalSpacing: layoutProp.verticalSpacing,\n            orientation: layoutProp.orientation, marginX: layoutProp.margin.left, marginY: layoutProp.margin.top\n        };\n        if (layout.orientation === 'BottomToTop') {\n            layout.marginY = -layoutProp.margin.top;\n        }\n        else if (layout.orientation === 'RightToLeft') {\n            layout.marginX = -layoutProp.margin.left;\n        }\n        this.vertices = [];\n        var filledVertexSet = {};\n        for (var i = 0; i < nodes.length; i++) {\n            var node = this.createVertex(nodes[i], nodes[i].id, 0, 0, nodes[i].actualSize.width, nodes[i].actualSize.height);\n            this.vertices.push(node);\n            filledVertexSet[node.name] = node;\n        }\n        var hierarchyVertices = [];\n        var candidateRoots;\n        candidateRoots = this.findRoots(filledVertexSet);\n        for (var i = 0; i < candidateRoots.length; i++) {\n            var vertexSet = {};\n            hierarchyVertices.push(vertexSet);\n            this.traverse(candidateRoots[i], true, null, vertexSet, hierarchyVertices, filledVertexSet);\n        }\n        var limit = { marginX: 0, marginY: 0 };\n        for (var i = 0; i < hierarchyVertices.length; i++) {\n            var vertexSet = hierarchyVertices[i];\n            var tmp = [];\n            for (var _i = 0, _a = Object.keys(vertexSet); _i < _a.length; _i++) {\n                var key = _a[_i];\n                tmp.push(vertexSet[key]);\n            }\n            var model = new MultiParentModel(this, tmp, candidateRoots, layout);\n            this.cycleStage(model);\n            this.layeringStage(model);\n            this.crossingStage(model);\n            limit = this.placementStage(model, limit.marginX, limit.marginY);\n        }\n        var modelBounds = this.getModelBounds(this.vertices);\n        var trnsX = (viewPort.x - modelBounds.width) / 2;\n        for (var i = 0; i < this.vertices.length; i++) {\n            var clnode = this.vertices[i];\n            if (clnode) { //Check what is node.source/node.target -  && !clnode.source && !clnode.target) {\n                var dnode = this.nameTable[clnode.name];\n                dnode.offsetX = 0;\n                dnode.offsetY = 0;\n                //initialize layout\n                var dx = (clnode.geometry.x - (dnode.offsetX - (dnode.actualSize.width / 2))) + layout.marginX;\n                var dy = (clnode.geometry.y - (dnode.offsetY - (dnode.actualSize.height / 2))) + layout.marginY;\n                var x = dx;\n                var y = dy;\n                if (layout.orientation === 'BottomToTop') {\n                    y = modelBounds.height - dy;\n                }\n                else if (layout.orientation === 'RightToLeft') {\n                    x = modelBounds.width - dx;\n                }\n                x += trnsX;\n                dnode.offsetX += x - dnode.offsetX;\n                dnode.offsetY += y - dnode.offsetY;\n            }\n        }\n    };\n    /**\n     * Handles positioning the nodes\n     */\n    HierarchicalLayoutUtil.prototype.placementStage = function (model, marginX, marginY) {\n        var placementStage = this.coordinateAssignment(marginX, marginY, parent, model);\n        placementStage.model = model;\n        placementStage.widestRankValue = null;\n        this.placementStageExecute(placementStage);\n        return {\n            marginX: placementStage.marginX + model.layout.horizontalSpacing,\n            marginY: placementStage.marginY + model.layout.verticalSpacing\n        };\n    };\n    /**\n     * Initializes the layout properties for positioning\n     */\n    HierarchicalLayoutUtil.prototype.coordinateAssignment = function (marginX, marginY, parent, model) {\n        var plalementChange = {};\n        if (model.layout.orientation === 'TopToBottom' || model.layout.orientation === 'BottomToTop') {\n            plalementChange.horizontalSpacing = model.layout.horizontalSpacing;\n            plalementChange.verticalSpacing = model.layout.verticalSpacing;\n        }\n        else {\n            plalementChange.horizontalSpacing = model.layout.verticalSpacing;\n            plalementChange.verticalSpacing = model.layout.horizontalSpacing;\n        }\n        plalementChange.orientation = 'north';\n        //Removed the conditions here. So check here in case of any issue\n        plalementChange.marginX = plalementChange.marginX = marginX;\n        plalementChange.marginY = plalementChange.marginY = marginY;\n        return plalementChange;\n    };\n    /**\n     * Calculate the largest size of the node either height or width depends upon the layoutorientation\n     */\n    HierarchicalLayoutUtil.prototype.calculateWidestRank = function (plalementChange, graph, model) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var offset = -plalementChange.verticalSpacing;\n        var lastRankMaxCellSize = 0.0;\n        plalementChange.rankSizes = [];\n        plalementChange.rankOffset = [];\n        for (var rankValue = model.maxRank; rankValue >= 0; rankValue--) {\n            var maxCellSize = 0.0;\n            var rank = model.ranks[rankValue];\n            var localOffset = isHorizontal ? plalementChange.marginY : plalementChange.marginX;\n            for (var i = 0; i < rank.length; i++) {\n                var node = rank[i];\n                if (this.crossReduction.isVertex(node)) {\n                    var vertex = node;\n                    if (vertex.cell && (vertex.cell.inEdges || vertex.cell.outEdges)) {\n                        var obj = this.nameTable[vertex.cell.name];\n                        vertex.width = obj.actualSize.width;\n                        vertex.height = obj.actualSize.height;\n                        maxCellSize = Math.max(maxCellSize, (isHorizontal ? vertex.width : vertex.height));\n                    }\n                }\n                else {\n                    if (node) {\n                        var edge = node;\n                        var numEdges = 1;\n                        if (edge.edges != null) {\n                            numEdges = edge.edges.length;\n                        }\n                        node.width = (numEdges - 1) * 10;\n                    }\n                }\n                if (isHorizontal) {\n                    if (!node.height) {\n                        node.height = 0;\n                    }\n                }\n                // Set the initial x-value as being the best result so far\n                localOffset += (isHorizontal ? node.height : node.width) / 2.0;\n                this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n                this.setTempVariable(node, rankValue, localOffset);\n                localOffset += ((isHorizontal ? node.height : node.width) / 2.0) + plalementChange.horizontalSpacing;\n                if (localOffset > plalementChange.widestRankValue) {\n                    plalementChange.widestRankValue = localOffset;\n                    plalementChange.widestRank = rankValue;\n                }\n                plalementChange.rankSizes[rankValue] = localOffset;\n            }\n            plalementChange.rankOffset[rankValue] = offset;\n            var distanceToNextRank = maxCellSize / 2.0 + lastRankMaxCellSize / 2.0 + plalementChange.verticalSpacing;\n            lastRankMaxCellSize = maxCellSize;\n            if (plalementChange.orientation === 'north' || plalementChange.orientation === 'west') {\n                offset += distanceToNextRank;\n            }\n            else {\n                offset -= distanceToNextRank;\n            }\n            for (var i = 0; i < rank.length; i++) {\n                var cell = rank[i];\n                this.setXY(cell, rankValue, offset, isHorizontal ? false : true);\n            }\n        }\n    };\n    /**\n     * Sets the temp position of the node on the layer\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setTempVariable = function (node, layer, value) {\n        if (this.crossReduction.isVertex(node)) {\n            node.temp[0] = value;\n        }\n        else {\n            node.temp[layer - node.minRank - 1] = value;\n        }\n    };\n    /**\n     * Sets the position of the vertex\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.setXY = function (node, layer, value, isY) {\n        if (node && node.cell) {\n            if (node.cell.inEdges || node.cell.outEdges) {\n                if (isY) {\n                    node.y[0] = value;\n                }\n                else {\n                    node.x[0] = value;\n                }\n            }\n            else {\n                if (isY) {\n                    node.y[layer - node.minRank - 1] = value;\n                }\n                else {\n                    node.x[layer - node.minRank - 1] = value;\n                }\n            }\n        }\n    };\n    /**\n     * Sets geometry position of the layout node on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.rankCoordinates = function (stage, rankValue, graph, model) {\n        var isHorizontal = false;\n        if (stage.model.layout.orientation === 'LeftToRight' || stage.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var rank = model.ranks[rankValue];\n        var maxOffset = 0.0;\n        var localOffset = (isHorizontal ? stage.marginY : stage.marginX) + (stage.widestRankValue - stage.rankSizes[rankValue]) / 2;\n        for (var i = 0; i < rank.length; i++) {\n            var node = rank[i];\n            if (this.crossReduction.isVertex(node)) {\n                var obj = this.nameTable[node.cell.name];\n                node.width = obj.actualSize.width;\n                node.height = obj.actualSize.height;\n                maxOffset = Math.max(maxOffset, node.height);\n            }\n            else {\n                var edge = node;\n                var numEdges = 1;\n                if (edge.edges != null) {\n                    numEdges = edge.edges.length;\n                }\n                if (isHorizontal) {\n                    node.height = (numEdges - 1) * 10;\n                }\n                else {\n                    node.width = (numEdges - 1) * 10;\n                }\n            }\n            var size = (isHorizontal ? node.height : node.width) / 2.0;\n            localOffset += size;\n            this.setXY(node, rankValue, localOffset, isHorizontal ? true : false);\n            this.setTempVariable(node, rankValue, localOffset);\n            localOffset += (size + stage.horizontalSpacing);\n        }\n    };\n    /**\n     * sets the layout in an initial positioning.it will arange all the ranks as much as possible\n     */\n    HierarchicalLayoutUtil.prototype.initialCoords = function (plalementChange, facade, model) {\n        this.calculateWidestRank(plalementChange, facade, model);\n        // Reverse sweep direction each time from widest rank \n        for (var i = plalementChange.widestRank; i >= 0; i--) {\n            if (i < model.maxRank) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n        for (var i = plalementChange.widestRank + 1; i <= model.maxRank; i++) {\n            if (i > 0) {\n                this.rankCoordinates(plalementChange, i, facade, model);\n            }\n        }\n    };\n    /**\n     * Checks whether the given node is an ancestor\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.isAncestor = function (node, otherNode) {\n        // Firstly, the hash code of this node needs to be shorter than the other node\n        if (otherNode != null && node.hashCode != null && otherNode.hashCode != null\n            && node.hashCode.length < otherNode.hashCode.length) {\n            if (node.hashCode === otherNode.hashCode) {\n                return true;\n            }\n            if (node.hashCode == null || node.hashCode == null) {\n                return false;\n            }\n            for (var i = 0; i < node.hashCode.length; i++) {\n                if (node.hashCode[i] !== otherNode.hashCode[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * initializes the sorter object\n     */\n    HierarchicalLayoutUtil.prototype.weightedCellSorter = function (cell, weightedValue) {\n        var weightedCellSorter = {};\n        weightedCellSorter.cell = cell ? cell : null;\n        weightedCellSorter.weightedValue = weightedValue ? weightedValue : 0;\n        weightedCellSorter.visited = false;\n        weightedCellSorter.rankIndex = null;\n        return weightedCellSorter;\n    };\n    /**\n     * Performs one node positioning in both directions\n     */\n    HierarchicalLayoutUtil.prototype.minNode = function (plalementChange, model) {\n        var nodeList = [];\n        var map = { map: {} };\n        var rank = [];\n        for (var i = 0; i <= model.maxRank; i++) {\n            rank[i] = model.ranks[i];\n            for (var j = 0; j < rank[i].length; j++) {\n                var node = rank[i][j];\n                var nodeWrapper = this.weightedCellSorter(node, i);\n                nodeWrapper.rankIndex = j;\n                nodeWrapper.visited = true;\n                nodeList.push(nodeWrapper);\n                model.setDictionaryForSorter(map, node, nodeWrapper, true);\n            }\n        }\n        var maxTries = nodeList.length * 10;\n        var count = 0;\n        var tolerance = 1;\n        while (nodeList.length > 0 && count <= maxTries) {\n            var cellWrapper = nodeList.shift();\n            var cell = cellWrapper.cell;\n            var rankValue = cellWrapper.weightedValue;\n            var rankIndex = cellWrapper.rankIndex;\n            var nextLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue);\n            var previousLayerConnectedCells = this.crossReduction.getConnectedCellsOnLayer(cell, rankValue, true);\n            var nextConnectedCount = nextLayerConnectedCells.length;\n            var prevConnectedCount = previousLayerConnectedCells.length;\n            var medianNextLevel = this.medianXValue(plalementChange, nextLayerConnectedCells, rankValue + 1);\n            var medianPreviousLevel = this.medianXValue(plalementChange, previousLayerConnectedCells, rankValue - 1);\n            var numConnectedNeighbours = nextConnectedCount + prevConnectedCount;\n            var currentPosition = this.crossReduction.getTempVariable(cell, rankValue);\n            var cellMedian = currentPosition;\n            if (numConnectedNeighbours > 0) {\n                cellMedian = (medianNextLevel * nextConnectedCount + medianPreviousLevel * prevConnectedCount) / numConnectedNeighbours;\n            }\n            var positionChanged = false;\n            var tempValue = undefined;\n            if (cellMedian < currentPosition - tolerance) {\n                if (rankIndex === 0) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var leftCell = rank[rankValue][rankIndex - 1];\n                    var leftLimit = this.crossReduction.getTempVariable(leftCell, rankValue);\n                    leftLimit = leftLimit + leftCell.width / 2 + plalementChange.intraCellSpacing + cell.width / 2;\n                    if (leftLimit < cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (leftLimit < this.crossReduction.getTempVariable(cell, rankValue) - tolerance) {\n                        tempValue = leftLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            else if (cellMedian > currentPosition + tolerance) {\n                var rankSize = rank[rankValue].length;\n                if (rankIndex === rankSize - 1) {\n                    tempValue = cellMedian;\n                    positionChanged = true;\n                }\n                else {\n                    var rightCell = rank[rankValue][rankIndex + 1];\n                    var rightLimit = this.crossReduction.getTempVariable(rightCell, rankValue);\n                    rightLimit = rightLimit - rightCell.width / 2 - plalementChange.intraCellSpacing - cell.width / 2;\n                    if (rightLimit > cellMedian) {\n                        tempValue = cellMedian;\n                        positionChanged = true;\n                    }\n                    else if (rightLimit > this.crossReduction.getTempVariable(cell, rankValue) + tolerance) {\n                        tempValue = rightLimit;\n                        positionChanged = true;\n                    }\n                }\n            }\n            if (positionChanged) {\n                this.setTempVariable(cell, rankValue, tempValue);\n                // Add connected nodes to map and list\n                this.updateNodeList(nodeList, map, nextLayerConnectedCells, model);\n                this.updateNodeList(nodeList, map, previousLayerConnectedCells, model);\n            }\n            if (this.crossReduction.isVertex(cellWrapper.cell)) {\n                cellWrapper.visited = false;\n            }\n            count++;\n        }\n    };\n    /**\n     * Updates the ndoes collection\n     */\n    HierarchicalLayoutUtil.prototype.updateNodeList = function (nodeList, map, collection, model) {\n        for (var i = 0; i < collection.length; i++) {\n            var connectedCell = collection[i];\n            var connectedCellWrapper = model.getDictionaryForSorter(map, connectedCell);\n            if (connectedCellWrapper != null) {\n                if (connectedCellWrapper.visited === false) {\n                    connectedCellWrapper.visited = true;\n                    nodeList.push(connectedCellWrapper);\n                }\n            }\n        }\n    };\n    /**\n     * Calculates the node position of the connected cell on the specified rank\n     */\n    HierarchicalLayoutUtil.prototype.medianXValue = function (plalementChange, connectedCells, rankValue) {\n        if (connectedCells.length === 0) {\n            return 0;\n        }\n        var medianValues = [];\n        for (var i = 0; i < connectedCells.length; i++) {\n            medianValues[i] = this.crossReduction.getTempVariable(connectedCells[i], rankValue);\n        }\n        medianValues.sort(function (a, b) {\n            return a - b;\n        });\n        if (connectedCells.length % 2 === 1) {\n            return medianValues[Math.floor(connectedCells.length / 2)];\n        }\n        else {\n            var medianPoint = connectedCells.length / 2;\n            var leftMedian = medianValues[medianPoint - 1];\n            var rightMedian = medianValues[medianPoint];\n            return ((leftMedian + rightMedian) / 2);\n        }\n    };\n    /**\n     * Updates the geometry of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.placementStageExecute = function (plalementChange) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        plalementChange.jettyPositions = {};\n        var model = plalementChange.model;\n        isHorizontal ? plalementChange.currentYDelta = 0.0 : plalementChange.currentXDelta = 0.0;\n        this.initialCoords(plalementChange, { model: model }, model);\n        this.minNode(plalementChange, model);\n        var bestOffsetDelta = 100000000.0;\n        if (!plalementChange.maxIterations) {\n            plalementChange.maxIterations = 8;\n        }\n        for (var i = 0; i < plalementChange.maxIterations; i++) {\n            // if the total offset is less for the current positioning, \n            //there are less heavily angled edges and so the current positioning is used\n            if ((isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta) < bestOffsetDelta) {\n                for (var j = 0; j < model.ranks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setXY(cell, j, this.crossReduction.getTempVariable(cell, j), isHorizontal ? true : false);\n                    }\n                }\n                bestOffsetDelta = isHorizontal ? plalementChange.currentYDelta : plalementChange.currentXDelta;\n            }\n            isHorizontal ? plalementChange.currentYDelta = 0 : plalementChange.currentXDelta = 0;\n        }\n        this.setCellLocations(plalementChange, model);\n    };\n    /**\n     * sets the cell position in the after the layout operation\n     */\n    HierarchicalLayoutUtil.prototype.setCellLocations = function (plalementChange, model) {\n        var vertices = this.getValues(model.vertexMapper);\n        for (var i = 0; i < vertices.length; i++) {\n            this.setVertexLocation(plalementChange, vertices[i]);\n        }\n    };\n    /**\n     * used to specify the geometrical position of the layout model cell\n     */\n    HierarchicalLayoutUtil.prototype.garphModelsetVertexLocation = function (plalementChange, cell, x, y) {\n        var model = plalementChange.model;\n        var geometry = cell.geometry;\n        var result = null;\n        if (geometry != null) {\n            result = { x: x, y: y, width: geometry.width, height: geometry.height };\n            if (geometry.x !== x || geometry.y !== y) {\n                cell.geometry = result;\n            }\n        }\n        return result;\n    };\n    /**\n     * set the position of the specified node\n     */\n    HierarchicalLayoutUtil.prototype.setVertexLocation = function (plalementChange, cell) {\n        var isHorizontal = false;\n        if (plalementChange.model.layout.orientation === 'LeftToRight' || plalementChange.model.layout.orientation === 'RightToLeft') {\n            isHorizontal = true;\n        }\n        var realCell = cell.cell;\n        var positionX = cell.x[0] - cell.width / 2;\n        var positionY = cell.y[0] - cell.height / 2;\n        this.garphModelsetVertexLocation(plalementChange, realCell, positionX, positionY);\n        if (isHorizontal) {\n            if (!plalementChange.marginY) {\n                plalementChange.marginY = 0;\n            }\n            plalementChange.marginY = Math.max(plalementChange.marginY, positionY + cell.height);\n        }\n        else {\n            if (!plalementChange.marginX) {\n                plalementChange.marginX = 0;\n            }\n            plalementChange.marginX = Math.max(plalementChange.marginX, positionX + cell.width);\n        }\n    };\n    /**\n     * get the specific value from the key value pair\n     */\n    HierarchicalLayoutUtil.prototype.getValues = function (mapper) {\n        var list = [];\n        if (mapper.map) {\n            for (var _i = 0, _a = Object.keys(mapper.map); _i < _a.length; _i++) {\n                var key = _a[_i];\n                list.push(mapper.map[key]);\n            }\n        }\n        return list;\n    };\n    /**\n     * Checks and reduces the crosses in between line segments\n     */\n    HierarchicalLayoutUtil.prototype.crossingStage = function (model) {\n        this.crossReduction.execute(model);\n    };\n    /**\n     * Initializes the ranks of the vertices\n     */\n    HierarchicalLayoutUtil.prototype.layeringStage = function (model) {\n        this.initialRank(model);\n        this.fixRanks(model);\n    };\n    /**\n     * determine the initial rank for the each vertex on the relevent direction\n     */\n    HierarchicalLayoutUtil.prototype.initialRank = function (model) {\n        var startNodes = model.startNodes;\n        var internalNodes = model.getDictionaryValues(model.vertexMapper);\n        var startNodesCopy = startNodes.slice();\n        while (startNodes.length > 0) {\n            var internalNode = startNodes[0];\n            var layerDeterminingEdges = internalNode.connectsAsTarget;\n            var edgesToBeMarked = internalNode.connectsAsSource;\n            var allEdgesScanned = true;\n            var minimumLayer = 100000000;\n            for (var i = 0; i < layerDeterminingEdges.length; i++) {\n                var internalEdge = layerDeterminingEdges[i];\n                if (internalEdge.temp[0] === 5270620) {\n                    // This edge has been scanned, get the layer of the node on the other end\n                    var otherNode = internalEdge.source;\n                    minimumLayer = Math.min(minimumLayer, otherNode.temp[0] - 1);\n                }\n                else {\n                    allEdgesScanned = false;\n                    break;\n                }\n            }\n            // If all edge have been scanned, assign the layer, mark all edges in the other direction and remove from the nodes list\n            if (allEdgesScanned) {\n                internalNode.temp[0] = minimumLayer;\n                if (!model.maxRank) {\n                    model.maxRank = 100000000;\n                }\n                model.maxRank = Math.min(model.maxRank, minimumLayer);\n                if (edgesToBeMarked != null) {\n                    for (var i = 0; i < edgesToBeMarked.length; i++) {\n                        var internalEdge = edgesToBeMarked[i];\n                        internalEdge.temp[0] = 5270620;\n                        // Add node on other end of edge to LinkedList of nodes to be analysed\n                        var otherNode = internalEdge.target;\n                        // Only add node if it hasn't been assigned a layer\n                        if (otherNode.temp[0] === -1) {\n                            startNodes.push(otherNode);\n                            // Mark this other node as neither being unassigned nor assigned \n                            //so it isn't added to this list again, but it's layer isn't used in any calculation.\n                            otherNode.temp[0] = -2;\n                        }\n                    }\n                }\n                startNodes.shift();\n            }\n            else {\n                // Not all the edges have been scanned, get to the back of the class and put the dunces cap on\n                var removedCell = startNodes.shift();\n                startNodes.push(internalNode);\n                if (removedCell === internalNode && startNodes.length === 1) {\n                    // This is an error condition, we can't get out of this loop. \n                    //It could happen for more than one node but that's a lot harder to detect. Log the error\n                    break;\n                }\n            }\n        }\n        for (var i = 0; i < internalNodes.length; i++) {\n            internalNodes[i].temp[0] -= model.maxRank;\n        }\n        for (var i = 0; i < startNodesCopy.length; i++) {\n            var internalNode = startNodesCopy[i];\n            var currentMaxLayer = 0;\n            var layerDeterminingEdges = internalNode.connectsAsSource;\n            for (var j = 0; j < layerDeterminingEdges.length; j++) {\n                var internalEdge = layerDeterminingEdges[j];\n                var otherNode = internalEdge.target;\n                internalNode.temp[0] = Math.max(currentMaxLayer, otherNode.temp[0] + 1);\n                currentMaxLayer = internalNode.temp[0];\n            }\n        }\n        model.maxRank = 100000000 - model.maxRank;\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     */\n    HierarchicalLayoutUtil.prototype.fixRanks = function (model) {\n        model.fixRanks();\n    };\n    /**\n     * used to determine any cyclic stage have been created on the layout model\n     */\n    HierarchicalLayoutUtil.prototype.cycleStage = function (model) {\n        var seenNodes = {};\n        model.startNodes = [];\n        var unseenNodesArray = model.getDictionaryValues(model.vertexMapper);\n        var unseenNodes = [];\n        for (var i = 0; i < unseenNodesArray.length; i++) {\n            unseenNodesArray[i].temp[0] = -1;\n            unseenNodes[unseenNodesArray[i].id] = unseenNodesArray[i];\n        }\n        var rootsArray = null;\n        if (model.roots != null) {\n            var modelRoots = model.roots;\n            rootsArray = [];\n            for (var i = 0; i < modelRoots.length; i++) {\n                rootsArray[i] = model.getDictionary(model.vertexMapper, modelRoots[i]);\n                if (rootsArray[i] != null) {\n                    model.startNodes.push(rootsArray[i]);\n                }\n            }\n        }\n        model.visit('removeParentConnection', rootsArray, true, null, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n        var seenNodesCopy = model.clone(seenNodes, null, true);\n        model.visit('removeNodeConnection', unseenNodes, true, seenNodesCopy, { seenNodes: seenNodes, unseenNodes: unseenNodes });\n    };\n    /**\n     * removes the edge from the given collection\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.remove = function (obj, array) {\n        var index = array.indexOf(obj);\n        if (index !== -1) {\n            array.splice(index, 1);\n        }\n        return obj;\n    };\n    /**\n     * Inverts the source and target of an edge\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.invert = function (connectingEdge, layer) {\n        var temp = connectingEdge.source;\n        connectingEdge.source = connectingEdge.target;\n        connectingEdge.target = temp;\n        connectingEdge.isReversed = !connectingEdge.isReversed;\n    };\n    /**\n     * used to get the edges between the given source and target\n     * @private\n     */\n    HierarchicalLayoutUtil.prototype.getEdgesBetween = function (source, target, directed) {\n        directed = (directed != null) ? directed : false;\n        var edges = this.getEdges(source);\n        var result = [];\n        for (var i = 0; i < edges.length; i++) {\n            var src = this.getVisibleTerminal(edges[i], true);\n            var trg = this.getVisibleTerminal(edges[i], false);\n            if ((src === source && trg === target) || (!directed && src === target && trg === source)) {\n                result.push(edges[i]);\n            }\n        }\n        return result;\n    };\n    return HierarchicalLayoutUtil;\n}());\n/**\n * Handles position the objects in a hierarchical tree structure\n */\nvar MultiParentModel = /** @class */ (function () {\n    function MultiParentModel(layout, vertices, roots, dlayout) {\n        this.multiObjectIdentityCounter = 0;\n        //used to count the no of times the parent have been used\n        this.dfsCount = 0;\n        this.hierarchicalUtil = new HierarchicalLayoutUtil();\n        this.roots = roots;\n        this.vertexMapper = { map: {} };\n        var internalVertices = [];\n        this.layout = dlayout;\n        this.maxRank = 100000000;\n        this.hierarchicalLayout = layout;\n        this.createInternalCells(layout, vertices, internalVertices);\n        for (var i = 0; i < vertices.length; i++) {\n            var edges = internalVertices[i].connectsAsSource;\n            for (var j = 0; j < edges.length; j++) {\n                var internalEdge = edges[j];\n                var realEdges = internalEdge.edges;\n                if (realEdges != null && realEdges.length > 0) {\n                    var realEdge = realEdges[0];\n                    var targetCell = layout.getVisibleTerminal(realEdge, false);\n                    var internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    if (internalVertices[i] === internalTargetCell) {\n                        targetCell = layout.getVisibleTerminal(realEdge, true);\n                        internalTargetCell = this.getDictionary(this.vertexMapper, targetCell);\n                    }\n                    if (internalTargetCell != null && internalVertices[i] !== internalTargetCell) {\n                        internalEdge.target = internalTargetCell;\n                        if (internalTargetCell.connectsAsTarget.length === 0) {\n                            internalTargetCell.connectsAsTarget = [];\n                        }\n                        if (internalTargetCell.connectsAsTarget.indexOf(internalEdge) < 0) {\n                            internalTargetCell.connectsAsTarget.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 1;\n        }\n    }\n    /**\n     * used to create the duplicate of the edges on the layout model\n     */\n    MultiParentModel.prototype.createInternalCells = function (layout, vertices, internalVertices) {\n        for (var i = 0; i < vertices.length; i++) {\n            internalVertices[i] = {\n                x: [], y: [], temp: [], cell: vertices[i],\n                id: vertices[i].name, connectsAsTarget: [], connectsAsSource: []\n            };\n            this.setDictionary(this.vertexMapper, vertices[i], internalVertices[i]);\n            var conns = layout.getEdges(vertices[i]);\n            internalVertices[i].connectsAsSource = [];\n            for (var j = 0; j < conns.length; j++) {\n                var cell = layout.getVisibleTerminal(conns[j], false);\n                if (cell !== vertices[i]) {\n                    var undirectedEdges = layout.getEdgesBetween(vertices[i], cell, false);\n                    var directedEdges = layout.getEdgesBetween(vertices[i], cell, true);\n                    if (undirectedEdges != null && undirectedEdges.length > 0 && directedEdges.length * 2 >= undirectedEdges.length) {\n                        var internalEdge = { x: [], y: [], temp: [], edges: undirectedEdges, ids: [] };\n                        for (var m = 0; m < undirectedEdges.length; m++) {\n                            internalEdge.ids.push(undirectedEdges[m].id);\n                        }\n                        internalEdge.source = internalVertices[i];\n                        if (!internalVertices[i].connectsAsSource) {\n                            internalVertices[i].connectsAsSource = [];\n                        }\n                        if (internalVertices[i].connectsAsSource.indexOf(internalEdge) < 0) {\n                            internalVertices[i].connectsAsSource.push(internalEdge);\n                        }\n                    }\n                }\n            }\n            internalVertices[i].temp[0] = 0;\n        }\n    };\n    /**\n     * used to set the optimum value of each vertex on the layout\n     * @private\n     */\n    MultiParentModel.prototype.fixRanks = function () {\n        var rankList = [];\n        this.ranks = [];\n        for (var i = 0; i < this.maxRank + 1; i++) {\n            rankList[i] = [];\n            this.ranks[i] = rankList[i];\n        }\n        var rootsArray = null;\n        if (this.roots != null) {\n            var oldRootsArray = this.roots;\n            rootsArray = [];\n            for (var i = 0; i < oldRootsArray.length; i++) {\n                var cell = oldRootsArray[i];\n                var internalNode = this.getDictionary(this.vertexMapper, cell);\n                rootsArray[i] = internalNode;\n            }\n        }\n        this.visit('updateMinMaxRank', rootsArray, false, null, { seenNodes: null, unseenNodes: null, rankList: rankList });\n    };\n    /**\n     * Updates the min/max rank of the layer\n     */\n    MultiParentModel.prototype.updateMinMaxRank = function (layer, seen, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var parent = data.parent;\n        var node = data.root;\n        var edge = data.edge;\n        var rankList = data.rankList;\n        if (!node.maxRank && node.maxRank !== 0) {\n            node.maxRank = -1;\n        }\n        if (!node.minRank && node.minRank !== 0) {\n            node.minRank = -1;\n        }\n        if (seen === 0 && node.maxRank < 0 && node.minRank < 0) {\n            rankList[node.temp[0]].push(node);\n            node.maxRank = node.temp[0];\n            node.minRank = node.temp[0];\n            node.temp[0] = rankList[node.maxRank].length - 1;\n        }\n        if (parent != null && edge != null) {\n            var parentToCellRankDifference = parent.maxRank - node.maxRank;\n            if (parentToCellRankDifference > 1) {\n                edge.maxRank = parent.maxRank;\n                edge.minRank = node.maxRank;\n                edge.temp = [];\n                edge.x = [];\n                edge.y = [];\n                for (var i = edge.minRank + 1; i < edge.maxRank; i++) {\n                    rankList[i].push(edge);\n                    this.hierarchicalUtil.setTempVariable(edge, i, rankList[i].length - 1);\n                }\n            }\n        }\n    };\n    /**\n     * used to store the value of th given key on the object\n     */\n    MultiParentModel.prototype.setDictionary = function (dic, key, value) {\n        var id = key.name;\n        if (!id) {\n            //  id = this._getDictionary(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to store the value of th given key on the object\n     * @private\n     */\n    MultiParentModel.prototype.setDictionaryForSorter = function (dic, key, value, flag) {\n        var id = key.id;\n        if (!id) {\n            //id = this._getDictionaryForSorter(dic, key);\n        }\n        var previous = dic.map[id];\n        dic.map[id] = value;\n        return previous;\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionary = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.name;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get the value of the given key\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryForSorter = function (dic, key) {\n        if (!this.multiObjectIdentityCounter && this.multiObjectIdentityCounter !== 0) {\n            this.multiObjectIdentityCounter = 0;\n        }\n        var id = key.id;\n        if (!id) {\n            if (!key.layoutObjectId) { ///####\n                key.layoutObjectId = 'graphHierarchyNode#' + this.multiObjectIdentityCounter++;\n                return key.layoutObjectId;\n            }\n            else {\n                return dic.map[key.layoutObjectId];\n            }\n        }\n        return dic.map[id];\n    };\n    /**\n     * used to get all the values of the dictionary object\n     * @private\n     */\n    MultiParentModel.prototype.getDictionaryValues = function (dic) {\n        var result = [];\n        for (var _i = 0, _a = Object.keys(dic.map); _i < _a.length; _i++) {\n            var key = _a[_i];\n            result.push(dic.map[key]);\n        }\n        return result;\n    };\n    /**\n     * used to visit all the entries on the given dictionary with given function\n     * @private\n     */\n    MultiParentModel.prototype.visit = function (visitor, dfsRoots, trackAncestors, seenNodes, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        // Run depth first search through on all roots\n        if (dfsRoots != null) {\n            for (var i = 0; i < dfsRoots.length; i++) {\n                var internalNode = dfsRoots[i];\n                if (internalNode != null) {\n                    if (seenNodes == null) {\n                        seenNodes = new Object();\n                    }\n                    data.parent = null;\n                    data.root = internalNode;\n                    data.edge = null;\n                    if (trackAncestors) {\n                        // Set up hash code for root\n                        internalNode.hashCode = [];\n                        internalNode.hashCode[0] = this.dfsCount;\n                        internalNode.hashCode[1] = i;\n                        this.extendedDfs(visitor, seenNodes, i, 0, data);\n                    }\n                    else {\n                        this.depthFirstSearch(visitor, seenNodes, 0, data);\n                    }\n                }\n            }\n            this.dfsCount++;\n        }\n    };\n    /**\n     * used to perform the depth fisrt search on the layout model\n     */\n    MultiParentModel.prototype.depthFirstSearch = function (visitor, seen, layer, data) {\n        var seenNodes1 = data.seenNodes;\n        var unseenNodes1 = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                // Copy the connects as source list so that visitors can change the original for edge direction inversions\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    // Root check is O(|roots|)\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.depthFirstSearch(visitor, seen, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * Updates the rank of the connection\n     */\n    MultiParentModel.prototype.updateConnectionRank = function (visitor, layer, seen, traversedList) {\n        var parent = traversedList.parent;\n        var root = traversedList.root;\n        var edge = traversedList.edge;\n        if (visitor === 'removeParentConnection' || visitor === 'removeNodeConnection') {\n            var remove = visitor === 'removeNodeConnection' ? true : false;\n            this.removeConnectionEdge(parent, root, edge, layer, traversedList, remove);\n        }\n        if (visitor === 'updateMinMaxRank') {\n            this.updateMinMaxRank(layer, seen, traversedList);\n        }\n    };\n    /**\n     * Removes the edge from the collection\n     */\n    MultiParentModel.prototype.removeConnectionEdge = function (parent, node, edge, layer, data, remove) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        if (this.hierarchicalUtil.isAncestor(node, parent)) {\n            this.hierarchicalUtil.invert(edge, 0);\n            this.hierarchicalUtil.remove(edge, parent.connectsAsSource);\n            if (remove) {\n                node.connectsAsSource.push(edge);\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n            }\n            else {\n                parent.connectsAsTarget.push(edge);\n                this.hierarchicalUtil.remove(edge, node.connectsAsTarget);\n                node.connectsAsSource.push(edge);\n            }\n        }\n        seenNodes[node.id] = node;\n        delete unseenNodes[node.id];\n    };\n    /**\n     * the dfs extends the default version by keeping track of cells ancestors, but it should be only used when necessary\n     */\n    MultiParentModel.prototype.extendedDfs = function (visitor, seen, cHash, layer, data) {\n        var seenNodes = data.seenNodes;\n        var unseenNodes = data.unseenNodes;\n        var rankList = data.rankList;\n        var parent = data.parent;\n        var root = data.root;\n        var edge = data.edge;\n        if (root != null) {\n            if (parent != null) {\n                if (root.hashCode == null ||\n                    root.hashCode[0] !== parent.hashCode[0]) {\n                    var hashCodeLength = parent.hashCode.length + 1;\n                    root.hashCode = parent.hashCode.slice();\n                    root.hashCode[hashCodeLength - 1] = cHash;\n                }\n            }\n            var rootId = root.id;\n            if (seen[rootId] == null) {\n                seen[rootId] = root;\n                this.updateConnectionRank(visitor, layer, 0, data);\n                var outgoingEdges = root.connectsAsSource.slice();\n                for (var i = 0; i < outgoingEdges.length; i++) {\n                    var internalEdge = outgoingEdges[i];\n                    var targetNode = internalEdge.target;\n                    data.parent = root;\n                    data.root = targetNode;\n                    data.edge = internalEdge;\n                    this.extendedDfs(visitor, seen, i, layer + 1, data);\n                }\n            }\n            else {\n                this.updateConnectionRank(visitor, layer, 1, data);\n            }\n        }\n    };\n    /**\n     * used to clone the specified object ignoring all fieldnames in the given array of transient fields\n     * @private\n     */\n    MultiParentModel.prototype.clone = function (obj, transients, shallow) {\n        shallow = (shallow != null) ? shallow : false;\n        if (obj != null && typeof (obj.constructor) === 'function') {\n            var clonedObj = obj.constructor();\n            for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n                var i = _a[_i];\n                if (i !== 'layoutObjectId' && (transients == null || transients.indexOf(i) < 0)) {\n                    if (!shallow && typeof (obj[i]) === 'object') {\n                        //not used\n                        //  _clone[i] = $.extend(true, {}, obj[i]);\n                    }\n                    else {\n                        clonedObj[i] = obj[i];\n                    }\n                }\n            }\n            return clonedObj;\n        }\n        return null;\n    };\n    return MultiParentModel;\n}());\n/**\n * Defines how to reduce the crosses in between the line segments\n */\nvar CrossReduction = /** @class */ (function () {\n    function CrossReduction() {\n    }\n    /**\n     * used to calculate the number of edges crossing the layout model\n     * @param model\n     */\n    CrossReduction.prototype.calculateCrossings = function (model) {\n        var numRanks = model.ranks.length;\n        var totalCrossings = 0;\n        for (var i = 1; i < numRanks; i++) {\n            totalCrossings += this.calculateRankCrossing(i, model);\n        }\n        return totalCrossings;\n    };\n    /**\n     * used to get the temp value specified for the node or connector\n     * @private\n     */\n    CrossReduction.prototype.getTempVariable = function (node, layer) {\n        if (node) {\n            if (this.isVertex(node)) {\n                return node.temp[0];\n            }\n            else {\n                return node.temp[layer - node.minRank - 1];\n            }\n        }\n        return 0;\n    };\n    /**\n     * used to specify the number of conenctors crossing between the specified rank and its below rank\n     */\n    CrossReduction.prototype.calculateRankCrossing = function (i, model) {\n        var totalCrossings = 0;\n        var rank = model.ranks[i];\n        var previousRank = model.ranks[i - 1];\n        var tmpIndices = [];\n        // Iterate over the top rank and fill in the connection information\n        for (var j = 0; j < rank.length; j++) {\n            var node = rank[j];\n            var rankPosition = this.getTempVariable(node, i);\n            var connectedCells = this.getConnectedCellsOnLayer(node, i, true);\n            ///#### \n            var nodeIndices = [];\n            for (var k = 0; k < connectedCells.length; k++) {\n                var connectedNode = connectedCells[k];\n                var otherCellRankPosition = this.getTempVariable(connectedNode, i - 1);\n                nodeIndices.push(otherCellRankPosition);\n            }\n            nodeIndices.sort(function (x, y) { return x - y; });\n            tmpIndices[rankPosition] = nodeIndices;\n        }\n        var indices = [];\n        for (var j = 0; j < tmpIndices.length; j++) {\n            indices = indices.concat(tmpIndices[j]);\n        }\n        var firstIndex = 1;\n        while (firstIndex < previousRank.length) {\n            firstIndex <<= 1;\n        }\n        var treeSize = 2 * firstIndex - 1;\n        firstIndex -= 1;\n        var tree = [];\n        for (var j = 0; j < treeSize; ++j) {\n            tree[j] = 0;\n        }\n        for (var j = 0; j < indices.length; j++) {\n            var index = indices[j];\n            var treeIndex = index + firstIndex;\n            ++tree[treeIndex];\n            while (treeIndex > 0) {\n                if (treeIndex % 2) {\n                    totalCrossings += tree[treeIndex + 1];\n                }\n                treeIndex = (treeIndex - 1) >> 1;\n                ++tree[treeIndex];\n            }\n        }\n        return totalCrossings;\n    };\n    /**\n     * Calculates and reduces the crosses between line segments\n     * @private\n     */\n    CrossReduction.prototype.execute = function (model) {\n        // Stores initial ordering \n        this.nestedBestRanks = [];\n        for (var i = 0; i < model.ranks.length; i++) {\n            this.nestedBestRanks[i] = model.ranks[i].slice();\n        }\n        var iterationsWithoutImprovement = 0;\n        var currentBestCrossings = this.calculateCrossings(model);\n        for (var i = 0; i < 24 && iterationsWithoutImprovement < 2; i++) {\n            this.weightedMedian(i, model);\n            var candidateCrossings = this.calculateCrossings(model);\n            if (candidateCrossings < currentBestCrossings) {\n                currentBestCrossings = candidateCrossings;\n                iterationsWithoutImprovement = 0;\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        var obj = this.nestedBestRanks[j][cell.temp[0]];\n                        var check = true;\n                        if (cell.edges && obj && !obj.edges) {\n                            check = false;\n                        }\n                        if (obj && check) {\n                            this.nestedBestRanks[j][cell.temp[0]] = cell;\n                        }\n                    }\n                }\n            }\n            else {\n                // Increase count of iterations\n                iterationsWithoutImprovement++;\n                // Restore the best values to the cells\n                for (var j = 0; j < this.nestedBestRanks.length; j++) {\n                    var rank = model.ranks[j];\n                    for (var k = 0; k < rank.length; k++) {\n                        var cell = rank[k];\n                        this.setTempVariable(cell, j, k);\n                    }\n                }\n            }\n            if (currentBestCrossings === 0) {\n                break;\n            }\n        }\n        // Store the best rankings but in the model\n        var ranks = [];\n        var rankList = [];\n        for (var i = 0; i < model.maxRank + 1; i++) {\n            rankList[i] = [];\n            ranks[i] = rankList[i];\n        }\n        for (var i = 0; i < this.nestedBestRanks.length; i++) {\n            for (var j = 0; j < this.nestedBestRanks[i].length; j++) {\n                rankList[i].push(this.nestedBestRanks[i][j]);\n            }\n        }\n        model.ranks = ranks;\n    };\n    /**\n     * check whether the object is vertext or edge on the layout model.\n     * @private\n     */\n    CrossReduction.prototype.isVertex = function (node) {\n        if (node && node.cell && (node.cell.inEdges || node.cell.outEdges)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * used to move up or move down the node position on the adjacent ranks\n     */\n    CrossReduction.prototype.weightedMedian = function (iteration, model) {\n        // Reverse sweep direction each time through this method\n        var downwardSweep = (iteration % 2 === 0);\n        if (downwardSweep) {\n            for (var j = model.maxRank - 1; j >= 0; j--) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n        else {\n            for (var j = 1; j < model.maxRank; j++) {\n                this.medianRank(j, downwardSweep);\n            }\n        }\n    };\n    /**\n     * used to get the node next(up) connected to the specified node or connector\n     * @private\n     */\n    CrossReduction.prototype.getConnectedCellsOnLayer = function (cell, layer, isPrevious) {\n        if (isPrevious === void 0) { isPrevious = false; }\n        var connectedlayer = 'nextLayerConnectedCells';\n        var connectedAs = 'connectsAsTarget';\n        if (isPrevious) {\n            connectedlayer = 'previousLayerConnectedCells';\n            connectedAs = 'connectsAsSource';\n        }\n        if (cell) {\n            if (this.isVertex(cell)) {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    cell[connectedlayer][0] = [];\n                    for (var i = 0; i < cell[connectedAs].length; i++) {\n                        var edge = cell[connectedAs][i];\n                        if (edge.maxRank === undefined) {\n                            edge.maxRank = -1;\n                        }\n                        if (edge.maxRank === -1 || (isPrevious ? (edge.minRank === layer - 1) : (edge.maxRank === layer + 1))) {\n                            // Either edge is not in any rank or no dummy nodes in edge, add node of other side of edge\n                            cell[connectedlayer][0].push(isPrevious ? edge.target : edge.source);\n                        }\n                        else {\n                            // Edge spans at least two layers, add edge\n                            cell[connectedlayer][0].push(edge);\n                        }\n                    }\n                }\n                return cell[connectedlayer][0];\n            }\n            else {\n                if (cell[connectedlayer] == null) {\n                    cell[connectedlayer] = [];\n                    for (var i = 0; i < cell.temp.length; i++) {\n                        cell[connectedlayer][i] = [];\n                        if (i === (isPrevious ? 0 : (cell.temp.length - 1))) {\n                            cell[connectedlayer][i].push(isPrevious ? cell.target : cell.source);\n                        }\n                        else {\n                            cell[connectedlayer][i].push(cell);\n                        }\n                    }\n                }\n                return cell[connectedlayer][layer - cell.minRank - 1];\n            }\n        }\n        return null;\n    };\n    /**\n     * calculates the rank elements on the specified rank\n     * @private\n     */\n    CrossReduction.prototype.medianValue = function (connectedCells, rankValue) {\n        var medianValues = [];\n        var arrayCount = 0;\n        for (var i = 0; i < connectedCells.length; i++) {\n            var cell = connectedCells[i];\n            medianValues[arrayCount++] = this.getTempVariable(cell, rankValue);\n        }\n        // sorts numerical order sort\n        medianValues.sort(function (a, b) { return a - b; });\n        if (arrayCount % 2 === 1) {\n            // For odd numbers of adjacent vertices return the median\n            return medianValues[Math.floor(arrayCount / 2)];\n        }\n        else if (arrayCount === 2) {\n            return ((medianValues[0] + medianValues[1]) / 2.0);\n        }\n        else {\n            var medianPoint = arrayCount / 2;\n            var leftMedian = medianValues[medianPoint - 1] - medianValues[0];\n            var rightMedian = medianValues[arrayCount - 1]\n                - medianValues[medianPoint];\n            return (medianValues[medianPoint - 1] * rightMedian + medianValues[medianPoint] * leftMedian) / (leftMedian + rightMedian);\n        }\n    };\n    /**\n     * get the temp value of the specified layer\n     * @private\n     */\n    CrossReduction.prototype.setTempVariable = function (cell, layer, value) {\n        if (cell) {\n            cell.temp[0] = value;\n        }\n    };\n    /**\n     * used to minimize the node position on this rank and one of its adjacent ranks\n     */\n    CrossReduction.prototype.medianRank = function (rankValue, downwardSweep) {\n        var numCellsForRank = this.nestedBestRanks[rankValue].length;\n        var medianValues = [];\n        var reservedPositions = [];\n        for (var i = 0; i < numCellsForRank; i++) {\n            var cell = this.nestedBestRanks[rankValue][i];\n            var sorterEntry = { medianValue: 0 };\n            sorterEntry.cell = cell;\n            // Flip whether or not equal medians are flipped on up and down sweeps \n            //TODO re-implement some kind of nudge medianValues[i].nudge = !downwardSweep;\n            var nextLevelConnectedCells = void 0;\n            if (downwardSweep) {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue);\n            }\n            else {\n                nextLevelConnectedCells = this.getConnectedCellsOnLayer(cell, rankValue, true);\n            }\n            var nextRankValue = void 0;\n            downwardSweep ? nextRankValue = rankValue + 1 : nextRankValue = rankValue - 1;\n            if (nextLevelConnectedCells != null && nextLevelConnectedCells.length !== 0) {\n                sorterEntry.medianValue = this.medianValue(nextLevelConnectedCells, nextRankValue);\n                medianValues.push(sorterEntry);\n            }\n            else {\n                // Nodes with no adjacent vertices are flagged in the reserved array to \n                //indicate they should be left in their current position.\n                reservedPositions[this.getTempVariable(cell, rankValue)] = true;\n            }\n        }\n        medianValues.sort(this.compare);\n        // Set the new position of each node within the rank using its temp variable\n        for (var i = 0; i < numCellsForRank; i++) {\n            if (reservedPositions[i] == null && medianValues.length > 0) {\n                var cell = medianValues.shift().cell;\n                this.setTempVariable(cell, rankValue, i);\n            }\n        }\n    };\n    /**\n     * compares two values, it sends the values to the compare function,\n     * and sorts the values according to the returned (negative, zero, positive) value\n     */\n    CrossReduction.prototype.compare = function (a, b) {\n        if (a != null && b != null) {\n            if (b.medianValue > a.medianValue) {\n                return -1;\n            }\n            else if (b.medianValue < a.medianValue) {\n                return 1;\n            }\n        }\n        return 0;\n    };\n    return CrossReduction;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, Complex, CollectionFactory, ChildProperty, Event } from '@syncfusion/ej2-base';\nimport { Browser, EventHandler, Draggable, Collection } from '@syncfusion/ej2-base';\nimport { remove } from '@syncfusion/ej2-base';\nimport { Accordion } from '@syncfusion/ej2-navigations';\nimport { Node, Connector, Shape, Size, Transform } from '../diagram/index';\nimport { DiagramRenderer, StackPanel, Margin } from '../diagram/index';\nimport { TextElement, Canvas, BpmnShape } from '../diagram/index';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\nimport { parentsUntil, createSvgElement, createHtmlElement, createMeasureElements } from '../diagram/utility/dom-util';\nimport { scaleElement, arrangeChild, groupHasType, setUMLActivityDefaults } from '../diagram/utility/diagram-util';\nimport { getFunction, randomId } from '../diagram/utility/base-util';\nimport { getOuterBounds } from '../diagram/utility/connector';\nimport { Point } from '../diagram/primitives/point';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nvar getObjectType = function (obj) {\n    var conn = obj;\n    if (conn.sourcePoint || conn.targetPoint || conn.sourceID || conn.targetID\n        || conn.sourcePortID || conn.targetPortID || conn.sourceDecorator || conn.targetDecorator) {\n        return Connector;\n    }\n    if (obj.shape && (obj.shape instanceof Shape || obj.shape.type)) {\n        return Node;\n    }\n    return Node;\n};\n/**\n * A palette allows to display a group of related symbols and it textually annotates the group with its header.\n */\nvar Palette = /** @class */ (function (_super) {\n    __extends(Palette, _super);\n    function Palette() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"id\", void 0);\n    __decorate([\n        Property()\n    ], Palette.prototype, \"height\", void 0);\n    __decorate([\n        Property(true)\n    ], Palette.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('')\n    ], Palette.prototype, \"title\", void 0);\n    __decorate([\n        CollectionFactory(getObjectType)\n    ], Palette.prototype, \"symbols\", void 0);\n    return Palette;\n}(ChildProperty));\nexport { Palette };\n/**\n * customize the preview size and position of the individual palette items.\n */\nvar SymbolPreview = /** @class */ (function (_super) {\n    __extends(SymbolPreview, _super);\n    function SymbolPreview() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"width\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPreview.prototype, \"height\", void 0);\n    __decorate([\n        Complex({}, Point)\n    ], SymbolPreview.prototype, \"offset\", void 0);\n    return SymbolPreview;\n}(ChildProperty));\nexport { SymbolPreview };\n/**\n * Represents the Symbol Palette Component.\n * ```html\n * <div id=\"symbolpalette\"></div>\n * <script>\n *  var palette = new SymbolPalatte({ allowDrag:true });\n *  palette.appendTo(\"#symbolpalette\");\n * </script>\n * ```\n */\n/**\n * The symbol palette control allows to predefine the frequently used nodes and connectors\n * and to drag and drop those nodes/connectors to drawing area\n */\nvar SymbolPalette = /** @class */ (function (_super) {\n    __extends(SymbolPalette, _super);\n    //region - protected methods \n    /**\n     * Constructor for creating the component\n     * @hidden\n     */\n    function SymbolPalette(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /**   @private  */\n        _this.symbolTable = {};\n        /**   @private  */\n        _this.childTable = {};\n        _this.info = 'info';\n        _this.laneTable = {};\n        /**\n         * helper method for draggable\n         * @return {void}\n         * @private\n         */\n        _this.helper = function (e) {\n            var clonedElement;\n            var id = e.sender.target.id.split('_container')[0];\n            var symbol = _this.symbolTable[id];\n            if (symbol && _this.selectedSymbol) {\n                _this.selectedSymbols = _this.selectedSymbol.id === symbol.id ? symbol : _this.selectedSymbol;\n                var position = _this.getMousePosition(e.sender);\n                clonedElement = _this.getSymbolPreview(_this.selectedSymbols, e.sender, _this.element);\n                clonedElement.setAttribute('paletteId', _this.element.id);\n            }\n            return clonedElement;\n        };\n        var child;\n        var node;\n        for (var i = 0; _this && _this.palettes && i < _this.palettes.length; i++) {\n            for (var j = 0; j < _this.palettes[i].symbols.length; j++) {\n                child = _this.palettes[i].symbols[j];\n                node = options.palettes[i].symbols[j];\n                if (child && child.shape.type === 'UmlActivity') {\n                    setUMLActivityDefaults(node, child);\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Refreshes the panel when the symbol palette properties are updated\n     * @param newProp Defines the new values of the changed properties\n     * @param oldProp Defines the old values of the changed properties\n     */\n    SymbolPalette.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var refresh = false;\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'width':\n                    this.element.style.width = this.width.toString();\n                    break;\n                case 'height':\n                    this.element.style.height = this.height.toString();\n                    break;\n                case 'symbolPreview':\n                    break;\n                case 'symbolWidth':\n                case 'symbolHeight':\n                case 'getSymbolInfo':\n                    refresh = true;\n                    break;\n                case 'enableSearch':\n                    if (newProp.enableSearch) {\n                        this.createTextbox();\n                    }\n                    else {\n                        var divElement = document.getElementById(this.element.id + '_search');\n                        if (divElement) {\n                            divElement.parentNode.removeChild(divElement);\n                        }\n                    }\n                    break;\n                case 'palettes':\n                    for (var _b = 0, _c = Object.keys(newProp.palettes); _b < _c.length; _b++) {\n                        var i = _c[_b];\n                        var index = Number(i);\n                        if (!this.accordionElement.items[index]) {\n                            this.accordionElement.items[index] = {\n                                header: newProp.palettes[index].title || '',\n                                expanded: newProp.palettes[index].expanded,\n                                iconCss: newProp.palettes[index].iconCss || ''\n                            };\n                        }\n                        if (newProp.palettes[index].iconCss !== undefined) {\n                            this.accordionElement.items[index].iconCss = newProp.palettes[index].iconCss || '';\n                            refresh = true;\n                        }\n                        if (newProp.palettes[index].expanded !== undefined) {\n                            if (!this.palettes[index].isInteraction) {\n                                this.accordionElement.items[index].expanded = newProp.palettes[index].expanded;\n                                refresh = true;\n                            }\n                            else {\n                                this.palettes[index].isInteraction = false;\n                            }\n                        }\n                    }\n                    break;\n                case 'enableAnimation':\n                    if (!this.enableAnimation) {\n                        this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n                    }\n                    else {\n                        this.accordionElement.animation = { expand: { duration: 400 }, collapse: { duration: 400 } };\n                    }\n                    break;\n                case 'expandMode':\n                    this.accordionElement.expandMode = this.expandMode;\n                    refresh = true;\n                    break;\n            }\n        }\n        if (refresh) {\n            this.refreshPalettes();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    SymbolPalette.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    SymbolPalette.prototype.preRender = function () {\n        var _this = this;\n        this.element.style.overflow = 'auto';\n        this.element.style.height = this.height.toString();\n        this.element.style.width = this.width.toString();\n        if (this.enableSearch) {\n            this.createTextbox();\n        }\n        //create accordion element\n        var accordionDiv = createHtmlElement('div', { id: this.element.id + '_container' });\n        this.accordionElement = new Accordion({\n            expandMode: this.expandMode\n        });\n        if (!this.enableAnimation) {\n            this.accordionElement.animation = { expand: { duration: 0 }, collapse: { duration: 0 } };\n        }\n        this.accordionElement.expanded = function (args) {\n            var index = _this.accordionElement.items.indexOf(args.item);\n            _this.palettes[index].expanded = args.isExpanded;\n            _this.palettes[index].isInteraction = true;\n        };\n        this.element.appendChild(accordionDiv);\n        var measureElement = 'measureElement';\n        if (window[measureElement]) {\n            window[measureElement] = null;\n        }\n        createMeasureElements();\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    /**\n     * Renders nodes and connectors in the symbol palette\n     */\n    SymbolPalette.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.svgRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), true);\n        this.updatePalettes();\n        this.accordionElement.appendTo('#' + this.element.id + '_container');\n    };\n    /**\n     * To get Module name\n     *  @private\n     */\n    SymbolPalette.prototype.getModuleName = function () {\n        return 'SymbolPalette';\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    SymbolPalette.prototype.requiredModules = function () {\n        var modules = [];\n        modules.push({\n            member: 'Bpmn',\n            args: []\n        });\n        return modules;\n    };\n    /**\n     * To destroy the symbol palette\n     * @return {void}\n     */\n    SymbolPalette.prototype.destroy = function () {\n        if (this.allowDrag) {\n            this.draggable.destroy();\n            this.unWireEvents();\n            this.notify('destroy', {});\n            _super.prototype.destroy.call(this);\n            var content = document.getElementById(this.element.id + '_container');\n            if (content) {\n                this.element.removeChild(content);\n                var measureElemnt = 'measureElement';\n                if (window[measureElemnt]) {\n                    window[measureElemnt].usageCount -= 1;\n                    if (window[measureElemnt].usageCount === 0) {\n                        window[measureElemnt].parentNode.removeChild(window[measureElemnt]);\n                        window[measureElemnt] = null;\n                    }\n                }\n            }\n            content = document.getElementById(this.element.id + '_search');\n            if (content) {\n                content.parentNode.removeChild(content);\n            }\n            this.element.classList.remove('e-symbolpalette');\n        }\n    };\n    //end region - protected methods\n    //region - private methods to render symbols\n    /**\n     * Method to initialize the items in the symbols\n     */\n    SymbolPalette.prototype.initSymbols = function (symbolGroup) {\n        var group = [];\n        var laneHeight = 0;\n        var laneWidth = 0;\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (symbol.shape.type === 'SwimLane') {\n                var swimLaneObj = symbol;\n                var swimLaneShape = symbol.shape;\n                var isHorizontal = (swimLaneShape.orientation === 'Horizontal') ? true : false;\n                if (swimLaneShape.isLane) {\n                    laneHeight = isHorizontal ? this.symbolHeight - this.symbolHeight / 2 : this.symbolHeight - this.symbolHeight / 4;\n                    laneWidth = isHorizontal ? this.symbolWidth - this.symbolWidth / 4 : this.symbolWidth - this.symbolWidth / 2;\n                    this.laneTable[symbol.id] = { height: laneHeight, width: laneWidth };\n                    var header = swimLaneShape.lanes[0].header;\n                    var laneStyle = swimLaneShape.lanes[0].style;\n                    var headerStyle = header.style;\n                    var headerObj = {\n                        id: 'header' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? header.width : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : header.height,\n                        style: headerStyle,\n                        annotations: [{ content: header.annotation.content }]\n                    };\n                    headerObj.offsetX = headerObj.width / 2;\n                    headerObj.offsetY = headerObj.height / 2;\n                    this.addPaletteItem(symbolGroup.id, headerObj);\n                    var laneObj = {\n                        id: 'lane' + randomId(), shape: { type: 'Basic', shape: 'Rectangle' },\n                        width: isHorizontal ? (swimLaneObj.width - header.width) : swimLaneObj.width,\n                        height: isHorizontal ? swimLaneObj.height : (swimLaneObj.height - header.height),\n                        style: laneStyle\n                    };\n                    laneObj.offsetX = isHorizontal ? (headerObj.width + (laneObj.width / 2)) : laneObj.width / 2;\n                    laneObj.offsetY = isHorizontal ? laneObj.height / 2 : (headerObj.height + (laneObj.height / 2));\n                    this.addPaletteItem(symbolGroup.id, laneObj);\n                    swimLaneObj.children = [headerObj.id, laneObj.id];\n                }\n                else if (swimLaneShape.isPhase) {\n                    laneHeight = swimLaneObj.height ? swimLaneObj.height : this.symbolHeight;\n                    laneWidth = swimLaneObj.width ? swimLaneObj.width : this.symbolWidth;\n                    symbol.shape.type = 'Path';\n                    if (isHorizontal) {\n                        symbol.shape.data = 'M0,0 L' + laneWidth + ',' + '0';\n                    }\n                    else {\n                        symbol.shape.data = 'M0,0 L0,' + laneWidth;\n                    }\n                }\n            }\n            if (symbol instanceof Node) {\n                var getNodeDefaults = getFunction(this.getNodeDefaults);\n                if (getNodeDefaults) {\n                    getNodeDefaults(symbol, this);\n                }\n            }\n            else if (symbol instanceof Connector) {\n                var getConnectorDefaults = getFunction(this.getConnectorDefaults);\n                if (getConnectorDefaults) {\n                    getConnectorDefaults(symbol, this);\n                }\n            }\n            this.symbolTable[symbol.id] = symbol;\n            if (symbol instanceof Node && symbol.children) {\n                group.push(symbol);\n            }\n        }\n        for (var i = 0; i < group.length; i++) {\n            var node = void 0;\n            for (var j = 0; j < group[i].children.length; j++) {\n                node = (this.symbolTable[group[i].children[j]]);\n                if (node) {\n                    this.childTable[node.id] = node;\n                    node.parentId = group[i].id;\n                }\n            }\n        }\n        for (var _b = 0, _c = symbolGroup.symbols; _b < _c.length; _b++) {\n            var symbol = _c[_b];\n            if (!(symbol instanceof Node && symbol.children)) {\n                this.prepareSymbol(symbol);\n            }\n        }\n        for (var _d = 0, group_1 = group; _d < group_1.length; _d++) {\n            var symbol = group_1[_d];\n            this.prepareSymbol(symbol);\n        }\n    };\n    /**\n     * Method to create the palette\n     */\n    SymbolPalette.prototype.renderPalette = function (symbolGroup) {\n        var style = 'display:none;overflow:auto;';\n        if (symbolGroup.height) {\n            style += 'height:' + symbolGroup.height + 'px';\n        }\n        var paletteDiv = createHtmlElement('div', { 'id': symbolGroup.id, style: style });\n        this.element.appendChild(paletteDiv);\n        var item = {\n            header: symbolGroup.title, expanded: symbolGroup.expanded,\n            content: '#' + symbolGroup.id, iconCss: symbolGroup.iconCss\n        };\n        this.accordionElement.items.push(item);\n        this.renderSymbols(symbolGroup, paletteDiv);\n    };\n    /**\n     * Used to add the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.addPaletteItem = function (paletteName, paletteSymbol) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                // tslint:disable-next-line:no-any \n                var param = [undefined, symbolPaletteGroup, 'symbols', {}, true];\n                // tslint:disable-next-line:no-any \n                var obj = new (Function.prototype.bind.apply(getObjectType(paletteSymbol), param));\n                for (var i_1 = 0; i_1 < Object.keys(paletteSymbol).length; i_1++) {\n                    obj[Object.keys(paletteSymbol)[i_1]] = paletteSymbol[Object.keys(paletteSymbol)[i_1]];\n                }\n                symbolPaletteGroup.symbols.push(obj);\n                if (!obj.children) {\n                    this.prepareSymbol(obj);\n                }\n                this.symbolTable[obj.id] = obj;\n                var paletteDiv = document.getElementById(symbolPaletteGroup.id);\n                if (paletteDiv) {\n                    paletteDiv.appendChild(this.getSymbolContainer(obj, paletteDiv));\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Used to remove the palette item as nodes or connectors in palettes\n     */\n    SymbolPalette.prototype.removePaletteItem = function (paletteName, symbolId) {\n        var refresh;\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            if (symbolPaletteGroup.id.indexOf(paletteName) !== -1) {\n                for (var _i = 0, _a = symbolPaletteGroup.symbols; _i < _a.length; _i++) {\n                    var symbol = _a[_i];\n                    if (symbol.id.indexOf(symbolId) !== -1) {\n                        var index = symbolPaletteGroup.symbols.indexOf(symbol);\n                        symbolPaletteGroup.symbols.splice(index, 1);\n                        if (symbol.children) {\n                            var parentNode = symbol.children;\n                            for (var i_2 = 0; i_2 < parentNode.length; i_2++) {\n                                delete this.symbolTable[(parentNode[i_2])];\n                            }\n                        }\n                        delete this.symbolTable[symbol.id];\n                        var element = document.getElementById(symbol.id + '_container');\n                        element.parentNode.removeChild(element);\n                        refresh = true;\n                        break;\n                    }\n                }\n            }\n            if (refresh) {\n                break;\n            }\n        }\n    };\n    /**\n     * Method to create the symbols in canvas\n     */\n    SymbolPalette.prototype.prepareSymbol = function (symbol) {\n        var width;\n        var sw;\n        var height;\n        var sh;\n        var stackPanel = new StackPanel();\n        var obj = symbol;\n        var content;\n        var symbolContainer = new Canvas();\n        var container = (symbol instanceof Node) ? symbol.initContainer() : null;\n        if (container && !container.children) {\n            container.children = [];\n        }\n        //preparing objects\n        var getSymbolTemplate = getFunction(this.getSymbolTemplate);\n        if (getSymbolTemplate) {\n            content = getSymbolTemplate(symbol);\n        }\n        if (!content) {\n            if (obj.children) {\n                content = this.getContainer(obj, container);\n            }\n            else {\n                content = symbol.init(this);\n                if (symbol instanceof Node && symbol.parentId) {\n                    container.children.push(content);\n                }\n            }\n        }\n        if (!symbol.parentId) {\n            var symbolInfo = { width: this.symbolWidth, height: this.symbolHeight };\n            var getSymbolInfo = getFunction(this.getSymbolInfo);\n            if (getSymbolInfo) {\n                symbolInfo = getSymbolInfo(symbol);\n            }\n            symbolInfo = symbolInfo || {};\n            if (symbol.shape && symbol.shape.isPhase) {\n                symbolInfo.width = symbolInfo.width || this.symbolWidth;\n                symbolInfo.height = symbolInfo.height || this.symbolHeight;\n            }\n            //defining custom templates\n            content.relativeMode = 'Object';\n            content.horizontalAlignment = content.verticalAlignment = 'Center';\n            symbolContainer.style.strokeColor = symbolContainer.style.fill = 'none';\n            symbolContainer.children = [content];\n            content.measure(new Size());\n            content.arrange(content.desiredSize);\n            width = symbolInfo.width = symbolInfo.width ||\n                (obj.width !== undefined ? content.actualSize.width : undefined) || this.symbolWidth;\n            height = symbolInfo.height = symbolInfo.height ||\n                (obj.height !== undefined ? content.actualSize.height : undefined) || this.symbolHeight;\n            if (width !== undefined && height !== undefined) {\n                var actualWidth = width;\n                var actualHeight = height;\n                var isLane = symbol.shape.isLane ? true : false;\n                var isPhase = symbol.shape.isPhase ? true : false;\n                if (this.symbolWidth !== undefined) {\n                    actualWidth = this.symbolWidth - this.symbolMargin.left - this.symbolMargin.right;\n                }\n                else {\n                    width += obj.style.strokeWidth;\n                }\n                if (this.symbolHeight !== undefined) {\n                    actualHeight = this.symbolHeight - this.symbolMargin.top - this.symbolMargin.bottom;\n                }\n                else {\n                    height += obj.style.strokeWidth;\n                }\n                if (symbolInfo.description && symbolInfo.description.text !== '') {\n                    actualHeight -= 20; // default height of the text have been reduced from the container.\n                }\n                sw = actualWidth / ((!isPhase && content.width) || width);\n                sh = actualHeight / ((!isPhase && content.height) || height);\n                if (symbolInfo.fit) {\n                    sw = actualWidth / symbolInfo.width;\n                    sh = actualHeight / symbolInfo.height;\n                }\n                width = actualWidth;\n                height = actualHeight;\n                sw = sh = Math.min(sw, sh);\n                symbolContainer.width = width;\n                symbolContainer.height = height;\n                content.width = symbolInfo.width;\n                content.height = symbolInfo.height;\n                this.scaleSymbol(symbol, symbolContainer, sw, sh, width, height);\n            }\n            else {\n                var outerBounds = void 0;\n                if (symbol instanceof Connector) {\n                    outerBounds = getOuterBounds(symbol);\n                }\n                content.width = symbol.width || (outerBounds) ? outerBounds.width : content.actualSize.width;\n                content.height = symbol.height || (outerBounds) ? outerBounds.height : content.actualSize.height;\n            }\n            symbol.wrapper = stackPanel;\n            stackPanel.children = [symbolContainer];\n            content.pivot = stackPanel.pivot = { x: 0, y: 0 };\n            stackPanel.id = content.id + '_symbol';\n            stackPanel.style.fill = stackPanel.style.strokeColor = 'transparent';\n            stackPanel.offsetX = symbol.style.strokeWidth / 2;\n            stackPanel.offsetY = symbol.style.strokeWidth / 2;\n            //symbol description-textElement\n            this.getSymbolDescription(symbolInfo, width, stackPanel);\n            stackPanel.measure(new Size());\n            stackPanel.arrange(stackPanel.desiredSize);\n            symbolInfo.width = symbolInfo.width || content.actualSize.width;\n            symbolInfo.height = symbolInfo.height || content.actualSize.height;\n            symbol[this.info] = symbolInfo;\n        }\n        if (symbol.parentId) {\n            container.measure(new Size(obj.width, obj.height));\n            container.arrange(container.desiredSize);\n        }\n    };\n    SymbolPalette.prototype.getContainer = function (obj, container) {\n        container.measureChildren = false;\n        var bounds;\n        var child = obj.children;\n        container.children = [];\n        for (var i = 0; i < child.length; i++) {\n            if (this.symbolTable[child[i]]) {\n                container.children.push(this.symbolTable[child[i]].wrapper);\n            }\n        }\n        container.measure(new Size(obj.width, obj.height));\n        container.arrange(container.desiredSize);\n        if (container.bounds.x !== 0 || container.bounds.y !== 0) {\n            bounds = container.bounds;\n            arrangeChild(obj, bounds.x, bounds.y, this.symbolTable, false, this);\n            container = this.getContainer(obj, container);\n        }\n        return container;\n    };\n    /**\n     * Method to get the symbol text description\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolDescription = function (symbolInfo, width, parent) {\n        if (symbolInfo && symbolInfo.description && symbolInfo.description.text) {\n            var textElement = new TextElement();\n            //symbol description-textElement\n            symbolInfo.description.overflow = symbolInfo.description.overflow || 'Ellipsis';\n            symbolInfo.description.wrap = symbolInfo.description.wrap || 'WrapWithOverflow';\n            textElement.content = symbolInfo.description.text;\n            textElement.width = width;\n            textElement.height = 20;\n            textElement.style.strokeColor = 'transparent';\n            textElement.style.fill = 'transparent';\n            textElement.style.strokeWidth = 0;\n            textElement.style.textWrapping = symbolInfo.description.wrap;\n            textElement.style.textOverflow = symbolInfo.description.overflow;\n            textElement.margin = { left: 0, right: 0, top: 0, bottom: 5 };\n            parent.children.push(textElement);\n        }\n    };\n    /**\n     * Method to renders the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.renderSymbols = function (symbolGroup, parentDiv) {\n        for (var _i = 0, _a = symbolGroup.symbols; _i < _a.length; _i++) {\n            var symbol = _a[_i];\n            if (!symbol.parentId) {\n                this.getSymbolContainer(symbol, parentDiv);\n            }\n        }\n    };\n    /**\n     * Method to clone the symbol for previewing the symbols\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolPreview = function (symbol, evt, parentDiv) {\n        var canvas;\n        var sw;\n        var sh;\n        var symbolPreviewWidth = symbol.wrapper.children[0].desiredSize.width + symbol.style.strokeWidth;\n        var symbolPreviewHeight = symbol.wrapper.children[0].desiredSize.height + symbol.style.strokeWidth;\n        var content = symbol.wrapper.children[0].children[0];\n        if (this.symbolPreview.width !== undefined || this.symbolPreview.height !== undefined) {\n            symbolPreviewWidth = (this.symbolPreview.width || symbolPreviewWidth) - symbol.style.strokeWidth;\n            symbolPreviewHeight = (this.symbolPreview.height || symbolPreviewHeight) - symbol.style.strokeWidth;\n            sw = symbolPreviewWidth / content.actualSize.width;\n            sh = symbolPreviewHeight / content.actualSize.height;\n            sw = sh = Math.min(sw, sh);\n            var symbolWidth = content.actualSize.width * sw;\n            var symbolHeight = content.actualSize.height * sh;\n            symbol.wrapper.children[0].width = symbolPreviewWidth;\n            symbol.wrapper.children[0].height = symbolPreviewHeight;\n            this.measureAndArrangeSymbol(content, symbol instanceof Node);\n            this.scaleSymbol(symbol, symbol.wrapper.children[0], sw, sh, symbolWidth, symbolHeight, true);\n            symbolPreviewWidth = symbolWidth;\n            symbolPreviewHeight = symbolHeight;\n        }\n        var prevPosition = { x: content.offsetX, y: content.offsetY };\n        content.offsetX = content.offsetY = symbol.style.strokeWidth / 2;\n        content.pivot = { x: 0, y: 0 };\n        this.measureAndArrangeSymbol(content, symbol instanceof Node);\n        var previewContainer = createHtmlElement('div', { 'draggable': 'true', 'class': 'e-dragclone', 'style': 'pointer-events:none' });\n        var div;\n        document.body.appendChild(previewContainer);\n        var style = 'margin:5px;';\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id + '_preview',\n                width: Math.ceil(symbolPreviewWidth) + 1,\n                height: Math.ceil(symbolPreviewHeight) + 1\n            });\n            var gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            previewContainer.appendChild(canvas);\n            this.svgRenderer.renderElement(content, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, previewContainer, symbolPreviewHeight, symbolPreviewWidth, true);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, previewContainer, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, true);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id + '_preview', (Math.ceil(symbolPreviewWidth) + symbol.style.strokeWidth + 1) * 2, (Math.ceil(symbolPreviewHeight) + symbol.style.strokeWidth + 1) * 2);\n                previewContainer.appendChild(canvas);\n                style += 'transform:scale(0.5);';\n                canvas.setAttribute('transform-origin', '0 0');\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(content, canvas, undefined);\n            }\n        }\n        ((div && (symbol.shape.type === 'HTML' || symbol.children\n            && symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n        content.offsetX = prevPosition.x;\n        content.offsetY = prevPosition.y;\n        return previewContainer;\n    };\n    SymbolPalette.prototype.measureAndArrangeSymbol = function (content, isNode) {\n        if (content.children && !isNode) {\n            content.children[0].transform = Transform.Self;\n        }\n        content.measure(new Size());\n        content.arrange(content.desiredSize);\n        if (content.children) {\n            content.children[0].transform = Transform.Parent;\n        }\n    };\n    SymbolPalette.prototype.updateSymbolSize = function (symbol, width, height) {\n        var element = symbol.wrapper.children[0].children[0];\n        var strokeWidth = symbol.style.strokeWidth;\n        element.width = (width || element.width) - (strokeWidth + 1);\n        element.height = (height || element.height) - (strokeWidth + 1);\n        symbol.wrapper.measure(new Size());\n        symbol.wrapper.arrange(symbol.wrapper.desiredSize);\n    };\n    /**\n     * Method to create canvas and render the symbol\n     * @return {void}\n     * @private\n     */\n    SymbolPalette.prototype.getSymbolContainer = function (symbol, parentDiv, preview) {\n        var symbolInfo = this.symbolTable[symbol.id][this.info];\n        var size = this.getSymbolSize(symbol, symbolInfo);\n        var width = size.width + 1;\n        var height = size.height + 1;\n        var container = createHtmlElement('div', {\n            id: symbol.id + '_container',\n            style: 'width:' + width + 'px;height:' + height + 'px;float:left;overflow:hidden',\n            title: symbolInfo.tooltip ? symbolInfo.tooltip : symbol.id\n        });\n        parentDiv.appendChild(container);\n        var canvas;\n        var gElement;\n        var div;\n        if (symbol.shape.type === 'Native') {\n            canvas = createSvgElement('svg', {\n                id: symbol.id,\n                width: Math.ceil(symbol.wrapper.actualSize.width) + 1,\n                height: Math.ceil(symbol.wrapper.actualSize.height) + 1\n            });\n            gElement = createSvgElement('g', { id: symbol.id + '_g' });\n            canvas.appendChild(gElement);\n            container.appendChild(canvas);\n            this.updateSymbolSize(symbol);\n            this.svgRenderer.renderElement(symbol.wrapper, gElement, undefined, undefined, canvas);\n        }\n        else if (symbol.shape.type === 'HTML') {\n            div = this.getHtmlSymbol(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n        }\n        else {\n            if (symbol.children &&\n                symbol.children.length > 0 && groupHasType(symbol, 'HTML', this.childTable)) {\n                div = this.getGroupParent(symbol, canvas, container, symbol.wrapper.actualSize.height, symbol.wrapper.actualSize.width, false);\n            }\n            else {\n                canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n                container.appendChild(canvas);\n                var index = 2;\n                if (symbol instanceof Connector) {\n                    index = 1.9;\n                }\n                canvas.getContext('2d').setTransform(index, 0, 0, index, 0, 0);\n                this.diagramRenderer.renderElement(symbol.wrapper, gElement || canvas, undefined, undefined, undefined, undefined, true);\n            }\n        }\n        if (!preview) {\n            var actualWidth = symbol.wrapper.actualSize.width + symbol.style.strokeWidth;\n            var actualHeight = symbol.wrapper.actualSize.height + symbol.style.strokeWidth;\n            var style = 'pointer-events:none;transform-origin:0 0;overflow:hidden;';\n            if (symbol.shape.isPhase) {\n                if (symbol.shape.orientation === 'Horizontal') {\n                    style += 'margin-left:' +\n                        Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                        + 'px;margin-top:' + size.height / 2\n                        + 'px;';\n                }\n                else {\n                    style += 'margin-left:' +\n                        size.width / 2\n                        + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                        + 'px;';\n                }\n            }\n            else {\n                style += 'margin-left:' +\n                    Math.max(this.symbolMargin.left, ((width - actualWidth) / 2))\n                    + 'px;margin-top:' + Math.max(this.symbolMargin.top, ((height - actualHeight) / 2))\n                    + 'px;';\n            }\n            if (canvas instanceof HTMLCanvasElement) {\n                style += 'transform:scale(.5,.5);';\n            }\n            ((div && (symbol.shape.type === 'HTML' || symbol.children &&\n                symbol.children.length > 0)) ? div : canvas).setAttribute('style', style);\n            container.classList.add('e-symbol-draggable');\n            return container;\n        }\n        return canvas;\n    };\n    SymbolPalette.prototype.getGroupParent = function (item, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', { 'id': item.id + (isPreview ? '_html_div_preview' : '_html_div') });\n        var htmlLayer = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': item.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas((isPreview ? (item.id + '_preview') : item.id), Math.ceil(width) + 1, Math.ceil(height) + 1);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(item.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getHtmlSymbol = function (symbol, canvas, container, height, width, isPreview) {\n        var div = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_html_div_preview' : '_html_div')\n        });\n        var htmlLayer = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_preview' : '_htmlLayer'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n            'class': 'e-html-layer'\n        });\n        var htmlLayerDiv = createHtmlElement('div', {\n            'id': symbol.id + (isPreview ? '_htmlLayer_div_preview' : '_htmlLayer_div'),\n            'style': 'width:' + Math.ceil(width + 1) + 'px;' +\n                'height:' + Math.ceil(height + 1) + 'px;position:absolute',\n        });\n        htmlLayer.appendChild(htmlLayerDiv);\n        div.appendChild(htmlLayer);\n        canvas = CanvasRenderer.createCanvas(symbol.id, Math.ceil((symbol.wrapper.actualSize.width + symbol.style.strokeWidth) * 2) + 1, Math.ceil((symbol.wrapper.actualSize.height + symbol.style.strokeWidth) * 2) + 1);\n        container.appendChild(canvas);\n        canvas.getContext('2d').setTransform(2, 0, 0, 2, 0, 0);\n        div.appendChild(canvas);\n        container.appendChild(div);\n        this.diagramRenderer.renderElement(symbol.wrapper.children[0].children[0], canvas, htmlLayer);\n        return div;\n    };\n    SymbolPalette.prototype.getSymbolSize = function (symbol, symbolInfo) {\n        var width = symbol.wrapper.actualSize.width;\n        var height = symbol.wrapper.actualSize.height;\n        if (!this.symbolWidth && !this.symbolHeight) {\n            width += this.symbolMargin.left + this.symbolMargin.right + symbol.style.strokeWidth;\n            height += this.symbolMargin.top + this.symbolMargin.bottom + symbol.style.strokeWidth;\n        }\n        else {\n            width = this.symbolWidth;\n            height = Math.max(this.symbolHeight, height);\n        }\n        return new Size(width, height);\n    };\n    //end region - rendering symbols\n    //region event handlers\n    SymbolPalette.prototype.getMousePosition = function (e) {\n        var offsetY;\n        var offsetX;\n        var touchArg;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            var pageY = touchArg.changedTouches[0].clientY;\n            var pageX = touchArg.changedTouches[0].clientX;\n            offsetY = pageY - this.element.offsetTop;\n            offsetX = pageX - this.element.offsetLeft;\n        }\n        else {\n            offsetY = e.clientY - this.element.offsetTop;\n            offsetX = e.clientX - this.element.offsetLeft;\n        }\n        return { x: offsetX, y: offsetY };\n    };\n    SymbolPalette.prototype.mouseMove = function (e, touches) {\n        if (this.highlightedSymbol && (!this.selectedSymbol\n            || this.selectedSymbol.id + '_container' !== this.highlightedSymbol.id)) {\n            this.highlightedSymbol.classList.remove('e-symbol-hover');\n            this.highlightedSymbol.style.backgroundColor = '';\n            this.highlightedSymbol = null;\n        }\n        var id = e.target.id.split('_container')[0];\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-hover');\n            this.highlightedSymbol = container;\n        }\n        e.preventDefault();\n    };\n    SymbolPalette.prototype.mouseUp = function (evt) {\n        if (evt && evt.target) {\n            if (evt.srcElement.id === 'iconSearch') {\n                var element = document.getElementById('iconSearch');\n                if (element.classList.contains('e-clear-searchtext')) {\n                    element.className = 'e-input-group-icon e-search e-icons';\n                    document.getElementById('textEnter').value = '';\n                    this.searchPalette('');\n                }\n            }\n            else {\n                var id = evt.target.id.split('_container')[0];\n                if (id && this.selectedSymbol) {\n                    var args = { oldValue: this.selectedSymbol.id, newValue: id };\n                    var event_1 = 'paletteSelectionChange';\n                    this.trigger(event_1, args);\n                    evt.preventDefault();\n                }\n            }\n        }\n    };\n    SymbolPalette.prototype.keyUp = function (evt) {\n        var _this = this;\n        if (this.enableSearch) {\n            var palette_1 = this;\n            var element = document.getElementById('iconSearch');\n            element.className = 'e-input-group-icon e-clear-searchtext e-icons';\n            if (evt && (evt.key === 'Enter' || evt.keyCode === 13)) {\n                if (evt.target instanceof HTMLInputElement) {\n                    this.searchPalette(evt.target.value);\n                }\n            }\n            else {\n                if (this.timer) {\n                    clearTimeout(this.timer);\n                }\n                this.timer = setTimeout(function () {\n                    if (evt.target instanceof HTMLInputElement) {\n                        palette_1.searchPalette(evt.target.value);\n                        _this.timer = null;\n                    }\n                }, 500);\n            }\n        }\n    };\n    SymbolPalette.prototype.mouseDown = function (evt) {\n        var id = evt.target.id.split('_container')[0];\n        if (this.selectedSymbol) {\n            var oldSymbol = document.getElementById(this.selectedSymbol.id + '_container');\n            if (id !== this.selectedSymbol.id && oldSymbol) {\n                oldSymbol.classList.remove('e-symbol-selected');\n            }\n            var container = document.getElementById(this.selectedSymbol.id + '_container');\n            if (container) {\n                container.style.backgroundColor = '';\n            }\n            this.selectedSymbol = null;\n        }\n        if (this.symbolTable[id]) {\n            var container = document.getElementById(id + '_container');\n            container.classList.add('e-symbol-selected');\n            this.selectedSymbol = this.symbolTable[id];\n            evt.preventDefault();\n        }\n    };\n    SymbolPalette.prototype.keyDown = function (evt) {\n        var palette = this;\n        var helperElement = 'helperElement';\n        var intDestroy = 'intDestroy';\n        if (evt && (evt.key === 'Escape')) {\n            var element = palette.draggable[helperElement];\n            if (element && element.parentNode) {\n                element.parentNode.removeChild(element);\n                palette.draggable[intDestroy]();\n            }\n        }\n    };\n    //end region - event handlers\n    // region - draggable\n    SymbolPalette.prototype.initDraggable = function () {\n        if (this.allowDrag) {\n            var drag = void 0;\n            this.draggable = new Draggable(this.element, {\n                dragTarget: '.e-symbol-draggable',\n                helper: this.helper,\n                dragStart: this.dragStart,\n                preventDefault: false,\n                dragStop: this.dragStop,\n                drag: function (args) {\n                    var target = 'target';\n                    var parent = parentsUntil(args[target], 'e-droppable');\n                    if (parent && parent.classList.contains('e-diagram')) {\n                        var e2eInstance = 'ej2_instances';\n                        parent[e2eInstance][0].droppable.over(args);\n                    }\n                },\n                cursorAt: { left: this.symbolPreview.offset.x, top: this.symbolPreview.offset.y }\n            });\n        }\n    };\n    SymbolPalette.prototype.dragStart = function (e) {\n        var element = this.helper[0];\n        if (element) {\n            element.setAttribute('paletteId', this.element.id);\n        }\n    };\n    SymbolPalette.prototype.dragStop = function (e) {\n        if (!parentsUntil(e.target, 'e-diagram')) {\n            remove(e.helper);\n        }\n    };\n    //end region - draggable \n    //region - helper methods\n    SymbolPalette.prototype.scaleSymbol = function (symbol, symbolContainer, sw, sh, width, height, preview) {\n        if (symbol instanceof Connector) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer.children[0];\n            var point = symbol.scale(sw, sh, width, height, symbolContainer.children[0]);\n            var difX = width / 2 - symbolContainer.children[0].children[0].offsetX + point.x / 2;\n            var difY = height / 2 - symbolContainer.children[0].children[0].offsetY + point.y / 2;\n            for (var _i = 0, _a = symbolContainer.children[0].children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.offsetX += difX;\n                child.offsetY += difY;\n                child.staticSize = false;\n            }\n            symbol.wrapper = wrapper;\n        }\n        else if (symbol.shape instanceof BpmnShape && this.bpmnModule) {\n            var wrapper = symbol.wrapper;\n            symbol.wrapper = symbolContainer;\n            symbolContainer.children[0].width = width;\n            symbolContainer.children[0].height = height;\n            this.bpmnModule.updateBPMN({ width: width, height: height }, symbol, symbol, null);\n            symbol.wrapper = wrapper;\n        }\n        else {\n            if (symbol.children) {\n                var parentNode = symbol.children;\n                var w = 0;\n                var h = 0;\n                if (!preview) {\n                    var node = void 0;\n                    var container = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        container = symbolContainer.children[0].children[i];\n                        if (container) {\n                            if (container.children[0].children) {\n                                this.measureChild(container);\n                            }\n                            node = this.symbolTable[container.id];\n                            container.width = node.width;\n                            container.height = node.height;\n                            container.measure(new Size());\n                            container.arrange(container.children[0].desiredSize);\n                        }\n                    }\n                }\n                w = width / symbolContainer.children[0].desiredSize.width;\n                h = height / symbolContainer.children[0].desiredSize.height;\n                symbolContainer.children[0].measure(new Size());\n                symbolContainer.children[0].arrange(symbolContainer.children[0].desiredSize);\n                if (!preview) {\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, w, h, symbol);\n                            }\n                            this.scaleGroup(children, w, h, symbol);\n                        }\n                    }\n                }\n                if (preview) {\n                    var node = void 0;\n                    var scaleWidth = void 0;\n                    var scaleHeight = void 0;\n                    var children = void 0;\n                    for (var i = 0; i < parentNode.length; i++) {\n                        node = this.symbolTable[parentNode[i]];\n                        scaleWidth = width / symbol.wrapper.children[0].desiredSize.width;\n                        scaleHeight = height / symbol.wrapper.children[0].desiredSize.height;\n                        children = symbolContainer.children[0].children[i];\n                        if (children) {\n                            if (children.children[0].children) {\n                                this.scaleChildren(children, scaleWidth, scaleHeight, symbol, true);\n                            }\n                            this.scaleGroup(children, scaleWidth, scaleHeight, symbol, true);\n                        }\n                    }\n                    symbol.wrapper.children[0].measure(new Size());\n                    symbol.wrapper.children[0].arrange(symbol.wrapper.children[0].desiredSize);\n                }\n            }\n            else {\n                scaleElement(symbolContainer.children[0], sw, sh, symbolContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleChildren = function (container, w, h, symbol, preview) {\n        var child;\n        for (var i = 0; i < container.children.length; i++) {\n            child = container.children[i];\n            if (!child.children[0].children) {\n                this.scaleGroup(child, w, h, symbol, preview);\n            }\n            else {\n                this.scaleChildren(child, w, h, symbol, preview);\n            }\n        }\n    };\n    SymbolPalette.prototype.measureChild = function (container) {\n        var childContainer;\n        var node;\n        for (var i = 0; i < container.children.length; i++) {\n            childContainer = container.children[i];\n            if (!childContainer.children[0].children) {\n                node = this.symbolTable[childContainer.id];\n                childContainer.width = node.width;\n                childContainer.height = node.height;\n                childContainer.measure(new Size());\n                childContainer.arrange(childContainer.children[0].desiredSize);\n            }\n            else {\n                this.measureChild(childContainer);\n            }\n        }\n    };\n    SymbolPalette.prototype.scaleGroup = function (child, w, h, symbol, preview) {\n        child.width = child.width * w;\n        child.height = (child.height * h);\n        child.offsetX = preview ? (child.offsetX * w) - symbol.style.strokeWidth : (child.offsetX * w) + symbol.style.strokeWidth / 2;\n        child.offsetY = preview ? (child.offsetY * h) - symbol.style.strokeWidth : (child.offsetY * h) + symbol.style.strokeWidth / 2;\n        child.measure(new Size());\n        child.arrange(child.children[0].desiredSize);\n    };\n    SymbolPalette.prototype.refreshPalettes = function () {\n        this.accordionElement.items = [];\n        this.updatePalettes();\n        this.accordionElement.dataBind();\n    };\n    SymbolPalette.prototype.updatePalettes = function () {\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symGroup = this.palettes[i];\n            this.initSymbols(symGroup);\n            this.renderPalette(symGroup);\n        }\n    };\n    SymbolPalette.prototype.createTextbox = function () {\n        var searchDiv = createHtmlElement('div', { id: this.element.id + '_search' });\n        searchDiv.setAttribute('style', 'backgroundColor:white;height:30px');\n        searchDiv.className = 'e-input-group';\n        this.element.appendChild(searchDiv);\n        var textBox = createHtmlElement('input', {});\n        textBox.placeholder = 'Search Shapes';\n        textBox.id = 'textEnter';\n        textBox.setAttribute('style', 'width:100%;height:auto');\n        textBox.className = 'e-input';\n        searchDiv.appendChild(textBox);\n        var span = createHtmlElement('span', { id: 'iconSearch', className: 'e-input-group-icon e-search e-icons' });\n        searchDiv.appendChild(span);\n    };\n    SymbolPalette.prototype.searchPalette = function (value) {\n        var symbolGroup = [];\n        var element = document.getElementById('SearchPalette');\n        var paletteDiv;\n        //remove the existing child in palette\n        if (element) {\n            for (var k = element.children.length - 1; k >= 0; k--) {\n                element.removeChild(element.children[k]);\n            }\n        }\n        //add the searched item in array collection\n        for (var i = 0; i < this.palettes.length; i++) {\n            var symbolPaletteGroup = this.palettes[i];\n            for (var j = 0; j < symbolPaletteGroup.symbols.length; j++) {\n                var item = symbolPaletteGroup.symbols[j];\n                if (value !== '' && item.id.toLowerCase().indexOf(value.toLowerCase()) !== -1) {\n                    symbolGroup.push(item);\n                }\n            }\n        }\n        var filterSymbols = getFunction(this.filterSymbols);\n        if (filterSymbols) {\n            symbolGroup = filterSymbols(symbolGroup) || [];\n        }\n        //create a palette collection\n        if (!element) {\n            paletteDiv = this.createSearchPalette(paletteDiv);\n            element = paletteDiv;\n        }\n        //add the symbols into search palette\n        if (symbolGroup.length > 0) {\n            for (var _i = 0, symbolGroup_1 = symbolGroup; _i < symbolGroup_1.length; _i++) {\n                var symbol = symbolGroup_1[_i];\n                this.getSymbolContainer(symbol, element);\n            }\n        }\n        else if (value !== '') {\n            var emptyDiv = createHtmlElement('div', { 'id': 'EmptyDiv', 'style': 'text-align:center;font-style:italic' });\n            emptyDiv.innerHTML = 'No Items To Display';\n            element.appendChild(emptyDiv);\n        }\n        else {\n            var element_1 = document.getElementById('iconSearch');\n            element_1.className = 'e-input-group-icon e-search e-icons';\n            this.accordionElement.removeItem(0);\n        }\n    };\n    SymbolPalette.prototype.createSearchPalette = function (paletteDiv) {\n        paletteDiv = createHtmlElement('div', { 'id': 'SearchPalette', 'style': 'display:none;overflow:auto;' });\n        this.element.appendChild(paletteDiv);\n        var paletteCollection = {\n            header: 'Search Results', expanded: true,\n            content: '#SearchPalette',\n        };\n        this.accordionElement.addItem(paletteCollection, 0);\n        return paletteDiv;\n    };\n    /**\n     * Method to bind events for the symbol palette\n     */\n    SymbolPalette.prototype.wireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.add(this.element, startEvent, this.mouseDown, this);\n        EventHandler.add(this.element, moveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, stopEvent, this.mouseUp, this);\n        EventHandler.add(this.element, keyEvent, this.keyUp, this);\n        EventHandler.add(document, keyDownEvent, this.keyDown, this);\n        // initialize the draggable component\n        this.initDraggable();\n    };\n    /**\n     * Method to unbind events for the symbol palette\n     */\n    SymbolPalette.prototype.unWireEvents = function () {\n        var startEvent = Browser.touchStartEvent;\n        var stopEvent = Browser.touchEndEvent;\n        var moveEvent = Browser.touchMoveEvent;\n        var cancelEvent = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var keyEvent = 'keyup';\n        var keyDownEvent = 'keydown';\n        EventHandler.remove(this.element, startEvent, this.mouseDown);\n        EventHandler.remove(this.element, moveEvent, this.mouseMove);\n        EventHandler.remove(this.element, stopEvent, this.mouseUp);\n        EventHandler.remove(this.element, keyEvent, this.keyUp);\n        EventHandler.remove(document, keyDownEvent, this.keyDown);\n    };\n    __decorate([\n        Property('S')\n    ], SymbolPalette.prototype, \"accessKey\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], SymbolPalette.prototype, \"height\", void 0);\n    __decorate([\n        Collection([], Palette)\n    ], SymbolPalette.prototype, \"palettes\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolInfo\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"filterSymbols\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getSymbolTemplate\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolWidth\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"symbolHeight\", void 0);\n    __decorate([\n        Complex({ left: 10, right: 10, top: 10, bottom: 10 }, Margin)\n    ], SymbolPalette.prototype, \"symbolMargin\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"allowDrag\", void 0);\n    __decorate([\n        Complex({}, SymbolPreview)\n    ], SymbolPalette.prototype, \"symbolPreview\", void 0);\n    __decorate([\n        Property(false)\n    ], SymbolPalette.prototype, \"enableSearch\", void 0);\n    __decorate([\n        Property(true)\n    ], SymbolPalette.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Property('Multiple')\n    ], SymbolPalette.prototype, \"expandMode\", void 0);\n    __decorate([\n        Event()\n    ], SymbolPalette.prototype, \"paletteSelectionChange\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getNodeDefaults\", void 0);\n    __decorate([\n        Property()\n    ], SymbolPalette.prototype, \"getConnectorDefaults\", void 0);\n    return SymbolPalette;\n}(Component));\nexport { SymbolPalette };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { DiagramRenderer } from '../diagram/rendering/renderer';\nimport { CanvasRenderer } from '../diagram/rendering/canvas-renderer';\nimport { Component, Property, Browser, EventHandler, Event } from '@syncfusion/ej2-base';\nimport { setAttributeHtml, setAttributeSvg, createHtmlElement } from '../diagram/utility/dom-util';\nimport { createSvgElement, getNativeLayer, hasClass } from '../diagram/utility/dom-util';\nimport { Rect } from '../diagram/primitives/rect';\nimport { Size } from '../diagram/primitives/size';\nimport { SvgRenderer } from '../diagram/rendering/svg-renderer';\n/**\n * Overview control allows you to see a preview or an overall view of the entire content of a Diagram.\n * This helps you to look at the overall picture of a large Diagram\n * To navigate, pan, or zoom, on a particular position of the page.\n * ```html\n * <div id='diagram'/>\n * <div id=\"overview\"></div>\n * ```\n * ```typescript\n * let overview: Overview;\n * let diagram: Diagram = new Diagram({\n * width:'1000px', height:'500px' });\n * diagram.appendTo('#diagram');\n * let options: OverviewModel = {};\n * options.sourceID = 'diagram';\n * options.width = '250px';\n * options.height = '500px';\n * overview = new Overview(options);\n * overview.appendTo('#overview');\n * ```\n */\nvar Overview = /** @class */ (function (_super) {\n    __extends(Overview, _super);\n    function Overview(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.mode = 'Canvas';\n        /** @private */\n        _this.id = 'overview';\n        _this.actionName = '';\n        _this.startPoint = null;\n        _this.currentPoint = null;\n        _this.prevPoint = null;\n        _this.scale = null;\n        _this.inAction = false;\n        _this.viewPortRatio = 1;\n        _this.horizontalOffset = 0;\n        _this.verticalOffset = 0;\n        _this.model = {};\n        _this.event = true;\n        _this.model = { width: _this.width, height: _this.height };\n        return _this;\n    }\n    /**\n     * Updates the overview control when the objects are changed\n     * @param newProp Lists the new values of the changed properties\n     * @param oldProp Lists the old values of the changed properties\n     */\n    Overview.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var objectArray = [];\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'sourceID':\n                    this.setParent(newProp.sourceID);\n                    break;\n                case 'width':\n                case 'height':\n                    this.renderCanvas();\n                    this.setParent(this.sourceID);\n                    break;\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     */\n    Overview.prototype.getPersistData = function () {\n        var keyEntity = ['loaded'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * Initialize nodes, connectors and renderer\n     */\n    Overview.prototype.preRender = function () {\n        this.element.style.background = 'transparent';\n        this.unWireEvents();\n        this.wireEvents();\n    };\n    Overview.prototype.render = function () {\n        this.diagramRenderer = new DiagramRenderer(this.element.id, new SvgRenderer(), false);\n        this.renderCanvas();\n        this.setParent(this.sourceID);\n    };\n    Overview.prototype.getSizeValue = function (real) {\n        var text;\n        if (real.toString().indexOf('px') > 0 || real.toString().indexOf('%') > 0) {\n            text = real.toString();\n        }\n        else {\n            text = real.toString() + 'px';\n        }\n        return text;\n    };\n    Overview.prototype.renderCanvas = function (options) {\n        var canvas = document.getElementById(this.element.id + '_canvas');\n        if (!canvas) {\n            canvas = createHtmlElement('div', {});\n            this.element.appendChild(canvas);\n        }\n        var attribute = {\n            'id': this.element.id + '_canvas', 'class': 'drawing',\n            'style': 'position:relative; height:' + this.getSizeValue(this.model.height) + '; width:' +\n                this.getSizeValue(this.model.width) +\n                ';style:-ms-touch-action: none;touch-action: none;'\n        };\n        setAttributeHtml(canvas, attribute);\n        this.element.setAttribute('tabindex', String(0));\n        this.element.style.overflow = 'hidden';\n        this.element.style.height = String(this.model.height);\n        this.element.style.width = String(this.model.width);\n        this.canvas = canvas;\n    };\n    Overview.prototype.setParent = function (id) {\n        var element = document.getElementById(id);\n        var instance = 'ej2_instances';\n        if (this.parent) {\n            var oldparent = this.parent;\n            this.parent = null;\n            oldparent.setOverview(null, this.element.id);\n            this.removeDocument(this);\n        }\n        this.parent = this.getDiagram(element, instance);\n        if (this.parent) {\n            this.parent.setOverview(this);\n        }\n    };\n    Overview.prototype.getDiagram = function (element, instance) {\n        var diagram;\n        var n = element[instance].length;\n        for (var i = 0; i < n; i++) {\n            if (hasClass(element[instance][i].element, 'e-diagram')) {\n                diagram = element[instance][i];\n                break;\n            }\n        }\n        return diagram;\n    };\n    Overview.prototype.unWireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var move = Browser.touchMoveEvent;\n        var evnt;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        var stop = Browser.touchEndEvent;\n        EventHandler.remove(this.element, start, this.mouseDown);\n        EventHandler.remove(this.element, move, this.mouseMove);\n        EventHandler.remove(this.element, stop, this.mouseUp);\n        EventHandler.remove(this.element, cancel, this.documentMouseUp);\n        EventHandler.remove(window, 'resize', this.windowResize);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.remove(container, 'scroll', this.scrolled);\n        }\n    };\n    Overview.prototype.wireEvents = function () {\n        var start = Browser.touchStartEvent;\n        var stop = Browser.touchEndEvent;\n        var move = Browser.touchMoveEvent;\n        var cancel = Browser.isPointer ? 'pointerleave' : 'mouseleave';\n        var isIE11Pointer = Browser.isPointer;\n        var wheelEvent = Browser.info.name === 'mozilla' ?\n            (isIE11Pointer ? 'mousewheel' : 'DOMMouseScroll') : 'mousewheel';\n        EventHandler.add(this.element, start, this.mouseDown, this);\n        EventHandler.add(this.element, move, this.mouseMove, this);\n        EventHandler.add(this.element, stop, this.mouseUp, this);\n        EventHandler.add(this.element, cancel, this.documentMouseUp, this);\n        EventHandler.add(window, 'resize', this.windowResize, this);\n        var container = document.getElementById(this.sourceID + 'content');\n        if (container) {\n            EventHandler.add(container, 'scroll', this.scrolled, this);\n        }\n    };\n    /**\n     * @private\n     */\n    /**\n     * @private\n     */\n    Overview.prototype.renderDocument = function (view) {\n        view.canvas = this.canvas;\n        var g = document.getElementById(this.canvas.id + '_svg');\n        if (g) {\n            g.parentNode.removeChild(g);\n        }\n        var attr = {\n            id: this.canvas.id + '_svg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'class': 'overview_svg'\n        };\n        var svg = createSvgElement('svg', attr);\n        this.svg = svg;\n        view.svg = svg;\n        view.canvas.appendChild(svg);\n        var ovw = document.getElementById(this.element.id);\n        var element = ovw;\n        var eWidth = element.clientWidth;\n        var eHeight = element.clientHeight;\n        var bRect = element.getBoundingClientRect();\n        // Check for the window resize\n        var screenX = (window.screenX < 0) ? window.screenX * -1 : window.screenX;\n        var screenY = (window.screenY < 0) ? window.screenY * -1 : window.screenY;\n        if (eWidth === 0) {\n            eWidth = Math.floor(((window.innerWidth - screenX) - Math.floor(bRect.left)));\n        }\n        if (eHeight === 0) {\n            eHeight = Math.floor(((window.innerHeight - screenY) - Math.floor(bRect.top)));\n        }\n        svg.setAttribute('width', String(eWidth));\n        svg.setAttribute('height', String(eHeight));\n        this.model.width = eWidth;\n        this.model.height = eHeight;\n        var attributes;\n        if (!view.diagramLayerDiv) {\n            view.diagramLayerDiv = createHtmlElement('div', {});\n            var container = document.getElementById(this.element.id);\n            view.diagramLayer = CanvasRenderer.createCanvas(this.element.id + '_diagramLayer', this.model.width, this.model.height);\n            view.diagramLayer.setAttribute('style', 'position:absolute; left:0px;  top:0px ');\n            view.diagramLayerDiv.appendChild(view.diagramLayer);\n            view.canvas.appendChild(view.diagramLayerDiv);\n        }\n        attributes = {\n            'id': this.element.id + '_diagramLayer_div',\n            'style': 'width:' + this.model.width + 'px; height:' + this.model.height + 'px;position:absolute;top:0px;left:0px'\n        };\n        setAttributeHtml(view.diagramLayerDiv, attributes);\n        this.renderHtmlLayer(view.canvas);\n        this.renderNativeLayer(view.canvas, view);\n        this.addOverviewRectPanel(view);\n    };\n    /** @private */\n    Overview.prototype.removeDocument = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_svg');\n        this.canvas.removeChild(svg);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        this.canvas.removeChild(htmlLayer);\n        var diagramLayer = document.getElementById(this.element.id + '_diagramLayer_div');\n        this.canvas.removeChild(diagramLayer);\n        view.diagramLayerDiv = null;\n        view.diagramLayer = null;\n    };\n    Overview.prototype.renderHtmlLayer = function (canvas) {\n        var htmlLayer = createHtmlElement('div', {\n            'id': this.element.id + '_htmlLayer', 'class': 'e-html-layer',\n            'style': 'pointer-events:none;position:absolute;top:0px;left:0px;'\n        });\n        var options = {\n            'id': this.element.id + '_htmlLayer_div',\n            'style': 'position:absolute;top:0px;left:0px;'\n        };\n        var htmlDiv = createHtmlElement('div', options);\n        htmlLayer.appendChild(htmlDiv);\n        canvas.appendChild(htmlLayer);\n        return htmlLayer;\n    };\n    Overview.prototype.renderNativeLayer = function (canvas, view) {\n        var nativeLayerSvg = this.parent.createSvg(this.element.id + '_nativeLayer_svg', this.model.width, this.model.height);\n        var nativeLayer = createSvgElement('g', { 'id': this.element.id + '_nativeLayer' });\n        nativeLayerSvg.appendChild(nativeLayer);\n        view.diagramLayerDiv.appendChild(nativeLayerSvg);\n        setAttributeSvg(nativeLayerSvg, { 'class': 'e-native-layer' });\n    };\n    Overview.prototype.addOverviewRectPanel = function (view) {\n        var svg = document.getElementById(this.canvas.id + '_overviewsvg');\n        if (svg) {\n            svg.parentNode.removeChild(svg);\n        }\n        var attr = ({\n            id: this.canvas.id + '_overviewsvg',\n            version: '1.1',\n            xlink: 'http://www.w3.org/1999/xlink',\n            'style': 'position:absolute;left:0px;top:0px; aria-label:Specifies overview',\n            width: this.model.width,\n            height: this.model.height\n        });\n        svg = createSvgElement('svg', attr);\n        view.canvas.appendChild(svg);\n        var ovw = createSvgElement('g', { 'id': this.element.id + '_overviewlayer', 'style': 'pointer-events:none' });\n        svg.appendChild(ovw);\n        var rect = createSvgElement('rect', {\n            'fill': 'transparent', 'width': '100%', 'height': '100%', 'class': 'overviewbackrect',\n            'id': this.canvas.id + 'overviewbackrect'\n        });\n        rect.setAttribute('style', ' pointer-events: none; ');\n        ovw.appendChild(rect);\n        var svgDocument = (ovw);\n        var g = createSvgElement('g', { 'id': this.canvas.id + 'overviewhandle', 'style': 'pointer-events:all' });\n        ovw.appendChild(g);\n        var innerrect = createSvgElement('rect', { 'id': this.canvas.id + 'overviewrect', 'fill': 'transparent' });\n        g.appendChild(innerrect);\n        this.renderOverviewCorner('left', g);\n        this.renderOverviewCorner('right', g);\n        this.renderOverviewCorner('top', g);\n        this.renderOverviewCorner('bottom', g);\n        this.renderOverviewCorner('topleft', g);\n        this.renderOverviewCorner('topright', g);\n        this.renderOverviewCorner('bottomleft', g);\n        this.renderOverviewCorner('bottomright', g);\n    };\n    Overview.prototype.renderOverviewCorner = function (name, parent) {\n        var svg = this.svg;\n        var shape;\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            shape = 'rect';\n        }\n        else {\n            shape = 'circle';\n        }\n        var innerrect = createSvgElement(shape, { 'id': this.canvas.id + 'visible' + name });\n        parent.appendChild(innerrect);\n        var transrect = createSvgElement(shape, {\n            'id': this.canvas.id + name, 'class': 'overviewresizer', 'fill': 'transparent'\n        });\n        parent.appendChild(transrect);\n    };\n    Overview.prototype.updateOverviewRectangle = function () {\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var size = new Size();\n        size.width = 0;\n        size.height = 0;\n        var x = 0;\n        var y = 0;\n        var w;\n        var h;\n        switch (this.resizeDirection) {\n            case 'left':\n                size.width -= difx;\n                size.height -= difx / this.viewPortRatio;\n                x = difx;\n                y = difx / this.viewPortRatio;\n                y /= 2;\n                break;\n            case 'right':\n                size.width += difx;\n                size.height += difx / this.viewPortRatio;\n                y = difx / this.viewPortRatio;\n                y /= -2;\n                break;\n            case 'top':\n                size.height -= dify;\n                size.width -= dify * this.viewPortRatio;\n                y = dify;\n                x = dify * this.viewPortRatio;\n                x /= 2;\n                break;\n            case 'bottom':\n                size.height += dify;\n                size.width += dify * this.viewPortRatio;\n                x = dify * this.viewPortRatio;\n                x /= -2;\n                break;\n            case 'topleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width -= difx;\n                size.height -= dify;\n                x = difx;\n                y = dify;\n                break;\n            case 'topright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -(difx / this.viewPortRatio);\n                }\n                y = dify;\n                size.width += difx;\n                size.height -= dify;\n                break;\n            case 'bottomleft':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = -dify * this.viewPortRatio;\n                }\n                else {\n                    dify = -difx / this.viewPortRatio;\n                }\n                x = difx;\n                size.width -= difx;\n                size.height += dify;\n                break;\n            case 'bottomright':\n                if (Math.abs(dify) > Math.abs(difx)) {\n                    difx = dify * this.viewPortRatio;\n                }\n                else {\n                    dify = difx / this.viewPortRatio;\n                }\n                size.width += difx;\n                size.height += dify;\n                break;\n        }\n        this.updateHelper(x, y, size, w, h);\n    };\n    Overview.prototype.updateHelper = function (difx, dify, size, width, height) {\n        var x;\n        var y;\n        var bounds;\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var rect = svg.getElementById('helper');\n        if (size) {\n            bounds = rect.getBBox();\n            x = bounds.x + difx;\n            y = bounds.y + dify;\n            width = bounds.width + size.width;\n            height = bounds.height + size.height;\n        }\n        else {\n            var difx_1;\n            if (this.currentPoint.x > this.startPoint.x) {\n                difx_1 = this.currentPoint.x - this.prevPoint.x;\n            }\n            else {\n                difx_1 = this.prevPoint.x - this.currentPoint.x;\n            }\n            var dify_1;\n            if (this.currentPoint.y > this.startPoint.y) {\n                dify_1 = this.currentPoint.y - this.prevPoint.y;\n            }\n            else {\n                dify_1 = this.prevPoint.y - this.currentPoint.y;\n            }\n            var w = void 0;\n            var h = void 0;\n            if (Math.abs(dify_1) > Math.abs(difx_1)) {\n                difx_1 = this.viewPortRatio * dify_1;\n                h = true;\n                w = false;\n            }\n            else {\n                dify_1 = difx_1 / this.viewPortRatio;\n                w = true;\n                h = false;\n            }\n            bounds = rect.getBBox();\n            x = ((this.startPoint.x > this.currentPoint.x) ?\n                bounds.x - difx_1 : bounds.x);\n            y = ((this.startPoint.y > this.currentPoint.y) ? bounds.y - dify_1 : bounds.y);\n            width = bounds.width + difx_1;\n            height = bounds.height + dify_1;\n        }\n        setAttributeSvg(this.helper, {\n            'id': this.helper.id, 'x': x, 'y': y,\n            'width': Math.max(0, width), 'height': Math.max(0, height)\n        });\n    };\n    Overview.prototype.updateOverviewrect = function (x, y, width, height) {\n        var rect = document.getElementById(this.canvas.id + 'overviewrect');\n        var attr = { x: x, y: y, width: Math.max(1, width), height: Math.max(1, height) };\n        setAttributeHtml(rect, attr);\n        this.updateOverviewCorner('top', x + 8, y - 2, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('bottom', x + 8, y + height, Math.max(0, width - 16), 2);\n        this.updateOverviewCorner('left', x - 2, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('right', x + width, y + 8, 2, Math.max(0, height - 16));\n        this.updateOverviewCorner('topleft', x, y, 5, 5);\n        this.updateOverviewCorner('topright', x + width, y, 5, 5);\n        this.updateOverviewCorner('bottomleft', x, y + height, 5, 5);\n        this.updateOverviewCorner('bottomright', x + width, y + height, 5, 5);\n    };\n    Overview.prototype.updateOverviewCorner = function (name, x, y, width, height) {\n        var attr;\n        var transattr;\n        var rectname = 'visible' + name;\n        var rect = document.getElementById(this.canvas.id + rectname);\n        if (name === 'top' || name === 'bottom' || name === 'right' || name === 'left') {\n            attr = { x: x, y: y, width: width, height: height, fill: '#ED1C24' };\n            transattr = { x: x - 2, y: y - 2, width: width === 2 ? 4 : width, height: height === 2 ? 4 : height };\n        }\n        else {\n            attr = { cx: x, cy: y, 'r': 4, fill: '#ED1C24' };\n            transattr = { cx: x, cy: y, 'r': 6, fill: 'transparent' };\n        }\n        setAttributeHtml(rect, attr);\n        var transrect = document.getElementById(this.canvas.id + name);\n        setAttributeHtml(transrect, transattr);\n    };\n    Overview.prototype.translateOverviewRectangle = function () {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var difx = this.currentPoint.x - this.prevPoint.x;\n        var dify = this.currentPoint.y - this.prevPoint.y;\n        var viewPort;\n        var zoom = Math.min(this.parent.scroller.viewPortWidth / offwidth, this.parent.scroller.viewPortHeight / offheight);\n        var svg = this.element.getElementsByTagName('svg')[2];\n        var panel = svg.getElementById(this.canvas.id\n            + 'overviewrect');\n        var bounds = panel.getBBox();\n        var x = bounds.x + difx;\n        var y = bounds.y + dify;\n        var width = bounds.width;\n        var height = bounds.height;\n        this.updateOverviewrect(x, y, width, height);\n        this.updateParentView(this.parent.scroller.currentZoom, x, y, width, height, null);\n    };\n    Overview.prototype.renderOverviewRect = function (x, y, width, height) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var viewPort;\n        var viewwidth = (width / offwidth) * this.contentWidth;\n        var viewheight = (height / offheight) * this.contentHeight;\n        var zoom = Math.max(this.parent.scroller.viewPortWidth / viewwidth, this.parent.scroller.viewPortHeight / viewheight);\n        if (zoom >= 0.25 && zoom <= 30) {\n            var point = { x: 0, y: 0 };\n            this.updateParentView(zoom, x, y, width, height, point);\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            if (this.helper) {\n                var panel = this.element.getElementsByTagName('rect')[10];\n                var svgRect = panel.getBBox();\n                bounds.x = svgRect.x;\n                bounds.y = svgRect.y;\n            }\n            this.updateOverviewrect(bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.scrollOverviewRect = function (hoffset, voffset, currentZoom, scaled) {\n        if (!(this.actionName) || scaled) {\n            var offwidth = Number(this.model.width);\n            var offheight = Number(this.model.height);\n            var scale = Math.min(this.contentWidth / offwidth, this.contentHeight / offheight);\n            var bounds = new Rect();\n            var x = bounds.x = (hoffset / currentZoom) / scale;\n            var y = bounds.y = (voffset / currentZoom) / scale;\n            var viewPort = void 0;\n            var width = bounds.width = (this.parent.scroller.viewPortWidth / currentZoom) / scale;\n            var height = bounds.height = (this.parent.scroller.viewPortHeight / currentZoom) / scale;\n            var ratio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n            if (scaled) {\n                var rect = new Rect();\n                rect.x = x;\n                rect.y = y;\n                rect.width = width;\n                rect.height = height;\n                return rect;\n            }\n            this.updateOverviewrect(-x, -y, width, height);\n        }\n        return null;\n    };\n    Overview.prototype.updateParentView = function (zoom, x, y, width, height, focusPoint) {\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scalex = this.contentWidth / offwidth;\n        var scaley = this.contentHeight / offheight;\n        var hoffset = x * scalex * zoom;\n        var voffset = y * scaley * zoom;\n        var delx;\n        var dely;\n        var bounds = this.parent.scroller.getPageBounds();\n        if (zoom !== 1 || this.actionName === 'pan') {\n            delx = -hoffset - this.parent.scroller.horizontalOffset;\n            dely = -voffset - this.parent.scroller.verticalOffset;\n        }\n        if (this.actionName === 'scale' || this.actionName === 'draw') {\n            this.parent.scroller.zoom(zoom / this.parent.scroller.currentZoom, delx, dely, focusPoint);\n        }\n        else {\n            this.parent.pan(delx, dely, focusPoint);\n        }\n    };\n    /** @private */\n    Overview.prototype.updateView = function (view) {\n        var width;\n        var height;\n        var bounds = this.parent.scroller.getPageBounds();\n        width = bounds.width;\n        height = bounds.height;\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        var scale;\n        var w = Math.max(width, this.parent.scroller.viewPortWidth);\n        var h = Math.max(height, this.parent.scroller.viewPortHeight);\n        this.contentWidth = w = Math.max(w, (offwidth / offheight) * h);\n        this.contentHeight = h = Math.max(h, (offheight / offwidth) * w);\n        scale = Math.min(offwidth / w, offheight / h);\n        var htmlLayer = document.getElementById(this.element.id + '_htmlLayer');\n        htmlLayer.style.webkitTransform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        htmlLayer.style.transform = 'scale(' + scale + ') translate(' + -bounds.x + 'px,' + (-bounds.y) + 'px)';\n        var ovw = document.getElementById(this.element.id + '_overviewlayer');\n        ovw.setAttribute('transform', 'translate(' + (-bounds.x * scale) + ',' + (-bounds.y * scale) + ')');\n        this.horizontalOffset = bounds.x * scale;\n        this.verticalOffset = bounds.y * scale;\n        var canvas = document.getElementById(this.element.id + '_diagramLayer');\n        var nativeLayer = getNativeLayer(this.element.id);\n        var context = canvas.getContext('2d');\n        var widthratio = (Number(this.model.width) / this.contentWidth);\n        var heightratio = (Number(this.model.height) / this.contentHeight);\n        widthratio = Math.min(widthratio, heightratio);\n        nativeLayer.setAttribute('transform', 'translate('\n            + (0) + ',' + (0) + '),scale('\n            + widthratio + ')');\n        context.setTransform(widthratio, 0, 0, widthratio, 0, 0);\n        context.fillStyle = 'red';\n        this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom);\n    };\n    // region - Event Handlers\n    Overview.prototype.scrolled = function (evt) {\n        if (this.event) {\n            var bounds = this.scrollOverviewRect(this.parent.scroller.horizontalOffset, this.parent.scroller.verticalOffset, this.parent.scroller.currentZoom, true);\n            this.updateOverviewrect(-bounds.x, -bounds.y, bounds.width, bounds.height);\n        }\n    };\n    Overview.prototype.updateCursor = function (evt) {\n        if (hasClass(evt.target, ('overviewresizer'))) {\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.canvas.style.cursor = 'w-resize';\n                    break;\n                case this.canvas.id + 'right':\n                    this.canvas.style.cursor = 'e-resize';\n                    break;\n                case this.canvas.id + 'top':\n                    this.canvas.style.cursor = 'n-resize';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.canvas.style.cursor = 's-resize';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.canvas.style.cursor = 'nw-resize';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.canvas.style.cursor = 'ne-resize';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.canvas.style.cursor = 'sw-resize';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.canvas.style.cursor = 'se-resize';\n                    break;\n            }\n        }\n        else {\n            this.canvas.style.cursor = 'default';\n        }\n    };\n    Overview.prototype.mouseMove = function (evt) {\n        this.event = false;\n        this.updateCursor(evt);\n        this.currentPoint = this.mousePosition(evt);\n        if (this.actionName) {\n            switch (this.actionName) {\n                case 'draw':\n                    if (!this.inAction && (this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    if (this.inAction) {\n                        this.updateHelper();\n                    }\n                    break;\n                case 'scale':\n                    if (!this.inAction) {\n                        this.initHelper();\n                        this.inAction = true;\n                    }\n                    this.updateOverviewRectangle();\n                    break;\n                case 'pan':\n                    if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y === this.currentPoint.y) || this.inAction) {\n                        this.inAction = true;\n                        this.translateOverviewRectangle();\n                    }\n                    break;\n            }\n        }\n        this.prevPoint = this.currentPoint;\n    };\n    Overview.prototype.documentMouseUp = function (evt) {\n        this.inAction = false;\n        this.actionName = '';\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.windowResize = function (evt) {\n        var _this = this;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        this.resizeTo = setTimeout(function () {\n            var element = document.getElementById(_this.element.id);\n            var bRect = element.getBoundingClientRect();\n            _this.model.width = bRect.width;\n            _this.model.height = bRect.height;\n            _this.renderCanvas();\n            _this.setParent(_this.sourceID);\n        }, 10);\n        return false;\n    };\n    /** @private */\n    Overview.prototype.mouseDown = function (evt) {\n        if (evt.target.id === this.canvas.id + '_overviewsvg') {\n            this.actionName = 'draw';\n        }\n        if (evt.target.id === this.canvas.id + 'overviewrect') {\n            this.actionName = 'pan';\n        }\n        if (hasClass(evt.target, 'overviewresizer')) {\n            this.actionName = 'scale';\n            switch (evt.target.id) {\n                case this.canvas.id + 'left':\n                    this.resizeDirection = 'left';\n                    break;\n                case this.canvas.id + 'right':\n                    this.resizeDirection = 'right';\n                    break;\n                case this.canvas.id + 'top':\n                    this.resizeDirection = 'top';\n                    break;\n                case this.canvas.id + 'bottom':\n                    this.resizeDirection = 'bottom';\n                    break;\n                case this.canvas.id + 'topleft':\n                    this.resizeDirection = 'topleft';\n                    break;\n                case this.canvas.id + 'topright':\n                    this.resizeDirection = 'topright';\n                    break;\n                case this.canvas.id + 'bottomleft':\n                    this.resizeDirection = 'bottomleft';\n                    break;\n                case this.canvas.id + 'bottomright':\n                    this.resizeDirection = 'bottomright';\n                    break;\n            }\n        }\n        this.startPoint = this.prevPoint = this.mousePosition(evt);\n        this.viewPortRatio = this.parent.scroller.viewPortWidth / this.parent.scroller.viewPortHeight;\n        var overViewHandle = document.getElementById(this.canvas.id + 'overviewhandle');\n        overViewHandle.style.pointerEvents = 'none';\n    };\n    Overview.prototype.mouseUp = function (evt) {\n        this.currentPoint = this.mousePosition(evt);\n        var offwidth = Number(this.model.width);\n        var offheight = Number(this.model.height);\n        if (this.actionName) {\n            if ((this.startPoint.x !== this.currentPoint.x || this.startPoint.y !== this.currentPoint.y)) {\n                if (this.actionName === 'pan') {\n                    var i = 0;\n                }\n                else {\n                    if (this.helper) {\n                        var bounds = (this.element.getElementsByTagName('rect')[10]).getBBox();\n                        this.resizeDirection = this.resizeDirection || '';\n                        var x = bounds.x;\n                        var y = bounds.y;\n                        var width = bounds.width;\n                        var height = bounds.height;\n                        var adjust = this.resizeDirection === 'topleft' || this.resizeDirection === 'topright' ||\n                            this.resizeDirection === 'bottomleft' || this.resizeDirection === 'bottomright';\n                        this.renderOverviewRect(x, y, width, height);\n                    }\n                }\n            }\n            else {\n                if (evt.target.id === this.canvas.id + '_overviewsvg' || evt.target.id === 'helper') {\n                    var svg = this.element.getElementsByTagName('svg')[2];\n                    var g = svg.getElementById(this.canvas.id\n                        + 'overviewrect');\n                    var bounds = g.getBBox();\n                    var width = bounds.width;\n                    var height = bounds.height;\n                    this.inAction = true;\n                    this.actionName = 'pan';\n                    this.renderOverviewRect(this.currentPoint.x - width / 2, this.currentPoint.y - height / 2, width, height);\n                    this.inAction = false;\n                }\n            }\n        }\n        if (this.helper) {\n            this.helper.parentNode.removeChild(this.helper);\n            this.helper = null;\n        }\n        this.actionName = '';\n        this.startPoint = null;\n        this.currentPoint = null;\n        this.prevPoint = null;\n        this.helper = null;\n        this.viewPortRatio = 1;\n        this.resizeDirection = '';\n        this.inAction = false;\n        this.event = true;\n        document.getElementById(this.canvas.id + 'overviewhandle').style.pointerEvents = 'all';\n    };\n    Overview.prototype.initHelper = function () {\n        var g = this.element.getElementsByTagName('svg')[2];\n        var scale = this.parent.scroller.currentZoom;\n        var x = this.startPoint.x;\n        var y = this.startPoint.y;\n        var width = 1;\n        var height = 1;\n        if (this.actionName === 'scale') {\n            var rect = g.\n                getElementById(this.canvas.id + 'overviewrect');\n            var bounds = rect.getBBox();\n            x = bounds.x;\n            y = bounds.y;\n            width = bounds.width;\n            height = bounds.height;\n        }\n        var selectionRect = createSvgElement('rect', {\n            'id': 'helper', x: x, y: y, width: width, height: height,\n            'fill': 'transparent', 'stroke': 'gray', 'stroke-dasharray': '2 2', 'shape-rendering': 'crispEdges'\n        });\n        var overviewLayer = g.getElementById(this.element.id + '_overviewlayer');\n        overviewLayer.appendChild(selectionRect);\n        this.helper = selectionRect;\n    };\n    Overview.prototype.mousePosition = function (evt) {\n        var touchArg;\n        var offsetX;\n        var offsetY;\n        if (evt.type.indexOf('touch') !== -1) {\n            touchArg = evt;\n            var pageX = touchArg.changedTouches[0].clientX;\n            var pageY = touchArg.changedTouches[0].clientY;\n            offsetX = pageX - this.element.offsetLeft;\n            offsetY = pageY - this.element.offsetTop;\n        }\n        else {\n            offsetX = evt.clientX;\n            offsetY = evt.clientY;\n        }\n        var boundingRect = this.element.getBoundingClientRect();\n        offsetX = offsetX - boundingRect.left;\n        offsetY = offsetY - boundingRect.top;\n        return { x: offsetX + this.horizontalOffset, y: offsetY + this.verticalOffset };\n    };\n    // end region - Event handlers\n    /**\n     * To destroy the Overview\n     * @return {void}\n     * @private\n     */\n    Overview.prototype.destroy = function () {\n        this.unWireEvents();\n        this.notify('destroy', {});\n        _super.prototype.destroy.call(this);\n        if (document.getElementById(this.element.id)) {\n            this.element.classList.remove('e-overview');\n            var content = document.getElementById(this.element.id + '_canvas');\n            if (content) {\n                this.element.removeChild(content);\n            }\n        }\n        this.parent.views.splice(this.parent.views.indexOf(this.element.id), 1);\n        this.diagramLayerDiv = null;\n        this.canvas = null;\n        this.parent = null;\n    };\n    /**\n     * Get module name.\n     */\n    Overview.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Overview';\n    };\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"width\", void 0);\n    __decorate([\n        Property('100%')\n    ], Overview.prototype, \"height\", void 0);\n    __decorate([\n        Property('')\n    ], Overview.prototype, \"sourceID\", void 0);\n    __decorate([\n        Event()\n    ], Overview.prototype, \"created\", void 0);\n    return Overview;\n}(Component));\nexport { Overview };\n"],"names":["processPathData","data","j","collection","arrayCollection","parsePathData","length","i","ob","char","toLowerCase","push","command","x","y","x1","y1","x2","y2","r1","r2","angle","largeArc","sweep","tokenizer","current","commands","match","lastIndex","isExponential","exec","substring","Number","getRectanglePath","cornerRadius","height","width","point2","next","path","points","corners","corner","getPolygonPath","seg","pathSegmentCollection","x0","y0","segments","prev","ctrl","cpt2","newSeg","transformPath","arr","sX","sY","s","bX","bY","iX","iY","undefined","scalePathData","toFixed","updatedSegment","getPathString","segment","obj","isScale","val","scaleFactor","oldOffset","newOffset","splitArrayCollection","test","getNewString","getString","string","cmd","ang","l","identityMatrix","Matrix","MatrixTypes","Identity","transformPointByMatrix","matrix","point","pt","multiplyPoint","Math","round","transformPointsByMatrix","transformedPoints","_i","points_1","rotateMatrix","centerX","centerY","multiplyMatrix","createRotationRadians","scaleMatrix","scaleX","scaleY","createScaling","translateMatrix","offsetX","offsetY","type","Translation","setMatrix","Unknown","result","Scaling","num","sin","num2","cos","m11","m22","m21","m12","matrix1","matrix2","type2","assignMatrix","mat","getBasicShape","shape","basicShapes","toString","getPortShape","portShapes","getDecoratorShape","decorator","pathData","decoratorShapes","getIconShape","icon","getFlowShape","flowShapes","initTooltip","diagram","tooltipOption","Tooltip","updateTooltipContent","tooltip","beforeCollision","beforeOpen","cssClass","opensOn","appendTo","element","id","close","args","this","content","style","display","collidedPosition","position","updateTooltip","node","tooltipObject","showTipPointer","animation","effect","findConnectorPoints","layoutOrientation","intermeditatePoints","sourcePoint","sourceWrapper","center","getSourcePoint","terminateConnection","targetPoint","setLineEndPoint","srcPoint","sourcePortWrapper","srcPort","srcNode","getPortDirection","cornersPointsBeforeRotation","bounds","sourceID","targetWrapper","sPoint","tPoint","getIntersection","getDirection","source","target","direction","tarPoint","sourceCorners","targetCorners","sourceNode","targetNode","sourcePort","targetPort","targetPortWrapper","srcCorner","srcDir","margin","left","right","bottom","top","tarCorner","tarDir","port","tarPortPt","abs","equals","containsPoint","topCenter","defaultOrthoConnection","checkLastSegmentasTerminal","connectToOneEnd","intermeditatePointsForStraight","findPointToPointOrtho","extra","adjustSegmentLength","getOppositeDirection","Point","orthoConnection3Segment","updateSegmentPoints","segPoint","addLineSegment","pointToPoint","portdirection","length_1","findSourceDirection","orthoConnection2Segment","pointToNode","findDirection","addPoints","refPoint","splice","findSegmentDirection","portDir","update","pointToPort","removeSegment","seg_1","checkConsectiveSegmentAsSame","lastSegment","checkSourcePointInTarget","checkPreviousSegment","checkPortdirection","returnIntermeditatePoints","pointsFromNodeToPoint","tPoints","connector","actualSegment","actualLastPoint","distancePoints","fixedPoint","nodeMargin","nodeConnectingPoint","nodeDirection","findPoint","target_1","segmentPoint","sourcePadding","addPaddingToConnector","targetPadding","isTarget","padding","paddingPort","rect","Rect","actualSize","segmentPoints","topLeft","topRight","bottomRight","bottomLeft","thisSegment","getIntersectionPoints","checkSourceAndTargetIntersect","sourceSegment","createSegmentsCollection","targetSegment","srcSegment","intersect3","enabled","getPoints","createLineSegment","sPt","tPt","swapBounds","object","outerBounds","rectBounds","rotateAngle","parentTransform","middleLeft","bottomCenter","middleRight","ele","sourceEle","targetEle","tarPort","srcCor","tarCor","srcBounds","tarBounds","isInterSect","first","isEmptyPoint","vector1","distance","value","max","transform","vector2","findIntermeditatePoints","OrthogonalSegment","findOrthoSegments","dir","BezierSegment","StraightSegment","nodeOrPortToNode","length_3","lastPoint","nodeCorners","top_1","shortes","MAX_VALUE","swap","getSwapping","swapPoints","getRightToLeftSegmentCount","getRightToRightSegmentCount","getRightToTopSegmentCount","getRightToBottomSegmentCount","getBottomToTopSegmentCount","getBottomToBottomSegmentCount","getBottomToLeftSegmentCount","getLeftToLeftSegmentCount","getLeftToTopSegmentCount","getTopToTopSegmentCount","addOrthoSegments","findAngle","e","r","re","findLength","es","asin","PI","cor","endPoint","reverse","isTar","child","wrapper","sPt1","rotatePoint","tPt1","angle_2","angle_3","PathElement","split","pts","minimal","min","intersection","intersectSegment","isNaN","intersect","dist","segment1","segment2","a1","a2","b1","b2","c1","c2","r3","r4","denom","offset","x3","y3","x4","y4","sameSign","a","b","diffY","NoOfSegments","One","Three","Five","sourceObj","targetObj","diffX","Two","Four","difX","segLength","src","tar","orthoConnection4Segment","orthoConnection5Segment","point1","allow","segmentValue","temp","diffx","diffy","sLeft","sRight","sBottom","sTop","tLeft","tRight","tBottom","tTop","prevDir","interPt","getLeftLength","getRightLength","getTopLength","getBottomLength","getOrtho3Seg","orientation","point3","gap","preDir","closeEdge","boundsValue","one","two","three","four","fourty5","one35","two25","three15","getOuterBounds","children","sourceDecorator","uniteRect","targetDecorator","excludeBounds","part","isEmptyVector","getBezierPoints","getBezierBounds","startPoint","controlPoint1","controlPoint2","minx","miny","maxx","maxy","t","bezierPoints","canSelect","ShapeAnnotation","PathAnnotation","constraints","AnnotationConstraints","Select","Connector","ConnectorConstraints","NodeConstraints","canMove","Drag","Selector","canEnablePointerEvents","PointerEvents","canDelete","Delete","canBridge","Bridging","InheritBridging","DiagramConstraints","canDragSourceEnd","DragSourceEnd","canDragTargetEnd","DragTargetEnd","canDragSegmentThumb","DragSegmentThumb","canRotate","Rotate","canShadow","Shadow","canInConnect","Node","InConnect","canPortInConnect","PortConstraints","None","canOutConnect","OutConnect","canPortOutConnect","canResize","returnValue","Resize","ResizeSouthEast","ResizeEast","ResizeNorthEast","ResizeSouth","ResizeNorth","ResizeSouthWest","ResizeWest","ResizeNorthWest","canAllowDrop","AllowDrop","canVitualize","Virtualization","canEnableToolTip","state","InheritTooltip","canSingleSelect","model","tool","DiagramTools","SingleSelect","canMultiSelect","MultipleSelect","canZoomPan","ZoomPan","canContinuousDraw","ContinuousDraw","canDrawOnce","DrawOnce","defaultTool","canZoom","Zoom","canPan","Pan","canUserInteract","UserInteraction","canApiInteract","ApiUpdate","canPanX","PanX","canPanY","PanY","canZoomTextEdit","ZoomTextEdit","canPageEditable","diagramActions","DiagramAction","ToolAction","enableReadOnly","annotation","enumValue","ReadOnly","InheritReadOnly","canDraw","Draw","canDrag","canPreventClearSelection","PreventClearSelection","canDrawThumbs","rendererActions","RendererAction","DrawSelectorBorder","avoidDrawSelector","PreventRenderSelector","getULMClassifierShapes","classifier","textWrap","class","enumeration","interface","container","Default","HideThumbs","fill","strokeColor","strokeWidth","maxWidth","newObj","annotations","name","bold","fontSize","color","textWrapping","verticalAlignment","horizontalAlignment","initObject","nodes","getClassNodes","getClassMembers","borderColor","member","members","addSeparator","memberText","getStyle","randomId","minHeight","isSeparator","attributes","attributeText","text","attribute","scope","methods","argumentText","methodText","method","parameters","stack","lineObject","newStyle","updateCanvasBounds","isBoundsUpdate","connectorList","groupAction","checkParentAsContainer","protectPropertyChange","nameTable","parentId","parentWrapper","parent_1","updateLaneBoundsAfterAddChild","parent_2","shape_1","rowIndex","columns","updateColumnWidth","columnIndex","phaseSize","updatePhaseMaxWidth","updateHeaderMaxWidth","drag","scale","updateRowHeight","select","updateConnectorsProperties","removeChildInContainer","undoObj","cloneObject","clearSelection","removeChildrenInLane","entry","category","undoObject","redoObject","addHistoryEntry","commandHandler","isContainer","endGroupAction","findBounds","isHeader","rows","cells","createHelper","_a","Object","keys","prop","getObjectType","updateDiagramObject","renderContainerHelper","selectedObject","helperObject","selectedItems","connectors","actualObject","minWidth","maxHeight","strokeDashArray","isChild","parentNode","checkChildNodeInContainer","nodePropertyChange","isLane","measure","Size","arrange","desiredSize","prevParentNode","swimlane","canvasId","slice","prevParentId","lanes","lane","deleteChild","addChildToContainer","parent","isUndo","currentSymbol","getObject","indexOf","removeElements","addChild","currentParentId","UndoRedo","swimLane","isUpdateRow","isGroupAction","containerBounds","containerOuterBounds","nodeBounds","grid","size","startGroupAction","swimLaneMeasureAndArrange","checkPhaseOffset","checkLaneSize","considerSwimLanePadding","renderStackHighlighter","isVertical","isUml","isSwimlane","adornerSvg","getAdornerLayerSvg","diagramRenderer","scroller","moveChildInStack","action","sourceParent","targetIndex","sourceIndex","undoElement","initSwimLane","row","index","header","hasHeader","createRow","initGridRow","initGridColumns","setDefinitions","headerDefine","phases","k","phaseDefine","laneCollection","addObjectToGrid","isPhase","canvas","DiagramElement","isCalculateDesiredSize","TextElement","canConsiderBounds","isLaneOrientation","refreshTextElement","columnDefinitions","addObject","indexValue","phaseIndex","rowValue","colValue","phaseObject","laneIndex","laneNode","gridCell","childWrapper","phaseCount","RowDefinition","createColumn","cols","ColumnDefinition","totalHeight","phaseHeight","phaseOffset","totalWidth","getConnectors","isRowUpdate","childNode","edges","conn","rowDefinitions","i_1","inEdges","outEdges","concat","GridPanel","isMeasure","ChangeLaneIndex","startRowIndex","subChild","cell","arrangeChildNodesInSwimLane","rowvalue","columnValue","col","addChildToLane","k_1","updateChildOuterBounds","checkLaneChildrenOffset","findStartLaneIndex","phaseRow","phase","gridRowIndex","connectorPropertyChange","targetID","laneInterChanged","sourceLaneIndex","targetLaneIndex","updateRowIndex","columnSpan","updateColumnIndex","updateSwimLaneObject","helperWidth","helperHeight","objWidth","objHeight","findLaneIndex","laneObj","findPhaseIndex","headerNode","addLane","count","redoObj","orientation_1","Lane","rowDef","addRow","colDef","addColumn","changeType","addChildNodeToNewLane","addPhase","newPhase","phaseNode","previousPhase","nextPhase","laneHeaderSize","phasesCollection","orientation_2","nextCol","addPhase_1","nextRow","addPhase_2","historyManager","currentEntry","isLastPhase","addLastPhase","phaseObj","Phase","fristRow","i_2","addHorizontalPhase","nextPhaseNode","addVerticalPhase","prevPhase","prevOffset","addPhase_3","addPhase_4","addSwimlanePhases","nextCell","prevRow","prevCell","desiredCellWidth","desiredCellHeight","arrangeChildInGrid","changeCell","zIndex","swimLaneSelection","pasteSwimLane","clipboardData","cloneLane","childX","childY","ranId","nodeX","nodeY","childTable","pasteIndex","add","i_3","mode","refreshDiagramLayer","gridSelection","selectorModel","isSymbolDrag","targetnode","swimLaneId","Canvas","removeLaneChildNode","swimLaneNode","currentObj","isChildNode","preventHistory","lanenode","removeDependentConnector","remove","getGridChildren","removeSwimLane","removeNode","deleteNode","PreventHistory","removeFromAQuad","removeObjectsFromLayer","removeLane","removeChildren","removeRow","removeColumn","removePhase","phaseLength","removeHorizontalPhase","removeVerticalPhase","actualChild","prevCanvas","prevChild_1","prevNode","object_1","prevChild","laneHeader","renderOverlapElement","rulerSize","getRulerSize","overlap","createHtmlElement","insertBefore","firstChild","renderRuler","isHorizontal","div","document","getElementById","rulerGeometry","getRulerGeometry","diagramRuler","rulerSettings","horizontalRuler","verticalRuler","ruler","Ruler","segmentWidth","hRuler","vRuler","rulerObj","updateRuler","hOffset","horizontalOffset","vOffset","verticalOffset","showRulers","updateRulerDimension","removeRulerElements","removeElement","thickness","viewPortHeight","viewPortWidth","clientWidth","clientHeight","removeRulerMarkers","marker","markers","getElementsByClassName","removeChild","drawRulerMarkers","currentPoint","drawRulerMarker","updateRulerDiv","updateRulerSpace","currentZoom","arrangeTick","getFunction","dataBind","marginLeft","hRulerOffset","marginTop","vRulerOffset","getUMLActivityShape","umlActivityShapes","completeRegion","region","selectedObjects","containsRect","findNodeByName","findObjectType","drawingObject","setSwimLaneDefaults","setUMLActivityDefaults","flow","findNearestPoint","reference","start","end","shortestPoint","angleBWStAndEnd","angleBWStAndRef","vaAngle","pointsForBezier","bezierPoint1","bezierPoint2","isDiagramChild","htmlLayer","parentElement","hasClass","groupHasType","isPointOverConnector","intermediatePoints","toBounds","Inflate","hitPadding","intersectinPt","intersectDetails","intersectPt","rect_1","lineUtil1","lineUtil2","l1","l2","d","na","nb","ua","ub","intersect2","start1","end1","start2","end2","line3","getLineSegment","line","getTooltipOffset","mousePosition","inheritTooltip","objectTooltip","tooltipOffset","relativeMode","isMouseBased","getBoundingClientRect","offsetPoint","bound","sort","objects","option","getBounds","getAnnotationPosition","getloop","getOffsetOfConnector","alignednumber","getAlignedPosition","offsetLength","prevLength","kCount","lengths","cnst","alignment","alignLabelOnSegments","vAlign","hAlign","getBezierDirection","removeChildNodes","getChild","getSwimLaneChildren","removeUnnecessaryNodes","serialize","removeNodes","clonedObject","getCustomProperty","serializationSettings","preventDefaults","JSON","stringify","defaultObject","isNodeShape","getConstructor","properties","properties_1","property","Array","preventArrayDefaults","SwimLane","every","isSameArray","constructor","Diagram","Path","Native","Html","Image","Text","BasicShape","FlowShape","BpmnShape","UmlActivityShape","UmlClassifierShape","Header","PointPort","BpmnGateway","BpmnDataObject","BpmnEvent","BpmnSubEvent","BpmnActivity","BpmnAnnotation","MethodArguments","UmlClassAttribute","UmlClassMethod","UmlClass","UmlInterface","UmlEnumerationMember","UmlEnumeration","ChildContainer","Stop","UserHandle","Command","deserialize","clear","map","dataSourceSettings","doBinding","nodeTemp","setNodeTemplate","getDescription","commandManager","execute","canExecute","arrangeTickHorizontal","arrangeTickVertical","getLayoutInfo","layout","getBranch","nodeDefaults","getNodeDefaults","connectorDefaults","getConnectorDefaults","dataObj","parse","upgrade","contextMenuSettings","bridgeDirection","pageSettings","addInfo","scrollSettings","layers","_b","_c","backgroundColor","basicElements","snapSettings","isLoading","component","views","refresh","classList","version","nodes_1","ports","updateStyle","changedObject","textElement","canApplyStyle","StrokeStyle","textOverflow","opacity","fontFamily","italic","textAlign","whiteSpace","textDecoration","updateGradient","gradient","changedGradient","targetGradient","cx","cy","fx","fy","stops","updateHyperlink","actualAnnotation","hyperlink","link","labelStyle","updateShapeContent","visible","elementId","updateShape","oldObject","pathContent","imageContent","ImageElement","imageAlign","align","imageScale","flowShapeElement","nativeContent","DiagramNativeElement","htmlContent","DiagramHtmlElement","updateContent","newValues","nativeElement","getDiagramElement","appendChild","getContent","htmlElement","flowshapedata","shapes","updateUmlActivityNode","basicShapeData","canMeasurePath","umlActivityShapeData","getUMLFinalNode","finalNodeShape","innerFinalNode","outerFinalNode","getUMLActivityShapes","umlActivityShape","removeGradient","svgId","removeItem","array","item","updateConnector","anglePoint","srcDecorator","tarDecorator","updateSegmentElement","firstSegment","clipDecorators","updateDecoratorElement","updateShapeElement","getUserHandlePosition","selectorItem","handle","pivot","side","connectorOffset","getPointloop","canResizeCorner","selectorConstraints","thumbsConstraints","SelectorConstraints","ThumbsConstraints","canShowCorner","checkPortRestriction","portVisibility","visibility","findAnnotation","annotationId","findPort","portId","getInOutConnectPorts","isInConnect","findObjectIndex","getObjectFromCollection","scaleElement","sw","sh","refObject","Container","newPosition","arrangeChild","drop","initContainer","init","insertObject","key","low","high","mid","floor","getElement","diagramElement","diagramId","instance","getPaletteSymbols","nodeId","getAnnotation","enterObject","enterTable","symbolPalette","palettes","symbols","getPoint","w","h","cornerPoint","trans","findSegmentPoints","sample","sampleLength","window","pathNode","getChildNode","setAttributeNS","updatePath","absoluteBounds","pathLength","getTotalLength","getPointAtLength","Browser","info","childNodes","nodeType","translatePoints","translatedPts","pt1","measurePath","setAttribute","getBBox","svgBounds","getTextOptions","options","stroke","pivotX","pivotY","dashArray","shadow","description","doWrap","whiteSpaceToString","breakWord","wordBreakToString","textAlignToString","wrapSvgText","textValue","laneWidth","txtValue","bounds1","bBoxText","dy","replace","ceil","wordWrapping","words","newText","existingWidth","existingText","wrap","eachLine","wrapSvgTextAlign","txtWidth","wrapBounds","measureHtmlText","fontWeight","fontStyle","textContent","wordBreak","body","offsetWidth","offsetHeight","measureText","measureImage","contentSize","imageElement","measureNativeContent","nativeSVG","measureNativeSvg","bBox","newPathString","getDiagramLayerSvg","elementcoll","contentId","querySelector","getDomIndex","viewId","layer","postId","getNativeLayer","getHTMLLayer","getDiagramLayer","childElement","getSelectorElement","getAdornerLayer","getPortLayerSvg","getNativeLayerSvg","getGridLayerSvg","getBackgroundLayerSvg","getBackgroundImageLayer","getBackgroundLayer","getGridLayer","elementType","createElement","setAttributeHtml","createSvgElement","createElementNS","setAttributeSvg","parentsUntil","elem","selector","isID","className","animVal","getScrollerWidth","outer","widthNoScroll","overflow","inner","widthWithScroll","addTouchPointer","touchList","touches","pageX","clientX","pageY","clientY","pointerId","isHtml","compiledString","compile","cloneNode","svg","createMeasureElements","usageCount","divElement","createTextNode","tSpan","chars","crypto","Uint16Array","msCrypto","getRandomValues","random","additionalProp","newObject","sourceObject","customProperties","propAdditional","internalProp","getInternalProperties","hasOwnProperty","cloneArray","HTMLElement","innerHtml","propName","sourceArray","clonedArray","extendObject","childObject","extendeArray","extendArray","extendedObject","childArray","reset","middleElement","overFlow","middle","substr","rotateSize","minX","minY","maxX","maxY","getOffset","getValue","findToolToActivate","touchStart","touchMove","hasSelection","userHandles","obj_1","contains","paddedBounds","selectorBnds","hasSingleConnection","conn_1","sourcePaddingValue","targetPaddingValue","checkForConnectorSegment","ten","rotateThumb","labelSelection","labelRotate","checkResizeHandles","findPortToolToActivate","isSelected","checkResizeHandleForContainer","checkForResizeHandles","connectorEditingToolModule","PortVisibility","Hover","Visible","sourcePortID","currentDrawingObject","forty","firstLevel","getCursor","cursor","cursors","getBpmnShapePathData","bpmnShapes","getBpmnTriggerShapePathData","bpmnTriggerShapes","getBpmnGatewayShapePathData","bpmnGatewayShapes","getBpmnTaskShapePathData","bpmnTaskShapes","getBpmnLoopShapePathData","bpmnLoopShapes","getGraphBounds","collectionContains","coll","prototype","isEmpty","clone","__extends","extendStatics","setPrototypeOf","__proto__","p","__","create","__decorate","decorators","desc","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","_super","apply","sqrt","pow","atan2","pt2","getLengthFromListOfPoints","adjustPoint","isStart","getClassName","Property","ChildProperty","get","enumerable","configurable","rect1","rect2","NaN","unitePoint","intersects","empty","MIN_VALUE","SnapConstraints","ElementAction","Transform","RenderMode","KeyModifiers","Keys","RealAction","DiagramEvent","isDirt","isExport","exportScaleValue","exportScaleOffset","flip","Self","Parent","preventContainer","isSvgRender","staticSize","isRectElement","flipOffset","elementActions","unitMode","float","floatingBounds","setOffsetWithRespectToBounds","getAbsolutePosition","set","availableSize","validateDesiredSize","updateBounds","getGradientType","LinearGradient","RadialGradient","Thickness","Margin","Gradient","Collection","ShapeStyle","ComplexFactory","TextStyle","_this","desiredBounds","measureChildren","prevRotateAngle","hasChildren","childBounds","desired","force","GetChildrenBounds","offsetPt","newPoint","stretchChildren","ElementIsGroup","applyPadding","findChildOffsetFromCenter","childSize","call","absolutePath","pointTimer","setTimeout","template","templatePosition","getAvailableSize","canMeasure","textNodes","textWrapBounds","imageSource","stretch","Hyperlink","Annotation","Complex","defaultValue","isArray","leftMargin","topMargin","isStack","alignChildBasedOnParent","alignChildBasedOnaPoint","parentSize","Rectangle","Ellipse","Hexagon","Parallelogram","Triangle","Plus","Star","Pentagon","Heptagon","Octagon","Trapezoid","Decagon","RightTriangle","Cylinder","Diamond","Port","Connect","X","Circle","Square","OpenArrow","Fletch","OpenFetch","IndentedArrow","OutdentedArrow","DoubleArrow","Arrow","Process","Decision","Document","PreDefinedProcess","Terminator","PaperTap","DirectData","SequentialData","Sort","MultiDocument","Collate","SummingJunction","Or","InternalStorage","Extract","ManualOperation","Merge","OffPageReference","SequentialAccessStorage","Annotation2","Data","Card","Delay","Preparation","Display","ManualInput","LoopLimit","StoredData","IconShape","DiagramTooltip","NodeBase","getConnectorType","BpmnFlow","ActivityFlow","RelationShip","ConnectorShape","getSegmentType","Decorator","Vector","ConnectorSegment","MultiplicityLabel","ClassifierMultiplicity","bridges","status","bpmnElement","getSegmentElement","getConnectorPoints","getBpmnSequenceFlow","getBpmnAssociationFlow","getBpmnMessageFlow","updateShapePosition","getUMLObjectFlow","getUMLExceptionFlow","getConnectorRelation","anglePoints","getDecoratorElement","wrapperContent","getAnnotationElement","relationship","associationType","lower","upper","text1","sourceText","targetText","multiplicity","lowerBounds","upperBounds","optional","pathseqData","pathseq","findPath","midPt","xDist","yDist","fractionOfTotal","midPt2","midPt1","segmentMessage","sourcePt","targetPt","beginningpoint","transferpoint","startpoint1","endpoint1","textele","updateAnnotation","canRefresh","pivotPoint","segmentAngle","horizor","verzor","displacement","newPoints","clipDecorator","isSource","len","segmentPath","getSegmentPath","connectorSegment","segmentElement","flipConnector","adjacentPoint","decEle","bridgePath","pointIndex","n","bridge","rendered","segmentPointIndex","getPath","getPt","st","m","j_1","j_2","targetPortID","j_3","tx","ty","connWidth","connHeight","CollectionFactory","getWrapper","All","StackPanel","updateSize","updateHorizontalStack","updateVerticalStack","measureStackPanel","arrangeHorizontalStack","arrangeVerticalStack","arrangeStackPanel","applyChildMargin","updatePosition","rotatedSize","parenBounds","cellStyle","desiredRowHeight","rowDefns","colDefns","rowId","columnId","rowSpan","GridCellItem","addObjectToCell","updateProperties","rowDefn","GridRow","defaultCell","columns_1","addCellInRow","colDefn","GridCell","calculateSize","calculateHeight","calculateWidth","isConsiderChild","setTextRefresh","calculateCellHeightBasedOnChildren","calculateCellHeight","colId","calculateCellWidthBasedOnChildren","calculateCellWidth","colIndex","calculateCellSizeBasedOnChildren","maxSize","maxBounds","column","currentIndex","newIndex","tempRow","tempSize","tempCol","_d","_e","cellIndex","_f","_g","isChange","cellX","cellWidth","cellHeight","z","removeCell","getShapeType","Shape","BpmnTask","BpmnTransactionSubProcess","event","trigger","BpmnSubProcess","isCanvasUpdate","processId","umlIndex","nodeDefault","textStyle","basicshape","basicshapedata","flowshape","bpmnModule","initBPMNContent","subProcess","activity","processes","children_1","collapsed","updateElementVisibility","borderWidth","initPorts","accessibilityContent","initPortWrapper","ElementIsPort","contentAccessibility","getIconOffet","initIcons","isExpanded","expandIcon","collapseIcon","iconContainer","initIconSymbol","initAnnotations","virtualize","initAnnotationWrapper","portContent","pathdata","updatePortEdges","annotationcontent","label","initIconContainer","iconContent","iconContentBounds","preRender","unWireEvents","wireEvents","render","updateRulerGeometry","getModuleName","destroy","notify","getPersistData","keyEntity","addOnPersist","onPropertyChanged","newProp","oldProp","renderRulerSpace","getRulerSVG","Infinity","unitLength","unitOffset","updateSegments","run","rulerSegment","getNewSegment","updateSegment","segWidth","updateSegmentWidth","startValue","defStartValue","updateTickLabel","translate","lastChild","isRightOrBottom","tickAlignment","attr","createNewTicks","createTickLabel","tick","tickInterval","g","interval","createTick","getLinePoint","linePoint","tickLength","stroke-width","multiples","log","createMarkerLine","rulerSvg","diff","rulerSvgElements","getElementsByTagName","markerColor","move","rulerSpace","Component","Action","MergeNode","InitialNode","ForkNode","JoinNode","TimeEvent","AcceptingEvent","SendSignal","ReceiveSignal","StructuredNode","Note","KeyGesture","CommandManager","ContextMenuSettings","alignElement","updateConnectorEdges","CanvasRenderer","getContext","setCanvasSize","renderGradient","ctx","grd","linear","createLinearGradient","radial","createRadialGradient","stop_1","addColorStop","fillStyle","renderShadow","save","beginPath","strokeStyle","globalAlpha","ptModel","transX","transY","rotateContext","renderPath","fillRect","closePath","restore","createCanvas","canvasObj","setStyle","lineWidth","parseDashArray","setLineDash","rotate","setFontStyle","font","dashes","separator","splittedDashes_1","drawRectangle","drawPath","segs","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","curr","rx","ry","xAxisRotation","cp","currp","cpp","centp","u","v","ad","ra","sx","sy","arc","drawText","parentSvg","ariaLabel","scaleValue","labelAlign","fillText","startPointX","startPointY","endPointX","endPointY","loadImage","image","drawImage","fromPalette","ctx_1","pivotX_1","pivotY_1","imageObj","onload","alignOptions","srcWidth","srcHeight","destinationW","destinationH","resultWidth","resultHeight","xalign","yalign","getSliceOffset","sWidth","sHeight","dWidth","dHeight","canvas1","srcRatio","destRatio","getMeetOffset","arg","res","dest","acos","labelX","labelY","pointx","pointy","SvgRenderer","shadowElement","pointModel","tX","tY","svgContainer","onlyRect","isSelector","aria-label","setSvgStyle","updateSelectionRegion","gElement","createGElement","drawLine","drawCircle","enableSelector","circle","classval","radius","setSvgFontStyle","textNode","tspanElement","svgLabelAlign","text-decoration","imgAlign","aspectRatio","charAt","preserveAspectRatio","drawHTMLContent","drawNativeContent","clipPath","setNativTransform","drawClipPath","contentWidth","contentHeight","group","clipWidth","clipHeight","defs","offset_1","stopElement","lineargradient","radialgradient","wrapBound","pos","pointX","pointY","DiagramRenderer","svgRender","isSvgMode","renderer","svgRenderer","setCursor","setLayers","iconSvgLayer","adornerSvgLayer","nativeSvgLayer","diagramSvgLayer","getParentSvg","targetElement","getParentElement","defaultParent","svgElement","layerGElement","groupElement","getGroupElement","nativeSvg","renderElement","createParent","renderContainer","renderImageElement","renderPathElement","renderTextElement","renderNativeElement","renderHTMLElement","renderRect","drawSelectionRectangle","adornerLayer","renderHighlighter","renderResizeHandle","canMask","enableNode","nodeConstraints","renderPivotLine","renderRotateThumb","renderBorder","nodeWidth","nodeHeight","renderCircularHandle","renderEndPointHandle","connectedSource","connectedTarget","isSegmentEditing","ConnectorSource","ConnectorTarget","renderOrthogonalThumbs","segment_1","bezierPoint","renderBezierLine","renderOrthogonalThumb","getBaseAttributes","connected","isBorderTickness","renderUserHandler","pathSize","newData","pathColor","pathBounds","renderSvgGridlines","gridSvg","pattern","ShowHorizontalLines","ShowVerticalLines","hWidth","hHeight","hSegmentwidth","vSegmentwidth","isRulerGrid","dynamicGrid","horizontalGridlines","scaledIntervals","verticalGridlines","lineIntervals","scaleSnapInterval","patternUnits","horizontalSvgGridlines","verticalSvgGridlines","hLine","space","intervals","lineColor","lineDashArray","updateLineIntervals","vLine","updateGrid","svgGrid","newInterval","snapIntervals","gridlines","templateWidth","templateHeight","nativeLayer","imageWidth","imageHeight","sourceWidth","sourceHeight","widthRatio","heightRatio","ratio","svgParent","hasNativeParent","svgNativeParent","svgParent_1","parentG","renderFlipElement","posX","posY","drawRect","renderSvgBackGroundImage","background","bgimageLayer","transformLayers","svgMode","updateNode","diagramElementsLayer","insertIndex","Background","PageSettings","ScrollSettings","ServiceLocator","services","register","getService","Gridlines","SnapSettings","DiagramRuler","RulerSettings","CrudAction","ConnectionDataSource","DataSource","Layout","PortDraw","ConnectorSourceEnd","ConnectorTargetEnd","BezierSourceThumb","BezierTargetThumb","OrthoThumb","SegmentEnd","PortDrag","LabelSelect","LabelDrag","LabelRotate","LabelResizeWest","LabelResizeEast","LabelResizeSouth","LabelResizeNorth","LabelResizeNorthEast","LabelResizeNorthWest","LabelResizeSouthEast","LabelResizeSouthWest","ToolBase","protectChange","inAction","isProtectChange","currentElement","blocked","isTooltipVisible","undoParentElement","startAction","mouseDown","startPosition","currentPosition","prevPosition","startTransaction","mouseMove","mouseUp","endTransaction","endAction","closeTooltip","mouseWheel","mouseLeave","initialBounds","horizontalsnap","snapped","verticalsnap","difx","dify","snapEnabled","snappingModule","canSnap","snapLine","getLayer","deltaWidth","deltaHeight","snapLeft","snapRight","snapTop","snapBottom","getPivot","SelectTool","doRubberBandSelection","arrayNodes","getSelectedObject","ctrlKey","clickCount","unSelect","selectObjects","labelSelect","ConnectTool","ConnectorDrawingTool","segmentpoint1","segmentpoint2","selectedSegment","updateSelector","removeSnap","changeAnnotationDrag","oldValues","targetPortName","targetNodeNode","findTarget","oldValue","newValue","cancel","sourcePointChange","targetPointChange","triggerEvent","removeTerminalSegment","inPort","outPort","snapConnectorEnd","targetPortId","targetNodeId","dragConnectorEnds","canDisconnect","disConnect","connect","checkConnect","canEnableDefaultTooltip","getTooltipContent","showTooltip","MoveTool","objType","currentTarget","objectType","getSubProcess","initialOffset","isPreventHistory","historyAdded","targetPosition","allowDrop","positionChange","entry_1","snapPoint","removeHighlighter","isDroppable","isParentAsContainer","isEndGroup","dropChildToContainer","dropAnnotation","objectId","isSame","dragOverElement","oldValues_1","snappedPoint","removeChildFromBPmn","arg_1","dragSelectedObjects","mouseOver","removeStackHighlighter","drawHighlighter","portDrag","RotateTool","getAllDescendants","cloneChild","rotateChange","oldValue_1","arg_2","snapAngle","rotateSelectedItems","ResizeTool","elements","checkSelection","deltaValues","scaleObjects","sizeChange","entry_2","changes","getChanges","change","AspectRatio","scaleSelectedItems","NodeDrawingTool","checkBoundaryConstraints","drawObject","updateNodeDimension","addObjectToDiagram","TextDrawingTool","drawingNode","addText","ZoomPanTool","zoom","zooming","moveTouches","startTouch0","startTouches","startTouch1","moveTouch0","moveTouch1","getDistance","focusPoint","updateTouch","difY","scroll","touch1","touch2","startTouch","moveTouch","ExpandTool","initExpand","LabelTool","open","focus","PolygonDrawingTool","dblClickArgs","PolyLineDrawingTool","updateConnectorPoints","LabelDragTool","labelDrag","redoValue","entryValue","LabelResizeTool","resizeObject","labelResize","LabelRotateTool","redoEntry","entryObject","ConnectorEditing","segmentIndex","dragOrthogonalSegment","dragControlPoint","shiftKey","addOrRemoveSegment","updateLastSegment","removePrevSegment","removeNextSegment","updateEndPoint","last","updateSeg","previous","findIndex","newseg","intersectingSegs","addSegments","insertFirstSegment","addTerminalSegment","updateAdjacentSegments","segmentDirection","segValues","insertseg","nextseg","isNextUpdate","updatePreviousSegment","nextSegment","updateNextSegment","pop","sec","lastseg","updatePortSegment","isSourceNode","updateFirstSegment","changeSegmentDirection","insertfirst","removeCurrentPrev","nextNext","line1Start","line1End","line2Start","line2End","firstSegPoint","lastSegPoint","DiagramEventHandler","currentAction","isBlocked","isMouseDown","doingAutoScroll","objectFinder","eventArgs","ObjectFinder","diagramCanvas","TextEdit","getMousePosition","touchArg","changedTouches","boundingRect","scrollLeft","scrollTop","windowResize","evt","resizeTo","clearTimeout","updateViewPortSize","setViewPortSize","getSizeValue","setSize","canHideResizers","updateCursor","list","isForeignObject","isTextBox","foreignobject","isMetaKey","navigator","platform","metaKey","renderUmlHighLighter","findObjectsUnderMouse","findObjectUnderMouse","isDeleteKey","isMouseOnScrollBar","scrollHeight","scrollWidth","updateVirtualization","removeObjectInterval","setInterval","removeVirtualObjects","deleteVirtualObject","isScrolling","preventDefault","checkEditBoxAsTarget","updatePortVisibility","hoverElement","button","buttons","getMouseEventArgs","textEditing","endEdit","sourceElement","findElementUnderMouse","findActionToBeDone","getTool","initialEventArgs","touchStartList","mouseMoveExtend","canAutoScroll","checkAutoScroll","isNode","hoverNode","checkAction","touchMoveList","elementLeave","elementEnter","mouseEvents","Interactions","autoScrollPosition","startAutoScroll","clearInterval","timeOutValue","diagram_1","doAutoScroll","previousSelectedObject","removeConstraints","detail","which","isMultipleSelect","history_1","updateContainerProperties","addUmlNode","updateContainerBounds","hasStack","renderSelector","click","addSwimLaneObject","selectedNode","swimlaneNode","canInsert","actualShape","clearSelectorLayer","addPhases","addLanes","swimLaneobj","up","wheelDelta","isTriggerEvent","activeLabel","startTextEdit","keyDown","keyCode","keycode","gesture","keyModifiers","altKey","altKeyPressed","shiftKeyPressed","ctrlKeyPressed","keyDownEventArgs","KeyboardEvent","parameter","droppable","draggable","addConstraints","movingPosition","autoScrollBorder","delay","autoScroll","targets","lastObjectUnderMouse","mouseEnter","elementOver","isPrivateTooltip","keyModifier","Alt","Control","Shift","scrolled","updateScrollOffset","doubleClick","getObjectLayer","lock","itemClick","actualTarget","inputChange","fontsize","textWrapper","textBounds","transforms","editTextBox","editTextBoxDiv","isAddTextNode","focusOut","textAnnotationConnectors","findTargetObjectUnderMouse","resetTool","findElementUnderSelectedItem","findTargetUnderMouse","isAfterMouseUp","boundsUpdate","isChangeProperties","hasGroup","history","updateContainerPropertiesExtend","updateLaneChildNode","innerNode","actions","layerTarger","layerObjTable","objArray_1","spatialSearch","findObjects","pointInBounds","actualTarget_1","parentObj","portElement","eventArg","findTargetElement","selected","Layer","objectZIndex","zIndexTable","CommandHandler","connectorsTable","processTable","parentTable","layoutAnimateModule","backup","pointerEvents","toolName","duration","openDelay","closeDelay","ToolTip","connectionChange","dragOverArg","dragOver","oldChanges","newChanges","connectorEnd","nodeEndId","portEndId","connectionEventChange","argsTarget","connection","transaction","success","failure","nodeEnd","portEnd","clonedNode","annotationNode","annotationObj","checkAndRemoveAnnotations","refreshCanvasLayers","addTextAnnotation","oldNodeId","oldPortId","cut","undoRedoModule","clipObject","copyObjects","addLayer","layerZIndexTable","activeLayer","objectName","layerName","removeLayer","layerId","layerObject","moveObjects","targetLayer","setActiveLayer","targerNodes","objects_1","cloneLayer","cloneObject_1","newlayer","paste","copy","copyProcesses","tempNode","connectorsList","selectedItems_1","sortByZIndex","processes_1","protectedChange","Group","unGroup","removePorts","removeLabels","copiedItems","getNewObject","multiSelect","objectTable","keyTable","copiedItems_1","clonedObj","cloneConnector","newNode","edges_1","edge","newConnector","edges_2","newobjs","translateObject","groupnodeID","process","checkAnnotation","cloneGroup","cloneSubProcesses","currentAnnotation","innerChild","addProcess","connector_1","connectorTable","newChildren","connectorObj","oldID","childObj","multipleSelection","cause","selectionChange","canDoMultipleSelection","canDoSingleSelection","findParent","selectGroup","selectProcesses","selectBpmnSubProcesses","hasProcesses","preventUpdate","hasLayer","objArray","selectormodel","getChildElements","moveSvgNode","diagramDiv","backNode","sendLayerBackward","currentLayerObject","targetObject","currentLayerObject_1","bringLayerForward","currentLayerObject_2","sendToBack","layerNum","updateNativeNodeIndex","bringToFront","tabelLength","diagramLayer","lastChildNode","nextSibling","nodeArray","sortID","sendForward","layerIndex","intersectArray","temp_1","overlapObject","currentObject","sendBackward","temp_3","initSelectorWrapper","clearSelectionRectangle","selArray","rubberArray","getNodesConnectors","rubberBandSelectionMode","checkBezierThumb","dragSourceEnd","dragTargetEnd","triggerAction","highlighter","symbolDrag","updateInnerParentProperties","hasEnds","connectorSegmentChange","existingInnerBounds","isRotate","segmentChange","secondSegment","isDragSource","changeSegmentLength","translateBezierPoints","second","secPoint","nextDirection","changeSourceEndToNode","changeSourceEndToPort","segValues1","isTerminal","changeTerminal","sourcePoint2","boundaryConstraints","segmentNumber","rotateObjects","includeParent","objects_2","getChildrenBound","updateSubProcessess","getChildren","rotatePoints","SnapToLines","innerParents","refWrapper","scaleObject","updateGroupOffset","innerParent","parentNodes","isResize","oldleft","oldtop","parent_3","changedvalues","getPortChanges","getAnnotationChanges","updatePathAnnotationOffset","intersectingOffset","pointLength","totalLength","intersetingPts","getInterceptWithSegment","dragLimit","minDistance","getRelativeOffset","updateLabelMargin","dragLimitValue","tempPt","contentDimension","curZoomfactor","annotationWrtapper","draggableBounds","lineIntersects","line1","lineIntersects_1","boundsInterSects","cursorLimit","polyLine","self","polyLine2","polyLine1","pre","found","deg","conPoints","tarAngle","srcAngle","maxLength","intercepts","imgLine","segemnt","angleAdd","labelWrapper","newMat","offsetx","offsety","selectorBounds","top_2","preventNodesUpdate","PreventIconsUpdate","expandNode","expand","preventConnectorsUpdate","expandCollapse","fixedNode","enableAnimation","organizationalChartModule","isAnimation","doLayout","expandStateChange","getparentexpand","boolean","previousNode","newTarget","oldTarget","nodeCollection","removeChildFromBPMN","targetNodes","connectHighlighter","tgt","tgtWrap","towardsLeft","towardsTop","SnapToObject","removeGuidelines","dropBPMNchild","objectBounds","storeObject","distribute","top_3","btt","undoSelectorObj","redoSelectorObj","sameSize","selectorObject","scrollX","scrollY","panx","pany","pan","clearHighlighter","child_1","DiagramScroller","oldCollectionObjects","removeCollection","vPortWidth","vPortHeight","currentZoomFActor","hScrollSize","vScrollSize","realActions","hScrollbarMoved","vScrollbarMoved","updateScrollOffsets","pageBounds","getPageBounds","setOffset","setScrollOffset","viewWidth","viewHeight","newX","actualRight","currentRight","newY","actualBottom","currentBottom","getObjects","coll1","coll2","isExist","virtualizeElements","oObjects","oObjectsID","newObjects","removeObjects","updateVirtualObjects","scrollerWidth","oldWidth","diagramWidth","oldHeight","diagramHeight","hasPadding","negwidth","negheight","multiplePage","origin","scrollpadding","getPageBreak","widthCount","heightCount","factor","deltaX","deltaY","minZoom","maxZoom","targetMatrix","applyScrollLimit","fitToPage","canZoomIn","customBounds","zoomFactor","bringIntoView","hoffset","voffset","bringToCenter","actualbounds","scrollLimit","scrollableArea","allowedRight","allowed","allowedBottom","Quad","spatialSearching","findQuads","currentViewPort","quads","isIntersect","third","fourth","selectQuad","quadSet","getQuad","halfWidth","halfHeight","xCenter","yCenter","childRight","childBottom","newQuad","childTop","childLeft","isContained","addIntoAQuad","quadAddition","setCurrentNode","quad","isAdded","parentQuad","newParent","isempty","newWidth","newHeight","SpatialSearch","quadSize","pageLeft","pageRight","pageTop","pageBottom","quadTable","objectIndex","updateQuad","nodBounds","isWithinPageBounds","leftElement","topElement","rightElement","bottomElement","modified","findLeft","findTop","findBottom","findRight","quads_1","originX","originY","SerializationSettings","groupTable","isGroup","selectionConnectorsList","crudDeleteNodes","renderTimer","clearCollection","isConnector","clearObjects","objectArray","refreshLayout","refereshColelction","eventHandler","view","updateView","changedProp","excludeFromLayout","updateBridging","intOffPageBackground","validatePageSize","updatePage","updateSnapSettings","initCommands","initObjects","updateRulerSettings","updateLayer","updateScrollSettings","PreventDataInit","showCustomMenuOnly","show","items","_h","_j","propertyChange","canLogChange","modelChanged","resetDiagramActions","renderRulers","initializePrivateVariables","isProtectedOnChange","serviceLocator","initializeServices","setCulture","initDiagram","initViews","defaultLocale","Copy","Cut","Paste","Undo","Redo","SelectAll","Grouping","UnGroup","Order","BringToFront","MoveForward","SendToBack","SendBackward","layerZIndex","pathTable","localeObj","L10n","locale","collapsedNode","crudAction","read","renderInitialCrud","initHistory","initLayers","initializeDiagramLayers","renderPageBreaks","isDevice","Render","tempObj","callback","Ajax","onSuccess","dataManager","send","then","connectionDataSource","requiredModules","modules","tooltipelement","startEvent","touchStartEvent","stopEvent","touchEndEvent","moveEvent","touchMoveEvent","cancelEvent","isPointer","isIE11Pointer","wheelEvent","EventHandler","initDroppables","selectAll","getObjectsOfLayer","updateViewPort","cutCommand","removeProcess","pasteCommand","copyCommand","moveForward","getActiveLayer","nudgeCommand","nudge","updateAnnotationDrag","updateConnectorProperties","getCustomTool","active","getCustomCursor","historyChangeTrigger","historyChange","undo","redo","PublicMethod","focusedPoint","zoomTo","eventName","updateEventValue","collectionChange","updateEdges","getTextAnnotationConn","initConnectors","updateDocks","updateSvgNodes","updateProcesses","processes_2","addAnnotation","spliceConnectorEdges","objIndex","removeElement_1","removeCommand","Clear","isStackChild","deleteGroup","removeBpmnProcesses","updateNodeEdges","parentnode","isstack","updateStackProperty","startEditCommad","bpmnAnnotation","getTextAnnotationWrapper","addLabels","textArea","toLocaleLowerCase","lineHeight","focusOutEdit","updateNodeExpand","updateConnectorAnnotation","annotationWrapper","propChange","viewPort","updateLayout","rootNode","mindMapChartModule","root","radialTreeModule","symmetricalLayoutModule","maxIteration","springLength","springFactor","complexHierarchicalTreeModule","updateIcon","updateDefaultLayoutIcons","saveDiagram","loadDiagram","getDiagramContent","styleSheets","printandExportModule","exportImage","exportImages","printImage","printOptions","setStackLimit","stackLimit","applyLimit","clearHistory","getDiagramBounds","exportDiagram","print","addPorts","constraintsType","constraintsValue","labels","removelabelExtension","element_1","removePortsExtenion","real","tabindex","renderBackgroundLayer","commonStyle","bgLayer","createSvg","backgroundImage","renderGridLayer","svgGridSvg","renderDiagramLayer","diagramLayerDiv","diagramSvg","transformationLayer","scrollerSize","renderHTMLLayer","renderPortsExpandLayer","renderNativeLayer","renderAdornerLayer","svgAdornerSvg","svgSelector","svgPortsSvg","svgPortsLayer","svgExpandLayer","htmlLayerDiv","nativeLayerSvg","svgObj","isLoad","initData","initLayerObjects","hasLayers","tempTabel","bpmnTable","groups","addToLayer","initNodes","_k","_l","_m","groups_1","_o","connectors_1","setZIndex","layerObject_1","hPan","vPan","VerticalOffset","HorizontalOffset","ViewportHeight","ViewportWidth","CurrentZoom","scrollChange","dataBindingModule","generateData","dataSource","url","initSource","makeData","fields","sourcePointX","sourcePointY","targetPointX","targetPointY","customFields","independentObj","currentLayer","defaultLayer","initObjectExtend","getDefaults","defaults","initNode","getEndNodeWrapper","getConnectedPort","isWidth","PreventDrag","updateDefaultLayoutIcon","iconWrapper","isUpdateSize","node1","PreventScale","portContainer","childCollection","updateChildPosition","newCommands","bind","C","V","delete","A","Z","Y","nudgeUp","Up","nudgeRight","Right","nudgeDown","Down","nudgeLeft","Left","startEdit","F2","endEditCommand","Escape","focusToNextItem","Tab","focusToPreviousItem","selectFocusedItem","Enter","initCommandManager","overrideCommands","newCommand","updateIconVisibility","updateDiagramContainerVisibility","refreshDiagram","updateCanupdateStyle","getZindexPosition","canIgnoreIndex","updateGridContainer","refreshCanvasDiagramLayer","objectArray_1","refreshSvgDiagramLayer","view_1","renderBasicElement","refreshElements","isDestroyed","clearCanvas","setTransform","renderDiagramElements","transformOrigin","inverse","changed","clearIntervalVal","updateTextElementValue","tCollection","fromExport","isOverView","renderNode","transformValue","verticalValue","status_1","bridgingModule","pathSegment","clearRect","adornerSVG","gridLayer","removePageBreaks","backgroundLayer","showPageBreaks","setOverview","overview","renderDocument","renderNodes","updateThumbConstraints","canInitialize","hideRotate","hideResize","thumbConstraints","isSwimLane","selectorElement","renderSelectorForAnnotation","selectorEle","stackPanel","symbolBorder","selectionRect","getPortContainer","containsMargin","isBpmnTextAnnotation","textEdit","updateTextAnnotationContent","isAction","tempNode_1","updateObject","oldNode","oldConnector","actualSourcePoint","actualTargetPoint","nodePropertyChangeExtend","updateShadow","swimLaneNodePropertyChange","oldShape","oldObjects","newLane","childNodeIndex","node_1","id_1","isLayout","existingBounds","offsetX_1","updateFlipOffset","offsetY_1","updatePorts","updateMargin","updateBPMN","updateUMLActivity","actualPort","updatePort","updateTextAnnotationProp","checkSelectedItem","parent_4","updateGroupSize","portWrapper","connectorProprtyChangeExtend","updateBPMNConnector","disableBridging","findInOutConnectPorts","oldSource","updateAnnotations","isInconnect","updateNodeProperty","selItems","canUpdateSize","updateAnnotationContent","updateAnnotationWrapper","String","iconRect","iconShape","enable","nodeShadow","changedShadow","entryTable","Droppable","over","dragData","selectedSymbol","helper","paletteId","getAttribute","ej2_instances","tempTable","dragEnter","swimLaneObj","child1","child2","findChild","removeChildInNodes","addChildNodes","droppedElement","out","dragLeave","insertData","crudOperation","getNewUpdateNodes","updateData","removeData","getDeletedNodes","crud","getNodesCollection","parameterMap","raiseAjaxPost","processCrudCollection","nodeCrudAction","connectorCrudAction","mappingObj","name_1","Event","PrintAndExport","fileType","buffers","fileName","format","setCanvas","diagramAsSvg","buffer","XMLSerializer","serializeToString","blob","Blob","msSaveOrOpenBlob","pom","download","URL","createObjectURL","href","createEvent","initMouseEvent","dispatchEvent","setScaleValueforCanvas","diagramAsCanvas","scaleOffsetX","scaleOffsetY","toDataURL","canvasMultiplePage","images","pageHeight","pageWidth","pageOrientation","img_1","getMultipleImage","image1","byteString","atob","ArrayBuffer","intArray","Uint8Array","charCodeAt","htmlElement_1","urlLink","mouseEvent_1","getObjectsBound","nodebounds","backimage","backRect","diagramLayerSVG","bgColor","context","bgImg","proportionX","proportionY","exportable","isImageExportable","proportion","brColor","brWidth","strokeRect","updateObjectValue","updateWrapper","getPrintCanvasStyle","img","imageArray","pageSize","mLeft","mTop","mRight","mBottom","drawnX","drawnY","imgHeight","imgWidth","pageWidth_1","pageHeight_1","pageSize_1","innerDiv","printImages","printWind","write","innerHTML","scrollerX","scrollerY","oldZoom","oldHorizontalOffset","oldVerticalOffset","snapConstraints","ShowLines","styleSheetRef","htmlData","DataBinding","dataTable","json","applyDataSource","mapper","DataManager","query","defaultQuery","executeQuery","firstNode","nextLevel","rootNodes","updateMultipleRootNodes","applyNodeTemplate","renderChildNodes","parents","nodeModel","rtNodes","canBreak","containsConnector","applyConnectorTemplate","sNode","tNode","connModel","menuClass","grouping","order","DiagramContextMenu","service","defaultItems","disableItems","hiddenItems","localeText","setLocaleKey","addEventListener","on","removeEventListener","off","l10n","contextMenu","Menu","getMenuItems","enableRtl","enablePersistence","contextMenuItemClick","contextMenuBeforeOpen","onOpen","contextMenuOpen","beforeItemRender","BeforeItemRender","onClose","contextMenuOnClose","menuItems","orderItems","groupItems","getDefaultItems","buildDefaultItems","orderGroup","customItem","isOpen","getKeyFromId","updateItemStatus","getLocaleText","getConstant","showItems","enableItems","ensureItems","ensureTarget","diagramArgs","newItem","hidden","contextItems","forEach","hideItems","selectedLength","canUndo","canRedo","generateID","menuItem","iconCss","bringToFrontOrder","moveForwardOrder","sendToBackOrder","sendBackwardOrder","BpmnDiagrams","annotationObjects","getSize","getBPMNEventShape","getBPMNGatewayShape","getBPMNDataObjectShape","getBPMNShapes","getBPMNActivityShape","renderBPMNTextAnnotation","getBPMNTextAnnotation","bpmnShape","bpmnShapeData","gatewayshape","gatewayNode","gatewayTypeNode","gatewayTypeNodeShapeData","shapeType","gateway","setSizeForBPMNGateway","dataObjectshape","dataObject","dataobjNode","dataobjTypeNode","dataobjCollectionNode","getBPMNTaskShape","task","taskShapes","taskNode","childCount","getTaskChildCount","childSpace","area","taskTypeNodeData","taskTypeNode","taskTypeNodeService","childNode2data","loopType","loop","taskLoopNode","taskCompNode","getBPMNCompensationShape","compensation","subEvent","sub","eventshape","shapeEvent","pathElement","shapeActivity","innerEvtNode","outerEvtNode","triggerNode","triggerNodeData","setSizeForBPMNEvents","setEventVisibility","setSubProcessVisibility","eventLength","events","elementWrapper","adhoc","getBPMNSubProcessShape","subProcessShapes","subprocessAdhoc","subProcessLoopShapes","subChildCount","getSubprocessChildCount","subprocessNode","getBPMNSubProcessTransaction","collapsedShape","getBPMNSubEvent","getBPMNSubProcessLoopShape","subChildSpace","boundary","getBPMNAdhocShape","subprocessComp","eventContainer","getBPMNSubprocessEvent","shapeWidth","shapeHeight","innerRect","transactionEvents","subprocessLoopData","subprocessLoop","redoElement","sources","processTable_1","processIndex","excludeChild","compensationNode","subProcessEventsShapes","annot","adhocNode","annotationContainer","annotationPath","setAnnotationPath","annotationConnector","annotationsContainer","textObject","annotationObject","bpmnShapeContent","clearAnnotations","removeAnnotationObjects","nodeContent","parentBounds","getAnnotationPathAngle","parentNodeId","newShape","sizeChanged","updateBPMNGateway","updateBPMNDataObject","updateBPMNActivity","updateBPMNEvent","bpmnshapeGatewaydata","elementWrapperChild1","elementWrapperChild2","setSizeForBPMNDataObjects","getEvent","child0","updateEventVisibility","event_1","elementWrapperChild0","updateBPMNEventTrigger","bpmnshapeTriggerdata","actualObjectProp","updateBPMNActivityTask","updateBPMNActivityTaskLoop","updateBPMNActivitySubProcess","setSizeForBPMNActivity","bpmnshapeTaskdata","bpmnshapeLoopdata","updateChildMargin","updateBPMNSubProcessEvent","updateBPMNSubProcessAdhoc","updateBPMNSubProcessBoundary","updateBPMNSubProcessCollapsed","updateBPMNSubProcessCompensation","updateBPMNSubProcessLoop","updateBPMNSubProcessTransaction","eventIndex","eventWrapper","actualEvent","updateBPMNSubEvent","newEvent","eventType","getEventSize","wrapperChild","currentNode","flowType","sequence","getSequence","association","getAssociation","message","getMessage","offLength","eventNode","Message","SubProcess","Timer","Error","Escalation","Cancel","Compensation","Conditional","Link","Signal","Terminate","Multiple","Parallel","Exclusive","Inclusive","EventBased","ExclusiveEventBased","ParallelEventBased","Service","Receive","Send","InstantiatingReceive","Manual","BusinessRule","User","Script","Standard","ParallelMultiInstance","SequenceMultiInstance","ConnectorBridging","lastBridge","points1","bridgeSpacing","bridgeSpace","bgedir","q","connector1","points2","intersectsRect","intersectPts","getLengthAtFractionPoint","lengthFractionIndex","fullLength","stBridge","enBridge","angleCalculation","fix","lengthCalculation","var1","insertAt","arcSeg","paths","createSegment","join","bridgeStartPoint","arcs","bgseg","stPoints","edPoints","firstBridge","bridgeList","subBridge","createBridgeSegment","sweepDirection","startPt","endPt","angle1","zOrder","inter1","checkForHorizontalLine","roundedAngle","pointAt","confirm","lengthAtFractionPt","previouspt2","suspect","getSlope","delX","delY","lhs","rhs","isFinite","xDiff","yDiff","Snapping","delta","horizontallysnapped","verticallysnapped","snapObject","roundedRight","roundedLeft","roundedTop","roundedBottom","currentright","currentbottom","SnapToVerticalLines","SnapToHorizontalLines","cutoff","bal","horizontalSnap","verticalSnap","ended","lengthY","hTarget","vTarget","lengthX","objectsAtLeft","objectsAtRight","objectsAtTop","objectsAtBottom","snapObjDistance","snapObjectDistance","hIntersectRect","vIntersectRect","targetBounds","findNodes","canBeTarget","canConsider","createSnapObject","createGuidelines","createHSpacingLines","createVSpacingLines","snapSize","sameWidth","sameHeight","hintersectedrect","vintersectedrect","nodesInView","targetBounds_1","targetBounds_2","difference","actualDiff","addSameWidthLines","addSameHeightLines","initialBoundsT","actualTop","initialBound","initialBoundsB","actualLeft","initialRect","renderAlignmentLines","sortByDistance","nearestleft","nearestright","equaldistance","equallySpaced","findEquallySpacedNodesAtLeft","adjustablevalue","findEquallySpacedNodesAtRight","addHSpacingLines","deltaHorizontal","nearesttop","nearestbottom","findEquallySpacedNodesAtTop","findEquallySpacedNodesAtBottom","addVSpacingLines","deltaVertical","crnt","renderSpacingLines","equallySpacedObjects","sameWidths","sameSizes","sameHeights","snap","nd","ascending","equalDistance","prevBounds","actualDistance","groupUndo","historyCount","groupCount","Function","canLog","undoStack","redoStack","setEntryLimit","getHistoryList","limitHistory","limitHistoryStack","hList","removeFromStack","entyList","getUndoEntry","endGroupActionCount","undoEntry","undoGroupAction","currEntry","getHistroyObject","nodeObject","recordPositionChanged","recordSizeChanged","recordRotationChanged","recordConnectionChanged","recordPropertyChanged","recordCollectionChanged","recordLabelCollectionChanged","recordPortCollectionChanged","recordSegmentChanged","recordPortChanged","recordAnnotationChanged","recordChildCollectionChanged","recordStackPositionChanged","recordGridSizeChanged","recordLanePositionChanged","recordLaneOrPhaseCollectionChanged","checkNodeObject","getnodeDefaults","updateSelection","undoNode_1","knownNode","historyEntry","ignoreProperty","getProperty","isRedo","oldElement","undoChanges","isRow","segmentChanged","positionChanged","connectionChanged","scaleWidth","scaleHeight","selectorObj","rotationChanged","getRedoEntry","startGroupActionCount","redoGroupAction","redovalue","entryCurrent","LayoutAnimation","setIntervalObject","layoutAnimation","opacity_1","setIntervalObjects_1","updateOpacity","objValue","layoutTimer","stop","differenceX","differenceY","animationComplete","HierarchicalTree","layoutProp","viewport","uniqueId","anchorX","anchorY","firstLevelNodes","centerNode","levels","maxLevel","graphNodes","horizontalSpacing","verticalSpacing","setUpLayoutInfo","tree","hasSubTree","updateTree","rootInfo","updateAnchor","updateNodes","updateConnectors","level","dontupdate","dimensions","lev","hasChild","getDimensions","assistants","treeBounds","shapeBounds","levelBounds","asstBounds","setDepthSpaceForAssitants","updateHorizontalTreeWithMultipleRows","updateVerticalTree","updateHorizontalTree","setBreadthSpaceForAssistants","canMoveBy","treeWidth","translateInfo","dim","translateSubTree","subTreeTranslation","updateLeafNode","enableRouting","asstDif","firstChildInfo","findIntersectingLevels","actualLevel","treeIntersect","spaceLeftFromPrevSubTree","translated","shiftSubordinates","rBounds","updateRearBounds","bnds","lastLevel","isLastLeaf","findLevel","vSpace","asstHeight","asstElement","asst","asstWidth","uniteRects","shape1","childWidth","childHeight","actBounds","oldActBounds","childInfo","canMoveValue","translateSibilingsBy","leftCenter","rightCenter","minTranslation","splitChildrenInRows","unique","leftTree","rightTree","splitRows","treeInfo","rightMost","updateLeftTree","rightX","rightBounds","alignRowsToCenter","leftBounds","centered","centerObjct","childDimension","centeredX","centeredY","updateRearBoundsOfTree","childBnds","half","dontUpdate","oddBounds","evenBounds","oddLevels","findOffset","canMoveBy_1","extend","dummy","treeType","dif","intersectingLevels","getParentNode","depth","layoutInfo","layoutBounds","mod","viewPortBounds","visited","getConnectorSegments","get3Points","updateSegmentsForHorizontalOrientation","updateSegmentsForBalancedTree","get5Points","relative","getSegmentsForMultipleRows","startingPoint","getSegmentsFromPoints","point_1","dx","MindMap","isRoot","checkRoot","fistLevelNodes","findFirstLevelNodes","leftNodes","rightNodes","getMindmapBranch","fistLevelNodes_1","updateMindMapBranch","nodes_2","excludeNodes","newCollection","exclude","newCollection_1","outEdge","RadialTree","layoutNodes","depthFirstAllignment","populateLevels","transformToCircleLayout","nodeInfo","obj1","obj2","segmentOffset","stages","full","filter","newlevel","nodeInfo1","nodeInfo2","actualCircumference","circumference","GraphForceNode","gnNode","velocityX","velocityY","graphNode","location","applyChanges","SymmetricLayout","cdCOEF","cfMAXVELOCITY","cnMAXITERACTION","cnSPRINGLENGTH","mszMaxForceVelocity","doGraphLayout","graphLayoutManager","graph","Bounds","getModelBounds","lstGraphNodes","GraphNodes","lstNodes","convertGraphNodes","preLayoutNodes","nLenght","makeSymmetricLayout","appendForces","resetGraphPosition","rcBounds","fMaxSize","ptCenter","dRotateAngle","dAngle","getForceNode","forceNode","gnChild","calcNodesForce","vtx1","vtx2","normalDistance","calcRelatesForce","updateNeigbour","gfnNode","ptPoint","szMin","ptLocation","lstToReturn","keys_1","tag","vtSource","vtTarget","pointDistance","lineAngle","calcForce","radians","vx","vy","atan","symmetricLayout","GraphLayoutManager","minDist","fOffset","visitedStack","cycleEdgesCollection","graphObjects","passedNodes","selectionList","mhelperSelectedNode","nodeCollection_1","nodeGraphObject","graphType","connectorGraphObject","updateLayout1","modelBounds","trnsX","lNodes","nodesToLayout","detectCyclesInGraph","nodesCount","cycleConnColln","nodeSymbols","isCycleEdge","dictionaryLength","getNodesToPosition","selectNodes","nodeGraph","exploreGraphEdge","addNode","isConnectedToAnotherNode","LeftMargin","TopMargin","selectConnectedNodes","nodeName","dictionaryContains","Added","getConnectedRelatives","exploreRelatives","addGraphNode","exploreRelatives1","relativesToExplore","fromNode","toNode","getConnectedParents","getConnectedChildren","keyObj","gnNodeChildren","setNode","findNode","nIndex","fullName","nLength","nodeHelper","bFoundConnectedNode","searchEdgeCollection","edgesToSearchThrough","connectionDirection","nodeLink","nodeToAdd","collectionToAdd","vertex","currentStack","getUnVisitedChildNodes","currentEdge","con","ComplexHierarchicalTree","HierarchicalLayoutUtil","crossReduction","CrossReduction","createVertex","geometry","getEdges","findRoots","vertices","roots","best","maxDiff","conns","getVisibleTerminal","terminalCache","traverse","directed","currentComp","hierarchyVertices","filledVertices","vertexID","edgeIsSource","netCount","isSource2","comp","marginX","marginY","filledVertexSet","candidateRoots","vertexSet","limit","tmp","MultiParentModel","cycleStage","layeringStage","crossingStage","placementStage","clnode","dnode","coordinateAssignment","widestRankValue","placementStageExecute","plalementChange","calculateWidestRank","lastRankMaxCellSize","rankSizes","rankOffset","rankValue","maxRank","maxCellSize","rank","ranks","localOffset","isVertex","numEdges","setXY","setTempVariable","widestRank","distanceToNextRank","minRank","isY","rankCoordinates","stage","maxOffset","initialCoords","facade","isAncestor","otherNode","hashCode","weightedCellSorter","weightedValue","rankIndex","minNode","nodeList","nodeWrapper","setDictionaryForSorter","maxTries","cellWrapper","shift","nextLayerConnectedCells","getConnectedCellsOnLayer","previousLayerConnectedCells","nextConnectedCount","prevConnectedCount","medianNextLevel","medianXValue","medianPreviousLevel","numConnectedNeighbours","getTempVariable","cellMedian","tempValue","leftCell","leftLimit","intraCellSpacing","rightCell","rightLimit","updateNodeList","connectedCell","connectedCellWrapper","getDictionaryForSorter","connectedCells","medianValues","medianPoint","jettyPositions","currentYDelta","currentXDelta","bestOffsetDelta","maxIterations","setCellLocations","getValues","vertexMapper","setVertexLocation","garphModelsetVertexLocation","realCell","positionX","positionY","initialRank","fixRanks","startNodes","internalNodes","getDictionaryValues","startNodesCopy","layerDeterminingEdges","internalNode","connectsAsTarget","edgesToBeMarked","connectsAsSource","allEdgesScanned","minimumLayer","internalEdge","removedCell","currentMaxLayer","seenNodes","unseenNodesArray","unseenNodes","rootsArray","modelRoots","getDictionary","visit","seenNodesCopy","invert","connectingEdge","isReversed","getEdgesBetween","trg","dlayout","multiObjectIdentityCounter","dfsCount","hierarchicalUtil","internalVertices","hierarchicalLayout","createInternalCells","realEdges","realEdge","targetCell","internalTargetCell","setDictionary","undirectedEdges","directedEdges","ids","rankList","oldRootsArray","updateMinMaxRank","seen","dic","flag","layoutObjectId","visitor","dfsRoots","trackAncestors","extendedDfs","depthFirstSearch","rootId","updateConnectionRank","outgoingEdges","traversedList","removeConnectionEdge","cHash","hashCodeLength","transients","shallow","calculateCrossings","numRanks","totalCrossings","calculateRankCrossing","previousRank","tmpIndices","rankPosition","nodeIndices","connectedNode","otherCellRankPosition","indices","firstIndex","treeSize","treeIndex","nestedBestRanks","iterationsWithoutImprovement","currentBestCrossings","weightedMedian","candidateCrossings","check","iteration","downwardSweep","medianRank","isPrevious","connectedlayer","connectedAs","medianValue","arrayCount","leftMedian","rightMedian","numCellsForRank","reservedPositions","sorterEntry","nextLevelConnectedCells","nextRankValue","compare","Palette","SymbolPreview","SymbolPalette","symbolTable","laneTable","clonedElement","sender","symbol","selectedSymbols","getSymbolPreview","enableSearch","createTextbox","accordionElement","title","expanded","isInteraction","collapse","expandMode","refreshPalettes","accordionDiv","Accordion","updatePalettes","allowDrag","initSymbols","symbolGroup","laneHeight","swimLaneShape","symbolHeight","symbolWidth","laneStyle","headerStyle","headerObj","addPaletteItem","prepareSymbol","group_1","renderPalette","paletteDiv","renderSymbols","paletteName","paletteSymbol","symbolPaletteGroup","param","getSymbolContainer","removePaletteItem","symbolId","symbolContainer","getSymbolTemplate","getContainer","symbolInfo","getSymbolInfo","actualWidth","actualHeight","symbolMargin","fit","scaleSymbol","getSymbolDescription","parentDiv","symbolPreviewWidth","symbolPreviewHeight","symbolPreview","measureAndArrangeSymbol","previewContainer","getHtmlSymbol","getGroupParent","updateSymbolSize","preview","getSymbolSize","HTMLCanvasElement","isPreview","offsetTop","offsetLeft","highlightedSymbol","srcElement","searchPalette","keyUp","palette_1","timer","HTMLInputElement","oldSymbol","palette","initDraggable","Draggable","dragTarget","dragStart","dragStop","cursorAt","measureChild","scaleChildren","scaleGroup","childContainer","symGroup","searchDiv","textBox","placeholder","span","filterSymbols","createSearchPalette","symbolGroup_1","emptyDiv","paletteCollection","addItem","Overview","actionName","prevPoint","viewPortRatio","setParent","renderCanvas","oldparent","removeDocument","getDiagram","documentMouseUp","xlink","eWidth","eHeight","bRect","screenX","screenY","innerWidth","innerHeight","renderHtmlLayer","addOverviewRectPanel","htmlDiv","ovw","innerrect","renderOverviewCorner","transrect","updateOverviewRectangle","resizeDirection","updateHelper","difx_1","dify_1","updateOverviewrect","updateOverviewCorner","transattr","rectname","translateOverviewRectangle","offwidth","offheight","updateParentView","renderOverviewRect","viewwidth","viewheight","scrollOverviewRect","svgRect","scaled","delx","dely","webkitTransform","widthratio","heightratio","initHelper","stroke-dasharray","shape-rendering"],"mappings":"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mB,WAAS,QACV/b,EAAQka,UAAW,WAAQ,IAC9BU,IACImB,WAAS,SACV/b,EAAQka,UAAW,aAAU,IAChCU,IACIqG,aAAYiV,KACbl2B,EAAQka,UAAW,0BAAuB,IAC7CU,IACImB,WAASlhC,qBAAmB6F,UAC7Bsf,EAAQka,UAAW,kBAAe,IACrCU,IACImB,WAASz+B,eAAaoD,UACvBsf,EAAQka,UAAW,WAAQ,IAC9BU,IACImB,WAAS,QACV/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,WAAS,gBACV/b,EAAQka,UAAW,sBAAmB,IACzCU,IACIqG,aAAY2mB,KACb5nC,EAAQka,UAAW,mBAAgB,IACtCU,IACIqG,aAAY6mB,KACb9nC,EAAQka,UAAW,oBAAiB,IACvCU,IACIqG,aAAYomB,KACbrnC,EAAQka,UAAW,mBAAgB,IACtCU,IACIqG,aAAYs6C,KACbv7D,EAAQka,UAAW,4BAAyB,IAC/CU,IACImE,gBAAetjC,KAChBukB,EAAQka,UAAW,YAAS,IAC/BU,IACImB,cACD/b,EAAQka,UAAW,oBAAiB,IACvCU,IACImE,gBAAe/kC,KAChBgmB,EAAQka,UAAW,iBAAc,IACpCU,IACImB,gBACD/b,EAAQka,UAAW,oBAAiB,IACvCU,IACIqG,aAAYiE,KACbllB,EAAQka,UAAW,cAAW,IACjCU,IACIqG,aAAYgnB,KACbjoC,EAAQka,UAAW,yBAAsB,IAC5CU,IACImB,cACD/b,EAAQka,UAAW,cAAW,IACjCU,IACImB,cACD/b,EAAQka,UAAW,qBAAkB,IACxCU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,cACD/b,EAAQka,UAAW,2BAAwB,IAC9CU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,cACD/b,EAAQka,UAAW,qBAAkB,IACxCU,IACImB,cACD/b,EAAQka,UAAW,wBAAqB,IAC3CU,IACImB,cACD/b,EAAQka,UAAW,oBAAiB,IACvCU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU,IACImB,cACD/b,EAAQka,UAAW,sBAAmB,IACzCU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"}