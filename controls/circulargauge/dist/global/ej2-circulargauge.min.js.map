{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/legend/legend.js","../../src/circular-gauge/circular-gauge.js","../../src/global.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            if ((template.charAt(0) !== 'a' || template.charAt(0) !== 'A') && template.length !== 1) {\n                templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n            }\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    var tooltipData = templateFn ? templateFn({}, null, null, gauge.element.id + 'Template') : [];\n    if (templateFn && tooltipData.length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn({}, null, null, gauge.element.id + 'Template');\n        var templateLength = templateElement.length;\n        while (templateLength > 0) {\n            element.appendChild(templateElement[0]);\n            templateLength--;\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using format for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    var isLegend = options.id.indexOf('Shape') > -1;\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + (x + (isLegend ? width / 2 : 0)) + ' ' + y + ' ' + 'L' + ' ' + (x + width) + ' ' +\n                (y + (isLegend ? height : height / 2)) + 'L' + ' ' + x + ' ' + (y + height) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + (x + width) + ' ' + y + ' ' + 'L' + ' ' + (x + (isLegend ? width / 2 : width)) + ' ' + (y + height) +\n                'L' + ' ' + x + ' ' + (y + (isLegend ? 0 : height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n        case 'RightArrow':\n            var space = 2;\n            path = 'M' + ' ' + (locX + (-width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (-width / 2)) + ' ' + (locY + (height / 2)) + ' L' + ' ' + (locX + (-width / 2)) + ' ' +\n                (locY + (height / 2) - space) + ' ' + 'L' + ' ' + (locX + (width / 2) - (2 * space)) + ' ' + (locY) +\n                ' L' + (locX + (-width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'LeftArrow':\n            options.fill = options.stroke;\n            options.stroke = 'transparent';\n            space = 2;\n            path = 'M' + ' ' + (locX + (width / 2)) + ' ' + (locY - (height / 2)) + ' ' +\n                'L' + ' ' + (locX + (-width / 2)) + ' ' + (locY) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' + 'L' + ' ' +\n                (locX + (width / 2)) + ' ' + (locY + (height / 2) - space) + ' L' + ' ' + (locX + (-width / 2) + (2 * space))\n                + ' ' + (locY) + ' L' + (locX + (width / 2)) + ' ' + (locY - (height / 2) + space) + ' Z';\n            merge(options, { 'd': path });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/**\n * Internal use of circular gauge location\n */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nexport function textTrim(maxWidth, text, font) {\n    var label = text;\n    var size = measureText(text, font).width;\n    if (size > maxWidth) {\n        var textLength = text.length;\n        for (var i = textLength - 1; i >= 0; --i) {\n            label = text.substring(0, i) + '...';\n            size = measureText(label, font).width;\n            if (size <= maxWidth) {\n                return label;\n            }\n        }\n    }\n    return label;\n}\n/** @private */\nexport function showTooltip(text, x, y, areaWidth, id, element) {\n    //let id1: string = 'EJ2_legend_tooltip';\n    var tooltip = document.getElementById(id);\n    var width = measureText(text, {\n        fontFamily: 'Segoe UI', size: '12px',\n        fontStyle: 'Normal', fontWeight: 'Regular'\n    }).width + 5;\n    x = (x + width > areaWidth) ? x - width : x;\n    if (!tooltip) {\n        tooltip = createElement('div', {\n            innerHTML: text,\n            id: id,\n            styles: 'top:' + (y + 15).toString() + 'px;left:' + (x + 15).toString() +\n                'px;background-color: rgb(255, 255, 255) !important; color:black !important; ' +\n                'position:absolute;border:1px solid rgb(112, 112, 112); padding-left : 3px; padding-right : 2px;' +\n                'padding-bottom : 2px; padding-top : 2px; font-size:12px; font-family: \"Segoe UI\"'\n        });\n        element.appendChild(tooltip);\n    }\n    else {\n        tooltip.innerHTML = text;\n        tooltip.style.top = (y + 15).toString() + 'px';\n        tooltip.style.left = (x + 15).toString() + 'px';\n    }\n}\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    Theme.legendLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme.toLowerCase()) {\n        case 'materialdark':\n        case 'fabricdark':\n        case 'bootstrapdark':\n            style = {\n                backgroundColor: '#333232',\n                titleFontColor: '#ffffff',\n                tooltipFillColor: '#FFFFFF',\n                tooltipFontColor: '#000000',\n                labelColor: '#DADADA',\n                lineColor: '#C8C8C8',\n                majorTickColor: '#C8C8C8',\n                minorTickColor: '#9A9A9A',\n                pointerColor: '#9A9A9A',\n                capColor: '#9A9A9A',\n                needleColor: '#9A9A9A',\n                needleTailColor: '#9A9A9A'\n            };\n            break;\n        case 'highcontrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'bootstrap4':\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D',\n                fontFamily: 'HelveticaNeue-Medium',\n                fontSize: '16px',\n                labelFontFamily: 'HelveticaNeue',\n                tooltipFillOpacity: 1,\n                tooltipTextOpacity: 0.9\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#E0E0E0',\n                majorTickColor: '#9E9E9E',\n                minorTickColor: '#9E9E9E',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * To set tooltip properties for range tooltip.\n */\nvar RangeTooltip = /** @class */ (function (_super) {\n    __extends(RangeTooltip, _super);\n    function RangeTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], RangeTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], RangeTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], RangeTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], RangeTooltip.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], RangeTooltip.prototype, \"showAtMousePosition\", void 0);\n    return RangeTooltip;\n}(ChildProperty));\nexport { RangeTooltip };\n/**\n * To set tooltip properties for annotation tooltip.\n */\nvar AnnotationTooltip = /** @class */ (function (_super) {\n    __extends(AnnotationTooltip, _super);\n    function AnnotationTooltip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], AnnotationTooltip.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], AnnotationTooltip.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], AnnotationTooltip.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], AnnotationTooltip.prototype, \"border\", void 0);\n    return AnnotationTooltip;\n}(ChildProperty));\nexport { AnnotationTooltip };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Complex({}, RangeTooltip)\n    ], TooltipSettings.prototype, \"rangeSettings\", void 0);\n    __decorate([\n        Complex({}, AnnotationTooltip)\n    ], TooltipSettings.prototype, \"annotationSettings\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    __decorate([\n        Property('Pointer')\n    ], TooltipSettings.prototype, \"type\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('')\n    ], Range.prototype, \"legendText\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"hideIntersectingLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement, updateBlazorTemplate } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    //tslint:disable\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = this.gauge.availableSize.width;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n            for (var i = 0; i < this.gauge.axes[index].annotations.length; i++) {\n                updateBlazorTemplate(this.gauge.element.id + '_Axis' + index + '_ContentTemplate' + i, 'ContentTemplate', this.gauge.axes[index].annotations[i]);\n            }\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var _this = this;\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        if (this.gauge.isBlazor) {\n            var cancel = argsData.cancel, name_1 = argsData.name, content = argsData.content, textStyle = argsData.textStyle;\n            argsData = { cancel: cancel, name: name_1, content: content, annotation: annotation, textStyle: textStyle };\n        }\n        this.gauge.trigger('annotationRender', argsData, function (observedArgs) {\n            var templateFn;\n            var templateElement;\n            var blazor = 'Blazor';\n            if (!argsData.cancel) {\n                templateFn = getTemplateFunction(argsData.content);\n                if (templateFn && (!window[blazor] ? templateFn(axis, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex).length : {})) {\n                    templateElement = Array.prototype.slice.call(templateFn(!window[blazor] ? axis : {}, null, null, _this.gauge.element.id + '_Axis' + axisIndex + '_ContentTemplate' + annotationIndex));\n                    var length_1 = templateElement.length;\n                    for (var i = 0; i < length_1; i++) {\n                        if (window[blazor] && templateElement[i].innerHTML && argsData.content.indexOf('ContentTemplate') === -1) {\n                            templateElement[i].innerHTML = argsData.content;\n                        }\n                        childElement.appendChild(templateElement[i]);\n                    }\n                }\n                else {\n                    childElement.appendChild(createElement('div', {\n                        innerHTML: argsData.content,\n                        styles: getFontStyle(argsData.textStyle)\n                    }));\n                }\n                _this.updateLocation(childElement, axis, annotation);\n                element.appendChild(childElement);\n            }\n        });\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize, stringToNumber } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement, remove } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        this.gaugeId = this.gauge.element.getAttribute('id');\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if ((this.tooltip.type.indexOf('Pointer') > -1) && (target.id.indexOf('_Pointer_') >= 0) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            if (this.tooltipEle.childElementCount !== 0 && !this.gauge.enablePointerDrag && !this.gauge.tooltip.showAtMousePosition) {\n                return null;\n            }\n            var roundValue = this.roundedValue(this.currentPointer.currentValue);\n            var pointerContent = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: pointerContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge, appendInBodyTag: false\n            };\n            if (this.gauge.isBlazor) {\n                var name_1 = tooltipArgs.name, cancel = tooltipArgs.cancel, content = tooltipArgs.content, location_1 = tooltipArgs.location, tooltip = tooltipArgs.tooltip, event_1 = tooltipArgs.event, appendInBodyTag = tooltipArgs.appendInBodyTag;\n                tooltipArgs = { name: name_1, cancel: cancel, content: content, location: location_1, tooltip: tooltip, event: event_1, appendInBodyTag: appendInBodyTag };\n            }\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && template.length === 1) {\n                template = template[template[0]];\n            }\n            if (!this.tooltip.showAtMousePosition) {\n                if (template) {\n                    var elementSize = getElementSize(template, this.gauge, this.tooltipEle);\n                    this.tooltipRect = Math.abs(axisRect.left - svgRect.left) > elementSize.width ?\n                        this.findPosition(rect, angle, pointerContent, tooltipArgs.location) : rect;\n                }\n                else {\n                    this.findPosition(rect, angle, pointerContent, tooltipArgs.location);\n                }\n            }\n            else {\n                tooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!tooltipArgs.cancel && !samePointerEle) {\n                tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || this.gauge.themeStyle.tooltipFontColor;\n                tooltipArgs.tooltip.textStyle.fontFamily = this.gauge.themeStyle.fontFamily || tooltipArgs.tooltip.textStyle.fontFamily;\n                tooltipArgs.tooltip.textStyle.opacity = this.gauge.themeStyle.tooltipTextOpacity || tooltipArgs.tooltip.textStyle.opacity;\n                this.svgTooltip = this.svgTooltipCreate(this.svgTooltip, tooltipArgs, template, this.arrowInverted, this.tooltipRect, this.gauge, tooltipArgs.tooltip.fill, tooltipArgs.tooltip.textStyle, tooltipArgs.tooltip.border);\n                this.svgTooltip.opacity = this.gauge.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (template && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else if ((this.tooltip.type.indexOf('Range') > -1) && (target.id.indexOf('_Range_') >= 0) && (!this.gauge.isDrag) &&\n            (target.id.indexOf(this.gaugeId) >= 0)) {\n            var rangeSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var rangeElementRect = this.gauge.element.getBoundingClientRect();\n            var rangeAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(rangeElementRect.left - rangeSvgRect.left), Math.abs(rangeElementRect.top - rangeSvgRect.top), rangeSvgRect.width, rangeSvgRect.height);\n            var currentRange = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentRange.axisIndex];\n            this.currentRange = (this.currentAxis.ranges)[currentRange.pointerIndex];\n            var rangeAngle = getAngleFromValue((this.currentRange.end - Math.abs((this.currentRange.end - this.currentRange.start) / 2)), this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var rangeTooltipFormat = this.gauge.tooltip.rangeSettings.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = rangeTooltipFormat && (rangeTooltipFormat.match('{end}') !== null ||\n                rangeTooltipFormat.match('{start}') !== null);\n            var rangeFormat = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(rangeTooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            this.tooltipElement();\n            var roundStartValue = this.roundedValue(this.currentRange.start);\n            var roundEndValue = this.roundedValue(this.currentRange.end);\n            var startData = (this.currentRange.start).toString();\n            var endData = (this.currentRange.end).toString();\n            var rangeContent = customLabelFormat ?\n                rangeTooltipFormat.replace(/{start}/g, startData).replace(/{end}/g, endData) :\n                'Start : ' + rangeFormat(roundStartValue) + '<br>' + 'End : ' + rangeFormat(roundEndValue);\n            location = getLocationFromAngle(rangeAngle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.rangeSettings.template && ((rangeAngle >= 150 && rangeAngle <= 250) ||\n                (rangeAngle >= 330 && rangeAngle <= 360) ||\n                (rangeAngle >= 0 && rangeAngle <= 45))) ? (location.x + 10) : location.x;\n            var rangeTooltipArgs = {\n                name: tooltipRender, cancel: false, content: rangeContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, range: this.currentRange, event: e, gauge: this.gauge, appendInBodyTag: false\n            };\n            if (this.gauge.isBlazor) {\n                var gauge = rangeTooltipArgs.gauge, blazorEventArgs = __rest(rangeTooltipArgs, [\"gauge\"]);\n                rangeTooltipArgs = blazorEventArgs;\n            }\n            this.gauge.trigger(tooltipRender, rangeTooltipArgs);\n            var rangeTemplate = rangeTooltipArgs.tooltip.rangeSettings.template;\n            if (rangeTemplate !== null && rangeTemplate.length === 1) {\n                rangeTemplate = rangeTemplate[rangeTemplate[0]];\n            }\n            if (rangeTemplate) {\n                rangeTemplate = rangeTemplate.replace(/[$]{start}/g, startData);\n                rangeTemplate = rangeTemplate.replace(/[$]{end}/g, endData);\n            }\n            if (!this.tooltip.rangeSettings.showAtMousePosition) {\n                if (rangeTemplate) {\n                    var elementSize = getElementSize(rangeTemplate, this.gauge, this.tooltipEle);\n                    this.tooltipRect = Math.abs(rangeAxisRect.left - rangeSvgRect.left) > elementSize.width ?\n                        this.findPosition(rect, rangeAngle, rangeContent, rangeTooltipArgs.location) : rect;\n                }\n                else {\n                    this.findPosition(rect, rangeAngle, rangeContent, rangeTooltipArgs.location);\n                }\n            }\n            else {\n                rangeTooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!rangeTooltipArgs.cancel) {\n                rangeTooltipArgs.tooltip.rangeSettings.textStyle.color = rangeTooltipArgs.tooltip.rangeSettings.textStyle.color ||\n                    this.gauge.themeStyle.tooltipFontColor;\n                rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily = this.gauge.themeStyle.fontFamily ||\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.fontFamily;\n                rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity = this.gauge.themeStyle.tooltipTextOpacity ||\n                    rangeTooltipArgs.tooltip.rangeSettings.textStyle.opacity;\n                this.svgTooltip = this.svgTooltipCreate(this.svgTooltip, rangeTooltipArgs, rangeTemplate, this.arrowInverted, this.tooltipRect, this.gauge, rangeTooltipArgs.tooltip.rangeSettings.fill, rangeTooltipArgs.tooltip.rangeSettings.textStyle, rangeTooltipArgs.tooltip.rangeSettings.border);\n                this.svgTooltip.opacity = this.gauge.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (rangeTemplate && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else if ((this.tooltip.type.indexOf('Annotation') > -1) && this.checkParentAnnotationId(target) && ((!this.gauge.isDrag)) &&\n            (this.annotationTargetElement.id.indexOf(this.gaugeId) >= 0)) {\n            var annotationSvgRect = this.gauge.svgObject.getBoundingClientRect();\n            var annotationElementRect = this.gauge.element.getBoundingClientRect();\n            var annotationAxisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(annotationElementRect.left - annotationSvgRect.left), Math.abs(annotationElementRect.top - annotationSvgRect.top), annotationSvgRect.width, annotationSvgRect.height);\n            var currentAnnotation = getPointer(this.annotationTargetElement.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentAnnotation.axisIndex];\n            this.currentAnnotation = (this.currentAxis.annotations)[currentAnnotation.pointerIndex];\n            var annotationAngle = (this.currentAnnotation.angle - 90);\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            var annotationContent = (this.gauge.tooltip.annotationSettings.format !== null) ?\n                this.gauge.tooltip.annotationSettings.format : '';\n            location = getLocationFromAngle(annotationAngle, stringToNumber(this.currentAnnotation.radius, this.currentAxis.currentRadius), this.gauge.midPoint);\n            location.x = (this.tooltip.annotationSettings.template && ((annotationAngle >= 150 && annotationAngle <= 250) ||\n                (annotationAngle >= 330 && annotationAngle <= 360) || (annotationAngle >= 0 && annotationAngle <= 45))) ?\n                (location.x + 10) : location.x;\n            var annotationTooltipArgs = {\n                name: tooltipRender, cancel: false, content: annotationContent, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, annotation: this.currentAnnotation, event: e, gauge: this.gauge, appendInBodyTag: false\n            };\n            if (this.gauge.isBlazor) {\n                var gauge = annotationTooltipArgs.gauge, blazorEventArgs = __rest(annotationTooltipArgs, [\"gauge\"]);\n                annotationTooltipArgs = blazorEventArgs;\n            }\n            this.gauge.trigger(tooltipRender, annotationTooltipArgs);\n            var annotationTemplate = annotationTooltipArgs.tooltip.annotationSettings.template;\n            if (annotationTemplate !== null && annotationTemplate.length === 1) {\n                annotationTemplate = annotationTemplate[annotationTemplate[0]];\n            }\n            var elementSizeAn = this.annotationTargetElement.getBoundingClientRect();\n            this.tooltipPosition = 'RightTop';\n            this.arrowInverted = true;\n            annotationTooltipArgs.location.x = annotationTooltipArgs.location.x + (elementSizeAn.width / 2);\n            this.tooltipRect = new Rect(rect.x, rect.y, rect.width, rect.height);\n            if (!annotationTooltipArgs.cancel && (this.gauge.tooltip.annotationSettings.format !== null ||\n                this.gauge.tooltip.annotationSettings.template !== null)) {\n                annotationTooltipArgs.tooltip.annotationSettings.textStyle.color = annotationTooltipArgs.tooltip.textStyle.color ||\n                    this.gauge.themeStyle.tooltipFontColor;\n                annotationTooltipArgs.tooltip.annotationSettings.textStyle.fontFamily = this.gauge.themeStyle.fontFamily ||\n                    annotationTooltipArgs.tooltip.textStyle.fontFamily;\n                annotationTooltipArgs.tooltip.annotationSettings.textStyle.opacity = this.gauge.themeStyle.tooltipTextOpacity ||\n                    annotationTooltipArgs.tooltip.textStyle.opacity;\n                this.svgTooltip = this.svgTooltipCreate(this.svgTooltip, annotationTooltipArgs, annotationTemplate, this.arrowInverted, this.tooltipRect, this.gauge, annotationTooltipArgs.tooltip.annotationSettings.fill, annotationTooltipArgs.tooltip.annotationSettings.textStyle, annotationTooltipArgs.tooltip.annotationSettings.border);\n                this.svgTooltip.opacity = this.gauge.themeStyle.tooltipFillOpacity || this.svgTooltip.opacity;\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (annotationTemplate && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    ;\n    /**\n     * Method to create tooltip svg element.\n     */\n    GaugeTooltip.prototype.svgTooltipCreate = function (svgTooltip, tooltipArg, template, arrowInverted, tooltipRect, gauge, fill, textStyle, border) {\n        svgTooltip = new Tooltip({\n            enable: true,\n            data: { value: tooltipArg.content },\n            template: template,\n            enableAnimation: tooltipArg.tooltip.enableAnimation,\n            content: [tooltipArg.content],\n            location: tooltipArg.location,\n            inverted: arrowInverted,\n            areaBounds: tooltipRect,\n            fill: fill || gauge.themeStyle.tooltipFillColor,\n            textStyle: textStyle,\n            availableSize: gauge.availableSize,\n            border: border,\n            blazorTemplate: { name: 'TooltipTemplate', parent: gauge.tooltip }\n        });\n        return svgTooltip;\n    };\n    /**\n     * Method to create or modify tolltip element.\n     */\n    GaugeTooltip.prototype.tooltipElement = function () {\n        if (document.getElementById(this.tooltipId)) {\n            this.tooltipEle = document.getElementById(this.tooltipId);\n        }\n        else {\n            this.tooltipEle = createElement('div', {\n                id: this.tooltipId,\n                className: 'EJ2-CircularGauge-Tooltip',\n                styles: 'position: absolute;pointer-events:none;'\n            });\n            document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n        }\n    };\n    ;\n    /**\n     * Method to get parent annotation element.\n     */\n    GaugeTooltip.prototype.checkParentAnnotationId = function (child) {\n        this.annotationTargetElement = child.parentElement;\n        while (this.annotationTargetElement != null) {\n            if ((this.annotationTargetElement.id.indexOf('_Annotation_') >= 0)) {\n                child = this.annotationTargetElement;\n                return true;\n            }\n            this.annotationTargetElement = this.annotationTargetElement.parentElement;\n        }\n        return false;\n    };\n    /**\n     * Method to apply label rounding places.\n     */\n    GaugeTooltip.prototype.roundedValue = function (currentValue) {\n        var roundNumber;\n        roundNumber = this.currentAxis.roundingPlaces ?\n            parseFloat(currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n            currentValue;\n        return roundNumber;\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            var tooltip = document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0];\n            if (tooltip) {\n                remove(tooltip);\n            }\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        var color = axis.lineStyle.color || this.gauge.themeStyle.lineColor;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var textWidth;\n        var textHeight;\n        var labelsVisible = true;\n        var currentTextWidth;\n        var currentTextHeight;\n        var previousLocation;\n        var currentLocation;\n        var lastLabelLocation;\n        var lastLabelAngle;\n        var lastLabelAnchor;\n        var lastTextWidth;\n        var lastTextHeight;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        var color = style.font.color || this.gauge.themeStyle.labelColor;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) + (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) + (style.autoAngle ? labelPadding : 0));\n        }\n        //To get and store lastlabelposition\n        if (axis.hideIntersectingLabel) {\n            lastLabelAngle = Math.round(getAngleFromValue(labelCollection[labelCollection.length - 1].value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            lastLabelLocation = getLocationFromAngle(lastLabelAngle, radius, gauge.midPoint);\n            lastLabelAnchor = this.findAnchor(lastLabelLocation, style, lastLabelAngle, labelCollection[labelCollection.length - 1]);\n            lastTextWidth = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                labelCollection[0].size.width : labelCollection[labelCollection.length - 1].size.width;\n            lastTextHeight = (!axis.showLastLabel && (isCompleteAngle(axis.startAngle, axis.endAngle)) && (style.hiddenLabel !== 'First')) ?\n                (!style.autoAngle ? labelCollection[0].size.height : labelCollection[0].size.width) :\n                (!style.autoAngle ? labelCollection[labelCollection.length - 1].size.height :\n                    labelCollection[labelCollection.length - 1].size.width);\n            lastTextHeight = lastTextHeight - this.offsetAxisLabelsize(lastLabelAngle, lastTextHeight);\n            lastLabelLocation = this.getAxisLabelStartPosition(lastLabelLocation, lastTextWidth, style, lastTextHeight, lastLabelAnchor, lastLabelAngle);\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            //To get the current label and previous label position for initial stage\n            if (axis.hideIntersectingLabel) {\n                currentLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                currentTextWidth = label.size.width;\n                currentTextHeight = !style.autoAngle ? label.size.height : currentTextWidth;\n                currentTextHeight = currentTextHeight - this.offsetAxisLabelsize(angle, currentTextHeight);\n                currentLocation = this.getAxisLabelStartPosition(currentLocation, currentTextWidth, style, currentTextHeight, anchor, angle);\n                if (i === 0) {\n                    previousLocation = getLocationFromAngle(angle, radius, gauge.midPoint);\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation = this.getAxisLabelStartPosition(previousLocation, textWidth, style, textHeight, anchor, angle);\n                }\n            }\n            if ((i === 0 && style.hiddenLabel === 'First') || (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            style.font.fontFamily = this.gauge.themeStyle.labelFontFamily || style.font.fontFamily;\n            if (axis.hideIntersectingLabel && (i !== 0)) {\n                //To remove the labels which is intersecting with last label.\n                var lastlabel = ((i !== (labelCollection.length - 1)) && ((isCompleteAngle(axis.startAngle, axis.endAngle) ||\n                    axis.showLastLabel))) ? this.FindAxisLabelCollision(lastLabelLocation, lastTextWidth, lastTextHeight, currentLocation, currentTextWidth, currentTextHeight) : true;\n                //Checking wether the axis label is intersecting with previous label or not.\n                labelsVisible = (this.FindAxisLabelCollision(previousLocation, textWidth, textHeight, currentLocation, currentTextWidth, currentTextHeight) && lastlabel);\n            }\n            else {\n                labelsVisible = true;\n            }\n            if (labelsVisible || (i === labelCollection.length - 1)) {\n                //To hide first and last label based on requirement\n                label.text = (!axis.showLastLabel && ((isCompleteAngle(axis.startAngle, axis.endAngle) && style.hiddenLabel !== 'First') ||\n                    !labelsVisible)\n                    && axis.hideIntersectingLabel && (i === (length_1 - 1))) ? '' : label.text;\n                label.text = (axis.showLastLabel && axis.hideIntersectingLabel && isCompleteAngle(axis.startAngle, axis.endAngle)\n                    && (i === 0)) ? '' : label.text;\n                textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, color) : color, labelElement, 'pointer-events:none;');\n                if (axis.hideIntersectingLabel) {\n                    textWidth = label.size.width;\n                    textHeight = !style.autoAngle ? label.size.height : textWidth;\n                    textHeight = textHeight - this.offsetAxisLabelsize(angle, textHeight);\n                    previousLocation.x = currentLocation.x;\n                    previousLocation.y = currentLocation.y;\n                }\n            }\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Methode to check whether the labels are intersecting or not.\n     * @private\n     */\n    AxisRenderer.prototype.FindAxisLabelCollision = function (previousLocation, previousWidth, previousHeight, currentLocation, currentWidth, currentHeight) {\n        var labelVisisble = ((previousLocation.x > (currentLocation.x + (currentWidth))) ||\n            ((previousLocation.x + (previousWidth)) < (currentLocation.x)) ||\n            ((previousLocation.y + (previousHeight)) < (currentLocation.y)) || ((previousLocation.y) > (currentLocation.y + (currentHeight))));\n        return labelVisisble;\n    };\n    /**\n     * Methode to get anchor position of label as start.\n     * @private\n     */\n    AxisRenderer.prototype.getAxisLabelStartPosition = function (actualLocation, textWidth, style, textHeight, anchorPosition, angle) {\n        if (anchorPosition === 'end') {\n            actualLocation.x = actualLocation.x - textWidth;\n        }\n        else if (anchorPosition === 'middle') {\n            actualLocation.x = actualLocation.x - (textWidth / 2);\n        }\n        else {\n            actualLocation.x = actualLocation.x;\n        }\n        return actualLocation;\n    };\n    /**\n     * Methode to offset label height and width based on angle.\n     * @private\n     */\n    AxisRenderer.prototype.offsetAxisLabelsize = function (angle, size) {\n        var finalSize = ((angle >= 20 && angle <= 60) || (angle >= 120 && angle <= 160) || (angle >= 200 && angle <= 240) ||\n            (angle >= 300 && angle <= 340)) ? size / 5 : 0;\n        return finalSize;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        var color = minorLineStyle.color || this.gauge.themeStyle.minorTickColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        var color = majorLineStyle.color || this.gauge.themeStyle.majorTickColor;\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, color) : color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', ''), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', ''), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        var color = pointer.color || this.gauge.themeStyle.needleColor;\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        var capcolor = pointer.cap.color || this.gauge.themeStyle.capColor;\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, capcolor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, _this.gauge.isBlazor ? {} : { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var _this = this;\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        var _loop_1 = function (axis) {\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this_1.gauge.moveToCenter && this_1.gauge.axes.length === 1 &&\n                isNullOrUndefined(this_1.gauge.centerX) && isNullOrUndefined(this_1.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this_1.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this_1.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this_1.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this_1.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this_1.gauge.midPoint;\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(startPoint.x - this_1.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this_1.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this_1.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this_1.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this_1.gauge.midPoint) :\n                            this_1.gauge.midPoint;\n                        startYDiff = Math.abs(this_1.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this_1.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this_1.gauge.midPoint);\n                        startXDiff = Math.abs(this_1.gauge.gaugeRect.x - Math.abs(newPoint.x - this_1.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this_1.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this_1.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this_1.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this_1.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this_1.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this_1.gauge.gaugeRect.y + this_1.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this_1.gauge.midPoint.x = this_1.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this_1.gauge.midPoint.y = this_1.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this_1.gauge.gaugeRect.width, this_1.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this_1.calculateNumericInterval(axis, axis.rect);\n            var args;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this_1.gauge,\n                midPoint: this_1.gauge.midPoint, axis: axis\n            };\n            if (this_1.gauge.isBlazor) {\n                var cancel = args.cancel, name_1 = args.name, currentRadius_1 = args.currentRadius, midPoint = args.midPoint;\n                args = { cancel: cancel, name: name_1, currentRadius: currentRadius_1, midPoint: midPoint };\n            }\n            this_1.gauge.trigger('radiusCalculate', args, function () {\n                axis.currentRadius = args.currentRadius;\n                _this.gauge.midPoint = args.midPoint;\n                _this.calculateVisibleLabels(axis);\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            _loop_1(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            if (this.gauge.isBlazor) {\n                argsData = this.getBlazorAxisLabelEventArgs(argsData);\n            }\n            this.gauge.trigger('axisLabelRender', argsData);\n            if (!argsData.cancel) {\n                var labelAvailable = axis.visibleLabels.filter(function (label) { return label.text === argsData.text; });\n                if (!labelAvailable.length) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n                }\n            }\n        }\n        var lastLabel = axis.visibleLabels.length ? axis.visibleLabels[axis.visibleLabels.length - 1].value : null;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            if (this.gauge.isBlazor) {\n                argsData = this.getBlazorAxisLabelEventArgs(argsData);\n            }\n            this.gauge.trigger('axisLabelRender', argsData);\n            if (!argsData.cancel) {\n                var labelExist = axis.visibleLabels.filter(function (label) { return label.text === argsData.text; });\n                if (!labelExist.length) {\n                    axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n                }\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * To get axis label event arguments for Blazor\n     * @return {IAxisLabelRenderEventArgs}\n     * @private\n     */\n    AxisLayoutPanel.prototype.getBlazorAxisLabelEventArgs = function (args) {\n        var cancel = args.cancel, name = args.name, text = args.text, value = args.value;\n        args = { cancel: cancel, name: name, text: text, value: value };\n        return args;\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { appendPath, textElement, PathOption, TextOption, calculateShapes, textTrim, removeElement } from '../utils/helper';\nimport { Rect, Size, GaugeLocation, stringToNumber, measureText, RectOption, getElement, showTooltip } from '../utils/helper';\nimport { Property, Complex, ChildProperty, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Font, Border, Margin } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the location for the legend.\n */\nvar Location = /** @class */ (function (_super) {\n    __extends(Location, _super);\n    function Location() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"x\", void 0);\n    __decorate([\n        Property(0)\n    ], Location.prototype, \"y\", void 0);\n    return Location;\n}(ChildProperty));\nexport { Location };\n/**\n * Configures the legends in charts.\n */\nvar LegendSettings = /** @class */ (function (_super) {\n    __extends(LegendSettings, _super);\n    function LegendSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], LegendSettings.prototype, \"visible\", void 0);\n    __decorate([\n        Property(true)\n    ], LegendSettings.prototype, \"toggleVisibility\", void 0);\n    __decorate([\n        Property('Center')\n    ], LegendSettings.prototype, \"alignment\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"border\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], LegendSettings.prototype, \"shapeBorder\", void 0);\n    __decorate([\n        Property(8)\n    ], LegendSettings.prototype, \"padding\", void 0);\n    __decorate([\n        Property(1)\n    ], LegendSettings.prototype, \"opacity\", void 0);\n    __decorate([\n        Property('Auto')\n    ], LegendSettings.prototype, \"position\", void 0);\n    __decorate([\n        Property('Circle')\n    ], LegendSettings.prototype, \"shape\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], LegendSettings.prototype, \"width\", void 0);\n    __decorate([\n        Complex(Theme.legendLabelFont, Font)\n    ], LegendSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeHeight\", void 0);\n    __decorate([\n        Property(10)\n    ], LegendSettings.prototype, \"shapeWidth\", void 0);\n    __decorate([\n        Property(5)\n    ], LegendSettings.prototype, \"shapePadding\", void 0);\n    __decorate([\n        Complex({ x: 0, y: 0 }, Location)\n    ], LegendSettings.prototype, \"location\", void 0);\n    __decorate([\n        Property('transparent')\n    ], LegendSettings.prototype, \"background\", void 0);\n    __decorate([\n        Complex({ left: 0, right: 0, top: 0, bottom: 0 }, Margin)\n    ], LegendSettings.prototype, \"margin\", void 0);\n    return LegendSettings;\n}(ChildProperty));\nexport { LegendSettings };\n/*\n * Legend module is used to render legend for the Circular Gauge\n */\nvar Legend = /** @class */ (function () {\n    function Legend(gauge) {\n        this.legendRegions = [];\n        this.rowCount = 0; // legend row counts per page\n        this.pageButtonSize = 8;\n        this.pageXCollections = []; // pages of x locations\n        this.maxColumns = 0;\n        this.maxWidth = 0;\n        this.currentPage = 1;\n        this.pagingRegions = [];\n        /**  @private */\n        this.position = 'Auto';\n        this.gauge = gauge;\n        this.toggledIndexes = [];\n        this.legend = this.gauge.legendSettings;\n        this.legendID = this.gauge.element.id + '_gauge_legend';\n        this.addEventListener();\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //   this.gauge.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.gauge.on('click', this.click, this);\n        // this.gauge.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        //  this.gauge.off(Browser.touchMoveEvent, this.mouseMove);\n        this.gauge.off('click', this.click);\n        //  this.gauge.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (axes) {\n        this.legendCollection = [];\n        var range;\n        var text = '';\n        for (var i = 0; i < axes.length; i++) {\n            for (var j = 0; j < axes[i].ranges.length; j++) {\n                range = axes[i].ranges[j];\n                if (!isNullOrUndefined(range.start) && !isNullOrUndefined(range.end) && (range.start !== range.end)) {\n                    text = range.legendText ? range.legendText : range.start + ' - ' + range.end;\n                    this.legendCollection.push(new LegendOptions(text, text, range.color, this.legend.shape, this.legend.visible, this.legend.border, this.legend.shapeBorder, this.legend.shapeWidth, this.legend.shapeHeight, j, i));\n                }\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    Legend.prototype.calculateLegendBounds = function (rect, availableSize) {\n        var legend = this.legend;\n        this.position = (legend.position !== 'Auto') ? legend.position :\n            (availableSize.width > availableSize.height ? 'Right' : 'Bottom');\n        this.legendBounds = new Rect(rect.x, rect.y, 0, 0);\n        this.isVertical = (this.position === 'Left' || this.position === 'Right');\n        if (this.isVertical) {\n            this.legendBounds.height = stringToNumber(legend.height, availableSize.height - (rect.y - this.gauge.margin.top)) || rect.height;\n            this.legendBounds.width = stringToNumber(legend.width || '20%', availableSize.width);\n        }\n        else {\n            this.legendBounds.width = stringToNumber(legend.width, availableSize.width) || rect.width;\n            this.legendBounds.height = stringToNumber(legend.height || '20%', availableSize.height);\n        }\n        this.getLegendBounds(availableSize, this.legendBounds, legend);\n        this.getLocation(this.position, legend.alignment, this.legendBounds, rect, availableSize);\n    };\n    /**\n     * To find legend alignment for chart and accumulation chart\n     */\n    Legend.prototype.alignLegend = function (start, size, legendSize, alignment) {\n        switch (alignment) {\n            case 'Far':\n                start = (size - legendSize) - start;\n                break;\n            case 'Center':\n                start = ((size - legendSize) / 2);\n                break;\n        }\n        return start;\n    };\n    /**\n     * To find legend location based on position, alignment for chart and accumulation chart\n     */\n    Legend.prototype.getLocation = function (position, alignment, legendBounds, rect, availableSize) {\n        var padding = this.legend.border.width;\n        var legendHeight = legendBounds.height + padding + this.legend.margin.top + this.legend.margin.bottom;\n        var legendWidth = legendBounds.width + padding + this.legend.margin.left + this.legend.margin.right;\n        var marginBottom = this.gauge.margin.bottom;\n        if (position === 'Bottom') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + (rect.height - legendHeight) + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, 0, legendHeight);\n        }\n        else if (position === 'Top') {\n            legendBounds.x = this.alignLegend(legendBounds.x, availableSize.width, legendBounds.width, alignment);\n            legendBounds.y = rect.y + padding + this.legend.margin.top;\n            this.subtractThickness(rect, 0, 0, legendHeight, 0);\n        }\n        else if (position === 'Right') {\n            legendBounds.x = rect.x + (rect.width - legendBounds.width) + this.legend.margin.right;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, 0, legendWidth, 0, 0);\n        }\n        else {\n            legendBounds.x = legendBounds.x + this.legend.margin.left;\n            legendBounds.y = rect.y + this.alignLegend(0, availableSize.height - (rect.y + marginBottom), legendBounds.height, alignment);\n            this.subtractThickness(rect, legendWidth, 0, 0, 0);\n        }\n    };\n    /**\n     * Renders the legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.renderLegend = function (legend, legendBounds, redraw) {\n        var firstLegend = this.findFirstLegendPosition(this.legendCollection);\n        var padding = legend.padding;\n        this.legendRegions = [];\n        this.maxItemHeight = Math.max(this.legendCollection[0].textSize.height, legend.shapeHeight);\n        var legendGroup = this.gauge.renderer.createGroup({ id: this.legendID + '_g' });\n        var legendTranslateGroup = this.createLegendElements(legendBounds, legendGroup, legend, this.legendID, redraw);\n        if (firstLegend !== this.legendCollection.length) {\n            this.totalPages = 0;\n            var legendAxisGroup = void 0; // legendItem group for each series group element\n            var start = void 0; // starting shape center x,y position && to resolve lint error used new line for declaration\n            start = new GaugeLocation(legendBounds.x + padding + (legend.shapeWidth / 2), legendBounds.y + padding + this.maxItemHeight / 2);\n            var textOptions = new TextOption('', start.x, start.y, 'start');\n            var textPadding = (2 * legend.shapePadding) + (2 * padding) + legend.shapeWidth;\n            var count = 0;\n            this.pageXCollections = [];\n            this.legendCollection[firstLegend].location = start;\n            var previousLegend = this.legendCollection[firstLegend];\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legendOption = _a[_i];\n                if (legendOption.render && legendOption.text !== '') {\n                    legendAxisGroup = this.gauge.renderer.createGroup({\n                        id: this.legendID + '_g_' + count\n                    });\n                    this.getRenderPoint(legendOption, start, textPadding, previousLegend, legendBounds, count, firstLegend);\n                    this.renderSymbol(legendOption, legendAxisGroup, legendOption.axisIndex, legendOption.rangeIndex);\n                    this.renderText(legendOption, legendAxisGroup, textOptions, legendOption.axisIndex, legendOption.rangeIndex);\n                    if (legendAxisGroup) {\n                        legendAxisGroup.setAttribute('style', 'cursor: ' + ((!legend.toggleVisibility) ? 'auto' : 'pointer'));\n                    }\n                    if (legendTranslateGroup) {\n                        legendTranslateGroup.appendChild(legendAxisGroup);\n                    }\n                    previousLegend = legendOption;\n                }\n                count++;\n            }\n            if (this.isPaging) {\n                this.renderPagingElements(legendBounds, textOptions, legendGroup);\n            }\n            else {\n                this.totalPages = 1;\n            }\n        }\n        this.appendChildElement(this.gauge.svgObject, legendGroup, redraw);\n        this.setStyles(this.toggledIndexes);\n    };\n    /**\n     * To render legend paging elements for chart and accumulation chart\n     */\n    Legend.prototype.renderPagingElements = function (bounds, textOption, legendGroup) {\n        var paginggroup = this.gauge.renderer.createGroup({ id: this.legendID + '_navigation' });\n        this.pagingRegions = [];\n        legendGroup.appendChild(paginggroup);\n        var grayColor = '#545454';\n        var legend = this.gauge.legendSettings; // to solve parameter lint error, legend declaration is here\n        var padding = 8; // const padding for paging elements\n        if (!this.isVertical) {\n            this.totalPages = Math.ceil(this.totalPages / Math.max(1, this.rowCount - 1));\n        }\n        else {\n            this.totalPages = Math.ceil(this.totalPages / this.maxColumns);\n        }\n        var symbolOption = new PathOption(this.legendID + '_pageup', 'transparent', 5, grayColor, 1, '', '');\n        var iconSize = this.pageButtonSize;\n        if (paginggroup) {\n            paginggroup.setAttribute('style', 'cursor: pointer');\n        }\n        // Page left arrow drawing calculation started here\n        this.clipPathHeight = (this.rowCount - 1) * (this.maxItemHeight + legend.padding);\n        this.clipRect.setAttribute('height', this.clipPathHeight.toString());\n        var x = bounds.x + iconSize / 2;\n        var y = bounds.y + this.clipPathHeight + ((bounds.height - this.clipPathHeight) / 2);\n        var size = measureText(this.totalPages + '/' + this.totalPages, legend.textStyle);\n        appendPath(calculateShapes({ x: x, y: y }, 'LeftArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5, y - iconSize * 0.5, iconSize, iconSize));\n        // Page numbering rendering calculation started here\n        textOption.x = x + (iconSize / 2) + padding;\n        textOption.y = y + (size.height / 4);\n        textOption.id = this.legendID + '_pagenumber';\n        textOption.text = '1/' + this.totalPages;\n        var pageTextElement = textElement(textOption, legend.textStyle, legend.textStyle.color || this.gauge.themeStyle.labelColor, paginggroup);\n        x = (textOption.x + padding + (iconSize / 2) + size.width);\n        symbolOption.id = this.legendID + '_pagedown';\n        appendPath(calculateShapes({ x: x, y: y }, 'RightArrow', new Size(iconSize, iconSize), '', symbolOption), paginggroup, this.gauge, 'Path');\n        this.pagingRegions.push(new Rect(x + (bounds.width - (2 * (iconSize + padding) + padding + size.width) - iconSize * 0.5), y - iconSize * 0.5, iconSize, iconSize));\n        //placing the navigation buttons and page numbering in legend right corner\n        paginggroup.setAttribute('transform', 'translate(' + (bounds.width - (2 * (iconSize + padding) +\n            padding + size.width)) + ', ' + 0 + ')');\n        this.translatePage(pageTextElement, this.currentPage - 1, this.currentPage);\n    };\n    /**\n     * To translate legend pages for chart and accumulation chart\n     */\n    Legend.prototype.translatePage = function (pagingText, page, pageNumber) {\n        var size = (this.clipPathHeight) * page;\n        var translate = 'translate(0,-' + size + ')';\n        if (this.isVertical) {\n            var pageLength = page * this.maxColumns;\n            size = this.pageXCollections[page * this.maxColumns] - this.legendBounds.x;\n            size = size < 0 ? 0 : size; // to avoid small pixel variation\n            translate = 'translate(-' + size + ',0)';\n        }\n        this.legendTranslateGroup.setAttribute('transform', translate);\n        pagingText.textContent = (pageNumber) + '/' + this.totalPages;\n        this.currentPage = pageNumber;\n        return size;\n    };\n    /**\n     * To render legend text for chart and accumulation chart\n     */\n    Legend.prototype.renderText = function (legendOption, group, textOptions, axisIndex, rangeIndex) {\n        var legend = this.gauge.legendSettings;\n        var hiddenColor = '#D3D3D3';\n        textOptions.id = this.legendID + '_Axis_' + axisIndex + '_text_' + rangeIndex;\n        var fontcolor = legendOption.visible ? legend.textStyle.color || this.gauge.themeStyle.labelColor : hiddenColor;\n        textOptions.text = legendOption.text;\n        textOptions.x = legendOption.location.x + (legend.shapeWidth / 2) + legend.shapePadding;\n        textOptions.y = legendOption.location.y + this.maxItemHeight / 4;\n        var element = textElement(textOptions, legend.textStyle, fontcolor, group, '');\n    };\n    /**\n     * To render legend symbols for chart and accumulation chart\n     */\n    Legend.prototype.renderSymbol = function (legendOption, group, axisIndex, rangeIndex) {\n        legendOption.fill = legendOption.fill ? legendOption.fill : this.gauge.axes[axisIndex].ranges[rangeIndex].rangeColor;\n        appendPath(calculateShapes(legendOption.location, legendOption.shape, new Size(legendOption.shapeWidth, legendOption.shapeHeight), '', new PathOption(this.legendID + '_Axis_' + axisIndex + '_Shape_' + rangeIndex, legendOption.fill, legendOption.shapeBorder.width, legendOption.shapeBorder.color, null, '0', '', '')), group, this.gauge, legendOption.shape === 'Circle' ? 'Ellipse' : 'Path');\n    };\n    /**\n     * To find legend rendering locations from legend options.\n     * @private\n     */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        if (this.isVertical) {\n            if (count === firstLegend || (prevLegend.location.y + (this.maxItemHeight * 1.5) + (padding * 2) > rect.y + rect.height)) {\n                legendOption.location.x = prevLegend.location.x + ((count === firstLegend) ? 0 : this.maxColumnWidth);\n                legendOption.location.y = start.y;\n                this.pageXCollections.push(legendOption.location.x - (this.legend.shapeWidth / 2) - padding);\n                this.totalPages++;\n            }\n            else {\n                legendOption.location.x = prevLegend.location.x;\n                legendOption.location.y = prevLegend.location.y + this.maxItemHeight + padding;\n            }\n        }\n        else {\n            var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n            if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2)) {\n                legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                    prevLegend.location.y + this.maxItemHeight + padding;\n                legendOption.location.x = start.x;\n            }\n            else {\n                legendOption.location.y = prevLegend.location.y;\n                legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            }\n            this.totalPages = this.totalRowCount;\n        }\n        var availablewidth = this.getAvailWidth(legendOption.location.x, this.legendBounds.width, this.legendBounds.x);\n        legendOption.text = textTrim(+availablewidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /**\n     * To show or hide the legend on clicking the legend.\n     * @return {void}\n     */\n    Legend.prototype.click = function (event) {\n        var targetId = event.target.id;\n        var legendItemsId = ['_text_', '_Shape_'];\n        var index;\n        var toggledIndex = -1;\n        if (targetId.indexOf(this.legendID) > -1) {\n            for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n                var id = legendItemsId_1[_i];\n                if (targetId.indexOf(id) > -1) {\n                    var axisIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[0], 10);\n                    var rangeIndex = parseInt(targetId.split(this.legendID + '_Axis_')[1].split(id)[1], 10);\n                    if (this.gauge.legendSettings.toggleVisibility && !isNaN(rangeIndex)) {\n                        var legendOption = this.legendByIndex(axisIndex, rangeIndex, this.legendCollection);\n                        index = new Index(axisIndex, rangeIndex, !legendOption.render);\n                        if (this.toggledIndexes.length === 0) {\n                            this.toggledIndexes.push(index);\n                        }\n                        else {\n                            for (var i = 0; i < this.toggledIndexes.length; i++) {\n                                if (this.toggledIndexes[i].axisIndex === index.axisIndex &&\n                                    this.toggledIndexes[i].rangeIndex === index.rangeIndex) {\n                                    toggledIndex = i;\n                                    break;\n                                }\n                                else {\n                                    toggledIndex = -1;\n                                }\n                            }\n                            if (toggledIndex === -1) {\n                                this.toggledIndexes.push(index);\n                            }\n                            else {\n                                this.toggledIndexes[toggledIndex].isToggled = !this.toggledIndexes[toggledIndex].isToggled;\n                            }\n                        }\n                        this.setStyles(this.toggledIndexes);\n                    }\n                }\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n    };\n    /**\n     * Set toggled legend styles.\n     */\n    Legend.prototype.setStyles = function (toggledIndexes) {\n        for (var i = 0; i < toggledIndexes.length; i++) {\n            var rangeID = this.gauge.element.id + '_Axis_' + toggledIndexes[i].axisIndex + '_Range_' + toggledIndexes[i].rangeIndex;\n            var shapeID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_Shape_' + toggledIndexes[i].rangeIndex;\n            var textID = this.legendID + '_Axis_' + toggledIndexes[i].axisIndex + '_text_' + toggledIndexes[i].rangeIndex;\n            var rangeElement = this.gauge.svgObject.querySelector('#' + rangeID);\n            var shapeElement = this.gauge.svgObject.querySelector('#' + shapeID);\n            var textElement_1 = this.gauge.svgObject.querySelector('#' + textID);\n            if (toggledIndexes[i].isToggled) {\n                rangeElement.style.visibility = 'visible';\n                shapeElement.setAttribute('fill', this.legendCollection[toggledIndexes[i].rangeIndex].fill);\n                textElement_1.setAttribute('fill', this.legend.textStyle.color || this.gauge.themeStyle.labelColor);\n            }\n            else {\n                var hiddenColor = '#D3D3D3';\n                rangeElement.style.visibility = 'hidden';\n                shapeElement.setAttribute('fill', hiddenColor);\n                textElement_1.setAttribute('fill', hiddenColor);\n            }\n        }\n    };\n    /**\n     * To get legend by index\n     */\n    Legend.prototype.legendByIndex = function (axisIndex, rangeIndex, legendCollections) {\n        for (var _i = 0, legendCollections_1 = legendCollections; _i < legendCollections_1.length; _i++) {\n            var legend = legendCollections_1[_i];\n            if (legend.axisIndex === axisIndex && legend.rangeIndex === rangeIndex) {\n                return legend;\n            }\n        }\n        return null;\n    };\n    /**\n     * To change legend pages for chart and accumulation chart\n     */\n    Legend.prototype.changePage = function (event, pageUp) {\n        var pageText = document.getElementById(this.legendID + '_pagenumber');\n        var page = parseInt(pageText.textContent.split('/')[0], 10);\n        if (pageUp && page > 1) {\n            this.translatePage(pageText, (page - 2), (page - 1));\n        }\n        else if (!pageUp && page < this.totalPages) {\n            this.translatePage(pageText, page, (page + 1));\n        }\n    };\n    /**\n     * To find available width from legend x position.\n     */\n    Legend.prototype.getAvailWidth = function (tx, width, legendX) {\n        if (this.isVertical) {\n            width = this.maxWidth;\n        }\n        return width - ((this.legend.padding * 2) + this.legend.shapeWidth + this.legend.shapePadding);\n    };\n    /**\n     * To create legend rendering elements for chart and accumulation chart\n     */\n    Legend.prototype.createLegendElements = function (legendBounds, legendGroup, legend, id, redraw) {\n        var padding = legend.padding;\n        var options = new RectOption(id + '_element', legend.background, legend.border, legend.opacity, legendBounds);\n        options.width = this.isVertical ? this.maxWidth : legendBounds.width;\n        legendGroup ? legendGroup.appendChild(this.gauge.renderer.drawRectangle(options)) : this.gauge.renderer.drawRectangle(options);\n        var legendItemsGroup = this.gauge.renderer.createGroup({ id: id + '_collections' });\n        legendGroup.appendChild(legendItemsGroup);\n        this.legendTranslateGroup = this.gauge.renderer.createGroup({ id: id + '_translate_g' });\n        legendItemsGroup.appendChild(this.legendTranslateGroup);\n        var clippath = this.gauge.renderer.createClipPath({ id: id + '_clipPath' });\n        options.id += '_clipPath_rect';\n        options.width = this.isVertical ? options.width - padding : options.width;\n        this.clipRect = this.gauge.renderer.drawRectangle(options);\n        clippath.appendChild(this.clipRect);\n        this.appendChildElement(this.gauge.svgObject, clippath, redraw);\n        legendItemsGroup.setAttribute('style', 'clip-path:url(#' + clippath.id + ')');\n        return this.legendTranslateGroup;\n    };\n    /**\n     * Method to append child element\n     */\n    Legend.prototype.appendChildElement = function (parent, childElement, redraw, isAnimate, x, y, start, direction, forceAnimate, isRect, previousRect, animateDuration) {\n        if (isAnimate === void 0) { isAnimate = false; }\n        if (x === void 0) { x = 'x'; }\n        if (y === void 0) { y = 'y'; }\n        if (forceAnimate === void 0) { forceAnimate = false; }\n        if (isRect === void 0) { isRect = false; }\n        if (previousRect === void 0) { previousRect = null; }\n        var existChild = parent.querySelector('#' + childElement.id);\n        var element = (existChild || getElement(childElement.id));\n        var child = childElement;\n        var duration = animateDuration ? animateDuration : 300;\n        if (existChild) {\n            parent.replaceChild(child, element);\n        }\n        else {\n            parent.appendChild(child);\n        }\n    };\n    /**\n     * To find first valid legend text index for chart and accumulation chart\n     */\n    Legend.prototype.findFirstLegendPosition = function (legendCollection) {\n        var count = 0;\n        for (var _i = 0, legendCollection_1 = legendCollection; _i < legendCollection_1.length; _i++) {\n            var legend = legendCollection_1[_i];\n            if (legend.render && legend.text !== '') {\n                break;\n            }\n            count++;\n        }\n        return count;\n    };\n    /**\n     * To find legend bounds for accumulation chart.\n     * @private\n     */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        var extraWidth = 0;\n        var extraHeight = 0;\n        var padding = legend.padding;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.width += extraWidth;\n        legendBounds.height += extraHeight;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var rowCount = 0;\n        var columnWidth = [];\n        var columnHeight = 0;\n        var legendWidth = 0;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var legendEventArgs;\n        var render = false;\n        for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                name: 'legendRender', cancel: false\n            };\n            this.gauge.trigger('legendRender', legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = legend.shapeWidth + (2 * legend.shapePadding) + legendOption.textSize.width + (2 * padding);\n                if (this.isVertical) {\n                    ++rowCount;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    if ((rowCount * (this.maxItemHeight + padding)) + padding > legendBounds.height) {\n                        columnHeight = Math.max(columnHeight, (rowCount * (this.maxItemHeight + padding)) + padding);\n                        rowWidth = rowWidth + maximumWidth;\n                        columnWidth.push(maximumWidth);\n                        this.totalPages = Math.max(rowCount, this.totalPages || 1);\n                        maximumWidth = 0;\n                        rowCount = 1;\n                    }\n                    maximumWidth = Math.max(legendWidth, maximumWidth);\n                }\n                else {\n                    rowWidth = rowWidth + legendWidth;\n                    if (legendBounds.width < (padding + rowWidth)) {\n                        maximumWidth = Math.max(maximumWidth, (rowWidth + padding - legendWidth));\n                        if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                            rowCount = 1;\n                        }\n                        rowWidth = legendWidth;\n                        rowCount++;\n                        columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding;\n                    }\n                }\n            }\n        }\n        if (this.isVertical) {\n            rowWidth = rowWidth + maximumWidth;\n            this.isPaging = legendBounds.width < (rowWidth + padding);\n            columnHeight = Math.max(columnHeight, ((this.totalPages || 1) * (this.maxItemHeight + padding)) + padding);\n            this.isPaging = this.isPaging && (this.totalPages > 1);\n            if (columnWidth[columnWidth.length - 1] !== maximumWidth) {\n                columnWidth.push(maximumWidth);\n            }\n        }\n        else {\n            this.isPaging = legendBounds.height < columnHeight;\n            this.totalPages = this.totalRowCount = rowCount;\n            columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding);\n        }\n        this.maxColumns = 0; // initialization for max columns\n        var width = this.isVertical ? this.getMaxColumn(columnWidth, legendBounds.width, padding, rowWidth + padding) :\n            Math.max(rowWidth + padding, maximumWidth);\n        if (render) { // if any legends not skipped in event check\n            this.setBounds(width, columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.subtractThickness = function (rect, left, right, top, bottom) {\n        rect.x += left;\n        rect.y += top;\n        rect.width -= left + right;\n        rect.height -= top + bottom;\n        return rect;\n    };\n    /**\n     * To set bounds for chart and accumulation chart\n     */\n    Legend.prototype.setBounds = function (computedWidth, computedHeight, legend, legendBounds) {\n        computedWidth = computedWidth < legendBounds.width ? computedWidth : legendBounds.width;\n        computedHeight = computedHeight < legendBounds.height ? computedHeight : legendBounds.height;\n        legendBounds.width = !legend.width ? computedWidth : legendBounds.width;\n        legendBounds.height = !legend.height ? computedHeight : legendBounds.height;\n        this.rowCount = Math.max(1, Math.ceil((legendBounds.height - legend.padding) / (this.maxItemHeight + legend.padding)));\n    };\n    /**\n     * To find maximum column size for legend\n     */\n    Legend.prototype.getMaxColumn = function (columns, width, padding, rowWidth) {\n        var maxPageColumn = padding;\n        this.maxColumnWidth = Math.max.apply(null, columns);\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            maxPageColumn += this.maxColumnWidth;\n            this.maxColumns++;\n            if (maxPageColumn + padding > width) {\n                maxPageColumn -= this.maxColumnWidth;\n                this.maxColumns--;\n                break;\n            }\n        }\n        this.isPaging = (maxPageColumn < rowWidth) && (this.totalPages > 1);\n        if (maxPageColumn === padding) {\n            maxPageColumn = width;\n        }\n        this.maxColumns = Math.max(1, this.maxColumns);\n        this.maxWidth = maxPageColumn;\n        return maxPageColumn;\n    };\n    /**\n     * To show or hide trimmed text tooltip for legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.move = function (event) {\n        var x = this.gauge.mouseX;\n        var y = this.gauge.mouseY;\n        var targetId = event.target.id;\n        if (event.target.textContent.indexOf('...') > -1 && targetId.indexOf('_gauge_legend_') > -1) {\n            var axisIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[0], 10);\n            var rangeIndex = parseInt(targetId.split(this.gauge.element.id + '_gauge_legend_Axis_')[1].split('_text_')[1], 10);\n            var text = '';\n            for (var _i = 0, _a = this.legendCollection; _i < _a.length; _i++) {\n                var legends = _a[_i];\n                if (legends.rangeIndex === rangeIndex && legends.axisIndex === axisIndex) {\n                    text = legends.originalText;\n                }\n            }\n            showTooltip(text, x, y, this.gauge.element.offsetWidth, this.gauge.element.id + '_EJ2_Legend_Tooltip', getElement(this.gauge.element.id + '_Secondary_Element'));\n        }\n        else {\n            removeElement(this.gauge.element.id + '_EJ2_Legend_Tooltip');\n        }\n    };\n    /**\n     * Get module name.\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (circulargauge) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Legend;\n}());\nexport { Legend };\n/**\n * @private\n */\nvar Index = /** @class */ (function () {\n    function Index(axisIndex, rangeIndex, isToggled) {\n        this.axisIndex = axisIndex;\n        this.rangeIndex = rangeIndex;\n        this.isToggled = isToggled;\n    }\n    return Index;\n}());\nexport { Index };\n/**\n * Class for legend options\n * @private\n */\nvar LegendOptions = /** @class */ (function () {\n    function LegendOptions(text, originalText, fill, shape, visible, border, shapeBorder, shapeWidth, shapeHeight, rangeIndex, axisIndex) {\n        this.location = { x: 0, y: 0 };\n        this.text = text;\n        this.originalText = originalText;\n        this.fill = fill;\n        this.shape = shape;\n        this.visible = visible;\n        this.border = border;\n        this.shapeBorder = shapeBorder;\n        this.shapeWidth = shapeWidth;\n        this.shapeHeight = shapeHeight;\n        this.rangeIndex = rangeIndex;\n        this.axisIndex = axisIndex;\n    }\n    return LegendOptions;\n}());\nexport { LegendOptions };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined, resetBlazorTemplate } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\nimport { LegendSettings, Legend } from './legend/legend';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        /** @private */\n        _this.isDrag = false;\n        return _this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    //tslint:disable\n    CircularGauge.prototype.preRender = function () {\n        var blazor = 'Blazor';\n        this.isBlazor = window[blazor];\n        this.unWireEvents();\n        this.trigger(load, this.isBlazor ? null : { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n        this.renderComplete();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'click', this.gaugeOnMouseClick);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'click', this.gaugeOnMouseClick, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse click on accumulation chart.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseClick = function (e) {\n        this.setMouseXY(e);\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.click(e);\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger('gaugeMouseMove', args, function (observedArgs) {\n            var dragArgs;\n            var dragBlazorArgs;\n            var tooltip = _this.tooltipModule;\n            if (!args.cancel) {\n                if (_this.enablePointerDrag && _this.activePointer) {\n                    _this.isDrag = true;\n                    var dragPointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                    var dragAxisInd = parseInt(_this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n                    dragArgs = {\n                        axis: _this.activeAxis,\n                        pointer: _this.activePointer,\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null,\n                        axisIndex: dragAxisInd,\n                        pointerIndex: dragPointInd\n                    };\n                    dragBlazorArgs = {\n                        previousValue: _this.activePointer.currentValue,\n                        name: dragMove,\n                        currentValue: null,\n                        pointerIndex: dragPointInd,\n                        axisIndex: dragAxisInd\n                    };\n                    _this.pointerDrag(new GaugeLocation(args.x, args.y));\n                    dragArgs.currentValue = dragBlazorArgs.currentValue = _this.activePointer.currentValue;\n                    _this.trigger(dragMove, _this.isBlazor ? dragBlazorArgs : dragArgs);\n                }\n            }\n        });\n        if (!this.isTouch) {\n            if (this.legendModule && this.legendSettings.visible) {\n                this.legendModule.move(e);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.setMouseXY(e);\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var _this = this;\n        this.setMouseXY(e);\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger('gaugeMouseDown', args, function (observedArgs) {\n            if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n                args.target.id.indexOf(_this.element.id + '_Axis_') >= 0) {\n                currentPointer = getPointer(args.target.id, _this);\n                _this.activeAxis = _this.axes[currentPointer.axisIndex];\n                _this.activePointer = _this.activeAxis.pointers[currentPointer.pointerIndex];\n                if (isNullOrUndefined(_this.activePointer.pathElement)) {\n                    _this.activePointer.pathElement = [e.target];\n                }\n                var pointInd = parseInt(_this.activePointer.pathElement[0].id.slice(-1), 10);\n                var axisInd = parseInt(_this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n                _this.trigger(dragStart, _this.isBlazor ? {\n                    name: dragStart,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                } : {\n                    axis: _this.activeAxis,\n                    name: dragStart,\n                    pointer: _this.activePointer,\n                    currentValue: _this.activePointer.currentValue,\n                    pointerIndex: pointInd,\n                    axisIndex: axisInd\n                });\n                _this.svgObject.setAttribute('cursor', 'pointer');\n            }\n        });\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        this.setMouseXY(e);\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var blazorArgs = {\n            cancel: args.cancel, target: args.target, name: args.name, x: args.x, y: args.y\n        };\n        this.isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, this.isBlazor ? blazorArgs : args);\n        if (this.activeAxis && this.activePointer) {\n            var pointerInd = parseInt(this.activePointer.pathElement[0].id.slice(-1), 10);\n            var axisInd = parseInt(this.activePointer.pathElement[0].id.match(/\\d/g)[0], 10);\n            this.trigger(dragEnd, this.isBlazor ? {\n                name: dragEnd,\n                currentValue: this.activePointer.currentValue,\n                pointerIndex: pointerInd,\n                axisIndex: axisInd\n            } : {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue,\n                axisIndex: axisInd,\n                pointerIndex: pointerInd\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n            this.isDrag = false;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: !this.isBlazor ? this : null,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                if (_this.isBlazor) {\n                    var previousSize = args.previousSize, name_1 = args.name, currentSize = args.currentSize;\n                    args = { previousSize: previousSize, name: name_1, currentSize: currentSize };\n                }\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        for (var i = 0; i < this.axes.length; i++) {\n            for (var j = 0; j < this.axes[i].annotations.length; j++) {\n                resetBlazorTemplate(this.element.id + '_Axis' + i + '_ContentTemplate' + j, '_ContentTemplate');\n            }\n        }\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var borderWidth = parseInt(this.element.style.borderWidth.split('px').join(''), 10) * 2;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        width = !isNaN(borderWidth) ? (width - borderWidth) : width;\n        height = !isNaN(borderWidth) ? (height - borderWidth) : height;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        if (this.legendModule && this.legendSettings.visible) {\n            this.legendModule.getLegendOptions(this.axes);\n            this.legendModule.calculateLegendBounds(this.gaugeRect, this.availableSize);\n        }\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : this.gaugeRect.x + (this.gaugeRect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : this.gaugeRect.y + (this.gaugeRect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(this.gaugeRect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.renderLegend();\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, this.isBlazor ? {} : { gauge: this });\n    };\n    /**\n     * Method to render legend for accumulation chart\n     */\n    CircularGauge.prototype.renderLegend = function () {\n        if (!this.legendModule || !this.legendSettings.visible) {\n            return null;\n        }\n        if (this.legendModule.legendCollection.length) {\n            this.legendModule.renderLegend(this.legendSettings, this.legendModule.legendBounds, true);\n        }\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            this.titleStyle.fontFamily = this.themeStyle.fontFamily || this.titleStyle.fontFamily;\n            this.titleStyle.size = this.themeStyle.fontSize || this.titleStyle.size;\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set mouse x, y from events\n     */\n    CircularGauge.prototype.setMouseXY = function (e) {\n        var pageX;\n        var pageY;\n        var svgRect = getElement(this.element.id + '_svg').getBoundingClientRect();\n        var rect = this.element.getBoundingClientRect();\n        if (e.type.indexOf('touch') > -1) {\n            this.isTouch = true;\n            var touchArg = e;\n            pageY = touchArg.changedTouches[0].clientY;\n            pageX = touchArg.changedTouches[0].clientX;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch' || e.pointerType === '2';\n            pageX = e.clientX;\n            pageY = e.clientY;\n        }\n        this.mouseY = (pageY - rect.top) - Math.max(svgRect.top - rect.top, 0);\n        this.mouseX = (pageX - rect.left) - Math.max(svgRect.left - rect.left, 0);\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        if (this.legendSettings.visible) {\n            modules.push({\n                member: 'Legend',\n                args: [this, Legend]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'legendSettings':\n                    refreshWithoutAnimation = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Complex({}, LegendSettings)\n    ], CircularGauge.prototype, \"legendSettings\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"legendRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n","import * as index from './index';\nindex.CircularGauge.Inject(index.GaugeTooltip, index.Annotations, index.Legend);\nexport * from './index';\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","charAt","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","tooltipData","templateElement","templateLength","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","isLegend","merge","rx","ry","cx","cy","d","href","space","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","textTrim","maxWidth","label","i","substring","showTooltip","areaWidth","tooltip","toString","getThemeStyle","theme","toLowerCase","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","fontSize","labelFontFamily","tooltipFillOpacity","tooltipTextOpacity","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Border","apply","Property","ChildProperty","Font","RangeTooltip","Complex","AnnotationTooltip","Margin","TooltipSettings","axisLabelFont","legendLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","axis","index","availableSize","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","updateBlazorTemplate","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","isBlazor","name_1","trigger","observedArgs","window","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","__rest","s","t","getOwnPropertySymbols","GaugeTooltip","tooltipId","borderStyle","addEventListener","renderTooltip","gaugeId","getAttribute","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect","svgObject","axisRect","abs","currentPointer","currentAxis","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipElement","tooltipEle","enablePointerDrag","showAtMousePosition","roundValue","roundedValue","pointerContent","RegExp","tooltipArgs","pointer","event","appendInBodyTag","tooltipRect","findPosition","themeStyle","svgTooltip","svgTooltipCreate","arrowInverted","appendTo","parseFloat","isDrag","rangeSvgRect","rangeElementRect","rangeAxisRect","rangeAngle","rangeTooltipFormat","rangeSettings","rangeFormat","roundStartValue","roundEndValue","startData","endData","rangeContent","rangeTooltipArgs","blazorEventArgs","rangeTemplate","checkParentAnnotationId","annotationTargetElement","annotationSvgRect","annotationElementRect","currentAnnotation","annotationAngle","className","annotationContent","annotationSettings","annotationTooltipArgs","annotationTemplate","elementSizeAn","tooltipPosition","removeTooltip","tooltipArg","Tooltip","enable","data","enableAnimation","inverted","areaBounds","blazorTemplate","child","roundingPlaces","toFixed","addLeft","addTop","addHeight","addWidth","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","textWidth","textHeight","currentTextWidth","currentTextHeight","previousLocation","currentLocation","lastLabelLocation","lastLabelAngle","lastLabelAnchor","lastTextWidth","lastTextHeight","labelElement","createGroup","labelCollection","labelsVisible","position","nearSize","maxLabelSize","farSize","hideIntersectingLabel","findAnchor","showLastLabel","hiddenLabel","offsetAxisLabelsize","getAxisLabelStartPosition","lastlabel","FindAxisLabelCollision","useRangeColor","previousWidth","previousHeight","currentWidth","currentHeight","actualLocation","anchorPosition","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","capcolor","cap","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","isNullOrUndefined","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","this_1","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","currentRadius_1","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","getBlazorAxisLabelEventArgs","lastLabel","maxVal","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","Location","LegendSettings","Legend","legendRegions","rowCount","pageButtonSize","pageXCollections","maxColumns","currentPage","pagingRegions","toggledIndexes","legend","legendSettings","legendID","click","getLegendOptions","legendCollection","j","legendText","LegendOptions","visible","shapeBorder","shapeWidth","shapeHeight","calculateLegendBounds","legendBounds","isVertical","getLegendBounds","getLocation","alignment","alignLegend","legendSize","padding","legendHeight","legendWidth","marginBottom","subtractThickness","renderLegend","redraw","firstLegend","findFirstLegendPosition","maxItemHeight","textSize","legendGroup","legendTranslateGroup","createLegendElements","totalPages","legendAxisGroup","textOptions","textPadding","shapePadding","count","previousLegend","legendOption","render","getRenderPoint","renderSymbol","renderText","toggleVisibility","isPaging","renderPagingElements","appendChildElement","textOption","paginggroup","symbolOption","iconSize","clipPathHeight","clipRect","pageTextElement","translatePage","pagingText","page","pageNumber","translate","textContent","group","fontcolor","prevLegend","maxColumnWidth","previousBound","totalRowCount","availablewidth","getAvailWidth","legendItemsId","toggledIndex","legendItemsId_1","isNaN","legendByIndex","Index","isToggled","changePage","rangeID","shapeID","textID","shapeElement","textElement_1","visibility","legendCollections","legendCollections_1","pageUp","pageText","tx","legendX","drawRectangle","legendItemsGroup","clippath","createClipPath","isAnimate","forceAnimate","isRect","previousRect","animateDuration","existChild","replaceChild","legendCollection_1","extraWidth","extraHeight","maximumWidth","rowWidth","columnWidth","columnHeight","legendEventArgs","getMaxColumn","setBounds","computedWidth","computedHeight","columns","maxPageColumn","columns_1","move","mouseX","mouseY","legends","originalText","offsetWidth","circulargauge","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","setTheme","calculateBounds","renderElements","renderComplete","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeOnMouseClick","gaugeRightClick","isPointer","mouseLeave","isTouch","gaugeResize","add","setGaugeStyle","setMouseXY","legendModule","getMouseArgs","dragArgs","dragBlazorArgs","tooltipModule","activePointer","dragPointInd","dragAxisInd","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","pointInd","axisInd","blazorArgs","pointerInd","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","resetBlazorTemplate","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","containerHeight","offsetHeight","borderWidth","join","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","keys","Event","NotifyPropertyChanges","Component","index.CircularGauge","Inject","index.GaugeTooltip","index.Annotations","index.Legend"],"mappings":"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"}