{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    if (templateFn && templateFn(gauge).length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn(gauge);\n        while (templateElement.length > 0) {\n            element.appendChild(templateElement[0]);\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n/** @private */\nexport function getThemeStyle(theme) {\n    var style;\n    switch (theme) {\n        case 'MaterialDark':\n        case 'FabricDark':\n        case 'BootstrapDark':\n        case 'Highcontrast':\n        case 'HighContrast':\n            style = {\n                backgroundColor: '#000000',\n                titleFontColor: '#FFFFFF',\n                tooltipFillColor: '#ffffff',\n                tooltipFontColor: '#000000',\n                labelColor: '#FFFFFF',\n                lineColor: '#FFFFFF',\n                majorTickColor: '#FFFFFF',\n                minorTickColor: '#FFFFFF',\n                pointerColor: '#FFFFFF',\n                capColor: '#FFFFFF',\n                needleColor: '#FFFFFF',\n                needleTailColor: '#FFFFFF'\n            };\n            break;\n        case 'Bootstrap4':\n            style = {\n                backgroundColor: '#F8F9FA',\n                titleFontColor: '#212529',\n                tooltipFillColor: '#000000',\n                tooltipFontColor: '#FFFFFF',\n                labelColor: '#212529',\n                lineColor: '#DEE2E6',\n                majorTickColor: '#ADB5BD',\n                minorTickColor: '#CED4DA',\n                pointerColor: '#6C757D',\n                capColor: '#6C757D',\n                needleColor: '#6C757D',\n                needleTailColor: '#6C757D'\n            };\n            break;\n        default:\n            style = {\n                backgroundColor: '#FFFFFF',\n                titleFontColor: '#424242',\n                tooltipFillColor: '#363F4C',\n                tooltipFontColor: '#ffffff',\n                labelColor: '#212121',\n                lineColor: '#757575',\n                majorTickColor: '#757575',\n                minorTickColor: '#757575',\n                pointerColor: '#757575',\n                capColor: '#757575',\n                needleColor: '#757575',\n                needleTailColor: '#757575'\n            };\n            break;\n    }\n    return style;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(null)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(1)\n    ], Range.prototype, \"opacity\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: null, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"showLastLabel\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"roundingPlaces\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var width = parseInt(this.gauge.width, 10);\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        document.getElementById(this.elementId + '_Secondary_Element').style.width = width + 'px';\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger(annotationRender, argsData);\n        var templateFn;\n        var templateElement;\n        if (!argsData.cancel) {\n            templateFn = getTemplateFunction(argsData.content);\n            if (templateFn && templateFn(axis).length) {\n                templateElement = Array.prototype.slice.call(templateFn(axis));\n                var length_1 = templateElement.length;\n                for (var i = 0; i < length_1; i++) {\n                    childElement.appendChild(templateElement[i]);\n                }\n            }\n            else {\n                childElement.appendChild(createElement('div', {\n                    innerHTML: argsData.content,\n                    styles: getFontStyle(argsData.textStyle)\n                }));\n            }\n            this.updateLocation(childElement, axis, annotation);\n            element.appendChild(childElement);\n        }\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var radiusCalculate = 'radiusCalculate';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var roundValue = void 0;\n            roundValue = this.currentAxis.roundingPlaces ?\n                parseFloat(this.currentPointer.currentValue.toFixed(this.currentAxis.roundingPlaces)) :\n                this.currentPointer.currentValue;\n            var content = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                format(roundValue);\n            location = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: content, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && Object.keys(template).length === 1) {\n                template = template[Object.keys(template)[0]];\n            }\n            if (!this.tooltip.showAtMousePosition) {\n                if (template) {\n                    var elementSize = getElementSize(template, this.gauge, this.tooltipEle);\n                    this.tooltipRect = Math.abs(axisRect.left - svgRect.left) > elementSize.width ?\n                        this.findPosition(rect, angle, content, tooltipArgs.location) : rect;\n                }\n                else {\n                    this.findPosition(rect, angle, content, tooltipArgs.location);\n                }\n            }\n            else {\n                tooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!tooltipArgs.cancel && !samePointerEle) {\n                tooltipArgs.tooltip.textStyle.color = tooltipArgs.tooltip.textStyle.color || this.gauge.themeStyle.tooltipFontColor;\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    data: { value: tooltipArgs.content },\n                    template: template,\n                    enableAnimation: tooltipArgs.tooltip.enableAnimation,\n                    content: [tooltipArgs.content],\n                    location: tooltipArgs.location,\n                    inverted: this.arrowInverted,\n                    areaBounds: this.tooltipRect,\n                    fill: tooltipArgs.tooltip.fill || this.gauge.themeStyle.tooltipFillColor,\n                    textStyle: tooltipArgs.tooltip.textStyle,\n                    border: tooltipArgs.tooltip.border\n                });\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (template && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, axis.lineStyle.color || this.gauge.themeStyle.lineColor, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, style.font.color || this.gauge.themeStyle.labelColor) : style.font.color || this.gauge.themeStyle.labelColor, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, minorLineStyle.color ||\n                        this.gauge.themeStyle.minorTickColor) : minorLineStyle.color || this.gauge.themeStyle.minorTickColor, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, majorLineStyle.color ||\n                    this.gauge.themeStyle.majorTickColor) : majorLineStyle.color || this.gauge.themeStyle.majorTickColor, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, range.opacity, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, pointer.color || this.gauge.themeStyle.needleColor, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color || this.gauge.themeStyle.needleTailColor, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, pointer.cap.color || this.gauge.themeStyle.capColor, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color || this.gauge.themeStyle.pointerColor, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var roundRadius = pointer.roundedCornerRadius;\n        var sweepAngle;\n        var endAngle;\n        var oldStart;\n        var minRadius = (radius * 0.25);\n        if (end <= minRadius) {\n            radius = end === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        if (roundRadius) {\n            minAngle = ((((pointer.currentRadius) * ((minAngle * Math.PI) / 180) +\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            pointAngle = ((((pointer.currentRadius) * ((pointAngle * Math.PI) / 180) -\n                roundRadius) / (pointer.currentRadius)) * 180) / Math.PI;\n            oldStart = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        }\n        endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, Math.floor(minAngle), linear(arg.timeStamp, Math.floor(minAngle), sweepAngle, arg.duration) + 0.0001, oldStart, linear(arg.timeStamp, Math.floor(minAngle + (roundRadius / 2)), sweepAngle, arg.duration) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n                else {\n                    if (!roundRadius) {\n                        element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                    }\n                    else {\n                        sweepAngle += roundRadius;\n                        element.setAttribute('d', getRoundedPathArc(_this.gauge.midPoint, linear(arg.timeStamp, Math.floor(oldStart), sweepAngle, arg.duration), Math.floor(oldStart) + 0.0001, linear(arg.timeStamp, Math.floor(minAngle - roundRadius - (roundRadius / 2)), sweepAngle, arg.duration), Math.floor(oldStart + (roundRadius / 2)) + 0.0001, radius, pointer.pointerWidth, pointer.pointerWidth));\n                    }\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender, radiusCalculate } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this.gauge.moveToCenter && this.gauge.axes.length === 1 &&\n                isNullOrUndefined(this.gauge.centerX) && isNullOrUndefined(this.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this.gauge.midPoint;\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint) :\n                            this.gauge.midPoint;\n                        startYDiff = Math.abs(this.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint);\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(newPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 0 || endXDiff > 0) && (startYDiff > 0 || endYDiff > 0))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this.gauge.midPoint.x = this.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this.gauge.midPoint.y = this.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this.gauge.gaugeRect.width, this.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this.calculateNumericInterval(axis, axis.rect);\n            var args = void 0;\n            args = {\n                cancel: false, name: radiusCalculate, currentRadius: axis.currentRadius, gauge: this.gauge,\n                midPoint: this.gauge.midPoint, axis: axis\n            };\n            this.gauge.trigger(radiusCalculate, args);\n            axis.currentRadius = args.currentRadius;\n            this.gauge.midPoint = args.midPoint;\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        var roundValue;\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            roundValue = axis.roundingPlaces ? parseFloat(i.toFixed(axis.roundingPlaces)) : i;\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(roundValue)) :\n                    format(roundValue),\n                value: roundValue\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n            }\n        }\n        var lastLabel = axis.visibleLabels[axis.visibleLabels.length - 1].value;\n        var maxVal = axis.visibleRange.max;\n        if (lastLabel !== maxVal && axis.showLastLabel === true) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(maxVal)) :\n                    format(maxVal),\n                value: maxVal\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, maxVal));\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { SvgRenderer } from '@syncfusion/ej2-svg-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\nimport { getThemeStyle } from './model/theme';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.setTheme();\n        this.calculateBounds();\n        this.renderElements();\n    };\n    CircularGauge.prototype.setTheme = function () {\n        this.themeStyle = getThemeStyle(this.theme);\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger(gaugeMouseMove, args);\n        var dragArgs;\n        var tooltip = this.tooltipModule;\n        if (!args.cancel) {\n            if (this.enablePointerDrag && this.activePointer) {\n                dragArgs = {\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    previousValue: this.activePointer.currentValue,\n                    name: dragMove,\n                    currentValue: null\n                };\n                this.pointerDrag(new GaugeLocation(args.x, args.y));\n                dragArgs.currentValue = this.activePointer.currentValue;\n                this.trigger(dragMove, dragArgs);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger(gaugeMouseDown, args);\n        if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n            args.target.id.indexOf(this.element.id + '_Axis_') >= 0) {\n            currentPointer = getPointer(args.target.id, this);\n            this.activeAxis = this.axes[currentPointer.axisIndex];\n            this.activePointer = this.activeAxis.pointers[currentPointer.pointerIndex];\n            if (isNullOrUndefined(this.activePointer.pathElement)) {\n                this.activePointer.pathElement = [e.target];\n            }\n            this.trigger(dragStart, {\n                axis: this.activeAxis,\n                name: dragStart,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.svgObject.setAttribute('cursor', 'pointer');\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activePointer.value = this.activePointer.currentValue;\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color || this.themeStyle.titleFontColor, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background || this.themeStyle.backgroundColor)) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background || this.themeStyle.backgroundColor, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        this.isProtectedOnChange = true;\n        pointer.currentValue = value;\n        pointer.value = value;\n        this.isProtectedOnChange = false;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var axisIndex = null;\n        var pointerIndex = null;\n        var pointerValue = null;\n        var changedProperties = JSON.stringify(newProp);\n        var splitProperties = changedProperties.split('},');\n        if (splitProperties) {\n            for (var j = 0; j < splitProperties.length; j++) {\n                if (splitProperties[j].indexOf('pointers') > -1) {\n                    var properties = splitProperties[j].split('{');\n                    for (var k = 0; k < properties.length; k++) {\n                        var value = properties[k].replace(/([^a-z0-9]+)/gi, '');\n                        axisIndex = axisIndex === null && (value === 'axes') ? properties[k + 1].replace(/([^a-z0-9]+)/gi, '') : axisIndex;\n                        pointerIndex = pointerIndex === null && (value === 'pointers') ? properties[k + 1].replace(/([^a-z0-9]+)/gi, '') :\n                            pointerIndex;\n                        pointerValue = (value.indexOf('value') > -1) ? properties[k].replace(/[value&\\/\\\\#,+()$~%'\":*?<>{}]/g, '') :\n                            pointerValue;\n                    }\n                }\n            }\n        }\n        var samePointerValue = false;\n        if (axisIndex && pointerIndex && pointerValue) {\n            samePointerValue = this.axes[parseFloat(axisIndex)].pointers[parseFloat(pointerIndex)].currentValue\n                === parseFloat(pointerValue);\n        }\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"radiusCalculate\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","templateElement","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","getThemeStyle","theme","backgroundColor","titleFontColor","tooltipFillColor","tooltipFontColor","labelColor","lineColor","majorTickColor","minorTickColor","pointerColor","capColor","needleColor","needleTailColor","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","axis","index","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect","svgObject","axisRect","abs","currentPointer","currentAxis","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","roundValue","roundingPlaces","parseFloat","toFixed","RegExp","tooltipArgs","pointer","event","keys","showAtMousePosition","tooltipRect","findPosition","themeStyle","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","appendTo","removeTooltip","addLeft","addTop","addHeight","addWidth","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","label","labelElement","createGroup","labelCollection","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","cap","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","isNullOrUndefined","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","roundRadius","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","lastLabel","maxVal","showLastLabel","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","availableSize","CircularGauge","preRender","unWireEvents","initPrivateVariable","setCulture","createSvg","wireEvents","render","setTheme","calculateBounds","renderElements","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","window","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","titleHeight","title","titleStyle","renderBorder","renderTitle","tabIndex","borderWidth","drawRectangle","isProtectedOnChange","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","pointerValue","splitProperties","JSON","stringify","j","properties","k","isPointerValueSame","Event","NotifyPropertyChanges","Component"],"mappings":"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"}