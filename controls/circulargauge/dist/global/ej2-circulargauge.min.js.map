{"version":3,"file":"ej2-circulargauge.min.js","sources":["../../src/circular-gauge/utils/helper.js","../../src/circular-gauge/model/theme.js","../../src/circular-gauge/model/base.js","../../src/circular-gauge/axes/axis.js","../../src/circular-gauge/annotations/annotations.js","../../src/circular-gauge/model/constants.js","../../src/circular-gauge/user-interaction/tooltip.js","../../src/circular-gauge/axes/axis-renderer.js","../../src/circular-gauge/axes/pointer-renderer.js","../../src/circular-gauge/axes/axis-panel.js","../../src/circular-gauge/circular-gauge.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Specifies Circular-Gauge Helper methods\n */\nimport { SvgRenderer, compile as templateComplier } from '@syncfusion/ej2-base';\nimport { merge } from '@syncfusion/ej2-base';\nimport { createElement, remove, setStyleAttribute } from '@syncfusion/ej2-base';\n/**\n * Function to measure the height and width of the text.\n * @param  {string} text\n * @param  {FontModel} font\n * @param  {string} id\n * @returns Size\n * @private\n */\nexport function measureText(text, font) {\n    var htmlObject = document.getElementById('gauge-measuretext');\n    if (htmlObject === null) {\n        htmlObject = createElement('text', { id: 'gauge-measuretext' });\n        document.body.appendChild(htmlObject);\n    }\n    var style = 'position: absolute; visibility: hidden;' +\n        ';left: 0; top: -100; white-space: nowrap;' + getFontStyle(font);\n    htmlObject.innerHTML = text;\n    htmlObject.setAttribute('style', style);\n    return new Size(htmlObject.clientWidth, htmlObject.clientHeight);\n}\n/**\n * Function to find number from string\n * * @returns number\n * @private\n */\nexport function toPixel(value, maxDimension) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (maxDimension / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to get the style from FontModel.\n * @returns string\n * @private\n */\nexport function getFontStyle(font) {\n    var style = '';\n    style = 'font-size:' + font.size +\n        '; font-style:' + font.fontStyle + '; font-weight:' + font.fontWeight +\n        '; font-family:' + font.fontFamily + ';opacity:' + font.opacity +\n        '; color:' + font.color + ';';\n    return style;\n}\n/**\n * Function to set style to the element.\n * @private\n */\nexport function setStyles(element, fill, border) {\n    setStyleAttribute(element, {\n        'stroke': border.color, 'stroke-width': border.width,\n        'fill': fill\n    });\n}\n/**\n * Function to measure the element rect.\n * @returns ClientRect\n * @private\n */\nexport function measureElementRect(element) {\n    var bounds;\n    document.body.appendChild(element);\n    bounds = element.getBoundingClientRect();\n    removeElement(element.id);\n    return bounds;\n}\n/**\n * Function to convert the number from string.\n * @returns number\n * @private\n */\nexport function stringToNumber(value, containerSize) {\n    if (value !== null && value !== undefined) {\n        return value.indexOf('%') !== -1 ? (containerSize / 100) * parseInt(value, 10) : parseInt(value, 10);\n    }\n    return null;\n}\n/**\n * Function to create the text element.\n * @returns Element\n * @private\n */\nexport function textElement(options, font, color, parent, styles) {\n    var renderOptions = {};\n    var htmlObject;\n    var renderer = new SvgRenderer('');\n    var style = styles + ' font-size:' + font.size + '; font-style:' + font.fontStyle +\n        ' ; font-weight:' + font.fontWeight + '; font-family:' + font.fontFamily + ';';\n    renderOptions = {\n        'id': options.id,\n        'x': options.x,\n        'y': options.y,\n        'fill': color,\n        'text-anchor': options.anchor,\n        'transform': options.transform,\n        'opacity': font.opacity,\n        'dominant-baseline': options.baseLine,\n        'style': style\n    };\n    htmlObject = renderer.createText(renderOptions, options.text);\n    parent.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to append the path to the element.\n * @returns Element\n * @private\n */\nexport function appendPath(options, element, gauge, functionName) {\n    functionName = functionName ? functionName : 'Path';\n    var htmlObject = gauge.renderer['draw' + functionName](options);\n    htmlObject.setAttribute('transform', options.transform);\n    htmlObject.setAttribute('style', options.style);\n    element.appendChild(htmlObject);\n    return htmlObject;\n}\n/**\n * Function to calculate the sum of array values.\n * @returns number\n * @private\n */\nexport function calculateSum(from, to, values) {\n    var sum = 0;\n    var length = values.length;\n    for (; from < length; from++) {\n        sum += values[from];\n    }\n    return sum;\n}\n/**\n * Function to calculate the value for linear animation effect\n * @param currentTime\n * @param startValue\n * @param endValue\n * @param duration\n * @private\n */\nexport function linear(currentTime, startValue, endValue, duration) {\n    return -endValue * Math.cos(currentTime / duration * (Math.PI / 2)) + endValue + startValue;\n}\n/**\n * Function to get the angle from value for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromValue(value, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    var angle;\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    startAngle -= 90;\n    endAngle -= 90;\n    if (isClockWise) {\n        angle = ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue))) + startAngle;\n    }\n    else {\n        angle = endAngle - ((value - minimumValue) * (getDegree(startAngle, endAngle) / (maximumValue - minimumValue)));\n        angle = angle < 0 ? 360 + angle : angle;\n    }\n    angle = Math.round(angle) >= 360 ? (angle - 360) : Math.round(angle) < 0 ? (360 + angle) : angle;\n    return angle;\n}\n/**\n * Function to get the degree for circular gauge.\n * @returns number\n * @private\n */\nexport function getDegree(startAngle, endAngle) {\n    var degree = endAngle - startAngle;\n    return degree < 0 ? (degree + 360) : degree;\n}\n/**\n * Function to get the value from angle for circular gauge.\n * @returns number\n * @private\n */\nexport function getValueFromAngle(angle, maximumValue, minimumValue, startAngle, endAngle, isClockWise) {\n    endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n    angle = angle < startAngle ? (angle + 360) : angle;\n    if (isClockWise) {\n        return (((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue;\n    }\n    else {\n        return maximumValue - ((((angle - startAngle) / getDegree(startAngle, endAngle)) * (maximumValue - minimumValue)) + minimumValue);\n    }\n}\n/**\n * Function to check whether it's a complete circle for circular gauge.\n * @returns boolean\n * @private\n */\nexport function isCompleteAngle(startAngle, endAngle) {\n    var totalAngle = endAngle - startAngle;\n    totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n    return Math.floor(totalAngle / 360) !== 0;\n}\n/**\n * Function to get angle from location for circular gauge.\n * @returns number\n * @private\n */\nexport function getAngleFromLocation(center, point) {\n    var angle = Math.atan2((point.y - center.y), (point.x - center.x));\n    angle = Math.round((angle < 0 ? (6.283 + angle) : angle) * (180 / Math.PI)) - 270;\n    angle += angle < 0 ? 360 : 0;\n    return angle;\n}\n/**\n * Function to get the location from angle for circular gauge.\n * @returns GaugeLocation\n * @private\n */\nexport function getLocationFromAngle(degree, radius, center) {\n    var radian = (degree * Math.PI) / 180;\n    return new GaugeLocation(Math.cos(radian) * radius + center.x, Math.sin(radian) * radius + center.y);\n}\n/**\n * Function to get the path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getPathArc(center, start, end, radius, startWidth, endWidth) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    if (startWidth !== undefined && endWidth !== undefined) {\n        return getRangePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), getLocationFromAngle(start, startRadius, center), getLocationFromAngle(end, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n    }\n    else {\n        return getCirclePath(getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, (degree < 180) ? 0 : 1);\n    }\n}\n/**\n * Function to get the range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRangePath(start, end, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' L ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get the rounded path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPathArc(center, actualStart, actualEnd, oldStart, oldEnd, radius, startWidth, endWidth) {\n    actualEnd -= isCompleteAngle(actualStart, actualEnd) ? 0.0001 : 0;\n    var degree = getDegree(actualStart, actualEnd);\n    var startRadius = radius - startWidth;\n    var endRadius = radius - endWidth;\n    var arcRadius = radius - ((startWidth + endWidth) / 2);\n    return getRoundedPath(getLocationFromAngle(actualStart, radius, center), getLocationFromAngle(actualEnd, radius, center), getLocationFromAngle(oldEnd, radius, center), getLocationFromAngle(oldEnd, endRadius, center), getLocationFromAngle(oldStart, radius, center), getLocationFromAngle(oldStart, startRadius, center), getLocationFromAngle(actualStart, startRadius, center), getLocationFromAngle(actualEnd, endRadius, center), radius, arcRadius, arcRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the rounded range path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getRoundedPath(start, end, outerOldEnd, innerOldEnd, outerOldStart, innerOldStart, innerStart, innerEnd, radius, startRadius, endRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y +\n        ' A ' + radius + ' ' + radius + ' 0 ' +\n        clockWise + ' 1 ' + end.x + ' ' + end.y +\n        ' C ' + outerOldEnd.x + ' ' + outerOldEnd.y + ' ' + innerOldEnd.x + ' ' +\n        innerOldEnd.y + ' ' + innerEnd.x + ' ' + innerEnd.y +\n        ' A ' + endRadius + ' ' + startRadius + ' 0 ' +\n        clockWise + ' 0 ' + innerStart.x + ' ' + innerStart.y +\n        ' C ' + innerOldStart.x + ' ' + innerOldStart.y + ' ' + outerOldStart.x + ' ' +\n        outerOldStart.y + ' ' + start.x + ' ' + start.y + ' Z';\n}\n/**\n * Function to calculate the complete path arc of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompleteArc(center, start, end, radius, innerRadius) {\n    end -= isCompleteAngle(start, end) ? 0.0001 : 0;\n    var degree = getDegree(start, end);\n    return getCompletePath(center, getLocationFromAngle(start, radius, center), getLocationFromAngle(end, radius, center), radius, getLocationFromAngle(start, innerRadius, center), getLocationFromAngle(end, innerRadius, center), innerRadius, (degree < 180) ? 0 : 1);\n}\n/**\n * Function to get the circular path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCirclePath(start, end, radius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n        radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y;\n}\n/**\n * Function to get the complete path direction of the circular gauge.\n * @returns string\n * @private\n */\nexport function getCompletePath(center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n        ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n        ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n}\n/**\n * Function to get element from id.\n * @returns Element\n * @private\n */\nexport function getElement(id) {\n    return document.getElementById(id);\n}\n/**\n * Function to compile the template function for circular gauge.\n * @returns Function\n * @private\n */\nexport function getTemplateFunction(template) {\n    var templateFn = null;\n    var e;\n    try {\n        if (document.querySelectorAll(template).length) {\n            templateFn = templateComplier(document.querySelector(template).innerHTML.trim());\n        }\n    }\n    catch (e) {\n        templateFn = templateComplier(template);\n    }\n    return templateFn;\n}\n/**\n * Function to remove the element from id.\n * @private\n */\nexport function removeElement(id) {\n    var element = getElement(id);\n    if (element) {\n        remove(element);\n    }\n}\n/**\n * Function to get current point for circular gauge using element id.\n * @returns IVisiblePointer\n * @private\n */\nexport function getPointer(targetId, gauge) {\n    var tempString;\n    tempString = targetId.replace(gauge.element.id, '').split('_Axis_')[1];\n    return {\n        axisIndex: +tempString[0],\n        pointerIndex: +tempString[tempString.length - 1]\n    };\n}\nexport function getElementSize(template, gauge, parent) {\n    var elementSize;\n    var element;\n    var templateFn = getTemplateFunction(template);\n    if (templateFn && templateFn(gauge).length) {\n        element = gauge.createElement('div', { id: gauge.element.id + '_Measure_Element' });\n        gauge.element.appendChild(element);\n        var templateElement = templateFn(gauge);\n        while (templateElement.length > 0) {\n            element.appendChild(templateElement[0]);\n        }\n        parent.appendChild(element);\n        elementSize = new Size(parent.getBoundingClientRect().width, parent.getBoundingClientRect().height);\n        remove(element);\n    }\n    return elementSize;\n}\n/**\n * Function to get the mouse position\n * @param pageX\n * @param pageY\n * @param element\n */\nexport function getMousePosition(pageX, pageY, element) {\n    var elementRect = element.getBoundingClientRect();\n    var pageXOffset = element.ownerDocument.defaultView.pageXOffset;\n    var pageYOffset = element.ownerDocument.defaultView.pageYOffset;\n    var clientTop = element.ownerDocument.documentElement.clientTop;\n    var clientLeft = element.ownerDocument.documentElement.clientLeft;\n    var positionX = elementRect.left + pageXOffset - clientLeft;\n    var positionY = elementRect.top + pageYOffset - clientTop;\n    return new GaugeLocation((pageX - positionX), (pageY - positionY));\n}\n/**\n * Function to convert the label using formar for cirular gauge.\n * @returns string\n * @private\n */\nexport function getLabelFormat(format) {\n    var customLabelFormat = format && format.match('{value}') !== null;\n    var skeleton = customLabelFormat ? '' : format;\n    return skeleton;\n}\n/**\n * Function to calculate the marker shape for circular gauge.\n * @returns PathOption\n * @private\n */\nexport function calculateShapes(location, shape, size, url, options) {\n    var path;\n    var width = size.width;\n    var height = size.height;\n    var locX = location.x;\n    var locY = location.y;\n    var x = location.x + (-width / 2);\n    var y = location.y + (-height / 2);\n    switch (shape) {\n        case 'Circle':\n            merge(options, { 'rx': width / 2, 'ry': height / 2, 'cx': locX, 'cy': locY });\n            break;\n        case 'Diamond':\n            path = 'M' + ' ' + x + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + locY + ' ' +\n                'L' + ' ' + locX + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + locY + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Rectangle':\n            path = 'M' + ' ' + x + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (-height / 2)) + ' ' +\n                'L' + ' ' + (locX + (width / 2)) + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (height / 2)) + ' ' +\n                'L' + ' ' + x + ' ' + (locY + (-height / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Triangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX - height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX - height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'InvertedTriangle':\n            path = 'M' + ' ' + locX + ' ' + locY + ' ' +\n                'L' + ' ' + (locX + height) + ' ' + (locY - (width / 2)) +\n                'L' + ' ' + (locX + height) + ' ' + (locY + (width / 2)) + ' Z';\n            merge(options, { 'd': path });\n            break;\n        case 'Image':\n            merge(options, { 'href': url, 'height': height, 'width': width, x: x, y: y });\n            break;\n    }\n    return options;\n}\n/**\n * Function to get range color from value for circular gauge.\n * @returns string\n * @private\n */\nexport function getRangeColor(value, ranges, color) {\n    var min = 0;\n    var max = 0;\n    var currentRange = ranges.filter(function (range) {\n        min = Math.min(range.start, range.end);\n        max = Math.max(range.start, range.end);\n        return (value >= min && max >= value);\n    });\n    return currentRange.length ? currentRange[0].rangeColor : color;\n}\n/** @private */\nvar CustomizeOption = /** @class */ (function () {\n    function CustomizeOption(id) {\n        this.id = id;\n    }\n    return CustomizeOption;\n}());\nexport { CustomizeOption };\n/** @private */\nvar PathOption = /** @class */ (function (_super) {\n    __extends(PathOption, _super);\n    function PathOption(id, fill, width, color, opacity, dashArray, d, transform, style) {\n        if (transform === void 0) { transform = ''; }\n        if (style === void 0) { style = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = color;\n        _this['stroke-width'] = width;\n        _this['stroke-dasharray'] = dashArray;\n        _this.d = d;\n        _this.transform = transform;\n        _this.style = style;\n        return _this;\n    }\n    return PathOption;\n}(CustomizeOption));\nexport { PathOption };\n/** @private */\nvar RectOption = /** @class */ (function (_super) {\n    __extends(RectOption, _super);\n    function RectOption(id, fill, border, opacity, rect) {\n        var _this = _super.call(this, id) || this;\n        _this.y = rect.y;\n        _this.x = rect.x;\n        _this.height = rect.height;\n        _this.width = rect.width;\n        _this.opacity = opacity;\n        _this.fill = fill;\n        _this.stroke = border.color;\n        _this['stroke-width'] = border.width;\n        return _this;\n    }\n    return RectOption;\n}(CustomizeOption));\nexport { RectOption };\n/**\n * Internal class size\n */\nvar Size = /** @class */ (function () {\n    function Size(width, height) {\n        this.width = width;\n        this.height = height;\n    }\n    return Size;\n}());\nexport { Size };\n/** @private */\nvar GaugeLocation = /** @class */ (function () {\n    function GaugeLocation(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    return GaugeLocation;\n}());\nexport { GaugeLocation };\n/** @private */\nvar Rect = /** @class */ (function () {\n    function Rect(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    return Rect;\n}());\nexport { Rect };\n/** @private */\nvar TextOption = /** @class */ (function (_super) {\n    __extends(TextOption, _super);\n    function TextOption(id, x, y, anchor, text, transform, baseLine) {\n        if (transform === void 0) { transform = ''; }\n        var _this = _super.call(this, id) || this;\n        _this.transform = '';\n        _this.baseLine = 'auto';\n        _this.x = x;\n        _this.y = y;\n        _this.anchor = anchor;\n        _this.text = text;\n        _this.transform = transform;\n        _this.baseLine = baseLine;\n        return _this;\n    }\n    return TextOption;\n}(CustomizeOption));\nexport { TextOption };\n/** @private */\nvar VisibleLabels = /** @class */ (function () {\n    function VisibleLabels(text, value, size) {\n        this.text = text;\n        this.value = value;\n        this.size = size;\n    }\n    return VisibleLabels;\n}());\nexport { VisibleLabels };\n","/**\n * Specifies gauge Themes\n */\nexport var Theme;\n(function (Theme) {\n    /** @private */\n    Theme.axisLabelFont = {\n        size: '12px',\n        fontWeight: 'Normal',\n        color: null,\n        fontStyle: 'Normal',\n        fontFamily: 'Segoe UI'\n    };\n    /** @private */\n    Theme.axisLineColor = null;\n    /** @private */\n    Theme.tickLineColor = null;\n    /** @private */\n    Theme.pointerColor = null;\n})(Theme || (Theme = {}));\n/** @private */\nexport function getRangePalette(theme) {\n    var palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    // switch (theme) {\n    //     case 'Material':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    //      case 'Fabric':\n    //         palette = ['#50c917', '#27d5ff', '#fcde0b', '#ffb133', '#ff5985'];\n    //         break;\n    // }\n    return palette;\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Complex } from '@syncfusion/ej2-base';\n/**\n * Configures the borders in circular gauge.\n */\nvar Border = /** @class */ (function (_super) {\n    __extends(Border, _super);\n    function Border() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Border.prototype, \"color\", void 0);\n    __decorate([\n        Property(1)\n    ], Border.prototype, \"width\", void 0);\n    return Border;\n}(ChildProperty));\nexport { Border };\n/**\n * Configures the fonts in circular gauge.\n */\nvar Font = /** @class */ (function (_super) {\n    __extends(Font, _super);\n    function Font() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('16px')\n    ], Font.prototype, \"size\", void 0);\n    __decorate([\n        Property('')\n    ], Font.prototype, \"color\", void 0);\n    __decorate([\n        Property('segoe UI')\n    ], Font.prototype, \"fontFamily\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontWeight\", void 0);\n    __decorate([\n        Property('Normal')\n    ], Font.prototype, \"fontStyle\", void 0);\n    __decorate([\n        Property(1)\n    ], Font.prototype, \"opacity\", void 0);\n    return Font;\n}(ChildProperty));\nexport { Font };\n/**\n * Configures the margin of circular gauge.\n */\nvar Margin = /** @class */ (function (_super) {\n    __extends(Margin, _super);\n    function Margin() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"left\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"right\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"top\", void 0);\n    __decorate([\n        Property(10)\n    ], Margin.prototype, \"bottom\", void 0);\n    return Margin;\n}(ChildProperty));\nexport { Margin };\n/**\n * Configures the tooltip in circular gauge.\n */\nvar TooltipSettings = /** @class */ (function (_super) {\n    __extends(TooltipSettings, _super);\n    function TooltipSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"enable\", void 0);\n    __decorate([\n        Property('#000000')\n    ], TooltipSettings.prototype, \"fill\", void 0);\n    __decorate([\n        Complex({ color: '#ffffff', size: '13px' }, Font)\n    ], TooltipSettings.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"format\", void 0);\n    __decorate([\n        Property(null)\n    ], TooltipSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property(true)\n    ], TooltipSettings.prototype, \"enableAnimation\", void 0);\n    __decorate([\n        Complex({}, Border)\n    ], TooltipSettings.prototype, \"border\", void 0);\n    __decorate([\n        Property(false)\n    ], TooltipSettings.prototype, \"showAtMousePosition\", void 0);\n    return TooltipSettings;\n}(ChildProperty));\nexport { TooltipSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, Complex, ChildProperty, Collection } from '@syncfusion/ej2-base';\nimport { Font, Border } from '../model/base';\nimport { Theme } from '../model/theme';\n/**\n * Configures the axis line.\n */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    function Line() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(2)\n    ], Line.prototype, \"width\", void 0);\n    __decorate([\n        Property('')\n    ], Line.prototype, \"dashArray\", void 0);\n    __decorate([\n        Property(Theme.axisLineColor)\n    ], Line.prototype, \"color\", void 0);\n    return Line;\n}(ChildProperty));\nexport { Line };\n/**\n * Configures the axis label.\n */\nvar Label = /** @class */ (function (_super) {\n    __extends(Label, _super);\n    function Label() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex(Theme.axisLabelFont, Font)\n    ], Label.prototype, \"font\", void 0);\n    __decorate([\n        Property('')\n    ], Label.prototype, \"format\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Label.prototype, \"position\", void 0);\n    __decorate([\n        Property('None')\n    ], Label.prototype, \"hiddenLabel\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Property(false)\n    ], Label.prototype, \"useRangeColor\", void 0);\n    __decorate([\n        Property(0)\n    ], Label.prototype, \"offset\", void 0);\n    return Label;\n}(ChildProperty));\nexport { Label };\n/**\n * Configures the ranges of an axis.\n */\nvar Range = /** @class */ (function (_super) {\n    __extends(Range, _super);\n    function Range() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"start\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"end\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"radius\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"startWidth\", void 0);\n    __decorate([\n        Property(10)\n    ], Range.prototype, \"endWidth\", void 0);\n    __decorate([\n        Property(null)\n    ], Range.prototype, \"color\", void 0);\n    __decorate([\n        Property(0)\n    ], Range.prototype, \"roundedCornerRadius\", void 0);\n    return Range;\n}(ChildProperty));\nexport { Range };\n/**\n * Configures the major and minor tick lines of an axis.\n */\nvar Tick = /** @class */ (function (_super) {\n    __extends(Tick, _super);\n    function Tick() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"height\", void 0);\n    __decorate([\n        Property(null)\n    ], Tick.prototype, \"interval\", void 0);\n    __decorate([\n        Property(0)\n    ], Tick.prototype, \"offset\", void 0);\n    __decorate([\n        Property(Theme.tickLineColor)\n    ], Tick.prototype, \"color\", void 0);\n    __decorate([\n        Property('Inside')\n    ], Tick.prototype, \"position\", void 0);\n    __decorate([\n        Property(false)\n    ], Tick.prototype, \"useRangeColor\", void 0);\n    return Tick;\n}(ChildProperty));\nexport { Tick };\n/**\n * Configures the needle cap in pointer.\n */\nvar Cap = /** @class */ (function (_super) {\n    __extends(Cap, _super);\n    function Cap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('#ffffff')\n    ], Cap.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: Theme.pointerColor, width: 8 }, Border)\n    ], Cap.prototype, \"border\", void 0);\n    __decorate([\n        Property(8)\n    ], Cap.prototype, \"radius\", void 0);\n    return Cap;\n}(ChildProperty));\nexport { Cap };\n/**\n * Configures the back needle in pointers.\n */\nvar NeedleTail = /** @class */ (function (_super) {\n    __extends(NeedleTail, _super);\n    function NeedleTail() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(Theme.pointerColor)\n    ], NeedleTail.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: Theme.pointerColor, width: 0 }, Border)\n    ], NeedleTail.prototype, \"border\", void 0);\n    __decorate([\n        Property('0%')\n    ], NeedleTail.prototype, \"length\", void 0);\n    return NeedleTail;\n}(ChildProperty));\nexport { NeedleTail };\n/**\n * Configures the animation of pointers.\n */\nvar Animation = /** @class */ (function (_super) {\n    __extends(Animation, _super);\n    function Animation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(true)\n    ], Animation.prototype, \"enable\", void 0);\n    __decorate([\n        Property(1000)\n    ], Animation.prototype, \"duration\", void 0);\n    return Animation;\n}(ChildProperty));\nexport { Animation };\n/**\n * ‘Annotation’ module is used to handle annotation action for an axis.\n */\nvar Annotation = /** @class */ (function (_super) {\n    __extends(Annotation, _super);\n    function Annotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"content\", void 0);\n    __decorate([\n        Property(90)\n    ], Annotation.prototype, \"angle\", void 0);\n    __decorate([\n        Property('50%')\n    ], Annotation.prototype, \"radius\", void 0);\n    __decorate([\n        Property('-1')\n    ], Annotation.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], Annotation.prototype, \"autoAngle\", void 0);\n    __decorate([\n        Complex({ size: '12px', color: '#686868' }, Font)\n    ], Annotation.prototype, \"textStyle\", void 0);\n    __decorate([\n        Property(null)\n    ], Annotation.prototype, \"description\", void 0);\n    return Annotation;\n}(ChildProperty));\nexport { Annotation };\n/**\n * Configures the pointers of an axis.\n */\nvar Pointer = /** @class */ (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"value\", void 0);\n    __decorate([\n        Property('Needle')\n    ], Pointer.prototype, \"type\", void 0);\n    __decorate([\n        Property(0)\n    ], Pointer.prototype, \"roundedCornerRadius\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"radius\", void 0);\n    __decorate([\n        Property(20)\n    ], Pointer.prototype, \"pointerWidth\", void 0);\n    __decorate([\n        Complex({}, Cap)\n    ], Pointer.prototype, \"cap\", void 0);\n    __decorate([\n        Complex({}, NeedleTail)\n    ], Pointer.prototype, \"needleTail\", void 0);\n    __decorate([\n        Property(Theme.pointerColor)\n    ], Pointer.prototype, \"color\", void 0);\n    __decorate([\n        Complex({ color: '#DDDDDD', width: 0 }, Border)\n    ], Pointer.prototype, \"border\", void 0);\n    __decorate([\n        Complex(null, Animation)\n    ], Pointer.prototype, \"animation\", void 0);\n    __decorate([\n        Property('Circle')\n    ], Pointer.prototype, \"markerShape\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerHeight\", void 0);\n    __decorate([\n        Property(null)\n    ], Pointer.prototype, \"description\", void 0);\n    __decorate([\n        Property(5)\n    ], Pointer.prototype, \"markerWidth\", void 0);\n    return Pointer;\n}(ChildProperty));\nexport { Pointer };\n/**\n * Configures an axis in a gauge.\n */\nvar Axis = /** @class */ (function (_super) {\n    __extends(Axis, _super);\n    function Axis() {\n        /**\n         * Specifies the minimum value of an axis.\n         * @aspDefaultValueIgnore\n         * @default null\n         */\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** @private */\n        _this.visibleLabels = [];\n        return _this;\n    }\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"minimum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"maximum\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"radius\", void 0);\n    __decorate([\n        Complex({}, Line)\n    ], Axis.prototype, \"lineStyle\", void 0);\n    __decorate([\n        Collection([{}], Range)\n    ], Axis.prototype, \"ranges\", void 0);\n    __decorate([\n        Collection([{}], Pointer)\n    ], Axis.prototype, \"pointers\", void 0);\n    __decorate([\n        Collection([{}], Annotation)\n    ], Axis.prototype, \"annotations\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 10 }, Tick)\n    ], Axis.prototype, \"majorTicks\", void 0);\n    __decorate([\n        Complex({ width: 2, height: 5 }, Tick)\n    ], Axis.prototype, \"minorTicks\", void 0);\n    __decorate([\n        Property(200)\n    ], Axis.prototype, \"startAngle\", void 0);\n    __decorate([\n        Property(160)\n    ], Axis.prototype, \"endAngle\", void 0);\n    __decorate([\n        Property('ClockWise')\n    ], Axis.prototype, \"direction\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"background\", void 0);\n    __decorate([\n        Property(null)\n    ], Axis.prototype, \"rangeGap\", void 0);\n    __decorate([\n        Property(false)\n    ], Axis.prototype, \"startAndEndRangeGap\", void 0);\n    __decorate([\n        Complex({}, Label)\n    ], Axis.prototype, \"labelStyle\", void 0);\n    return Axis;\n}(ChildProperty));\nexport { Axis };\n","import { stringToNumber, getLocationFromAngle, getFontStyle } from '../utils/helper';\nimport { getElement, getTemplateFunction, measureElementRect } from '../utils/helper';\nimport { annotationRender } from '../model/constants';\nimport { createElement } from '@syncfusion/ej2-base';\n/**\n * Annotation Module handles the Annotation of the axis.\n */\nvar Annotations = /** @class */ (function () {\n    /**\n     * Constructor for Annotation module.\n     * @private.\n     */\n    function Annotations(gauge) {\n        this.gauge = gauge;\n        this.elementId = gauge.element.id;\n    }\n    /**\n     * Method to render the annotation for circular gauge.\n     */\n    Annotations.prototype.renderAnnotation = function (axis, index) {\n        var _this = this;\n        var element = createElement('div', {\n            id: this.elementId + '_Annotations_' + index\n        });\n        var parentElement = getElement(this.elementId + '_Secondary_Element');\n        axis.annotations.map(function (annotation, annotationIndex) {\n            if (annotation.content !== null) {\n                _this.createTemplate(element, annotationIndex, index);\n            }\n        });\n        if (parentElement && element.childElementCount) {\n            parentElement.appendChild(element);\n        }\n    };\n    /**\n     * Method to create annotation template for circular gauge.\n     */\n    Annotations.prototype.createTemplate = function (element, annotationIndex, axisIndex) {\n        var axis = this.gauge.axes[axisIndex];\n        var annotation = axis.annotations[annotationIndex];\n        var childElement = createElement('div', {\n            id: this.elementId + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex,\n            styles: 'position: absolute; z-index:' + annotation.zIndex + ';transform:' +\n                (annotation.autoAngle ? 'rotate(' + (annotation.angle - 90) + 'deg)' : 'rotate(0deg)') + ';'\n        });\n        var argsData = {\n            cancel: false, name: annotationRender, content: annotation.content,\n            axis: axis, annotation: annotation, textStyle: annotation.textStyle\n        };\n        this.gauge.trigger(annotationRender, argsData);\n        var templateFn;\n        var templateElement;\n        if (!argsData.cancel) {\n            templateFn = getTemplateFunction(argsData.content);\n            if (templateFn && templateFn(axis).length) {\n                templateElement = Array.prototype.slice.call(templateFn(axis));\n                var length_1 = templateElement.length;\n                for (var i = 0; i < length_1; i++) {\n                    childElement.appendChild(templateElement[i]);\n                }\n            }\n            else {\n                childElement.appendChild(createElement('div', {\n                    innerHTML: argsData.content,\n                    styles: getFontStyle(argsData.textStyle)\n                }));\n            }\n            this.updateLocation(childElement, axis, annotation);\n            element.appendChild(childElement);\n        }\n    };\n    /**\n     * Method to update the annotation location for circular gauge.\n     */\n    Annotations.prototype.updateLocation = function (element, axis, annotation) {\n        var location = getLocationFromAngle(annotation.angle - 90, stringToNumber(annotation.radius, axis.currentRadius), this.gauge.midPoint);\n        var elementRect = measureElementRect(element);\n        element.style.left = (location.x - (elementRect.width / 2)) + 'px';\n        element.style.top = (location.y - (elementRect.height / 2)) + 'px';\n        element.setAttribute('aria-label', annotation.description || 'Annotation');\n    };\n    /**\n     * Get module name.\n     */\n    Annotations.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Annotations';\n    };\n    /**\n     * To destroy the annotation.\n     * @return {void}\n     * @private\n     */\n    Annotations.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n    };\n    return Annotations;\n}());\nexport { Annotations };\n","/**\n * Specifies the gauge constant value\n */\n/** @private */\nexport var loaded = 'loaded';\n/** @private */\nexport var load = 'load';\n/** @private */\nexport var animationComplete = 'animationComplete';\n/** @private */\nexport var axisLabelRender = 'axisLabelRender';\n/** @private */\nexport var tooltipRender = 'tooltipRender';\n/** @private */\nexport var annotationRender = 'annotationRender';\n/** @private */\nexport var gaugeMouseMove = 'gaugeMouseMove';\n/** @private */\nexport var gaugeMouseLeave = 'gaugeMouseLeave';\n/** @private */\nexport var gaugeMouseDown = 'gaugeMouseDown';\n/** @private */\nexport var gaugeMouseUp = 'gaugeMouseUp';\n/** @private */\nexport var dragStart = 'dragStart';\n/** @private */\nexport var dragMove = 'dragMove';\n/** @private */\nexport var dragEnd = 'dragEnd';\n/** @private */\nexport var resized = 'resized';\n","import { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { getPointer, Rect, getMousePosition, getElementSize } from '../utils/helper';\nimport { getAngleFromValue, getLabelFormat, getLocationFromAngle } from '../utils/helper';\nimport { Browser, createElement } from '@syncfusion/ej2-base';\nimport { tooltipRender } from '../model/constants';\n/**\n * Tooltip Module handles the tooltip of the circular gauge\n */\nvar GaugeTooltip = /** @class */ (function () {\n    /**\n     * Constructor for Tooltip module.\n     * @private.\n     */\n    function GaugeTooltip(gauge) {\n        this.gauge = gauge;\n        this.tooltipId = this.gauge.element.id + '_CircularGauge_Tooltip';\n        this.tooltip = gauge.tooltip;\n        this.textStyle = this.tooltip.textStyle;\n        this.borderStyle = this.tooltip.border;\n        this.addEventListener();\n    }\n    /**\n     * Method to render the tooltip for circular gauge.\n     */\n    /* tslint:disable:no-string-literal */\n    /* tslint:disable:max-func-body-length */\n    GaugeTooltip.prototype.renderTooltip = function (e) {\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var location;\n        var samePointerEle = false;\n        if (e.type.indexOf('touch') !== -1) {\n            touchArg = e;\n            target = touchArg.target;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n        }\n        else {\n            target = e.target;\n            pageX = e.pageX;\n            pageY = e.pageY;\n        }\n        if (target.id.indexOf('_Pointer_') >= 0) {\n            if (this.pointerEle !== null) {\n                samePointerEle = (this.pointerEle === target);\n            }\n            var svgRect = this.gauge.svgObject.getBoundingClientRect();\n            var elementRect = this.gauge.element.getBoundingClientRect();\n            var axisRect = document.getElementById(this.gauge.element.id + '_AxesCollection').getBoundingClientRect();\n            var rect = new Rect(Math.abs(elementRect.left - svgRect.left), Math.abs(elementRect.top - svgRect.top), svgRect.width, svgRect.height);\n            var currentPointer = getPointer(target.id, this.gauge);\n            this.currentAxis = this.gauge.axes[currentPointer.axisIndex];\n            this.currentPointer = (this.currentAxis.pointers)[currentPointer.pointerIndex];\n            var angle = getAngleFromValue(this.currentPointer.currentValue, this.currentAxis.visibleRange.max, this.currentAxis.visibleRange.min, this.currentAxis.startAngle, this.currentAxis.endAngle, this.currentAxis.direction === 'ClockWise') % 360;\n            var tooltipFormat = this.gauge.tooltip.format || this.currentAxis.labelStyle.format;\n            var customLabelFormat = tooltipFormat && tooltipFormat.match('{value}') !== null;\n            var format = this.gauge.intl.getNumberFormat({\n                format: getLabelFormat(tooltipFormat), useGrouping: this.gauge.useGroupingSeparator\n            });\n            if (document.getElementById(this.tooltipId)) {\n                this.tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                this.tooltipEle = createElement('div', {\n                    id: this.tooltipId,\n                    className: 'EJ2-CircularGauge-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.gauge.element.id + '_Secondary_Element').appendChild(this.tooltipEle);\n            }\n            var content = customLabelFormat ?\n                tooltipFormat.replace(new RegExp('{value}', 'g'), format(this.currentPointer.currentValue)) :\n                format(this.currentPointer.currentValue);\n            location = getLocationFromAngle(angle, this.currentAxis.currentRadius, this.gauge.midPoint);\n            location.x = (this.tooltip.template && ((angle >= 150 && angle <= 250) || (angle >= 330 && angle <= 360) ||\n                (angle >= 0 && angle <= 45))) ? (location.x + 10) : location.x;\n            var tooltipArgs = {\n                name: tooltipRender, cancel: false, content: content, location: location, axis: this.currentAxis,\n                tooltip: this.tooltip, pointer: this.currentPointer, event: e, gauge: this.gauge\n            };\n            this.gauge.trigger(tooltipRender, tooltipArgs);\n            var template = tooltipArgs.tooltip.template;\n            if (template !== null && Object.keys(template).length === 1) {\n                template = template[Object.keys(template)[0]];\n            }\n            if (!this.tooltip.showAtMousePosition) {\n                if (template) {\n                    var elementSize = getElementSize(template, this.gauge, this.tooltipEle);\n                    this.tooltipRect = Math.abs(axisRect.left - svgRect.left) > elementSize.width ?\n                        this.findPosition(rect, angle, content, tooltipArgs.location) : rect;\n                }\n                else {\n                    this.findPosition(rect, angle, content, tooltipArgs.location);\n                }\n            }\n            else {\n                tooltipArgs.location = getMousePosition(pageX, pageY, this.gauge.svgObject);\n                this.tooltipRect = rect;\n            }\n            if (!tooltipArgs.cancel && !samePointerEle) {\n                var themes = this.gauge.theme.toLowerCase();\n                var tooltipColor = (themes.indexOf('dark') > -1 || themes === 'highcontrast') ? '#00000' : '#FFFFFF';\n                tooltipArgs['tooltip']['properties']['textStyle']['color'] = tooltipColor;\n                this.svgTooltip = new Tooltip({\n                    enable: true,\n                    data: { value: tooltipArgs.content },\n                    template: template,\n                    enableAnimation: tooltipArgs.tooltip.enableAnimation,\n                    content: [tooltipArgs.content],\n                    location: tooltipArgs.location,\n                    inverted: this.arrowInverted,\n                    areaBounds: this.tooltipRect,\n                    fill: (themes.indexOf('dark') > -1 || themes === 'highcontrast') ? '#FFFFFF' : tooltipArgs.tooltip.fill,\n                    textStyle: tooltipArgs.tooltip.textStyle,\n                    border: tooltipArgs.tooltip.border\n                });\n                this.svgTooltip.appendTo(this.tooltipEle);\n                if (template && Math.abs(pageY - this.tooltipEle.getBoundingClientRect().top) <= 0) {\n                    this.tooltipEle.style.top = (parseFloat(this.tooltipEle.style.top) + 20) + 'px';\n                }\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * Method to find the position of the tooltip anchor for circular gauge.\n     */\n    GaugeTooltip.prototype.findPosition = function (rect, angle, text, location) {\n        var addLeft;\n        var addTop;\n        var addHeight;\n        var addWidth;\n        switch (true) {\n            case (angle >= 0 && angle < 45):\n                this.arrowInverted = true;\n                addLeft = (angle >= 15 && angle <= 30) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'RightBottom';\n                break;\n            case (angle >= 45 && angle < 90):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomRight';\n                break;\n            case (angle >= 90 && angle < 135):\n                this.arrowInverted = false;\n                this.tooltipRect = new Rect(rect.x, rect.y + location.y, rect.width, rect.height);\n                this.tooltipPosition = 'BottomLeft';\n                break;\n            case (angle >= 135 && angle < 180):\n                this.arrowInverted = true;\n                addTop = (angle >= 150 && angle <= 160) ? location.y : 0;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y + addTop, rect.width, rect.height);\n                this.tooltipPosition = 'LeftBottom';\n                break;\n            case (angle >= 180 && angle < 225):\n                this.arrowInverted = true;\n                addHeight = (angle >= 200 && angle <= 225) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x - rect.width, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'LeftTop';\n                break;\n            case (angle >= 225 && angle < 270):\n                this.arrowInverted = false;\n                addWidth = (angle >= 250 && angle <= 290) ? rect.width : Math.abs(rect.x - location.x);\n                this.tooltipRect = new Rect(rect.x, rect.y, addWidth, rect.height);\n                this.tooltipPosition = 'TopLeft';\n                break;\n            case (angle >= 270 && angle < 315):\n                this.arrowInverted = false;\n                addLeft = (angle >= 270 && angle > 290) ? location.x : 0;\n                this.tooltipRect = new Rect(rect.x + addLeft, rect.y, rect.width, rect.height);\n                this.tooltipPosition = 'TopRight';\n                break;\n            case (angle >= 315 && angle <= 360):\n                this.arrowInverted = true;\n                addHeight = (angle >= 315 && angle <= 340) ? Math.abs(rect.y - location.y) : rect.height;\n                this.tooltipRect = new Rect(rect.x, rect.y, rect.width, addHeight);\n                this.tooltipPosition = 'RightTop';\n                break;\n        }\n        return this.tooltipRect;\n    };\n    GaugeTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-CircularGauge-Tooltip').length > 0) {\n            document.getElementsByClassName('EJ2-CircularGauge-Tooltip')[0].remove();\n            this.pointerEle = null;\n        }\n    };\n    GaugeTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        clearTimeout(this.clearTimeout);\n        this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    GaugeTooltip.prototype.addEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        this.gauge.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    };\n    /**\n     * To unbind events for tooltip module\n     */\n    GaugeTooltip.prototype.removeEventListener = function () {\n        if (this.gauge.isDestroyed) {\n            return;\n        }\n        this.gauge.off(Browser.touchMoveEvent, this.renderTooltip);\n        this.gauge.off(Browser.touchEndEvent, this.mouseUpHandler);\n    };\n    /**\n     * Get module name.\n     */\n    GaugeTooltip.prototype.getModuleName = function () {\n        // Returns te module name\n        return 'Tooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    GaugeTooltip.prototype.destroy = function (gauge) {\n        // Destroy method performed here\n        this.removeEventListener();\n    };\n    return GaugeTooltip;\n}());\nexport { GaugeTooltip };\n","import { getLocationFromAngle, PathOption, stringToNumber, TextOption, textElement, appendPath, toPixel } from '../utils/helper';\nimport { getAngleFromValue, isCompleteAngle, getPathArc, getRoundedPathArc, getRangeColor } from '../utils/helper';\nimport { getRangePalette } from '../model/theme';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar AxisRenderer = /** @class */ (function () {\n    /**\n     * Constructor for axis renderer.\n     * @private.\n     */\n    function AxisRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisOuterLine = function (axis, index, element, gauge) {\n        var background = axis.background;\n        this.setRangeColor(axis);\n        if (background !== null) {\n            appendPath(new PathOption(gauge.element.id + '_AxisOuterLine_' + index, background, 0, 'transparent', null, '0', getPathArc(gauge.midPoint, 0, 360, (Math.min(axis.rect.width, axis.rect.height) / 2)), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis line of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLine = function (axis, index, element, gauge) {\n        var startAngle = axis.startAngle;\n        var endAngle = axis.endAngle;\n        if (axis.lineStyle.width > 0) {\n            startAngle = !isCompleteAngle(startAngle, endAngle) ? startAngle : [0, endAngle = 360][0];\n            appendPath(new PathOption(gauge.element.id + '_AxisLine_' + index, 'transparent', axis.lineStyle.width, axis.lineStyle.color, null, axis.lineStyle.dashArray, getPathArc(gauge.midPoint, startAngle - 90, endAngle - 90, axis.currentRadius), '', 'pointer-events:none;'), element, gauge);\n        }\n    };\n    /**\n     * Method to render the axis labels of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisLabels = function (axis, index, element, gauge) {\n        var labelElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Labels_' + index\n        });\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var labelCollection = axis.visibleLabels;\n        var location;\n        var style = axis.labelStyle;\n        var anchor;\n        var angle;\n        var label;\n        var radius = axis.currentRadius;\n        var labelPadding = 10;\n        if (style.position === 'Outside') {\n            radius += (axis.nearSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2)) +\n                (labelPadding / 2);\n        }\n        else {\n            radius -= (axis.farSize - (axis.maxLabelSize.height + axis.lineStyle.width / 2) +\n                (style.autoAngle ? labelPadding : 0));\n        }\n        for (var i = 0, length_1 = labelCollection.length; i < length_1; i++) {\n            if ((i === 0 && style.hiddenLabel === 'First') ||\n                (i === (length_1 - 1) && style.hiddenLabel === 'Last')) {\n                continue;\n            }\n            label = labelCollection[i];\n            angle = Math.round(getAngleFromValue(label.value, max, min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise'));\n            location = getLocationFromAngle(angle, radius, gauge.midPoint);\n            anchor = this.findAnchor(location, style, angle, label);\n            textElement(new TextOption(gauge.element.id + '_Axis_' + index + '_Label_' + i, location.x, location.y, anchor, label.text, style.autoAngle ? 'rotate(' + (angle + 90) + ',' + (location.x) + ',' + location.y + ')' : '', 'auto'), style.font, style.useRangeColor ? getRangeColor(label.value, axis.ranges, style.font.color) : style.font.color, labelElement, 'pointer-events:none;');\n        }\n        element.appendChild(labelElement);\n    };\n    /**\n     * Method to find the anchor of the axis label.\n     * @private\n     */\n    AxisRenderer.prototype.findAnchor = function (location, style, angle, label) {\n        if (style.autoAngle) {\n            return 'middle';\n        }\n        var anchor = style.position === 'Inside' ?\n            ((angle > 120 && angle < 240) ? 'start' : ((300 < angle || angle < 60) ? 'end' : 'middle')) :\n            ((angle > 120 && angle < 240) ? 'end' : ((300 < angle || angle < 60) ? 'start' : 'middle'));\n        location.y += style.position === 'Inside' ?\n            ((angle >= 240 && angle <= 300) ? (label.size.height / 2) :\n                (angle >= 60 && angle <= 120) ? 0 : label.size.height / 4) :\n            ((angle >= 240 && angle <= 300) ? 0 :\n                (angle >= 60 && angle <= 120) ? label.size.height / 2 : label.size.height / 4);\n        return anchor;\n    };\n    /**\n     * Method to render the axis minor tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMinorTickLines = function (axis, index, element, gauge) {\n        var minorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MinorTickLines_' + index\n        });\n        var minorLineStyle = axis.minorTicks;\n        var minorInterval = minorLineStyle.interval !== null ?\n            minorLineStyle.interval : (axis.visibleRange.interval / 2);\n        var isRangeColor = minorLineStyle.useRangeColor;\n        if (minorLineStyle.width && minorLineStyle.height && minorInterval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max; i <= max; i += minorInterval) {\n                if (this.majorValues.indexOf(+i.toFixed(3)) < 0) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_Minor_TickLine_' + index + '_' + i, 'transparent', minorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, minorLineStyle.color) : minorLineStyle.color, null, '0', this.calculateTicks(i, minorLineStyle, axis), '', 'pointer-events:none;'), minorTickElements, gauge);\n                }\n            }\n            element.appendChild(minorTickElements);\n        }\n    };\n    /**\n     * Method to render the axis major tick lines of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawMajorTickLines = function (axis, index, element, gauge) {\n        var majorTickElements = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_MajorTickLines_' + index\n        });\n        var majorLineStyle = axis.majorTicks;\n        var isRangeColor = majorLineStyle.useRangeColor;\n        this.majorValues = [];\n        if (majorLineStyle.width && majorLineStyle.height && axis.visibleRange.interval) {\n            for (var i = axis.visibleRange.min, max = axis.visibleRange.max, interval = axis.visibleRange.interval; i <= max; i += interval) {\n                this.majorValues.push(+i.toFixed(3));\n                appendPath(new PathOption(gauge.element.id + '_Axis_Major_TickLine_' + index + '_' + i, 'transparent', majorLineStyle.width, isRangeColor ? getRangeColor(i, axis.ranges, majorLineStyle.color) : majorLineStyle.color, null, '0', this.calculateTicks(i, majorLineStyle, axis), '', 'pointer-events:none;'), majorTickElements, gauge);\n            }\n            element.appendChild(majorTickElements);\n        }\n    };\n    /**\n     * Method to calcualte the tick elements for the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.calculateTicks = function (value, options, axis) {\n        var axisLineWidth = (axis.lineStyle.width / 2) + options.offset;\n        var isOutside = options.position === 'Outside';\n        var angle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        var start = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth), this.gauge.midPoint);\n        var end = getLocationFromAngle(angle, axis.currentRadius +\n            (isOutside ? axisLineWidth : -axisLineWidth) +\n            (isOutside ? options.height : -options.height), this.gauge.midPoint);\n        return 'M ' + start.x + ' ' + start.y + ' L ' + end.x + ' ' + end.y + ' ';\n    };\n    /**\n     * Method to render the axis range of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.drawAxisRange = function (axis, index, element, gauge) {\n        var _this = this;\n        var rangeElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Ranges_' + index\n        });\n        var location = this.gauge.midPoint;\n        var startAngle;\n        var endAngle;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue;\n        var endValue;\n        var min = axis.visibleRange.min;\n        var max = axis.visibleRange.max;\n        var startWidth;\n        var endWidth;\n        var roundedStartAngle;\n        var roundedEndAngle;\n        var oldStart;\n        var oldEnd;\n        axis.ranges.map(function (range, rangeIndex) {\n            _this.calculateRangeRadius(axis, range);\n            startValue = Math.min(Math.max(range.start, min), range.end);\n            endValue = Math.min(Math.max(range.start, range.end), max);\n            startAngle = getAngleFromValue(startValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            endAngle = getAngleFromValue(endValue, max, min, axis.startAngle, axis.endAngle, isClockWise);\n            var isAngleCross360 = (startAngle > endAngle);\n            if (axis.rangeGap != null && axis.rangeGap > 0) {\n                startAngle = (rangeIndex === 0 && !axis.startAndEndRangeGap) ? startAngle : startAngle + (axis.rangeGap / Math.PI);\n                endAngle = (rangeIndex === axis.ranges.length - 1 && !axis.startAndEndRangeGap) ? endAngle : endAngle -\n                    (axis.rangeGap / Math.PI);\n            }\n            if ((startValue !== endValue) && (isAngleCross360 ? startAngle < (endAngle + 360) : (startAngle < endAngle))) {\n                if (range.startWidth.length > 0) {\n                    startWidth = toPixel(range.startWidth, range.currentRadius);\n                }\n                else {\n                    startWidth = range.startWidth;\n                }\n                if (range.endWidth.length > 0) {\n                    endWidth = toPixel(range.endWidth, range.currentRadius);\n                }\n                else {\n                    endWidth = range.endWidth;\n                }\n                endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n                endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n                var radius = range.roundedCornerRadius;\n                var process = (radius * 0.25);\n                oldStart = ((((range.currentRadius - (startWidth / 2)) * ((startAngle * Math.PI) / 180) -\n                    (radius / process)) / (range.currentRadius - (startWidth / 2))) * 180) / Math.PI;\n                oldEnd = ((((range.currentRadius - (endWidth / 2)) * ((endAngle * Math.PI) / 180) +\n                    (radius / process)) / (range.currentRadius - (endWidth / 2))) * 180) / Math.PI;\n                roundedStartAngle = ((((range.currentRadius) * ((startAngle * Math.PI) / 180) +\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                roundedEndAngle = ((((range.currentRadius) * ((endAngle * Math.PI) / 180) -\n                    radius) / (range.currentRadius)) * 180) / Math.PI;\n                if (range.roundedCornerRadius) {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, 1, '0', getRoundedPathArc(location, Math.floor(roundedStartAngle), Math.ceil(roundedEndAngle), oldStart, oldEnd, range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n                else {\n                    appendPath(new PathOption(gauge.element.id + '_Axis_' + index + '_Range_' + rangeIndex, range.rangeColor, 0, range.rangeColor, 1, '0', getPathArc(gauge.midPoint, Math.floor(startAngle), Math.ceil(endAngle), range.currentRadius, startWidth, endWidth), '', 'pointer-events:none;'), rangeElement, gauge);\n                }\n            }\n        });\n        element.appendChild(rangeElement);\n    };\n    /**\n     * Method to calculate the radius of the axis range.\n     * @return {void}\n     */\n    AxisRenderer.prototype.calculateRangeRadius = function (axis, range) {\n        var radius = range.radius !== null ? range.radius : '100%';\n        range.currentRadius = stringToNumber(radius, axis.currentRadius);\n    };\n    /**\n     * Method to get the range color of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisRenderer.prototype.setRangeColor = function (axis) {\n        var rangeColors = getRangePalette(this.gauge.theme);\n        axis.ranges.map(function (range, index) {\n            range.rangeColor = range.color ? range.color : rangeColors[index % rangeColors.length];\n        });\n    };\n    return AxisRenderer;\n}());\nexport { AxisRenderer };\n","import { stringToNumber, Size, calculateShapes, appendPath } from '../utils/helper';\nimport { getLocationFromAngle, PathOption } from '../utils/helper';\nimport { linear, getAngleFromValue, getCompleteArc, getRoundedPathArc } from '../utils/helper';\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { animationComplete } from '../model/constants';\n/**\n * Specifies the Axis rendering for circular gauge\n */\nvar PointerRenderer = /** @class */ (function () {\n    /**\n     * Constructor for pointer renderer.\n     * @private.\n     */\n    function PointerRenderer(gauge) {\n        this.gauge = gauge;\n    }\n    /**\n     * Method to render the axis pointers of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.drawPointers = function (axis, axisIndex, element, gauge, animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var pointerElement = gauge.renderer.createGroup({\n            id: gauge.element.id + '_Axis_Pointers_' + axisIndex\n        });\n        var childElement;\n        var range;\n        axis.pointers.map(function (pointer, pointerIndex) {\n            range = axis.visibleRange;\n            pointer.pathElement = [];\n            _this.calculatePointerRadius(axis, pointer);\n            childElement = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_' + axisIndex + '_Pointer_' + pointerIndex\n            });\n            _this['draw' + pointer.type + 'Pointer'](axis, axisIndex, pointerIndex, childElement, gauge);\n            _this.setPointerValue(axis, pointer, pointer.currentValue);\n            pointerElement.appendChild(childElement);\n            if (animate) {\n                _this.doPointerAnimation(pointer, axis);\n            }\n        });\n        element.appendChild(pointerElement);\n    };\n    /**\n     * Measure the pointer length of the circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.calculatePointerRadius = function (axis, pointer) {\n        var padding = 5;\n        pointer.currentRadius = pointer.radius === null ?\n            (axis.currentRadius - (axis.farSize + padding)) :\n            stringToNumber(pointer.radius, axis.currentRadius);\n    };\n    /**\n     * Method to render the needle pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawNeedlePointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var pointerRadius;\n        var location;\n        var direction;\n        var mid = gauge.midPoint;\n        var width = pointer.pointerWidth / 2;\n        var rectDirection;\n        // To render the needle\n        location = getLocationFromAngle(0, pointer.currentRadius, mid);\n        direction = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + mid.y +\n            ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Needle_' + index, pointer.color, pointer.border.width, pointer.border.color, null, '0', direction), parentElement, gauge));\n        pointerRadius = stringToNumber(pointer.needleTail.length, pointer.currentRadius);\n        // To render the rect element for touch\n        rectDirection = 'M ' + mid.x + ' ' + (mid.y - width) + ' L ' + (location.x) + ' ' + (mid.y - width) +\n            ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + mid.x + ' ' + (mid.y + width);\n        // To render the needle tail\n        if (pointerRadius) {\n            location = getLocationFromAngle(180, pointerRadius, gauge.midPoint);\n            direction = 'M ' + mid.x + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y - width) +\n                ' L ' + (location.x) + ' ' + (mid.y + width) +\n                ' L ' + (mid.x) + ' ' + (mid.y + width) + ' Z';\n            pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleTail_' + index, pointer.needleTail.color, pointer.needleTail.border.width, pointer.needleTail.border.color, null, '0', direction), parentElement, gauge));\n            rectDirection += ' L ' + location.x + ' ' + (mid.y + width) + ' L ' + location.x + ' ' + (mid.y - width);\n        }\n        // To render the cap\n        if (pointer.cap.radius) {\n            pointer.pathElement.push(appendPath(calculateShapes(mid, 'Circle', new Size(pointer.cap.radius * 2, pointer.cap.radius * 2), '', new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleCap_' + index, pointer.cap.color, pointer.cap.border.width, pointer.cap.border.color, null, '0', '', '')), parentElement, gauge, 'Ellipse'));\n        }\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_NeedleRect_' + index, 'transparent', 0, 'transpanret', null, '0', rectDirection + ' Z'), parentElement, gauge));\n    };\n    /**\n     * Method to set the pointer value of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.setPointerValue = function (axis, pointer, value) {\n        var location = this.gauge.midPoint;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        if (isClockWise) {\n            endAngle = startAngle === endAngle ? endAngle + 1 : endAngle;\n        }\n        else {\n            endAngle = startAngle === endAngle ? [startAngle, startAngle = endAngle - 1][0] : [startAngle, startAngle = endAngle][0];\n        }\n        var roundStartAngle;\n        var roundEndAngle;\n        var oldStartValue;\n        var oldEndValue;\n        var radius = pointer.roundedCornerRadius;\n        var minRadius = (radius * 0.25);\n        if (value <= minRadius) {\n            radius = value === 1 || 2 ? 8 : radius;\n            radius /= 2;\n            minRadius = radius * 0.25;\n        }\n        oldStartValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((startAngle * Math.PI) / 180) -\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        oldEndValue = ((((pointer.currentRadius - (pointer.pointerWidth / 2)) * ((endAngle * Math.PI) / 180) +\n            (radius / minRadius)) / (pointer.currentRadius - (pointer.pointerWidth / 2))) * 180) / Math.PI;\n        roundStartAngle = ((((pointer.currentRadius) * ((startAngle * Math.PI) / 180) +\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        roundEndAngle = ((((pointer.currentRadius) * ((endAngle * Math.PI) / 180) -\n            radius) / (pointer.currentRadius)) * 180) / Math.PI;\n        if (isNullOrUndefined(pointer.currentRadius)) {\n            this.calculatePointerRadius(axis, pointer);\n        }\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                if (pointer.roundedCornerRadius && value) {\n                    element.setAttribute('d', getRoundedPathArc(location, Math.floor(roundStartAngle), Math.ceil(roundEndAngle), oldStartValue, oldEndValue, pointer.currentRadius, pointer.pointerWidth, pointer.pointerWidth));\n                    radius = 0;\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(location, startAngle, endAngle, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth)));\n                }\n            }\n            else {\n                element.setAttribute('transform', 'rotate(' + getAngleFromValue(value, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise) + ',' + location.x + ',' + location.y + ')');\n            }\n            element.setAttribute('aria-label', pointer.description || 'Pointer:' + value.toString());\n        });\n    };\n    /**\n     * Method to render the marker pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawMarkerPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        var location = getLocationFromAngle(0, pointer.currentRadius, gauge.midPoint);\n        pointer.pathElement.push(appendPath(calculateShapes(location, pointer.markerShape, new Size(pointer.markerWidth, pointer.markerHeight), pointer.imageUrl, new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_Marker_' + index, pointer.color, pointer.border.width, pointer.border.color, null, '0', '', '')), parentElement, gauge, pointer.markerShape === 'Circle' ? 'Ellipse' : (pointer.markerShape === 'Image' ? 'Image' : 'Path')));\n    };\n    /**\n     * Method to render the range bar pointer of the ciruclar gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.drawRangeBarPointer = function (axis, axisIndex, index, parentElement, gauge) {\n        var pointer = axis.pointers[index];\n        pointer.pathElement.push(appendPath(new PathOption(gauge.element.id + '_Axis_' + axisIndex + '_Pointer_RangeBar_' + index, pointer.color, pointer.border.width, pointer.border.color, 1, '0', ''), parentElement, gauge));\n    };\n    /**\n     * Method to perform the animation of the pointer in circular gauge.\n     * @return {void}\n     */\n    PointerRenderer.prototype.doPointerAnimation = function (pointer, axis) {\n        var _this = this;\n        var startValue = axis.visibleRange.min;\n        var endValue = pointer.currentValue;\n        if (pointer.animation.enable && startValue !== endValue && this.gauge.animatePointer) {\n            pointer.pathElement.map(function (element) {\n                if (pointer.type === 'RangeBar') {\n                    _this.performRangeBarAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.performNeedleAnimation(element, startValue, endValue, axis, pointer, pointer.currentRadius, (pointer.currentRadius - pointer.pointerWidth));\n                }\n            });\n        }\n    };\n    /**\n     * Perform the needle and marker pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performNeedleAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        var sweepAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (args) {\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                element.style.animation = 'None';\n                element.setAttribute('transform', 'rotate(' + linear(args.timeStamp, startAngle, sweepAngle, args.duration) + ',' +\n                    _this.gauge.midPoint.x.toString() + ',' + _this.gauge.midPoint.y.toString() + ')');\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                if (pointer.type === 'Marker' || (element.id.indexOf('_Pointer_NeedleCap') >= 0)) {\n                    _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n                }\n            }\n        });\n    };\n    /**\n     * Perform the range bar pointer animation for circular gauge.\n     * @return {void}\n     * @private\n     */\n    PointerRenderer.prototype.performRangeBarAnimation = function (element, start, end, axis, pointer, radius, innerRadius) {\n        var _this = this;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startAngle = getAngleFromValue(start, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var minAngle = getAngleFromValue(axis.visibleRange.min, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var pointAngle = getAngleFromValue(end, axis.visibleRange.max, axis.visibleRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var sweepAngle;\n        var endAngle = startAngle > pointAngle ? (pointAngle + 360) : pointAngle;\n        new Animation({}).animate(element, {\n            duration: pointer.animation.duration,\n            progress: function (arg) {\n                element.style.animation = 'None';\n                sweepAngle = (start < end || Math.round(startAngle) === Math.round(endAngle)) ?\n                    isClockWise ? (endAngle - startAngle) : (endAngle - startAngle - 360) :\n                    isClockWise ? (endAngle - startAngle - 360) : (endAngle - startAngle);\n                if (isClockWise) {\n                    element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, minAngle, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration) + 0.0001, radius, innerRadius));\n                }\n                else {\n                    element.setAttribute('d', getCompleteArc(_this.gauge.midPoint, linear(arg.timeStamp, startAngle, sweepAngle, arg.duration), minAngle + 0.0001, radius, innerRadius));\n                }\n            },\n            end: function (model) {\n                _this.setPointerValue(axis, pointer, end);\n                _this.gauge.trigger(animationComplete, { axis: axis, pointer: pointer });\n            }\n        });\n    };\n    return PointerRenderer;\n}());\nexport { PointerRenderer };\n","import { createElement, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { calculateSum, VisibleLabels, measureText, isCompleteAngle, getLocationFromAngle } from '../utils/helper';\nimport { Size, Rect, stringToNumber, getLabelFormat } from '../utils/helper';\nimport { axisLabelRender } from '../model/constants';\nimport { AxisRenderer } from './axis-renderer';\nimport { PointerRenderer } from './pointer-renderer';\n/**\n * Specifies the CircularGauge Axis Layout\n */\nvar labelPadding = 10;\nvar AxisLayoutPanel = /** @class */ (function () {\n    function AxisLayoutPanel(gauge) {\n        this.gauge = gauge;\n        this.axisRenderer = new AxisRenderer(gauge);\n        this.pointerRenderer = new PointerRenderer(gauge);\n    }\n    /**\n     * Measure the calculate the axis size and radius.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxis = function (rect) {\n        this.measureAxisSize(this.gauge, rect);\n        this.calculateAxesRadius();\n    };\n    /**\n     * Measure to calculate the axis radius of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxesRadius = function () {\n        var totalRadius;\n        var currentRadius;\n        var rangeMaximumRadius = 0;\n        var xMarginDiff = this.gauge.margin.left + this.gauge.margin.right;\n        var yMarginDiff = this.gauge.margin.top + this.gauge.margin.bottom;\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            totalRadius = (Math.min(axis.rect.width, axis.rect.height) / 2);\n            currentRadius = axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius;\n            rangeMaximumRadius = Math.max.apply(Math, axis.ranges.map(function (value) {\n                return value.radius ?\n                    (value.radius.indexOf('%') < 0 ? 100 : parseInt(value.radius, 10)) : 0;\n            }));\n            currentRadius = (rangeMaximumRadius > 100 && axis.radius == null) ?\n                (currentRadius * 100) / rangeMaximumRadius : currentRadius;\n            axis.currentRadius = currentRadius - axis.nearSize;\n            if (this.gauge.moveToCenter && this.gauge.axes.length === 1 &&\n                isNullOrUndefined(this.gauge.centerX) && isNullOrUndefined(this.gauge.centerY)) {\n                var startAngle = void 0;\n                var endAngle = void 0;\n                startAngle = axis.startAngle;\n                startAngle = !isCompleteAngle(startAngle, axis.endAngle) ? startAngle : [0, endAngle = 360][0];\n                var startPoint = getLocationFromAngle(startAngle - 90, currentRadius, this.gauge.midPoint);\n                endAngle = axis.endAngle;\n                endAngle -= isCompleteAngle(startAngle, endAngle) ? 0.0001 : 0;\n                var endPoint = getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint);\n                var xDiff = void 0;\n                var yDiff = void 0;\n                var startXDiff = void 0;\n                var endXDiff = void 0;\n                var startYDiff = void 0;\n                var endYDiff = void 0;\n                var newPoint = void 0;\n                if (startAngle > endAngle ? Math.abs(startAngle - endAngle) > 90 ? true : false : true) {\n                    if ((startAngle >= 270 && startAngle <= 360) && ((endAngle > 270 && endAngle <= 360) ||\n                        (endAngle >= 0 && endAngle <= 180))) {\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle <= 360 && endAngle >= 270) ? this.gauge.midPoint : (endAngle <= 90) ? endPoint :\n                            getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint);\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle <= 360 && endAngle >= 270) ? endPoint :\n                            getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        endPoint = (endAngle <= 360 && endAngle >= 270 || (endAngle >= 0 && endAngle < 90)) ?\n                            this.gauge.midPoint : (endAngle >= 90 && endAngle <= 180) ? endPoint :\n                            getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint);\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 0 && startAngle < 90) && (endAngle >= 0 && endAngle <= 270)) {\n                        startYDiff = Math.abs(startPoint.y - this.gauge.gaugeRect.y);\n                        newPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) :\n                            endPoint;\n                        endYDiff = Math.abs(newPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                        startPoint = (endAngle >= 180) ? endPoint : this.gauge.midPoint;\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(startPoint.x - this.gauge.gaugeRect.x));\n                        endPoint = (endAngle >= 90) ? getLocationFromAngle(90 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endXDiff = Math.abs(endPoint.x - this.gauge.gaugeRect.width);\n                    }\n                    else if ((startAngle >= 90 && startAngle < 180) && (endAngle > 90 && endAngle <= 360)) {\n                        newPoint = (endAngle <= 180) ? this.gauge.midPoint : (endAngle >= 270) ?\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        startXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.x);\n                        endXDiff = Math.abs(startPoint.x - this.gauge.gaugeRect.width);\n                        startPoint = (endAngle > 270) ? getLocationFromAngle(endAngle - 90, currentRadius, this.gauge.midPoint) :\n                            this.gauge.midPoint;\n                        startYDiff = Math.abs(this.gauge.gaugeRect.y - startPoint.y);\n                        endPoint = (endAngle >= 180) ? getLocationFromAngle(180 - 90, currentRadius, this.gauge.midPoint) : endPoint;\n                        endYDiff = Math.abs(endPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    else if ((startAngle >= 180 && startAngle <= 270) && ((endAngle <= 360 && endAngle >= 270) ||\n                        (endAngle <= 180 && endAngle >= 0))) {\n                        newPoint = (endAngle > 180 && endAngle < 270) ? endPoint :\n                            getLocationFromAngle(270 - 90, currentRadius, this.gauge.midPoint);\n                        startXDiff = Math.abs(this.gauge.gaugeRect.x - Math.abs(newPoint.x - this.gauge.gaugeRect.x));\n                        newPoint = (endAngle >= 180 && endAngle <= 360) ? this.gauge.midPoint : endPoint;\n                        endXDiff = Math.abs(newPoint.x - this.gauge.gaugeRect.width);\n                        newPoint = (endAngle > 180 && endAngle < 270) ? this.gauge.midPoint : (endAngle >= 270 && endAngle <= 360) ?\n                            endPoint : getLocationFromAngle(360 - 90, currentRadius, this.gauge.midPoint);\n                        startYDiff = Math.abs(newPoint.y - this.gauge.gaugeRect.y);\n                        endYDiff = Math.abs(startPoint.y - (this.gauge.gaugeRect.y + this.gauge.gaugeRect.height));\n                    }\n                    if ((!isNullOrUndefined(startXDiff) && !isNullOrUndefined(endXDiff) && !isNullOrUndefined(startYDiff) &&\n                        !isNullOrUndefined(endYDiff)) && ((startXDiff > 5 || endXDiff > 5) && (startYDiff > 5 || endYDiff > 5))) {\n                        xDiff = Math.abs((startXDiff + endXDiff) - xMarginDiff);\n                        yDiff = Math.abs((startYDiff + endYDiff) - yMarginDiff);\n                        this.gauge.midPoint.x = this.gauge.midPoint.x - (startXDiff / 2) + (endXDiff / 2);\n                        this.gauge.midPoint.y = this.gauge.midPoint.y - (startYDiff / 2) + (endYDiff / 2);\n                        totalRadius = (Math.min(this.gauge.gaugeRect.width, this.gauge.gaugeRect.height) / 2) +\n                            (Math.min(xDiff, yDiff) / 2);\n                        axis.currentRadius = (axis.radius != null ? stringToNumber(axis.radius, totalRadius) : totalRadius) - axis.nearSize;\n                    }\n                }\n            }\n            axis.visibleRange.interval = this.calculateNumericInterval(axis, axis.rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Measure to calculate the axis size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.measureAxisSize = function (gauge, rect) {\n        var _this = this;\n        var sum;\n        this.computeSize(gauge.axes, rect);\n        gauge.axes.map(function (axis, index) {\n            sum = calculateSum(index, _this.farSizes.length - 1, _this.farSizes);\n            axis.rect = new Rect(rect.x + sum, rect.y + sum, rect.width - (sum * 2), rect.height - (sum * 2));\n        });\n    };\n    /**\n     * Calculate the axis values of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateAxisValues = function (rect) {\n        for (var _i = 0, _a = this.gauge.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            this.calculateVisibleRange(axis, rect);\n            this.calculateVisibleLabels(axis);\n        }\n    };\n    /**\n     * Calculate the visible range of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleRange = function (axis, rect) {\n        var interval = axis.majorTicks.interval;\n        var minimumValue = Math.min(axis.minimum === null ? 0 : axis.minimum, axis.maximum);\n        var maximumValue = Math.max(axis.minimum, axis.maximum === null ? 100 : axis.maximum);\n        axis.pointers.map(function (pointer) {\n            pointer.currentValue = pointer.value !== null ?\n                pointer.value < minimumValue ? minimumValue : pointer.value > maximumValue ? maximumValue : pointer.value\n                : minimumValue;\n            minimumValue = axis.minimum === null ? Math.min(pointer.currentValue, minimumValue) : minimumValue;\n            maximumValue = axis.maximum === null ? Math.max(pointer.currentValue, maximumValue) : maximumValue;\n        });\n        minimumValue = (minimumValue === maximumValue) ?\n            (interval !== null ? minimumValue - interval : minimumValue - 1) : minimumValue;\n        axis.visibleRange = { min: minimumValue, max: maximumValue, interval: interval };\n        axis.visibleRange.interval = this.calculateNumericInterval(axis, rect);\n    };\n    /**\n     * Calculate the numeric intervals of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNumericInterval = function (axis, rect) {\n        if (axis.majorTicks.interval !== null) {\n            return axis.majorTicks.interval;\n        }\n        var totalAngle = axis.endAngle - axis.startAngle;\n        totalAngle = totalAngle <= 0 ? (totalAngle + 360) : totalAngle;\n        return this.calculateNiceInterval(axis.visibleRange.max, axis.visibleRange.min, axis.currentRadius ? axis.currentRadius : (rect.width / 2), totalAngle);\n    };\n    /**\n     * Calculate the nice interval of an axis range.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateNiceInterval = function (maxValue, minValue, radius, degree) {\n        var delta = maxValue - minValue;\n        var circumference = 2 * Math.PI * radius * (degree / 360);\n        var desiredIntervalsCount = Math.max((circumference * ((0.533 * 3) / 100)), 1);\n        var niceInterval = delta / desiredIntervalsCount;\n        var minInterval = Math.pow(10, Math.floor(Math.log(niceInterval) / Math.log(10)));\n        for (var _i = 0, _a = [10, 5, 2, 1]; _i < _a.length; _i++) {\n            var interval = _a[_i];\n            var currentInterval = minInterval * interval;\n            if (desiredIntervalsCount < (delta / currentInterval)) {\n                break;\n            }\n            niceInterval = currentInterval;\n        }\n        return niceInterval;\n    };\n    /**\n     * Calculate the visible labels of an axis.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.calculateVisibleLabels = function (axis) {\n        var style = axis.labelStyle;\n        var customLabelFormat = style.format && style.format.match('{value}') !== null;\n        var format = this.gauge.intl.getNumberFormat({\n            format: getLabelFormat(style.format), useGrouping: this.gauge.useGroupingSeparator\n        });\n        var argsData;\n        axis.visibleLabels = [];\n        for (var i = axis.visibleRange.min, interval = axis.visibleRange.interval, max = axis.visibleRange.max; (i <= max && interval); i += interval) {\n            argsData = {\n                cancel: false, name: axisLabelRender, axis: axis,\n                text: customLabelFormat ? style.format.replace(new RegExp('{value}', 'g'), format(i)) :\n                    format(i),\n                value: i\n            };\n            this.gauge.trigger(axisLabelRender, argsData);\n            if (!argsData.cancel) {\n                axis.visibleLabels.push(new VisibleLabels(argsData.text, i));\n            }\n        }\n        this.getMaxLabelWidth(this.gauge, axis);\n    };\n    /**\n     * Measure the axes available size.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.computeSize = function (axes, rect) {\n        var lineSize;\n        var outerHeight;\n        var innerHeight;\n        var isMajorTickOutside;\n        var isMinorTickOutside;\n        var isLabelOutside;\n        var axisPadding = 5;\n        var majorTickOffset = 0;\n        var minorTickOffset = 0;\n        var labelOffset = 0;\n        this.farSizes = [];\n        this.calculateAxisValues(rect);\n        for (var _i = 0, axes_1 = axes; _i < axes_1.length; _i++) {\n            var axis = axes_1[_i];\n            lineSize = (axis.lineStyle.width / 2);\n            outerHeight = 0;\n            innerHeight = 0;\n            isMajorTickOutside = axis.majorTicks.position === 'Outside';\n            majorTickOffset = axis.majorTicks.offset;\n            isMinorTickOutside = axis.minorTicks.position === 'Outside';\n            minorTickOffset = axis.minorTicks.offset;\n            isLabelOutside = axis.labelStyle.position === 'Outside';\n            labelOffset = axis.labelStyle.offset;\n            // Calculating the outer space of the axis\n            outerHeight += !(isMajorTickOutside && isMinorTickOutside && isLabelOutside) ? axisPadding : 0;\n            outerHeight += (isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((isMinorTickOutside && !isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            outerHeight += (isMajorTickOutside && isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (isMajorTickOutside ? majorTickOffset : isMinorTickOutside ? minorTickOffset : 0);\n            // Calculating the inner space of the axis\n            innerHeight += (!isMajorTickOutside ? (axis.majorTicks.height + lineSize) : 0) +\n                (!isLabelOutside ? (axis.maxLabelSize.height + labelPadding + labelOffset) : 0) +\n                ((!isMinorTickOutside && isMajorTickOutside) ? (axis.minorTicks.height + lineSize) : 0) + lineSize;\n            innerHeight += (!isMajorTickOutside && !isMinorTickOutside) ? Math.max(majorTickOffset, minorTickOffset) :\n                (!isMajorTickOutside ? majorTickOffset : !isMinorTickOutside ? minorTickOffset : 0);\n            if (this.farSizes[this.farSizes.length - 1]) {\n                this.farSizes[this.farSizes.length - 1] += (innerHeight + outerHeight);\n            }\n            axis.nearSize = outerHeight - axisPadding;\n            axis.farSize = innerHeight;\n            outerHeight = (this.gauge.axes.length === (this.farSizes.length + 1)) ? 0 : outerHeight;\n            this.farSizes.push(outerHeight);\n        }\n    };\n    /**\n     * To render the Axis element of the circular gauge.\n     * @return {void}\n     * @private\n     */\n    AxisLayoutPanel.prototype.renderAxes = function (animate) {\n        var _this = this;\n        if (animate === void 0) { animate = true; }\n        var gauge = this.gauge;\n        var renderer = this.axisRenderer;\n        var element;\n        var axesElements = gauge.renderer.createGroup({\n            'id': gauge.element.id + '_AxesCollection',\n            'clip-path': 'url(#' + gauge.element.id + '_GaugeAreaClipRect_' + ')'\n        });\n        // To append the secondary element for annotation and tooltip\n        gauge.element.appendChild(createElement('div', {\n            id: gauge.element.id + '_Secondary_Element',\n            styles: 'position: relative'\n        }));\n        gauge.axes.map(function (axis, index) {\n            element = gauge.renderer.createGroup({\n                id: gauge.element.id + '_Axis_Group_' + index\n            });\n            renderer.drawAxisOuterLine(axis, index, element, gauge);\n            renderer.drawAxisRange(axis, index, element, gauge);\n            renderer.drawAxisLine(axis, index, element, gauge);\n            renderer.drawMajorTickLines(axis, index, element, gauge);\n            renderer.drawMinorTickLines(axis, index, element, gauge);\n            renderer.drawAxisLabels(axis, index, element, gauge);\n            _this.pointerRenderer.drawPointers(axis, index, element, gauge, animate);\n            if (gauge.annotationsModule) {\n                gauge.annotationsModule.renderAnnotation(axis, index);\n            }\n            axesElements.appendChild(element);\n        });\n        // For append clip rect for axes\n        gauge.svgObject.appendChild(gauge.renderer.drawClipPath({\n            'id': gauge.element.id + '_GaugeAreaClipRect_',\n            'x': 0, 'y': 0,\n            'width': gauge.availableSize.width,\n            'height': gauge.availableSize.height,\n            'fill': 'transparent', 'stroke': 'transparent'\n        }));\n        gauge.svgObject.appendChild(axesElements);\n    };\n    /**\n     * Calculate maximum label width for the axis.\n     * @return {void}\n     */\n    AxisLayoutPanel.prototype.getMaxLabelWidth = function (gauge, axis) {\n        axis.maxLabelSize = new Size(0, 0);\n        for (var _i = 0, _a = axis.visibleLabels; _i < _a.length; _i++) {\n            var label = _a[_i];\n            label.size = measureText(label.text, axis.labelStyle.font);\n            axis.maxLabelSize.width = label.size.width > axis.maxLabelSize.width ?\n                label.size.width : axis.maxLabelSize.width;\n            axis.maxLabelSize.height = label.size.height > axis.maxLabelSize.height ?\n                label.size.height : axis.maxLabelSize.height;\n        }\n    };\n    return AxisLayoutPanel;\n}());\nexport { AxisLayoutPanel };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n/**\n * Circular Gauge\n */\nimport { Property, NotifyPropertyChanges, Component } from '@syncfusion/ej2-base';\nimport { Complex, Browser, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, SvgRenderer, EventHandler, Collection, Internationalization } from '@syncfusion/ej2-base';\nimport { remove, createElement } from '@syncfusion/ej2-base';\nimport { TextOption, textElement, RectOption, getAngleFromLocation, getValueFromAngle, removeElement } from './utils/helper';\nimport { Size, stringToNumber, measureText, Rect, GaugeLocation, getElement, getPointer, setStyles, toPixel } from './utils/helper';\nimport { getAngleFromValue, getPathArc } from './utils/helper';\nimport { Border, Margin, Font, TooltipSettings } from './model/base';\nimport { Axis } from './axes/axis';\nimport { Annotations } from './annotations/annotations';\nimport { GaugeTooltip } from './user-interaction/tooltip';\nimport { load, loaded, gaugeMouseMove, gaugeMouseLeave, gaugeMouseDown } from './model/constants';\nimport { gaugeMouseUp, dragEnd, dragMove, dragStart, resized } from './model/constants';\nimport { AxisLayoutPanel } from './axes/axis-panel';\n/**\n * Represents the Circular gauge control.\n * ```html\n * <div id=\"gauge\"/>\n * <script>\n *   var gaugeObj = new CircularGauge();\n *   gaugeObj.appendTo(\"#gauge\");\n * </script>\n * ```\n */\nvar CircularGauge = /** @class */ (function (_super) {\n    __extends(CircularGauge, _super);\n    /**\n     * Constructor for creating the widget\n     * @hidden\n     */\n    function CircularGauge(options, element) {\n        return _super.call(this, options, element) || this;\n    }\n    /**\n     *  To create svg object, renderer and binding events for the container.\n     */\n    CircularGauge.prototype.preRender = function () {\n        this.unWireEvents();\n        this.trigger(load, { gauge: this });\n        this.themeEffect();\n        this.initPrivateVariable();\n        this.setCulture();\n        this.createSvg();\n        this.wireEvents();\n    };\n    CircularGauge.prototype.themeEffect = function () {\n        var themes = this.theme.toLowerCase();\n        if (themes === 'highcontrast') {\n            this.titleStyle.color = this.titleStyle.color || '#FFFFFF';\n            this.setThemeColors('#FFFFFF', '#FFFFFF');\n        }\n        else if (themes.indexOf('dark') > -1) {\n            for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n                var axis = _a[_i];\n                axis.labelStyle.font.color = axis.labelStyle.font.color || '#DADADA ';\n                axis.majorTicks.color = axis.majorTicks.color || '#C8C8C8';\n                axis.minorTicks.color = axis.minorTicks.color || '#9A9A9A';\n                for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                    var pointer = _c[_b];\n                    pointer.color = pointer.color || '#DADADA';\n                    pointer.needleTail.color = pointer.needleTail.color || '#9A9A9A';\n                    pointer.needleTail.border.color = pointer.needleTail.border.color || '#9A9A9A';\n                    pointer.cap.color = pointer.cap.color || '#9A9A9A';\n                    pointer.cap.border.color = pointer.cap.border.color || '#9A9A9A';\n                }\n            }\n        }\n        else {\n            this.titleStyle.color = this.titleStyle.color || '#424242';\n            this.setThemeColors('#212121', '#757575');\n        }\n    };\n    CircularGauge.prototype.setThemeColors = function (labelcolor, others) {\n        for (var _i = 0, _a = this.axes; _i < _a.length; _i++) {\n            var axis = _a[_i];\n            axis.lineStyle.color = axis.lineStyle.color || others;\n            axis.labelStyle.font.color = axis.labelStyle.font.color || labelcolor;\n            axis.majorTicks.color = axis.majorTicks.color || others;\n            axis.minorTicks.color = axis.minorTicks.color || others;\n            for (var _b = 0, _c = axis.pointers; _b < _c.length; _b++) {\n                var pointer = _c[_b];\n                pointer.color = pointer.color || others;\n                pointer.needleTail.color = pointer.needleTail.color || others;\n                pointer.needleTail.border.color = pointer.needleTail.border.color || others;\n                pointer.cap.color = pointer.cap.color || others;\n                pointer.cap.border.color = pointer.cap.border.color || others;\n            }\n        }\n    };\n    /**\n     * To render the circular gauge elements\n     */\n    CircularGauge.prototype.render = function () {\n        this.calculateBounds();\n        this.renderElements();\n    };\n    /**\n     * Method to unbind events for circular gauge\n     */\n    CircularGauge.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown);\n        EventHandler.remove(this.element, Browser.touchMoveEvent, this.mouseMove);\n        EventHandler.remove(this.element, Browser.touchEndEvent, this.mouseEnd);\n        EventHandler.remove(this.element, 'contextmenu', this.gaugeRightClick);\n        EventHandler.remove(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave);\n        window.removeEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize);\n    };\n    /**\n     * Method to bind events for circular gauge\n     */\n    CircularGauge.prototype.wireEvents = function () {\n        /*! Bind the Event handler */\n        EventHandler.add(this.element, Browser.touchStartEvent, this.gaugeOnMouseDown, this);\n        EventHandler.add(this.element, Browser.touchMoveEvent, this.mouseMove, this);\n        EventHandler.add(this.element, Browser.touchEndEvent, this.mouseEnd, this);\n        EventHandler.add(this.element, 'contextmenu', this.gaugeRightClick, this);\n        EventHandler.add(this.element, (Browser.isPointer ? 'pointerleave' : 'mouseleave'), this.mouseLeave, this);\n        window.addEventListener((Browser.isTouch && ('orientation' in window && 'onorientationchange' in window)) ? 'orientationchange' : 'resize', this.gaugeResize.bind(this));\n        /*! Apply the style for circular gauge */\n        this.setGaugeStyle(this.element);\n    };\n    /**\n     * Handles the mouse move.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseMove = function (e) {\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseMove);\n        this.trigger(gaugeMouseMove, args);\n        var dragArgs;\n        var tooltip = this.tooltipModule;\n        if (!args.cancel) {\n            if (this.enablePointerDrag && this.activePointer) {\n                dragArgs = {\n                    axis: this.activeAxis,\n                    pointer: this.activePointer,\n                    previousValue: this.activePointer.currentValue,\n                    name: dragMove,\n                    currentValue: null\n                };\n                this.pointerDrag(new GaugeLocation(args.x, args.y));\n                dragArgs.currentValue = this.activePointer.currentValue;\n                this.trigger(dragMove, dragArgs);\n            }\n        }\n        this.notify(Browser.touchMoveEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse leave.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseLeave = function (e) {\n        this.activeAxis = null;\n        this.activePointer = null;\n        this.svgObject.setAttribute('cursor', 'auto');\n        var args = this.getMouseArgs(e, 'touchmove', gaugeMouseLeave);\n        this.trigger(gaugeMouseLeave, args);\n        return false;\n    };\n    /**\n     * Handles the mouse right click.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeRightClick = function (event) {\n        if (event.buttons === 2 || event.pointerType === 'touch') {\n            event.preventDefault();\n            event.stopPropagation();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Handles the pointer draf while mouse move on gauge.\n     * @private\n     */\n    CircularGauge.prototype.pointerDrag = function (location) {\n        var axis = this.activeAxis;\n        var range = axis.visibleRange;\n        var value = getValueFromAngle(getAngleFromLocation(this.midPoint, location), range.max, range.min, axis.startAngle, axis.endAngle, axis.direction === 'ClockWise');\n        if (value >= range.min && value <= range.max) {\n            this.activePointer.currentValue = value;\n            this.activePointer.value = value;\n            this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, this.activePointer, value);\n        }\n    };\n    /**\n     * Handles the mouse down on gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeOnMouseDown = function (e) {\n        var currentPointer;\n        var args = this.getMouseArgs(e, 'touchstart', gaugeMouseDown);\n        this.trigger(gaugeMouseDown, args);\n        if (!args.cancel && args.target.id.indexOf('_Pointer_') >= 0 &&\n            args.target.id.indexOf(this.element.id + '_Axis_') >= 0) {\n            currentPointer = getPointer(args.target.id, this);\n            this.activeAxis = this.axes[currentPointer.axisIndex];\n            this.activePointer = this.activeAxis.pointers[currentPointer.pointerIndex];\n            if (isNullOrUndefined(this.activePointer.pathElement)) {\n                this.activePointer.pathElement = [e.target];\n            }\n            this.trigger(dragStart, {\n                axis: this.activeAxis,\n                name: dragStart,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.svgObject.setAttribute('cursor', 'pointer');\n        }\n        return false;\n    };\n    /**\n     * Handles the mouse end.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.mouseEnd = function (e) {\n        var args = this.getMouseArgs(e, 'touchend', gaugeMouseUp);\n        var isTouch = e.pointerType === 'touch' || e.pointerType === '2' || e.type === 'touchend';\n        var tooltipInterval;\n        var tooltip = this.tooltipModule;\n        this.trigger(gaugeMouseUp, args);\n        if (this.activeAxis && this.activePointer) {\n            this.trigger(dragEnd, {\n                name: dragEnd,\n                axis: this.activeAxis,\n                pointer: this.activePointer,\n                currentValue: this.activePointer.currentValue\n            });\n            this.activeAxis = null;\n            this.activePointer = null;\n        }\n        this.svgObject.setAttribute('cursor', 'auto');\n        this.notify(Browser.touchEndEvent, e);\n        return false;\n    };\n    /**\n     * Handles the mouse event arguments.\n     * @return {IMouseEventArgs}\n     * @private\n     */\n    CircularGauge.prototype.getMouseArgs = function (e, type, name) {\n        var rect = this.element.getBoundingClientRect();\n        var location = new GaugeLocation(-rect.left, -rect.top);\n        var isTouch = (e.type === type);\n        location.x += isTouch ? e.changedTouches[0].clientX : e.clientX;\n        location.y += isTouch ? e.changedTouches[0].clientY : e.clientY;\n        return {\n            cancel: false, name: name,\n            x: location.x, y: location.y,\n            target: isTouch ? e.target : e.target\n        };\n    };\n    /**\n     * Handles the gauge resize.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.gaugeResize = function (e) {\n        var _this = this;\n        var args = {\n            gauge: this,\n            previousSize: new Size(this.availableSize.width, this.availableSize.height),\n            name: resized,\n            currentSize: new Size(0, 0)\n        };\n        this.animatePointer = false;\n        if (this.resizeTo) {\n            clearTimeout(this.resizeTo);\n        }\n        if (this.element.classList.contains('e-circulargauge')) {\n            this.resizeTo = window.setTimeout(function () {\n                _this.createSvg();\n                _this.calculateBounds();\n                _this.renderElements();\n                args.currentSize = _this.availableSize;\n                _this.trigger(resized, args);\n            }, 500);\n        }\n        return false;\n    };\n    /**\n     * Applying styles for circular gauge elements\n     */\n    CircularGauge.prototype.setGaugeStyle = function (element) {\n        element.style.touchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msTouchAction = this.enablePointerDrag ? 'none' : 'element';\n        element.style.msContentZooming = 'none';\n        element.style.msUserSelect = 'none';\n        element.style.webkitUserSelect = 'none';\n        element.style.position = 'relative';\n    };\n    /**\n     * Method to set culture for gauge\n     */\n    CircularGauge.prototype.setCulture = function () {\n        this.intl = new Internationalization();\n    };\n    /**\n     * Methods to create svg element for circular gauge.\n     */\n    CircularGauge.prototype.createSvg = function () {\n        this.removeSvg();\n        this.calculateSvgSize();\n        this.svgObject = this.renderer.createSvg({\n            id: this.element.id + '_svg',\n            width: this.availableSize.width,\n            height: this.availableSize.height\n        });\n    };\n    /**\n     * To Remove the SVG from circular gauge.\n     * @return {boolean}\n     * @private\n     */\n    CircularGauge.prototype.removeSvg = function () {\n        removeElement(this.element.id + '_Secondary_Element');\n        if (this.svgObject) {\n            while (this.svgObject.childNodes.length > 0) {\n                this.svgObject.removeChild(this.svgObject.firstChild);\n            }\n            if (!this.svgObject.hasChildNodes() && this.svgObject.parentNode) {\n                remove(this.svgObject);\n            }\n        }\n    };\n    /**\n     * To initialize the circular gauge private variable.\n     * @private\n     */\n    CircularGauge.prototype.initPrivateVariable = function () {\n        if (this.element.id === '') {\n            var collection = document.getElementsByClassName('e-circulargauge').length;\n            this.element.id = 'circulargauge_control_' + collection;\n        }\n        this.renderer = new SvgRenderer(this.element.id);\n        this.gaugeAxisLayoutPanel = new AxisLayoutPanel(this);\n        this.animatePointer = true;\n    };\n    /**\n     * To calculate the size of the circular gauge element.\n     */\n    CircularGauge.prototype.calculateSvgSize = function () {\n        var containerWidth = this.element.offsetWidth;\n        var containerHeight = this.element.offsetHeight;\n        var width = stringToNumber(this.width, containerWidth) || containerWidth || 600;\n        var height = stringToNumber(this.height, containerHeight) || containerHeight || 450;\n        this.availableSize = new Size(width, height);\n    };\n    /**\n     * Method to calculate the availble size for circular gauge.\n     */\n    CircularGauge.prototype.calculateBounds = function () {\n        var padding = 5;\n        var rect;\n        var margin = this.margin;\n        var titleHeight = 0;\n        if (this.title) {\n            titleHeight = measureText(this.title, this.titleStyle).height + padding;\n        }\n        var top = margin.top + titleHeight + this.border.width;\n        var left = margin.left + this.border.width;\n        var width = this.availableSize.width - left - margin.right - this.border.width;\n        var height = this.availableSize.height - top - this.border.width - margin.bottom;\n        var radius = Math.min(width, height) / 2;\n        if (this.moveToCenter && this.axes.length === 1 &&\n            isNullOrUndefined(this.centerX) && isNullOrUndefined(this.centerY)) {\n            rect = new Rect(left, top, width, height);\n        }\n        else {\n            rect = new Rect((left + (width / 2) - radius), (top + (height / 2) - radius), radius * 2, radius * 2);\n        }\n        this.gaugeRect = rect;\n        var centerX = this.centerX !== null ?\n            stringToNumber(this.centerX, this.availableSize.width) : rect.x + (rect.width / 2);\n        var centerY = this.centerY !== null ?\n            stringToNumber(this.centerY, this.availableSize.height) : rect.y + (rect.height / 2);\n        this.midPoint = new GaugeLocation(centerX, centerY);\n        this.gaugeAxisLayoutPanel.measureAxis(rect);\n    };\n    /**\n     * To render elements for circular gauge\n     */\n    CircularGauge.prototype.renderElements = function (animate) {\n        if (animate === void 0) { animate = true; }\n        this.renderBorder();\n        this.renderTitle();\n        this.gaugeAxisLayoutPanel.renderAxes(animate);\n        this.element.appendChild(this.svgObject);\n        this.trigger(loaded, { gauge: this });\n    };\n    /**\n     * Method to render the title for circular gauge.\n     */\n    CircularGauge.prototype.renderTitle = function () {\n        if (this.title) {\n            var size = measureText(this.title, this.titleStyle);\n            var options = new TextOption(this.element.id + '_CircularGaugeTitle', this.availableSize.width / 2, this.margin.top + 3 * (size.height / 4), 'middle', this.title);\n            var element = textElement(options, this.titleStyle, this.titleStyle.color, this.svgObject, '');\n            element.setAttribute('aria-label', this.description || this.title);\n            element.setAttribute('tabindex', this.tabIndex.toString());\n        }\n    };\n    /**\n     * Method to render the border for circular gauge.\n     */\n    CircularGauge.prototype.renderBorder = function () {\n        var borderWidth = this.border.width;\n        if (borderWidth > 0 || (this.background !== null && this.background !== 'transparent')) {\n            this.svgObject.appendChild(this.renderer.drawRectangle(new RectOption(this.element.id + '_CircularGaugeBorder', this.background, this.border, null, new Rect(borderWidth / 2, borderWidth / 2, this.availableSize.width - borderWidth, this.availableSize.height - borderWidth))));\n        }\n    };\n    /**\n     * Method to set the pointer value dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setPointerValue = function (axisIndex, pointerIndex, value) {\n        var _this = this;\n        var axis = this.axes[axisIndex];\n        var pointer = axis.pointers[pointerIndex];\n        var pointerRadius = pointer.currentRadius;\n        var enableAnimation = pointer.animation.enable;\n        value = value < axis.visibleRange.min ? axis.visibleRange.min : value;\n        value = value > axis.visibleRange.max ? axis.visibleRange.max : value;\n        pointer.pathElement.map(function (element) {\n            if (pointer.type === 'RangeBar') {\n                setStyles(element, pointer.color, pointer.border);\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performRangeBarAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n            else {\n                if (element.id.indexOf('_Pointer_NeedleCap_') >= 0) {\n                    setStyles(element, pointer.cap.color, pointer.cap.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleTail_') >= 0) {\n                    setStyles(element, pointer.needleTail.color, pointer.needleTail.border);\n                }\n                else if (element.id.indexOf('_Pointer_NeedleRect_') >= 0) {\n                    setStyles(element, 'transparent', { color: 'transparent', width: 0 });\n                }\n                else {\n                    setStyles(element, pointer.color, pointer.border);\n                }\n                if (enableAnimation) {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.performNeedleAnimation(element, pointer.currentValue, value, axis, pointer, pointerRadius, (pointerRadius - pointer.pointerWidth));\n                }\n                else {\n                    _this.gaugeAxisLayoutPanel.pointerRenderer.setPointerValue(axis, pointer, value);\n                }\n            }\n        });\n        pointer.currentValue = value;\n        pointer.value = value;\n    };\n    /**\n     * Method to set the annotation content dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setAnnotationValue = function (axisIndex, annotationIndex, content) {\n        var isElementExist = getElement(this.element.id + '_Annotations_' + axisIndex) !== null;\n        var element = getElement(this.element.id + '_Annotations_' + axisIndex) ||\n            createElement('div', {\n                id: this.element.id + '_Annotations_' + axisIndex\n            });\n        var annotation = this.axes[axisIndex].annotations[annotationIndex];\n        if (content !== null) {\n            removeElement(this.element.id + '_Axis_' + axisIndex + '_Annotation_' + annotationIndex);\n            annotation.content = content;\n            this.annotationsModule.createTemplate(element, annotationIndex, axisIndex);\n            if (!isElementExist) {\n                getElement(this.element.id + '_Secondary_Element').appendChild(element);\n            }\n        }\n    };\n    /**\n     * Method to set the range values dynamically for circular gauge.\n     */\n    CircularGauge.prototype.setRangeValue = function (axisIndex, rangeIndex, start, end) {\n        var element = getElement(this.element.id + '_Axis_' + axisIndex + '_Range_' + rangeIndex);\n        var axis = this.axes[axisIndex];\n        var range = axis.ranges[rangeIndex];\n        var axisRange = axis.visibleRange;\n        var isClockWise = axis.direction === 'ClockWise';\n        var startValue = Math.min(Math.max(start, axisRange.min), end);\n        var endValue = Math.min(Math.max(start, end), axisRange.max);\n        var startAngle = getAngleFromValue(startValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var endAngle = getAngleFromValue(endValue, axisRange.max, axisRange.min, axis.startAngle, axis.endAngle, isClockWise);\n        var startWidth;\n        if (range.startWidth.length > 0) {\n            startWidth = toPixel(range.startWidth, range.currentRadius);\n        }\n        else {\n            startWidth = range.startWidth;\n        }\n        var endWidth;\n        if (range.endWidth.length > 0) {\n            endWidth = toPixel(range.endWidth, range.currentRadius);\n        }\n        else {\n            endWidth = range.endWidth;\n        }\n        endAngle = isClockWise ? endAngle : [startAngle, startAngle = endAngle][0];\n        endWidth = isClockWise ? endWidth : [startWidth, startWidth = endWidth][0];\n        element.setAttribute('d', getPathArc(this.midPoint, Math.round(startAngle), Math.round(endAngle), range.currentRadius, startWidth, endWidth));\n        setStyles(element, (range.color ? range.color : range.rangeColor), {\n            color: (range.color ? range.color : range.rangeColor),\n            width: 0\n        });\n    };\n    /**\n     * To destroy the widget\n     * @method destroy\n     * @return {void}\n     * @member of Circular-Gauge\n     */\n    CircularGauge.prototype.destroy = function () {\n        this.unWireEvents();\n        this.removeSvg();\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * To provide the array of modules needed for control rendering\n     * @return {ModuleDeclaration[]}\n     * @private\n     */\n    CircularGauge.prototype.requiredModules = function () {\n        var modules = [];\n        var annotationEnable = false;\n        var axes = this.axes;\n        axes.map(function (axis) {\n            axis.annotations.map(function (annotation) {\n                annotationEnable = annotationEnable || annotation.content !== null;\n            });\n        });\n        if (annotationEnable) {\n            modules.push({\n                member: 'Annotations',\n                args: [this, Annotations]\n            });\n        }\n        if (this.tooltip.enable) {\n            modules.push({\n                member: 'Tooltip',\n                args: [this, GaugeTooltip]\n            });\n        }\n        return modules;\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @private\n     */\n    CircularGauge.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @private\n     */\n    CircularGauge.prototype.onPropertyChanged = function (newProp, oldProp) {\n        // property method calculated\n        var renderer = false;\n        var refreshBounds = false;\n        var refreshWithoutAnimation = false;\n        var isPointerValueSame = (Object.keys(newProp).length === 1 && newProp instanceof Object &&\n            !isNullOrUndefined(this.activePointer));\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                case 'width':\n                case 'centerX':\n                case 'centerY':\n                case 'margin':\n                    this.createSvg();\n                    refreshBounds = true;\n                    break;\n                case 'title':\n                    refreshBounds = (newProp.title === '' || oldProp.title === '');\n                    renderer = !(newProp.title === '' || oldProp.title === '');\n                    break;\n                case 'titleStyle':\n                    if (newProp.titleStyle && newProp.titleStyle.size) {\n                        refreshBounds = true;\n                    }\n                    else {\n                        renderer = true;\n                    }\n                    break;\n                case 'border':\n                    renderer = true;\n                    break;\n                case 'background':\n                    renderer = true;\n                    break;\n                case 'axes':\n                    refreshWithoutAnimation = true;\n                    break;\n            }\n        }\n        if (!isPointerValueSame) {\n            if (!refreshBounds && renderer) {\n                this.removeSvg();\n                this.renderElements();\n            }\n            if (refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements();\n            }\n            if (refreshWithoutAnimation && !renderer && !refreshBounds) {\n                this.removeSvg();\n                this.calculateBounds();\n                this.renderElements(false);\n            }\n        }\n    };\n    /**\n     * Get component name for circular gauge\n     * @private\n     */\n    CircularGauge.prototype.getModuleName = function () {\n        return 'circulargauge';\n    };\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"width\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"height\", void 0);\n    __decorate([\n        Complex({ color: 'transparent', width: 0 }, Border)\n    ], CircularGauge.prototype, \"border\", void 0);\n    __decorate([\n        Property('transparent')\n    ], CircularGauge.prototype, \"background\", void 0);\n    __decorate([\n        Property('')\n    ], CircularGauge.prototype, \"title\", void 0);\n    __decorate([\n        Complex({ size: '15px', color: null }, Font)\n    ], CircularGauge.prototype, \"titleStyle\", void 0);\n    __decorate([\n        Complex({}, Margin)\n    ], CircularGauge.prototype, \"margin\", void 0);\n    __decorate([\n        Collection([{}], Axis)\n    ], CircularGauge.prototype, \"axes\", void 0);\n    __decorate([\n        Complex({}, TooltipSettings)\n    ], CircularGauge.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"enablePointerDrag\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerX\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"centerY\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"moveToCenter\", void 0);\n    __decorate([\n        Property('Material')\n    ], CircularGauge.prototype, \"theme\", void 0);\n    __decorate([\n        Property(false)\n    ], CircularGauge.prototype, \"useGroupingSeparator\", void 0);\n    __decorate([\n        Property(null)\n    ], CircularGauge.prototype, \"description\", void 0);\n    __decorate([\n        Property(1)\n    ], CircularGauge.prototype, \"tabIndex\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"loaded\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"animationComplete\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"axisLabelRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"annotationRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"tooltipRender\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"dragEnd\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseMove\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseLeave\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseDown\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"gaugeMouseUp\", void 0);\n    __decorate([\n        Event()\n    ], CircularGauge.prototype, \"resized\", void 0);\n    CircularGauge = __decorate([\n        NotifyPropertyChanges\n    ], CircularGauge);\n    return CircularGauge;\n}(Component));\nexport { CircularGauge };\n"],"names":["measureText","text","font","htmlObject","document","getElementById","createElement","id","body","appendChild","style","getFontStyle","innerHTML","setAttribute","Size","clientWidth","clientHeight","toPixel","value","maxDimension","undefined","indexOf","parseInt","size","fontStyle","fontWeight","fontFamily","opacity","color","setStyles","element","fill","border","setStyleAttribute","stroke","stroke-width","width","measureElementRect","bounds","getBoundingClientRect","removeElement","stringToNumber","containerSize","textElement","options","parent","styles","renderOptions","renderer","SvgRenderer","x","y","text-anchor","anchor","transform","dominant-baseline","baseLine","createText","appendPath","gauge","functionName","calculateSum","from","to","values","sum","length","linear","currentTime","startValue","endValue","duration","Math","cos","PI","getAngleFromValue","maximumValue","minimumValue","startAngle","endAngle","isClockWise","angle","isCompleteAngle","getDegree","round","degree","getValueFromAngle","totalAngle","floor","getAngleFromLocation","center","point","atan2","getLocationFromAngle","radius","radian","GaugeLocation","sin","getPathArc","start","end","startWidth","endWidth","startRadius","endRadius","arcRadius","getRangePath","getCirclePath","innerStart","innerEnd","clockWise","getRoundedPathArc","actualStart","actualEnd","oldStart","oldEnd","getRoundedPath","outerOldEnd","innerOldEnd","outerOldStart","innerOldStart","getCompleteArc","innerRadius","getCompletePath","getElement","getTemplateFunction","template","templateFn","querySelectorAll","templateComplier","querySelector","trim","e","remove","getPointer","targetId","tempString","replace","split","axisIndex","pointerIndex","getElementSize","elementSize","templateElement","height","getMousePosition","pageX","pageY","elementRect","pageXOffset","ownerDocument","defaultView","pageYOffset","clientTop","documentElement","clientLeft","positionX","left","positionY","top","getLabelFormat","format","match","calculateShapes","location","shape","url","path","locX","locY","merge","rx","ry","cx","cy","d","href","getRangeColor","ranges","min","max","currentRange","filter","range","rangeColor","Theme","__extends","extendStatics","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CustomizeOption","PathOption","_super","dashArray","_this","call","RectOption","rect","Rect","TextOption","VisibleLabels","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Border","apply","Property","ChildProperty","Font","Margin","TooltipSettings","Complex","axisLabelFont","axisLineColor","tickLineColor","pointerColor","Line","Label","Range","Tick","Cap","NeedleTail","Animation","Annotation","Pointer","Axis","visibleLabels","Collection","Annotations","elementId","renderAnnotation","axis","index","parentElement","annotations","map","annotation","annotationIndex","content","createTemplate","childElementCount","axes","childElement","zIndex","autoAngle","argsData","cancel","name","textStyle","trigger","length_1","slice","updateLocation","currentRadius","midPoint","description","getModuleName","destroy","GaugeTooltip","tooltipId","tooltip","borderStyle","addEventListener","renderTooltip","touchArg","samePointerEle","type","changedTouches","pointerEle","svgRect","svgObject","axisRect","abs","currentPointer","currentAxis","currentValue","visibleRange","direction","tooltipFormat","labelStyle","customLabelFormat","intl","getNumberFormat","useGrouping","useGroupingSeparator","tooltipEle","className","RegExp","tooltipArgs","pointer","event","keys","showAtMousePosition","tooltipRect","findPosition","themes","theme","toLowerCase","tooltipColor","svgTooltip","Tooltip","enable","data","enableAnimation","inverted","arrowInverted","areaBounds","appendTo","parseFloat","removeTooltip","addLeft","addTop","addHeight","addWidth","tooltipPosition","getElementsByClassName","mouseUpHandler","clearTimeout","setTimeout","bind","isDestroyed","on","Browser","touchMoveEvent","touchEndEvent","removeEventListener","off","AxisRenderer","drawAxisOuterLine","background","setRangeColor","drawAxisLine","lineStyle","drawAxisLabels","label","labelElement","createGroup","labelCollection","position","nearSize","maxLabelSize","farSize","hiddenLabel","findAnchor","useRangeColor","drawMinorTickLines","minorTickElements","minorLineStyle","minorTicks","minorInterval","interval","isRangeColor","majorValues","toFixed","calculateTicks","drawMajorTickLines","majorTickElements","majorLineStyle","majorTicks","push","axisLineWidth","offset","isOutside","drawAxisRange","roundedStartAngle","roundedEndAngle","rangeElement","rangeIndex","calculateRangeRadius","isAngleCross360","rangeGap","startAndEndRangeGap","roundedCornerRadius","process","ceil","rangeColors","PointerRenderer","drawPointers","animate","pointerElement","pointers","pathElement","calculatePointerRadius","setPointerValue","doPointerAnimation","drawNeedlePointer","pointerRadius","rectDirection","mid","pointerWidth","needleTail","cap","roundStartAngle","roundEndAngle","oldStartValue","oldEndValue","minRadius","isNullOrUndefined","toString","drawMarkerPointer","markerShape","markerWidth","markerHeight","imageUrl","drawRangeBarPointer","animation","animatePointer","performRangeBarAnimation","performNeedleAnimation","sweepAngle","pointAngle","progress","args","timeStamp","model","minAngle","arg","AxisLayoutPanel","axisRenderer","pointerRenderer","measureAxis","measureAxisSize","calculateAxesRadius","totalRadius","rangeMaximumRadius","xMarginDiff","margin","right","yMarginDiff","bottom","_i","_a","moveToCenter","centerX","centerY","startPoint","endPoint","xDiff","yDiff","startXDiff","endXDiff","startYDiff","endYDiff","newPoint","gaugeRect","calculateNumericInterval","calculateVisibleLabels","computeSize","farSizes","calculateAxisValues","calculateVisibleRange","minimum","maximum","calculateNiceInterval","maxValue","minValue","delta","circumference","desiredIntervalsCount","niceInterval","minInterval","pow","log","currentInterval","getMaxLabelWidth","lineSize","outerHeight","innerHeight","isMajorTickOutside","isMinorTickOutside","isLabelOutside","majorTickOffset","minorTickOffset","labelOffset","axes_1","renderAxes","axesElements","clip-path","annotationsModule","drawClipPath","availableSize","CircularGauge","preRender","unWireEvents","themeEffect","initPrivateVariable","setCulture","createSvg","wireEvents","titleStyle","setThemeColors","_b","_c","labelcolor","others","render","calculateBounds","renderElements","EventHandler","touchStartEvent","gaugeOnMouseDown","mouseMove","mouseEnd","gaugeRightClick","isPointer","mouseLeave","window","isTouch","gaugeResize","add","setGaugeStyle","getMouseArgs","dragArgs","tooltipModule","enablePointerDrag","activePointer","activeAxis","previousValue","pointerDrag","notify","buttons","pointerType","preventDefault","stopPropagation","gaugeAxisLayoutPanel","clientX","clientY","previousSize","currentSize","resizeTo","classList","contains","touchAction","msTouchAction","msContentZooming","msUserSelect","webkitUserSelect","Internationalization","removeSvg","calculateSvgSize","childNodes","removeChild","firstChild","hasChildNodes","parentNode","collection","containerWidth","offsetWidth","containerHeight","offsetHeight","titleHeight","title","renderBorder","renderTitle","tabIndex","borderWidth","drawRectangle","setAnnotationValue","isElementExist","setRangeValue","axisRange","requiredModules","modules","annotationEnable","member","getPersistData","addOnPersist","onPropertyChanged","newProp","oldProp","refreshBounds","refreshWithoutAnimation","isPointerValueSame","Event","NotifyPropertyChanges","Component"],"mappings":"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"}